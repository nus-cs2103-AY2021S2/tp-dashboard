[{"path":".github/check-eof-newline.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/bin/sh","lastModifiedDate":"2020-06-16"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"#!/bin/bash","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2020-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"ret\u003d0","lastModifiedDate":"2020-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2020-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"IFS\u003d\u0027","lastModifiedDate":"2020-06-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027","lastModifiedDate":"2020-06-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2020-06-16"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"    if [ `basename $filename` \u003d \"keystore\" ]; then","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"        continue","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"    fi","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2020-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2020-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2020-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        ret\u003d1","lastModifiedDate":"2020-06-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    fi","lastModifiedDate":"2020-06-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"done","lastModifiedDate":"2020-06-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"exit $ret","lastModifiedDate":"2020-06-16"}],"authorContributionMap":{"-":18,"jay9645":5}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W15-2/tp/actions)","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"* This is a **client management application**, which aims to **help insurance agents manage their immense numbers of clients through a desktop application** called _ClientBook_.","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"* Example usages:","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"  * Insurance agents can easily manage (_add_, _search_, _edit_, _delete_) their client\u0027s contacts in this application.","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"  * Insurance agents can include their clients\u0027 insurance portfolio ID as well as a URL to the document itself in their clients\u0027 contact profile.","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"  * Insurance agents can lock ClientBook to prevent unauthorized access to their clients\u0027 information.","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"* For the detailed documentation of this application, see our **[User Guide](https://ay2021s2-cs2103t-w15-2.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"* For the detailed documentation of this project, see our **[Developer Guide](https://ay2021s2-cs2103t-w15-2.github.io/tp/DeveloperGuide.html)**.","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"swayongshen":4,"-":3,"jlxw48":5,"jay9645":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"    //zip4j used to create/unzip a password protected zip containing the data .json file.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"    implementation group: \u0027net.lingala.zip4j\u0027, name: \u0027zip4j\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"swayongshen"},"content":"    archiveName \u003d \u0027clientbook.jar\u0027","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wongkokian":2,"swayongshen":1,"-":73,"jay9645":2}},{"path":"config/travis/check-eof-newline.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/bin/sh","lastModifiedDate":"2016-12-27"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"#!/bin/bash","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2016-12-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"ret\u003d0","lastModifiedDate":"2016-12-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2017-11-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"IFS\u003d\u0027","lastModifiedDate":"2017-11-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027","lastModifiedDate":"2017-11-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2016-12-27"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"    if [ `basename $filename` \u003d \"keystore\" ]; then","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"        continue","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"    fi","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2016-12-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2016-12-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2016-12-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        ret\u003d1","lastModifiedDate":"2016-12-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    fi","lastModifiedDate":"2016-12-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"done","lastModifiedDate":"2016-12-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"exit $ret","lastModifiedDate":"2016-12-27"}],"authorContributionMap":{"-":18,"jay9645":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"### Jason Tay","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"\u003cimg src\u003d\"images/jay9645.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"[[github](https://github.com/jay9645)]","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"### Jeremy Lee","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"\u003cimg src\u003d\"images/jlxw48.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"[[github](http://github.com/jlxw48)]","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"### Ng Boon Hong","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"\u003cimg src\u003d\"images/nbh99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"[[github](http://github.com/NBH99)]","lastModifiedDate":"2021-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"### Swa Yong Shen","lastModifiedDate":"2021-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"\u003cimg src\u003d\"images/swayongshen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"[[github](http://github.com/swayongshen)]","lastModifiedDate":"2021-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"### Wong Kok Ian","lastModifiedDate":"2021-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"\u003cimg src\u003d\"images/wongkokian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"[[github](http://github.com/wongkokian)]","lastModifiedDate":"2021-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":35,"jay9645":17}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"## **Overview**","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"ClientBook is an application for managing client contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"Aimed at insurance agents who are always on the move, ClientBook aims to provide the following utilities:","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"* Minimise usage of the trackpad","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"* Minimise resource consumption of ClientBook","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":"* Provide minimal yet essential functionalities to ClientBook","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":"### Minimise usage of trackpad","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"ClientBook aims to minimise the use of the trackpad and process commands essential to contact management purely through keyboard inputs. ","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":"We believe that minimising the use of the trackpad can improve the efficiency of the user.","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"### Minimise resource consumption of ClientBook","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jlxw48"},"content":"As an application that is meant to be used on the go, our end-users might not necessarily have easy access to power plugs. ","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":"Hence, the application should be kept lightweight and not consume significant resources (e.g. battery, RAM).","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"### Provide minimal yet essential functionalities to ClientBook","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"ClientBook would not be complete without a set of features that help our end-users be more productive while not at their office desks. ","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"We have also seen the problems that come with overly complicated user interfaces - users tend to get confused easily and might hence not take full advantage of what the program can do for them.","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"ClientBook thus aims to keep things simple, by only providing what is essential, so as not to confused our end-users.","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"### Going forward,","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"These 3 design ideals should be adhered to as much as possible when implementing new features for your version of the application.","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":"This Developer Guide aims to provide insights for other developers on how the initial functionalities and system architecture were designed and implemented.","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"jlxw48"},"content":"### Table of Contents","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"jlxw48"},"content":"------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"swayongshen"},"content":"## **Definitions**","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"swayongshen"},"content":"1. **API** (Application Programming Interface) A set of function declarations as well as explanations on their usage.","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"swayongshen"},"content":"2. **Architecture diagram** A type of UML diagram that shows the overall organization of the system and how components are connected with each other.","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"swayongshen"},"content":"3. **CLI** (Command Line Interface) A text box like interface which allows a user to enter commands.","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"swayongshen"},"content":"4. **GUI** (Graphical user interface) A form of user interface with graphical features such as icons that allows a user to interact with our program.","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"swayongshen"},"content":"5. **JavaFx** A software platform for creating and delivering desktop applications, as well as rich Internet applications that can run across a wide variety of devices. We use it to construct our graphical user interface.","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"swayongshen"},"content":"6. **Mainstream OS** Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"swayongshen"},"content":"6. **MSS** (Main Success Scenario) The expected flow of events when a use case goes as expected. ","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"swayongshen"},"content":"8. **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"swayongshen"},"content":"7. **Sequence diagram** A type of UML diagram that describes a particular instance of components interacting with each other.","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"swayongshen"},"content":"8. **UML** (Unified Modeling Language) A standard for creating models and diagrams to visualize the design of a system.","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"swayongshen"},"content":"9. **UI** (User Interface) An interface for a user to interact with the program.","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"jlxw48"},"content":"------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"swayongshen"},"content":"ClientBook consists of 4 primary components which are the UI, Logic, Model, and Storage. The components interact with one another to form a cohesive system.","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-CS2103T-W15-2/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"swayongshen"},"content":"The architecture diagram given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103T-W15-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2021S2-CS2103T-W15-2/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"swayongshen"},"content":"**`Commons`** represents a collection of classes used by multiple other components.","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"swayongshen"},"content":"Each of the four components","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"swayongshen"},"content":"* defines its *API* in an interface with the same name as the Component.","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"swayongshen"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class which implements the corresponding API interface mentioned in the previous point.","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/LogicClassDiagram.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"swayongshen"},"content":"The sequence diagram below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/UiClassDiagram.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"NBH99"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-W15-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-03-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/LogicClassDiagram.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"NBH99"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-W15-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-03-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"jay9645"},"content":"1. `Logic` uses the `ClientBookParser` class to parse the user command.","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"jlxw48"},"content":"1. The command execution can affect the `Model` (e.g. adding a client contact).","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/DeleteSequenceDiagram.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"swayongshen"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"jlxw48"},"content":":information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/ModelClassDiagram.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"NBH99"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-CS2103T-W15-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-03-03"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/StorageClassDiagram.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"NBH99"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-W15-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-03-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"jlxw48"},"content":"* can save `UserPref` objects in JSON format and read it back.","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"jlxw48"},"content":"* can save the address book data in JSON format and read it back.","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"jlxw48"},"content":"------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"jlxw48"},"content":"### Feature to display the insurance policies associated with a selected client","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":216,"author":{"gitId":"jlxw48"},"content":"#### Motivation","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"jlxw48"},"content":"It would not be a good user experience if there was no easy way for the user to quickly retrieve the insurance policy URLs ","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"jlxw48"},"content":"from ClientBook. Since the application\u0027s contact card interface does not support direct copy-paste functionality, a new approach ","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"jlxw48"},"content":"to display and facilitate retrieval of this essential information had to be implemented. Below is a succinct but complete ","lastModifiedDate":"2021-03-25"},{"lineNumber":221,"author":{"gitId":"jlxw48"},"content":"explanation of how the chosen approach, which is to implement a `PolicyCommand` `Command`, works. Other alternatives ","lastModifiedDate":"2021-03-25"},{"lineNumber":222,"author":{"gitId":"jlxw48"},"content":"we considered and the design considerations are further elaborated below.","lastModifiedDate":"2021-03-25"},{"lineNumber":223,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":224,"author":{"gitId":"jlxw48"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":226,"author":{"gitId":"jlxw48"},"content":"A new command `PolicyCommand` was created. It extends the abstract class `Command`, overriding and implementing its `execute` ","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"jlxw48"},"content":"method. When `PolicyCommand#execute()` is called, all the insurance policies and their associated policy URLs are fetched from the ","lastModifiedDate":"2021-03-25"},{"lineNumber":228,"author":{"gitId":"jlxw48"},"content":"selected `Person` client through `Person#getPersonNameAndAllPoliciesInString()`.","lastModifiedDate":"2021-03-25"},{"lineNumber":229,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":230,"author":{"gitId":"jlxw48"},"content":"Below is an example usage scenario and how the information and data are passed around at each step.","lastModifiedDate":"2021-03-25"},{"lineNumber":231,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":232,"author":{"gitId":"jlxw48"},"content":"**Step 1.** The user types `policy 1` into the input box.","lastModifiedDate":"2021-03-25"},{"lineNumber":233,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":234,"author":{"gitId":"jlxw48"},"content":"**Step 2.** `MainWindow` receives the `commandText` (`policy 1`), which is then executed by `LogicManager`.","lastModifiedDate":"2021-03-25"},{"lineNumber":235,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":236,"author":{"gitId":"jay9645"},"content":"**Step 3.** `ClientBookParser` then parses the full `commandText`, returning a `Command`. In this case, it would return a ","lastModifiedDate":"2021-04-01"},{"lineNumber":237,"author":{"gitId":"jlxw48"},"content":"`PolicyCommand`, which would contain the index of the selected client in the displayed list (which in this case is 1).","lastModifiedDate":"2021-03-25"},{"lineNumber":238,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"jlxw48"},"content":"**Step 4.** `PolicyCommand`then executes, returning a `CommandResult`. This `CommandResult` contains the concatenated string ","lastModifiedDate":"2021-03-25"},{"lineNumber":240,"author":{"gitId":"jlxw48"},"content":"of all the insurance policies and their associated URLs as the feedback. The `CommandResult` also contains a `boolean` value ","lastModifiedDate":"2021-03-25"},{"lineNumber":241,"author":{"gitId":"jlxw48"},"content":"indicating whether a popup window is to be displayed. This `boolean` value can be retrieved using the method `CommandResult#isShowPolicies()`.","lastModifiedDate":"2021-03-25"},{"lineNumber":242,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":243,"author":{"gitId":"jlxw48"},"content":"**Step 5.** This `CommandResult` is passed back to `MainWindow`, which then checks if the method `CommandResult#isShowPolicies()` ","lastModifiedDate":"2021-03-25"},{"lineNumber":244,"author":{"gitId":"jlxw48"},"content":"returns true, and launches the insurance policy window if so.","lastModifiedDate":"2021-03-25"},{"lineNumber":245,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":246,"author":{"gitId":"jlxw48"},"content":"Below is a sequence diagram illustrating the flow of this entire process.","lastModifiedDate":"2021-03-25"},{"lineNumber":247,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":248,"author":{"gitId":"jlxw48"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/PolicyCommandDiagram.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":249,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":250,"author":{"gitId":"jlxw48"},"content":"#### Design Considerations","lastModifiedDate":"2021-03-25"},{"lineNumber":251,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":252,"author":{"gitId":"jlxw48"},"content":"Since `PolicyCommand` is just one of the many `Commands`, conscious effort had to be made to ensure that the behaviour of ","lastModifiedDate":"2021-03-25"},{"lineNumber":253,"author":{"gitId":"jlxw48"},"content":"its methods strictly resembled those of its fellow `Command` classes. ","lastModifiedDate":"2021-03-25"},{"lineNumber":254,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":255,"author":{"gitId":"jlxw48"},"content":"#### Alternatives considered","lastModifiedDate":"2021-03-25"},{"lineNumber":256,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":257,"author":{"gitId":"jlxw48"},"content":"* **Alternative 1 (current choice):** Display the insurance policies and their URLs in a popup window, retrieve URL through a \u0027Copy URL button\u0027","lastModifiedDate":"2021-03-25"},{"lineNumber":258,"author":{"gitId":"jlxw48"},"content":"  * Have a popup window to display the insurance policies and their associated URLs.","lastModifiedDate":"2021-03-25"},{"lineNumber":259,"author":{"gitId":"jlxw48"},"content":"  * The window should also have a \u0027Copy URL\u0027 button similar to that in the \u0027help\u0027 window that appears then `help` is called.","lastModifiedDate":"2021-03-25"},{"lineNumber":260,"author":{"gitId":"jlxw48"},"content":"  * Pros: Easy to implement a button.","lastModifiedDate":"2021-03-25"},{"lineNumber":261,"author":{"gitId":"jlxw48"},"content":"  * Cons: Not the best way to display a hyperlink/URL.","lastModifiedDate":"2021-03-25"},{"lineNumber":262,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-25"},{"lineNumber":263,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"jlxw48"},"content":"* **Alternative 2:** Display the insurance policies and their URls in a popup window, where the URLs upon click launches the browser","lastModifiedDate":"2021-03-25"},{"lineNumber":265,"author":{"gitId":"jlxw48"},"content":"  * Pros: More intuitive in terms of user experience.","lastModifiedDate":"2021-03-25"},{"lineNumber":266,"author":{"gitId":"jlxw48"},"content":"  * Cons: Harder to implement.","lastModifiedDate":"2021-03-25"},{"lineNumber":267,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":268,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":269,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":270,"author":{"gitId":"swayongshen"},"content":"### Lock and unlock ClientBook feature","lastModifiedDate":"2021-03-31"},{"lineNumber":271,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":272,"author":{"gitId":"swayongshen"},"content":"#### Motivation","lastModifiedDate":"2021-03-31"},{"lineNumber":273,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":274,"author":{"gitId":"swayongshen"},"content":"As an insurance agent, our target user is likely to be always on the go which increases the risk of the user\u0027s clients\u0027 information being exposed to ","lastModifiedDate":"2021-03-31"},{"lineNumber":275,"author":{"gitId":"swayongshen"},"content":"unauthorised accessors. Having a lock function for ClientBook will give the user a peace of mind that all of ClientBook\u0027s information is secured by a password.","lastModifiedDate":"2021-03-31"},{"lineNumber":276,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":277,"author":{"gitId":"swayongshen"},"content":"#### Implemenation","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":279,"author":{"gitId":"swayongshen"},"content":"A new class `Authentication` was created as part of the `Storage` component. It is responsible for the locking and unlocking of ClientBook. ","lastModifiedDate":"2021-03-31"},{"lineNumber":280,"author":{"gitId":"swayongshen"},"content":"Two new commands, `LockCommand` and `UnlockCommand` were created to interface the user with `Authentication`.","lastModifiedDate":"2021-03-31"},{"lineNumber":281,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":282,"author":{"gitId":"swayongshen"},"content":"Below is an example usage scenario involving the locking of ClientBook and how the information and data are passed around at each step.","lastModifiedDate":"2021-03-31"},{"lineNumber":283,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"swayongshen"},"content":"**During program launch:** An Authentication object is created and attached as an attribute in `ModelManager`.","lastModifiedDate":"2021-03-31"},{"lineNumber":285,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":286,"author":{"gitId":"swayongshen"},"content":"**Step 1.** ","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"swayongshen"},"content":"The user is locking ClientBook for the first time. The user enters `lock 1234` into the command box and presses enter.","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":289,"author":{"gitId":"swayongshen"},"content":"**Step 2.** `MainWindow` receives the `commandText` (`lock 1234`), which is then executed by `LogicManager`.","lastModifiedDate":"2021-03-31"},{"lineNumber":290,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"swayongshen"},"content":"**Step 3.** `AddressBookParser` then parses the full `commandText`, returning a `Command`. In this case, it would return a","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"swayongshen"},"content":"`LockCommand`, which would contain the password that the user wants to use to lock ClientBook (in this case, 1234).","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":294,"author":{"gitId":"swayongshen"},"content":"**Step 4.** `LogicManager` then excecutes `LockCommand` which makes use of `Authentication` to lock ClientBook. A `CommandResult` is returned.","lastModifiedDate":"2021-03-31"},{"lineNumber":295,"author":{"gitId":"swayongshen"},"content":"The `CommandResult` describes whether the locking process was successful.","lastModifiedDate":"2021-03-31"},{"lineNumber":296,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":297,"author":{"gitId":"swayongshen"},"content":"**Step 5.** This `CommandResult` is passed back to MainWindow to reflect the result of the lock command to the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":298,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":299,"author":{"gitId":"swayongshen"},"content":"Below is a sequence diagram illustrating the flow of this entire process.","lastModifiedDate":"2021-03-31"},{"lineNumber":300,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":301,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/LockSequenceDiagram.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":302,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":303,"author":{"gitId":"swayongshen"},"content":"#### Design Considerations","lastModifiedDate":"2021-03-31"},{"lineNumber":304,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":305,"author":{"gitId":"swayongshen"},"content":"The lock and unlock feature was designed such that the existing system is totally unaware of any locking and unlocking ","lastModifiedDate":"2021-03-31"},{"lineNumber":306,"author":{"gitId":"swayongshen"},"content":"of the existing data file `clientbook.json`. Hence, there is minimal dependency between existing components, the newly added commands and `Authentication`.","lastModifiedDate":"2021-03-31"},{"lineNumber":307,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":308,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":309,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"jay9645"},"content":"### Feature to allow more options for user to edit insurance policy information of each client in ClientBook.","lastModifiedDate":"2021-04-03"},{"lineNumber":311,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":312,"author":{"gitId":"jay9645"},"content":"#### Motivation","lastModifiedDate":"2021-04-03"},{"lineNumber":313,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":314,"author":{"gitId":"jay9645"},"content":"In the previous implementation of the `EditCommand`, each time a user edits a clients policy information, the user\u0027s only option is to","lastModifiedDate":"2021-04-03"},{"lineNumber":315,"author":{"gitId":"jay9645"},"content":"replace the client\u0027s entire existing policy list with the specified policies. This enhancement of the `EditCommand` gives the user","lastModifiedDate":"2021-04-03"},{"lineNumber":316,"author":{"gitId":"jay9645"},"content":"the option to append, replace, remove or modify specific policies within a client\u0027s policy list.","lastModifiedDate":"2021-04-03"},{"lineNumber":317,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":318,"author":{"gitId":"jay9645"},"content":"#### Implementation","lastModifiedDate":"2021-04-03"},{"lineNumber":319,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":320,"author":{"gitId":"jay9645"},"content":"A new enumeration `EditPolicyMode` was created within the `EditCommand` class. It provides the developer with an enumeration of","lastModifiedDate":"2021-04-03"},{"lineNumber":321,"author":{"gitId":"jay9645"},"content":"modes to notify other methods of the different ways of editing a client\u0027s policy list, namely `MODIFY`, `APPEND`, `REPLACE` and `REMOVE`.","lastModifiedDate":"2021-04-03"},{"lineNumber":322,"author":{"gitId":"jay9645"},"content":"This editing mode parsed from the user input, and then passed as an argument to the constructor of `EditCommand` to specify how ","lastModifiedDate":"2021-04-03"},{"lineNumber":323,"author":{"gitId":"jay9645"},"content":"the client\u0027s policy list should be edited.","lastModifiedDate":"2021-04-03"},{"lineNumber":324,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":325,"author":{"gitId":"jay9645"},"content":"Within the `EditCommand#execute` method, a new `Person` object is created through the `EditCommand#createEditedPerson` method.","lastModifiedDate":"2021-04-03"},{"lineNumber":326,"author":{"gitId":"jay9645"},"content":"This method creates the updated policy list of the new `Person` object based on the specified `EditPolicyMode`.","lastModifiedDate":"2021-04-03"},{"lineNumber":327,"author":{"gitId":"jay9645"},"content":"The created `Person` is then used to update the model, which in turn updates the view and shows the change to the user.","lastModifiedDate":"2021-04-03"},{"lineNumber":328,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":329,"author":{"gitId":"jay9645"},"content":"Below is an example usage scenario and how the information and data are passed around at each step.","lastModifiedDate":"2021-04-03"},{"lineNumber":330,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":331,"author":{"gitId":"jay9645"},"content":"**Step 1.** The user types `edit 1 n/Tom Doe i/P12345 i/P54321 -insert` into the input box.","lastModifiedDate":"2021-04-03"},{"lineNumber":332,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":333,"author":{"gitId":"jay9645"},"content":"**Step 2.** `MainWindow` receives the `commandText` (`edit 1 n/Tom Doe i/P12345 i/P54321 -insert`), ","lastModifiedDate":"2021-04-03"},{"lineNumber":334,"author":{"gitId":"jay9645"},"content":"which is then executed by `LogicManager`.","lastModifiedDate":"2021-04-03"},{"lineNumber":335,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":336,"author":{"gitId":"jay9645"},"content":"**Step 3.** `ClientBookParser` then parses the full `commandText`, returning a `Command` object. In this case, it would return an","lastModifiedDate":"2021-04-03"},{"lineNumber":337,"author":{"gitId":"jay9645"},"content":"`EditCommand`, which would contain the index of the selected client in the displayed list (in this case 1), followed by","lastModifiedDate":"2021-04-03"},{"lineNumber":338,"author":{"gitId":"jay9645"},"content":"the values that the user intends to edit, followed by the edit policy mode (in this case insert).","lastModifiedDate":"2021-04-03"},{"lineNumber":339,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":340,"author":{"gitId":"jay9645"},"content":"**Step 4.** `EditCommand`then executes, returning a `CommandResult`. This `CommandResult` contains the feedback string message","lastModifiedDate":"2021-04-03"},{"lineNumber":341,"author":{"gitId":"jay9645"},"content":"which indicates to the user which client was edited.","lastModifiedDate":"2021-04-03"},{"lineNumber":342,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":343,"author":{"gitId":"jay9645"},"content":"**Step 5.** This `CommandResult` is passed back to `MainWindow`, which then displays the list after the edit to the user.","lastModifiedDate":"2021-04-03"},{"lineNumber":344,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":345,"author":{"gitId":"jay9645"},"content":"Below is a sequence diagram illustrating the flow of this entire process.","lastModifiedDate":"2021-04-03"},{"lineNumber":346,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":347,"author":{"gitId":"jay9645"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/EditSequenceDiagram.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":348,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":349,"author":{"gitId":"jay9645"},"content":"#### Design Considerations","lastModifiedDate":"2021-04-03"},{"lineNumber":350,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":351,"author":{"gitId":"jay9645"},"content":"`EditPolicyMode` is implemented as an inner class within `EditCommand`, as it is not used anywhere else in the application.","lastModifiedDate":"2021-04-03"},{"lineNumber":352,"author":{"gitId":"jay9645"},"content":"If future extensions require the use of `EditPolicyMode` in other areas, it is recommended to make `EditPolicyMode` into a","lastModifiedDate":"2021-04-03"},{"lineNumber":353,"author":{"gitId":"jay9645"},"content":"an outer class instead.","lastModifiedDate":"2021-04-03"},{"lineNumber":354,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":355,"author":{"gitId":"jay9645"},"content":"#### Implementation/Testing Considerations","lastModifiedDate":"2021-04-03"},{"lineNumber":356,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":357,"author":{"gitId":"jay9645"},"content":"Compared to other commands, the `edit` command takes many arguments of varying types, so extra care should be taken during the","lastModifiedDate":"2021-04-03"},{"lineNumber":358,"author":{"gitId":"jay9645"},"content":"parsing of its arguments and extensive testing should be done on the varying argument types.","lastModifiedDate":"2021-04-03"},{"lineNumber":359,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":373,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"swayongshen"},"content":"**Step 1**. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-03-24"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/UndoRedoState0.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":382,"author":{"gitId":"jlxw48"},"content":"**Step 2**. The user executes `delete 5` command to delete the 5th client contacts in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-03-24"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/UndoRedoState1.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":388,"author":{"gitId":"jlxw48"},"content":"**Step 3**. The user executes `add n/David …​` to add a new client contacts. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-24"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/UndoRedoState2.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":391,"author":{"gitId":"swayongshen"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":392,"author":{"gitId":"jlxw48"},"content":":information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-24"},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":394,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"jlxw48"},"content":"**Step 4**. The user now decides that adding the client contacts was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-03-24"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/UndoRedoState3.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"swayongshen"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":401,"author":{"gitId":"jlxw48"},"content":":information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-03-24"},{"lineNumber":402,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":404,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/UndoSequenceDiagram.png\" width\u003d\"90%\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":409,"author":{"gitId":"swayongshen"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":410,"author":{"gitId":"jlxw48"},"content":":information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-24"},{"lineNumber":411,"author":{"gitId":"swayongshen"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"swayongshen"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":416,"author":{"gitId":"jlxw48"},"content":":information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-03-24"},{"lineNumber":417,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"swayongshen"},"content":"**Step 5**. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-03-24"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/UndoRedoState4.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":426,"author":{"gitId":"wongkokian"},"content":"**Step 6**. The user executes `batch delete` on all client contacts, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-04-01"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/UndoRedoState5.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":432,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/CommitActivityDiagram.png\" height\u003d\"90%\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"jlxw48"},"content":"#### Design consideration","lastModifiedDate":"2021-03-25"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"jlxw48"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the client contact being deleted).","lastModifiedDate":"2021-03-24"},{"lineNumber":447,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":451,"author":{"gitId":"jlxw48"},"content":"------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":457,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":462,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":463,"author":{"gitId":"jlxw48"},"content":"------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":475,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"NBH99"},"content":"* tech-savvy insurance agents","lastModifiedDate":"2021-02-25"},{"lineNumber":477,"author":{"gitId":"NBH99"},"content":"* have to manage large number of client related information","lastModifiedDate":"2021-02-25"},{"lineNumber":478,"author":{"gitId":"NBH99"},"content":"* mainly use laptops on the go","lastModifiedDate":"2021-02-25"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"NBH99"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-25"},{"lineNumber":481,"author":{"gitId":"NBH99"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-02-25"},{"lineNumber":482,"author":{"gitId":"NBH99"},"content":"* a central avenue to store information about their clients","lastModifiedDate":"2021-02-25"},{"lineNumber":483,"author":{"gitId":"NBH99"},"content":"* typing-based easier to use than the trackpads","lastModifiedDate":"2021-02-25"},{"lineNumber":484,"author":{"gitId":"NBH99"},"content":"* do not allow the user to insert attachments or group policies in our application.","lastModifiedDate":"2021-02-25"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"NBH99"},"content":"| `* * *`  | user                                       | add a new client               |                                                                        |","lastModifiedDate":"2021-02-25"},{"lineNumber":494,"author":{"gitId":"swayongshen"},"content":"| `* * *`  | user                                       | delete a client                | remove the contact of a client that I no longer serve                                   |","lastModifiedDate":"2021-03-24"},{"lineNumber":495,"author":{"gitId":"NBH99"},"content":"| `* * *`  | user                                       | find a client by name          | locate details of clients without having to go through the entire list |","lastModifiedDate":"2021-02-25"},{"lineNumber":496,"author":{"gitId":"swayongshen"},"content":"| `* * *`  | forgetful user                             | store many clients details     | so that I do not have to remember them                                                   |","lastModifiedDate":"2021-03-24"},{"lineNumber":497,"author":{"gitId":"swayongshen"},"content":"| `* * *`  | first time user                            | find out how to use ClientBook | familiarise myself with the application                                        |","lastModifiedDate":"2021-03-24"},{"lineNumber":498,"author":{"gitId":"swayongshen"},"content":"| `* * *`  | insurance agent                            | find clients by insurance policy    | find my clients who share the same insurance policy                    |","lastModifiedDate":"2021-03-24"},{"lineNumber":499,"author":{"gitId":"swayongshen"},"content":"| `* * *`  | insurance agent                            | link contact to portfolio      | access my clients\u0027 portfolio  easily                                                     |","lastModifiedDate":"2021-03-24"},{"lineNumber":500,"author":{"gitId":"swayongshen"},"content":"| `* * *`  | insurance agent                            | edit individual client details |                               |","lastModifiedDate":"2021-03-24"},{"lineNumber":501,"author":{"gitId":"swayongshen"},"content":"| `* *`    | disorganised user                          | display only certain attributes queried| avoid cluttering the screen with unnecessary information               |","lastModifiedDate":"2021-03-24"},{"lineNumber":502,"author":{"gitId":"NBH99"},"content":"| `* *`    | insurance agent                            | sort my clients                | see my clients in a more organized way                                 |","lastModifiedDate":"2021-03-16"},{"lineNumber":503,"author":{"gitId":"NBH99"},"content":"| `* *`    | insurance agent on the go                  | lock ClientBook with a password| prevent the leakage of my clients\u0027 information                         |","lastModifiedDate":"2021-03-16"},{"lineNumber":504,"author":{"gitId":"NBH99"},"content":"| `* *`    | insurance agent                            | schedule meetings with clients | check what meetings I have with my clients                             |","lastModifiedDate":"2021-03-26"},{"lineNumber":505,"author":{"gitId":"swayongshen"},"content":"| `*`      | busy insurance agents                      | have access to keyboard commands e.g. CTRL + J | minimize time spent typing.                         |","lastModifiedDate":"2021-03-30"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"NBH99"},"content":"(For all use cases below, the **System** is the `ClientBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-25"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"swayongshen"},"content":"**Use case 1: Delete a client**","lastModifiedDate":"2021-03-24"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"jlxw48"},"content":"1.  User requests to list clients.","lastModifiedDate":"2021-03-24"},{"lineNumber":516,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":517,"author":{"gitId":"jlxw48"},"content":"1.  ClientBook shows a list of clients.","lastModifiedDate":"2021-03-24"},{"lineNumber":518,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":519,"author":{"gitId":"jlxw48"},"content":"1.  User requests to delete a specific client in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":520,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":521,"author":{"gitId":"jlxw48"},"content":"1.  ClientBook deletes the client.","lastModifiedDate":"2021-03-24"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"NBH99"},"content":"    * 3a1. ClientBook shows an error message.","lastModifiedDate":"2021-02-25"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"NBH99"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-02-25"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":538,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":539,"author":{"gitId":"swayongshen"},"content":"**Use case 2: Add a client**","lastModifiedDate":"2021-03-24"},{"lineNumber":540,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":541,"author":{"gitId":"NBH99"},"content":"**MSS**","lastModifiedDate":"2021-02-25"},{"lineNumber":542,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":543,"author":{"gitId":"jlxw48"},"content":"1.  User requests to add a client.","lastModifiedDate":"2021-03-24"},{"lineNumber":544,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":545,"author":{"gitId":"jlxw48"},"content":"1.  ClientBook adds the client.","lastModifiedDate":"2021-03-24"},{"lineNumber":546,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":547,"author":{"gitId":"NBH99"},"content":"    Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":548,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":549,"author":{"gitId":"NBH99"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":550,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":551,"author":{"gitId":"NBH99"},"content":"* 1a. The user input does not follow the format required.","lastModifiedDate":"2021-02-25"},{"lineNumber":552,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":553,"author":{"gitId":"NBH99"},"content":"  * 1a1. ClientBook shows an error message.","lastModifiedDate":"2021-02-25"},{"lineNumber":554,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":555,"author":{"gitId":"NBH99"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-25"},{"lineNumber":556,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":557,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":558,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":559,"author":{"gitId":"swayongshen"},"content":"**Use case 3: List all clients**","lastModifiedDate":"2021-03-24"},{"lineNumber":560,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":561,"author":{"gitId":"NBH99"},"content":"**MSS**","lastModifiedDate":"2021-02-25"},{"lineNumber":562,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":563,"author":{"gitId":"jlxw48"},"content":"1.  User requests to list clients.","lastModifiedDate":"2021-03-24"},{"lineNumber":564,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":565,"author":{"gitId":"jlxw48"},"content":"2.  ClientBook shows a list of clients.","lastModifiedDate":"2021-03-24"},{"lineNumber":566,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":567,"author":{"gitId":"NBH99"},"content":"    Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":568,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":569,"author":{"gitId":"NBH99"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":570,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":571,"author":{"gitId":"jlxw48"},"content":"2a. The list is empty.","lastModifiedDate":"2021-03-24"},{"lineNumber":572,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":573,"author":{"gitId":"NBH99"},"content":"  Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":574,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":575,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":576,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":577,"author":{"gitId":"swayongshen"},"content":"**Use case 4: Edit a client**","lastModifiedDate":"2021-03-24"},{"lineNumber":578,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":579,"author":{"gitId":"NBH99"},"content":"**MSS**","lastModifiedDate":"2021-02-25"},{"lineNumber":580,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":581,"author":{"gitId":"jlxw48"},"content":"1.  User requests to list clients.","lastModifiedDate":"2021-03-24"},{"lineNumber":582,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":583,"author":{"gitId":"jlxw48"},"content":"2.  ClientBook shows a list of clients.","lastModifiedDate":"2021-03-24"},{"lineNumber":584,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":585,"author":{"gitId":"jlxw48"},"content":"3.  User requests to edit a specific client in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":586,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":587,"author":{"gitId":"jlxw48"},"content":"4.  ClientBook edits the client.","lastModifiedDate":"2021-03-24"},{"lineNumber":588,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":589,"author":{"gitId":"NBH99"},"content":"    Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":590,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":591,"author":{"gitId":"NBH99"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":592,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":593,"author":{"gitId":"NBH99"},"content":"* 2a. The list of clients is empty.","lastModifiedDate":"2021-03-18"},{"lineNumber":594,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":595,"author":{"gitId":"NBH99"},"content":"  Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":596,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":597,"author":{"gitId":"NBH99"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-02-25"},{"lineNumber":598,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":599,"author":{"gitId":"NBH99"},"content":"    * 3a1. ClientBook shows an error message.","lastModifiedDate":"2021-02-25"},{"lineNumber":600,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":601,"author":{"gitId":"NBH99"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-02-25"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":603,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":605,"author":{"gitId":"swayongshen"},"content":"**Use case 5: Find a client**","lastModifiedDate":"2021-03-24"},{"lineNumber":606,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":607,"author":{"gitId":"NBH99"},"content":"**MSS**","lastModifiedDate":"2021-02-25"},{"lineNumber":608,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":609,"author":{"gitId":"jlxw48"},"content":"1.  User requests to find clients with keywords.","lastModifiedDate":"2021-03-24"},{"lineNumber":610,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":611,"author":{"gitId":"jlxw48"},"content":"2.  ClientBook shows a list of clients that matches keywords.","lastModifiedDate":"2021-03-24"},{"lineNumber":612,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":613,"author":{"gitId":"NBH99"},"content":"    Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":614,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":615,"author":{"gitId":"NBH99"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":616,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":617,"author":{"gitId":"NBH99"},"content":"* 2a. The list of matched clients is empty.","lastModifiedDate":"2021-02-25"},{"lineNumber":618,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":619,"author":{"gitId":"NBH99"},"content":"  Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":620,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":621,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":622,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":623,"author":{"gitId":"swayongshen"},"content":"**Use case 6: Filter list of clients**","lastModifiedDate":"2021-03-24"},{"lineNumber":624,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":625,"author":{"gitId":"NBH99"},"content":"**MSS**","lastModifiedDate":"2021-02-25"},{"lineNumber":626,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":627,"author":{"gitId":"jlxw48"},"content":"1.  User requests to filter clients with details.","lastModifiedDate":"2021-03-24"},{"lineNumber":628,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":629,"author":{"gitId":"jlxw48"},"content":"2.  ClientBook shows a list of clients that matches details.","lastModifiedDate":"2021-03-24"},{"lineNumber":630,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":631,"author":{"gitId":"NBH99"},"content":"    Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":632,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":633,"author":{"gitId":"NBH99"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":634,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":635,"author":{"gitId":"NBH99"},"content":"* 2a. The list of matched clients is empty.","lastModifiedDate":"2021-03-11"},{"lineNumber":636,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":637,"author":{"gitId":"NBH99"},"content":"  Use case ends.","lastModifiedDate":"2021-03-11"},{"lineNumber":638,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":639,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":640,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":641,"author":{"gitId":"swayongshen"},"content":"**Use case 7: Sort list of clients**","lastModifiedDate":"2021-03-24"},{"lineNumber":642,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":643,"author":{"gitId":"NBH99"},"content":"**MSS**","lastModifiedDate":"2021-03-11"},{"lineNumber":644,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":645,"author":{"gitId":"jlxw48"},"content":"1.  User requests to sort clients with the specified attribute and direction.","lastModifiedDate":"2021-03-24"},{"lineNumber":646,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":647,"author":{"gitId":"NBH99"},"content":"2.  ClientBook shows the sorted list of clients.","lastModifiedDate":"2021-03-11"},{"lineNumber":648,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":649,"author":{"gitId":"NBH99"},"content":"    Use case ends.","lastModifiedDate":"2021-03-11"},{"lineNumber":650,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":651,"author":{"gitId":"NBH99"},"content":"**Extensions**","lastModifiedDate":"2021-03-11"},{"lineNumber":652,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":653,"author":{"gitId":"NBH99"},"content":"* 1a. The given attribute or direction is invalid.","lastModifiedDate":"2021-03-26"},{"lineNumber":654,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":655,"author":{"gitId":"NBH99"},"content":"    * 1a1. ClientBook shows an error message.","lastModifiedDate":"2021-03-26"},{"lineNumber":656,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":657,"author":{"gitId":"NBH99"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-03-26"},{"lineNumber":658,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":659,"author":{"gitId":"NBH99"},"content":"* 2a. The list of clients is empty.","lastModifiedDate":"2021-03-26"},{"lineNumber":660,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":661,"author":{"gitId":"NBH99"},"content":"  Use case ends.","lastModifiedDate":"2021-03-26"},{"lineNumber":662,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":663,"author":{"gitId":"NBH99"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":664,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":665,"author":{"gitId":"NBH99"},"content":"**Use case 8: Schedule a meeting with a client**","lastModifiedDate":"2021-03-26"},{"lineNumber":666,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":667,"author":{"gitId":"NBH99"},"content":"**MSS**","lastModifiedDate":"2021-03-26"},{"lineNumber":668,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":669,"author":{"gitId":"NBH99"},"content":"1.  User requests to list clients.","lastModifiedDate":"2021-03-29"},{"lineNumber":670,"author":{"gitId":"NBH99"},"content":"    ","lastModifiedDate":"2021-03-29"},{"lineNumber":671,"author":{"gitId":"NBH99"},"content":"2.  ClientBook shows a list of clients.","lastModifiedDate":"2021-03-29"},{"lineNumber":672,"author":{"gitId":"NBH99"},"content":"    ","lastModifiedDate":"2021-03-29"},{"lineNumber":673,"author":{"gitId":"NBH99"},"content":"3.  User requests to schedule a meeting with a specific client in the list.","lastModifiedDate":"2021-03-29"},{"lineNumber":674,"author":{"gitId":"NBH99"},"content":"    ","lastModifiedDate":"2021-03-29"},{"lineNumber":675,"author":{"gitId":"NBH99"},"content":"4.  ClientBook schedules a meeting with the client.","lastModifiedDate":"2021-03-29"},{"lineNumber":676,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":677,"author":{"gitId":"NBH99"},"content":"    Use case ends.","lastModifiedDate":"2021-03-26"},{"lineNumber":678,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":679,"author":{"gitId":"NBH99"},"content":"**Extensions**","lastModifiedDate":"2021-03-26"},{"lineNumber":680,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":681,"author":{"gitId":"NBH99"},"content":"* 2a. The list of clients is empty.","lastModifiedDate":"2021-03-18"},{"lineNumber":682,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":683,"author":{"gitId":"NBH99"},"content":"  Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":684,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":685,"author":{"gitId":"NBH99"},"content":"* 3a. The given index, action, place, date or time is invalid.","lastModifiedDate":"2021-03-26"},{"lineNumber":686,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":687,"author":{"gitId":"NBH99"},"content":"    * 3a1. ClientBook shows an error message.","lastModifiedDate":"2021-03-26"},{"lineNumber":688,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":689,"author":{"gitId":"NBH99"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-03-26"},{"lineNumber":690,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":691,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":692,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":693,"author":{"gitId":"NBH99"},"content":"**Use case 9: Lock ClientBook**","lastModifiedDate":"2021-03-26"},{"lineNumber":694,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":695,"author":{"gitId":"swayongshen"},"content":"**MSS**","lastModifiedDate":"2021-03-14"},{"lineNumber":696,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":697,"author":{"gitId":"swayongshen"},"content":"1. User requests to lock ClientBook.","lastModifiedDate":"2021-03-14"},{"lineNumber":698,"author":{"gitId":"jlxw48"},"content":"   ","lastModifiedDate":"2021-03-24"},{"lineNumber":699,"author":{"gitId":"swayongshen"},"content":"2. ClientBook is locked.","lastModifiedDate":"2021-03-14"},{"lineNumber":700,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":701,"author":{"gitId":"swayongshen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-14"},{"lineNumber":702,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":703,"author":{"gitId":"swayongshen"},"content":"**Extensions**","lastModifiedDate":"2021-03-14"},{"lineNumber":704,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":705,"author":{"gitId":"swayongshen"},"content":"* 1a. ClientBook is already locked but user did not enter the current password.","lastModifiedDate":"2021-03-14"},{"lineNumber":706,"author":{"gitId":"jlxw48"},"content":"  ","lastModifiedDate":"2021-03-24"},{"lineNumber":707,"author":{"gitId":"jlxw48"},"content":"    * 1a1. ClientBook shows an error message. Use case resumes at step 1. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":708,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":709,"author":{"gitId":"swayongshen"},"content":"* 1b. ClientBook is already locked and user entered the incorrect current password.","lastModifiedDate":"2021-03-14"},{"lineNumber":710,"author":{"gitId":"jlxw48"},"content":"  ","lastModifiedDate":"2021-03-24"},{"lineNumber":711,"author":{"gitId":"swayongshen"},"content":"    * 1b1. ClientBook shows an error message. Use case resumes at step 1.","lastModifiedDate":"2021-03-14"},{"lineNumber":712,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":713,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":714,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":715,"author":{"gitId":"NBH99"},"content":"**Use case 10: Unlock ClientBook**","lastModifiedDate":"2021-03-26"},{"lineNumber":716,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":717,"author":{"gitId":"swayongshen"},"content":"**MSS**","lastModifiedDate":"2021-03-14"},{"lineNumber":718,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":719,"author":{"gitId":"swayongshen"},"content":"1. User requests to unlock ClientBook.","lastModifiedDate":"2021-03-14"},{"lineNumber":720,"author":{"gitId":"jlxw48"},"content":"   ","lastModifiedDate":"2021-03-24"},{"lineNumber":721,"author":{"gitId":"swayongshen"},"content":"2. ClientBook is unlocked.","lastModifiedDate":"2021-03-14"},{"lineNumber":722,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":723,"author":{"gitId":"swayongshen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-14"},{"lineNumber":724,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":725,"author":{"gitId":"swayongshen"},"content":"**Extensions**","lastModifiedDate":"2021-03-14"},{"lineNumber":726,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":727,"author":{"gitId":"swayongshen"},"content":"* 1a. User enters the incorrect current password that is used to lock ClientBook.","lastModifiedDate":"2021-03-14"},{"lineNumber":728,"author":{"gitId":"jlxw48"},"content":"  ","lastModifiedDate":"2021-03-24"},{"lineNumber":729,"author":{"gitId":"swayongshen"},"content":"    * 1a1. ClientBook shows an error message. Use case resumes at step 1.","lastModifiedDate":"2021-03-14"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":731,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":735,"author":{"gitId":"NBH99"},"content":"2.  Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-02-25"},{"lineNumber":736,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":737,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":739,"author":{"gitId":"jlxw48"},"content":"4.  Should be able to have the client information stored in a file that can easily transfer/share between computers.","lastModifiedDate":"2021-03-24"},{"lineNumber":740,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":741,"author":{"gitId":"NBH99"},"content":"5.  Should be able to use ClientBook even if there is no internet around the vicinity.","lastModifiedDate":"2021-02-25"},{"lineNumber":742,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":743,"author":{"gitId":"NBH99"},"content":"6.  Should be able to have ClientBook stay on for a long period of time.","lastModifiedDate":"2021-02-25"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":747,"author":{"gitId":"jlxw48"},"content":"------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"jlxw48"},"content":":information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2021-03-24"},{"lineNumber":754,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"jlxw48"},"content":"### Viewing a client\u0027s policies","lastModifiedDate":"2021-03-24"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"jlxw48"},"content":"1. Displaying all policies associated with a selected client who has no insurance policies","lastModifiedDate":"2021-03-24"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"jlxw48"},"content":"    *  Prerequisites: ","lastModifiedDate":"2021-03-24"},{"lineNumber":777,"author":{"gitId":"jlxw48"},"content":"       * List all client contacts using the list command. ","lastModifiedDate":"2021-03-24"},{"lineNumber":778,"author":{"gitId":"jlxw48"},"content":"       * Multiple client contacts in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":779,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"jlxw48"},"content":"    * Test case: `policy 2`","lastModifiedDate":"2021-03-24"},{"lineNumber":781,"author":{"gitId":"jlxw48"},"content":"       * Expected: A small window pops up, with a message that says the selected client has no policies currently.","lastModifiedDate":"2021-03-24"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"jlxw48"},"content":"1. Displaying all policies associated with a selected client who has insurance policies","lastModifiedDate":"2021-03-24"},{"lineNumber":784,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":785,"author":{"gitId":"jlxw48"},"content":"    * Prerequisites: ","lastModifiedDate":"2021-03-24"},{"lineNumber":786,"author":{"gitId":"jlxw48"},"content":"       * List all client contacts using the list command. ","lastModifiedDate":"2021-03-24"},{"lineNumber":787,"author":{"gitId":"jlxw48"},"content":"       * Multiple client contacts in the list. ","lastModifiedDate":"2021-03-24"},{"lineNumber":788,"author":{"gitId":"jlxw48"},"content":"       * Client to be selected should have at least 1 insurance policy.","lastModifiedDate":"2021-03-24"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":790,"author":{"gitId":"jlxw48"},"content":"    * Test case: `policy 3`","lastModifiedDate":"2021-03-24"},{"lineNumber":791,"author":{"gitId":"jlxw48"},"content":"       * Expected: A small window pops up, displaying the insurance policies associated with the selected client. If the insurance policies have URLs, a \"Copy URL\" button will be displayed beside the URL.","lastModifiedDate":"2021-03-24"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":793,"author":{"gitId":"jlxw48"},"content":"    * Test case: `policy 0`","lastModifiedDate":"2021-03-24"},{"lineNumber":794,"author":{"gitId":"jlxw48"},"content":"       * Expected: No display window appears. Error details shown in the status message.","lastModifiedDate":"2021-03-24"},{"lineNumber":795,"author":{"gitId":"jlxw48"},"content":" ","lastModifiedDate":"2021-03-24"},{"lineNumber":796,"author":{"gitId":"jlxw48"},"content":"    * Other incorrect policy commands to try: `policy`, `policy x`, `...` (where x is larger than the list size)","lastModifiedDate":"2021-03-24"},{"lineNumber":797,"author":{"gitId":"jlxw48"},"content":"       * Expected: Similar to previous.","lastModifiedDate":"2021-03-24"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":799,"author":{"gitId":"jlxw48"},"content":"### Deleting a client contact","lastModifiedDate":"2021-03-24"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":801,"author":{"gitId":"jlxw48"},"content":"1. Deleting a client contact while all client contacts are being shown","lastModifiedDate":"2021-03-24"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":803,"author":{"gitId":"jlxw48"},"content":"   * Prerequisites: ","lastModifiedDate":"2021-03-24"},{"lineNumber":804,"author":{"gitId":"jlxw48"},"content":"      * List all client contacts using the `list` command. ","lastModifiedDate":"2021-03-24"},{"lineNumber":805,"author":{"gitId":"jlxw48"},"content":"      * Multiple client contacts in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":807,"author":{"gitId":"jlxw48"},"content":"   * Test case: `delete 1`","lastModifiedDate":"2021-03-24"},{"lineNumber":808,"author":{"gitId":"jlxw48"},"content":"      * Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-03-24"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":810,"author":{"gitId":"jlxw48"},"content":"   * Test case: `delete 0`","lastModifiedDate":"2021-03-24"},{"lineNumber":811,"author":{"gitId":"jlxw48"},"content":"      * Expected: No client contact is deleted. Error details shown in the status message. Status bar remains the sameass","lastModifiedDate":"2021-03-25"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"jlxw48"},"content":"   * Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)","lastModifiedDate":"2021-03-24"},{"lineNumber":814,"author":{"gitId":"jlxw48"},"content":"      * Expected: Similar to previous.","lastModifiedDate":"2021-03-24"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"jlxw48"},"content":"1. Dealing with missing data files","lastModifiedDate":"2021-03-24"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"jlxw48"},"content":"   * Prerequisites: ","lastModifiedDate":"2021-03-24"},{"lineNumber":821,"author":{"gitId":"jlxw48"},"content":"      * Remove the clientbook.zip file from the folder with name \u0027data\u0027 in the same directory as your clientbook.jar file. ","lastModifiedDate":"2021-03-24"},{"lineNumber":822,"author":{"gitId":"jlxw48"},"content":"      * Ensure that the data folder is empty.","lastModifiedDate":"2021-03-24"},{"lineNumber":823,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":824,"author":{"gitId":"jlxw48"},"content":"   * Test case: Launch ClientBook","lastModifiedDate":"2021-03-24"},{"lineNumber":825,"author":{"gitId":"jlxw48"},"content":"      * Expected: ClientBook launches and loads the data of the sample contacts.","lastModifiedDate":"2021-03-24"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"wongkokian":1,"NBH99":140,"swayongshen":182,"-":254,"jlxw48":197,"jay9645":52}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":":exclamation: **Caution**:","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"   1. Run the `seedu.address.Main` and try a few commands. Refer to our [User Guide](UserGuide.md) for examples of some commands.","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"   :bulb: **Tip:**","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"   ","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":50,"jlxw48":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"# ClientBook","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"ClientBook is an application for insurance agents to manage client contacts, optimized for use with just a keyboard,","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"but still offering a graphical interface for ease of viewing of client contacts. The purpose of ClientBook is to help ","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"insurance agents who can type fast to accomplish their client management tasks faster than traditional applications.","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"swayongshen"},"content":"If this is the first time that you are using an application like ClientBook, you do not have to worry. We have included","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"a section [here](#how-to-use-this-user-guide) to guide you through this user guide.","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"swayongshen"},"content":"## Why ClientBook?","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"ClientBook is designed for insurance agents who are always on the go. We understand the pain and inconvenience of having to navigate around","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"swayongshen"},"content":"your screen without a mouse while you are out meeting a client. We are also aware that you might have to remember various details about your many clients.","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"swayongshen"},"content":"Thus, ClientBook is born!\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"swayongshen"},"content":"Requiring **minimal interactions with your cursor**, ClientBook still allows you to complete essential contact management","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"swayongshen"},"content":"tasks with our minimal yet essential set of contact management features.\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"swayongshen"},"content":"## Purpose of This User Guide","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"swayongshen"},"content":"The purpose of this user guide is to help you, the user get started with using ClientBook as well as to help you to get familiarised","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"with the features that it has to offer so that you can become comfortable with using it in your day-to-day operations as an insurance agent.","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"swayongshen"},"content":"## How to Use This User Guide","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"swayongshen"},"content":"If you are a new user, you can start with the [Quick Start](#quick-start) section to get ClientBook running. After that,","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"swayongshen"},"content":"we have also provided an [Example Usage](#example-usage) section to help you get familiarised with ClientBook.","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"If you are an experienced user, we have provided a convenient [Summary of Commands](#summary-of-commands) at the end of this user guide.","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"swayongshen"},"content":"## Table of Contents ","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"swayongshen"},"content":"Please use the table of contents to navigate through the user guide quickly. ClientBook\u0027s commands are grouped into ","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"swayongshen"},"content":"\u003cspan style\u003d\"color:#b573c9\"\u003e**contact management**\u003c/span\u003e, ","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"swayongshen"},"content":"\u003cspan style\u003d\"color:#f75c66\"\u003e**contact viewing**\u003c/span\u003e, and ","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"swayongshen"},"content":"\u003cspan style\u003d\"color:#3cb44b\"\u003e**general**\u003c/span\u003e commands.","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"swayongshen"},"content":"* [**1.** Quick Start](#quick-start)","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"swayongshen"},"content":"* [**2.** Example Usage](#example-usage)","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"swayongshen"},"content":"* [**3.** Overview](#overview)","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"swayongshen"},"content":"  * [**3.1** Feature Summary](#feature-summary)","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"swayongshen"},"content":"  * [**3.2** What information can we store for each client contact?](#what-information-can-we-store-for-each-client-contact)","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"swayongshen"},"content":"* [**4.** Feature Description](#feature-description)","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"swayongshen"},"content":"  * [**4.1** `help`: Viewing help](#help-viewing-help)","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"swayongshen"},"content":"  * [**4.2** `add`: Add client contact](#add-add-client-contact)","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"swayongshen"},"content":"  * [**4.3** `edit`: Edit client contact](#edit-edit-client-contact)","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"swayongshen"},"content":"  * [**4.4** `list`: List all clients](#list-list-all-clients)","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"swayongshen"},"content":"  * [**4.5** `find`: Search for client contact based on keywords](#find-search-for-client-contact-based-on-keywords)","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"swayongshen"},"content":"  * [**4.6** `policy`: Display policies associated with a client](#policy-display-policies-associated-with-a-client)","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"swayongshen"},"content":"  * [**4.7** `delete`Delete client contact](#delete-delete-client-contact)","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"swayongshen"},"content":"  * [**4.8** `batch` Execute commands in batch](#batch-execute-commands-in-batch)","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"swayongshen"},"content":"  * [**4.9** `sort`: Sort list of clients](#sort-sort-list-of-clients)","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"swayongshen"},"content":"  * [**4.10** `meet`: Schedule a meeting with a client](#meet-schedule-a-meeting-with-a-client)","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"swayongshen"},"content":"  * [**4.11** `addshortcut`: Add shortcut](#addshortcut-add-shortcut)","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"swayongshen"},"content":"  * [**4.12** `editshortcut`: Edit shortcut](#editshortcut-edit-shortcut)","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"swayongshen"},"content":"  * [**4.13** `deleteshortcut`: Delete shortcut](#deleteshortcut-delete-shortcut)","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"swayongshen"},"content":"  * [**4.14** `listshortcut`: List all shortcuts](#listshortcut-list-all-shortcuts)","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"swayongshen"},"content":"  * [**4.15** `clearshortcut`: Clear all shortcuts](#clearshortcut-clear-all-shortcuts)","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"swayongshen"},"content":"  * [**4.16** `lock`: Lock ClientBook with a user-selected password](#lock-lock-clientbook-with-a-user-selected-password)","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"swayongshen"},"content":"  * [**4.17** `unlock`: Unlock ClientBook](#unlock-unlock-clientbook)","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"swayongshen"},"content":"  * [**4.18** `exit`: Exiting the program](#exit-exiting-the-program)","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"swayongshen"},"content":"  * [**4.19** Saving data](#saving-data)","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"swayongshen"},"content":"  * [**4.20** Editing data file](#editing-data-file)","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"swayongshen"},"content":"  * [**4.21** Upcoming features!](#upcoming-features-v20-and-beyond)","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"swayongshen"},"content":"* [**5.** Frequently Asked Questions](#frequently-asked-questions)","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"swayongshen"},"content":"  * [**5.1** Setting Up](#setting-up)","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"swayongshen"},"content":"* [**6.** Summary of Commands](#summary-of-commands)","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"swayongshen"},"content":"* [**7.** Glossary](#glossary)","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"swayongshen"},"content":"* [**8.** Contact Us](#contact-us)","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"## Quick Start","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"swayongshen"},"content":"The quick start section provides a tutorial which will guide you through the steps needed to get ClientBook running.","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"swayongshen"},"content":"   * To check if you have this installed or for instructions on how to install, refer to our FAQ [here](#frequently-asked-questions).","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"jlxw48"},"content":"1. Download the latest `clientbook.jar` [here](https://github.com/AY2021S2-CS2103T-W15-2/tp/releases/tag/v1.2).","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"swayongshen"},"content":"   ","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"jlxw48"},"content":"1. Copy the file to the folder (we will be referring to this folder as the _home folder_) where you want to store the ClientBook application and your client information.","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"swayongshen"},"content":"1. Double-click the downloaded `clientbook.jar` file in your home folder to start the app. The screen below should appear in a few seconds. ","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"jlxw48"},"content":"   * Alternatively, for those who are tech-savvy, you can launch the application via Command Prompt in Windows or Terminal in Mac OS/Linux using the following command: `java -jar clientbook.jar`. ","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"jlxw48"},"content":"   * Note how the app contains some sample data.","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"swayongshen"},"content":"        \u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/Ui-annotate.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":100,"author":{"gitId":"swayongshen"},"content":"        \u003cp align\u003d\"center\"\u003eGraphical user interface of ClientBook.\u003c/p\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"jay9645"},"content":"    ","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"jlxw48"},"content":"1. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"jlxw48"},"content":"   * Some example commands you can try:","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"jlxw48"},"content":"   | Command | Purpose |","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"jlxw48"},"content":"   | ----------- | ----------- |","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"jlxw48"},"content":"   | `help` | Opens the help window with a URL to this User Guide |","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"jlxw48"},"content":"   | `list` | Lists all contacts |","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"jlxw48"},"content":"   | `add n/John Doe p/98765432 e/johnd@example.com a/Orchard Street, Block 123, #01-01 i/Policy_1022` | Adds a client named `John Doe` and his information to the ClientBook |","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"jlxw48"},"content":"   | `delete 3` | Deletes the 3rd contact in the list (i.e. deletes `Charlotte Oliveiro`) |","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"jlxw48"},"content":"   | `exit` | Exits the application |","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"swayongshen"},"content":"1. Refer to the [Feature-Description](#feature-description) section below for the full list of commands and their descriptions.","lastModifiedDate":"2021-04-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"swayongshen"},"content":"## Example Usage","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"swayongshen"},"content":"### Introduction","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"swayongshen"},"content":"Described below are some commands that you can try to get yourself familiarised with ClientBook.","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"swayongshen"},"content":"If you have followed the [Quick Start](#quick-start) guide correctly, you should see the screen below. ","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"swayongshen"},"content":"For each of the commands, type them into the command box and press enter to execute the command.","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/Ui-annotate.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":127,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003eGraphical user interface of ClientBook.\u003c/p\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"swayongshen"},"content":"\u003cp\u003e\u003cb\u003eStep 1.\u003c/b\u003e\u003c/p\u003e ","lastModifiedDate":"2021-04-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":131,"author":{"gitId":"swayongshen"},"content":"**Try adding a new Client contact using the command** `add n/James Lee p/91234567 e/james@gmail.com a/Blk 123 Serangoon Rd t/Friend t/Colleague i/OCBC#412\u003ewww.ocbc.com/policy/412`.","lastModifiedDate":"2021-04-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"swayongshen"},"content":"That is a very long command, but it can be broken down into simple parts. We have just added a client called James Lee with the following details:","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"swayongshen"},"content":"* Phone number:91234567","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"swayongshen"},"content":"* Email address: james@gmail.com","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"swayongshen"},"content":"* Address:Blk 123 Serangoon Rd","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"swayongshen"},"content":"We have also indicated that James is a friend as well as colleague of ours by adding the tags `Friend` and `Colleague`. Lastly,","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"swayongshen"},"content":"we indicated that James has purchased a policy from us with a policy ID of OCBC#412 and that the policy\u0027s document can be found at `www.ocbc.com/policy/412`.","lastModifiedDate":"2021-04-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"swayongshen"},"content":"Now, if you scroll down the contact list, you should find James at the bottom of the list.","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/newContactJames.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"swayongshen"},"content":"\u003cp\u003e\u003cb\u003eStep 2.\u003c/b\u003e\u003c/p\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":149,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":150,"author":{"gitId":"swayongshen"},"content":"**Try editing a Client contact using the command `edit 1 p/61234567`.**","lastModifiedDate":"2021-04-02"},{"lineNumber":151,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"swayongshen"},"content":"This command edits the phone number of the first client displayed in the contact list to 61234567. In this case, Alex Yeoh\u0027s","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"swayongshen"},"content":"phone number in ClientBook has been changed to 61234567.","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"swayongshen"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/alexYeohChangePhone.png\"\u003e\u003c/p\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"swayongshen"},"content":"\u003cp\u003e\u003cb\u003eStep 3.\u003c/b\u003e\u003c/p\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":160,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":161,"author":{"gitId":"swayongshen"},"content":"**Delete a Client contact using the command `delete 3`.**","lastModifiedDate":"2021-04-02"},{"lineNumber":162,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"swayongshen"},"content":"This command deletes the contact of the third client displayed in the contact list.","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"swayongshen"},"content":"### Conclusion","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"swayongshen"},"content":"Now that you have tried out the basic commands available in ClientBook, you can use the command `batch delete 1,2,3,4,5,6,7`","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"swayongshen"},"content":"to delete all the sample entries and start using your very own ClientBook.","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"jlxw48"},"content":"## Overview","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"jlxw48"},"content":"### Feature Summary ","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"jlxw48"},"content":"| Feature | Description |","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"jlxw48"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"jlxw48"},"content":"| [`help`](#help-viewing-help) | Viewing help |","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"jlxw48"},"content":"| [`add`](#add-add-client-contact) | Add client contact |","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"jlxw48"},"content":"| [`edit`](#edit-edit-client-contact) | Edit client contact |","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"jlxw48"},"content":"| [`list`](#list-list-all-clients) | List all clients |","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"jlxw48"},"content":"| [`find`](#find-search-for-client-contact-based-on-keywords) | Search for client contact based on keywords |","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"jlxw48"},"content":"| [`policy`](#policy-display-policies-associated-with-a-client) | Display policies associated with a selected client |","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"jlxw48"},"content":"| [`delete`](#delete-delete-client-contact) | Delete client |","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"swayongshen"},"content":"| [`batch`](#batch-execute-commands-in-batch) | Execute commands in batch |","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"jlxw48"},"content":"| [`sort`](#sort-sort-list-of-clients) | Sort list of clients |","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"swayongshen"},"content":"| [`meet`](#meet-schedule-a-meeting-with-a-client) | Schedule a meeting with a client |","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"swayongshen"},"content":"| [`addshortcut`](#addshortcut-add-shortcut) | Add shortcut |","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"swayongshen"},"content":"| [`editshortcut`](#editshortcut-edit-shortcut) | Edit shortcut |","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"swayongshen"},"content":"| [`deleteshortcut`](#deleteshortcut-delete-shortcut) | Delete shortcut |","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"swayongshen"},"content":"| [`listshortcut`](#listshortcut-list-all-shortcuts) | List all shortcuts |","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"swayongshen"},"content":"| [`clearshortcut`](#clearshortcut-clear-all-shortcuts) | Clear all shortcuts |","lastModifiedDate":"2021-04-01"},{"lineNumber":194,"author":{"gitId":"jlxw48"},"content":"| [`lock`](#lock-lock-clientbook-with-a-user-selected-password) | Lock ClientBook with a user-selected password |","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"jlxw48"},"content":"| [`unlock`](#unlock-unlock-clientbook) | Unlock ClientBook |","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"jlxw48"},"content":"| [`exit`](#exit-exiting-the-program) | Exit ClientBook |","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"jlxw48"},"content":"| [Saving data](#saving-data) | Save the data to a file in the home folder |","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"jlxw48"},"content":"| [Editing data file](#editing-data-file) | Edit the data stored in the file in the home folder|","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"jlxw48"},"content":"### What information can we store for each client contact?","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":202,"author":{"gitId":"jlxw48"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"jlxw48"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003cb\u003eAttribute\u003c/b\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003cb\u003eIdentifier(s)\u003c/b\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003cb\u003eRestriction(s) (if any)\u003c/b\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"jlxw48"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"jlxw48"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e Name \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003ccode\u003en\u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e NA \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"jlxw48"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"jlxw48"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e Phone number \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003ccode\u003ep\u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e ","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"jlxw48"},"content":"         \u003cul\u003e\u003cli\u003eShould only contain numbers\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"jlxw48"},"content":"         \u003cul\u003e\u003cli\u003eMust contain at least 3 digits\u003c/li\u003e\u003c/ul\u003e ","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"jlxw48"},"content":"    \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"jlxw48"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"jlxw48"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e Address \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003ccode\u003ea\u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e NA \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"jlxw48"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"jlxw48"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e Email \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003ccode\u003ee\u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003cul\u003e\u003cli\u003eShould be of the form \u003ccode\u003ename@email.com\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"jlxw48"},"content":"         \u003cul\u003e\u003cli\u003e\u003ccode\u003ename\u003c/code\u003e part of email should not contain the following characters \u003ccode\u003e!#$%\u0026\u0027*+/\u003d?\\`{\u0026#x7c;}~^.-\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"jlxw48"},"content":"         \u003cul\u003e\u003cli\u003e \u003ccode\u003eemail\u003c/code\u003e part of email should: ","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"jlxw48"},"content":"             \u003cul\u003e\u003cli\u003eBe at least 2 characters long\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"jlxw48"},"content":"             \u003cul\u003e\u003cli\u003eStart and end with either alphabets or numbers\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"jlxw48"},"content":"             \u003cul\u003e\u003cli\u003eConsist only of alphabets and/or numbers, hyphens, or periods between characters\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"jlxw48"},"content":"         \u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"jlxw48"},"content":"    \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"jlxw48"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"jlxw48"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e Tag \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003ccode\u003et\u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003cul\u003e\u003cli\u003eOptional\u003c/li\u003e\u003c/ul\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"jlxw48"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"jlxw48"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":244,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e Insurance Policies \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003ccode\u003ei\u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"jlxw48"},"content":"    \u003ctd\u003e \u003cul\u003e\u003cli\u003eOptional\u003c/li\u003e\u003c/ul\u003e ","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"jlxw48"},"content":"         \u003cul\u003e\u003cli\u003eShould be of the form \u003ccode\u003ePolicyId\u003eURL\u003c/code\u003e or \u003ccode\u003ePolicyId\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e ","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"jlxw48"},"content":"         \u003cul\u003e\u003cli\u003e\u003ccode\u003ePolicyId\u003c/code\u003e part should not contain the \u003ccode\u003e\u003e\u003c/code\u003e character\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"jlxw48"},"content":"         \u003cul\u003e\u003cli\u003e\u003ccode\u003eURL\u003c/code\u003e part should not contain the \u003ccode\u003e\u003e\u003c/code\u003e character (not a valid website link if it contains \u003ccode\u003e\u003e\u003c/code\u003e)\u003c/li\u003e\u003c/ul\u003e ","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"jlxw48"},"content":"    \u003c/td\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":251,"author":{"gitId":"jlxw48"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"jlxw48"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"jay9645"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-02"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"swayongshen"},"content":"* **Words in UPPER_CASE are the parameters to be supplied by the user**. ","lastModifiedDate":"2021-04-01"},{"lineNumber":263,"author":{"gitId":"jlxw48"},"content":"  * e.g. in `add n/NAME`, NAME is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2021-03-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"jlxw48"},"content":"* **Items in square brackets are optional**. ","lastModifiedDate":"2021-03-23"},{"lineNumber":267,"author":{"gitId":"jlxw48"},"content":"  * e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-03-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"jlxw48"},"content":"* **Items with …​ after them can be used multiple times**. ","lastModifiedDate":"2021-03-23"},{"lineNumber":271,"author":{"gitId":"jlxw48"},"content":"  * e.g. `[t/TAG]…​` can be used 0 or more times, `t/basic`, `t/basic t/lifeinsurance` etc.","lastModifiedDate":"2021-03-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"jlxw48"},"content":"* **Parameters can be in any order**. ","lastModifiedDate":"2021-03-23"},{"lineNumber":275,"author":{"gitId":"jlxw48"},"content":"  * e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-03-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"swayongshen"},"content":"* **If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.**","lastModifiedDate":"2021-04-01"},{"lineNumber":279,"author":{"gitId":"jlxw48"},"content":"  * e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"swayongshen"},"content":"* **Extraneous parameters for commands that do not take in parameters** (such as `help`, `exit` and `listshortcut`) **will be ignored**. ","lastModifiedDate":"2021-04-01"},{"lineNumber":283,"author":{"gitId":"jlxw48"},"content":"  * e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-03-24"},{"lineNumber":284,"author":{"gitId":"jlxw48"},"content":"  ","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"swayongshen"},"content":"* **Attributes in the form `-identifier` will be referred to as flags, while attributes in the form `identifier/` will be referred to as prefixes.**","lastModifiedDate":"2021-04-01"},{"lineNumber":287,"author":{"gitId":"jlxw48"},"content":"  * e.g. for the `name` attribute, its flag would be `-n`, while its prefix would be `n/`.","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"jlxw48"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"jlxw48"},"content":"## Feature Description","lastModifiedDate":"2021-03-23"},{"lineNumber":295,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":296,"author":{"gitId":"jlxw48"},"content":"### `help`: Viewing help ","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Shows a message explaining how to access this help page.","lastModifiedDate":"2021-03-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"jlxw48"},"content":"![help message](images/help-message.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"jlxw48"},"content":"**Format**: `help`","lastModifiedDate":"2021-03-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"jlxw48"},"content":"### `add`: Add client contact","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Adds a client as contact to ClientBook.","lastModifiedDate":"2021-03-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"jlxw48"},"content":"**Format**: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [i/POLICY_ID[\u003ePOLICY_URL]] [t/TAG]…​`","lastModifiedDate":"2021-03-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"jlxw48"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":315,"author":{"gitId":"jlxw48"},"content":":bulb: ","lastModifiedDate":"2021-03-24"},{"lineNumber":316,"author":{"gitId":"jlxw48"},"content":"**Tip**:","lastModifiedDate":"2021-03-23"},{"lineNumber":317,"author":{"gitId":"jlxw48"},"content":"A person can have any number of tags and insurance policies (including 0).","lastModifiedDate":"2021-03-24"},{"lineNumber":318,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":320,"author":{"gitId":"jlxw48"},"content":"* It is optional to include the `POLICY_URL` for the specified `POLICY_ID`.","lastModifiedDate":"2021-03-24"},{"lineNumber":321,"author":{"gitId":"jlxw48"},"content":"* To include the URL, remember to use \u0027\u003e\u0027 to indicate that a particular insurance policy is linked to a URL, as shown in the second example below.","lastModifiedDate":"2021-03-14"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":323,"author":{"gitId":"jlxw48"},"content":"**Examples**:","lastModifiedDate":"2021-03-23"},{"lineNumber":324,"author":{"gitId":"jlxw48"},"content":"* Example of a client with insurance policy but no URL associated with insurance policy","lastModifiedDate":"2021-03-23"},{"lineNumber":325,"author":{"gitId":"jlxw48"},"content":"    * `add n/John Doe p/98765432 e/johnd@email.com a/Orchard i/Pol_#123456 t/basic`","lastModifiedDate":"2021-03-23"},{"lineNumber":326,"author":{"gitId":"jlxw48"},"content":"* Example of a client with insurance policy and URL associated with insurance policy","lastModifiedDate":"2021-03-23"},{"lineNumber":327,"author":{"gitId":"jlxw48"},"content":"    * `add n/Tom Tan p/91234567 e/tomt@email.com a/Orchard i/Policy_1274\u003ewww.myinsurancecompany.com/policy_1274 t/basic`","lastModifiedDate":"2021-03-23"},{"lineNumber":328,"author":{"gitId":"jlxw48"},"content":"* Example with no insurance policy and no tag","lastModifiedDate":"2021-03-23"},{"lineNumber":329,"author":{"gitId":"jlxw48"},"content":"    * `add n/Betsy Crowe e/betsycrowe@email.com a/Kent Ridge`","lastModifiedDate":"2021-03-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":332,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"jlxw48"},"content":"### `edit`: Edit client contact ","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Edits an existing client contact in the ClientBook.","lastModifiedDate":"2021-03-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":339,"author":{"gitId":"swayongshen"},"content":"**Format**: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [i/POLICY_NUMBER]…​ [t/TAG]…​ [m/MEETING]…​`","lastModifiedDate":"2021-04-01"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":341,"author":{"gitId":"jlxw48"},"content":"* Edits the client at the specified `INDEX`.","lastModifiedDate":"2021-03-23"},{"lineNumber":342,"author":{"gitId":"jlxw48"},"content":"    * `INDEX` refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-03-24"},{"lineNumber":343,"author":{"gitId":"jlxw48"},"content":"    * `INDEX` must be more than 1, and less than or equal to the index of the last item in the displayed list.","lastModifiedDate":"2021-03-24"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":346,"author":{"gitId":"jlxw48"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":347,"author":{"gitId":"jlxw48"},"content":":exclamation: **Caution**: Existing values will be **replaced** with the input values.","lastModifiedDate":"2021-03-24"},{"lineNumber":348,"author":{"gitId":"jlxw48"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"jlxw48"},"content":"**Examples**:","lastModifiedDate":"2021-03-23"},{"lineNumber":351,"author":{"gitId":"jlxw48"},"content":"*  Edit the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-03-23"},{"lineNumber":352,"author":{"gitId":"jlxw48"},"content":"    * `edit 1 p/91234567 e/johndoe@example.com`","lastModifiedDate":"2021-03-23"},{"lineNumber":353,"author":{"gitId":"jlxw48"},"content":"      ","lastModifiedDate":"2021-03-23"},{"lineNumber":354,"author":{"gitId":"swayongshen"},"content":"      ![edit 1](images/edit-annotate.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":355,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-23"},{"lineNumber":356,"author":{"gitId":"jlxw48"},"content":"*  Edit the name of the 2nd person to be `Betsy Crower`.","lastModifiedDate":"2021-03-23"},{"lineNumber":357,"author":{"gitId":"jlxw48"},"content":"    * `edit 2 n/Betsy Crower`","lastModifiedDate":"2021-03-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":360,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":361,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"jlxw48"},"content":"### `list`: List all clients ","lastModifiedDate":"2021-03-24"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"swayongshen"},"content":"**Purpose**: Shows a list of all clients in ClientBook. Optional identifiers can be specified to show a list with only the desired attributes.","lastModifiedDate":"2021-04-01"},{"lineNumber":366,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":367,"author":{"gitId":"swayongshen"},"content":"**Format**: `list [-n] [-p] [-e] [-a] [-i] [-t] [-m]`","lastModifiedDate":"2021-04-01"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":369,"author":{"gitId":"jlxw48"},"content":"**Examples**: ","lastModifiedDate":"2021-03-23"},{"lineNumber":370,"author":{"gitId":"swayongshen"},"content":"*  `list` without any specified identifiers shows a list of all clients and all their information.","lastModifiedDate":"2021-04-01"},{"lineNumber":371,"author":{"gitId":"jlxw48"},"content":"  * `list`","lastModifiedDate":"2021-03-23"},{"lineNumber":372,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-23"},{"lineNumber":373,"author":{"gitId":"jlxw48"},"content":"    ![list](images/list.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":374,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-23"},{"lineNumber":375,"author":{"gitId":"swayongshen"},"content":"*  One or more identifiers can be used to make `list` only show the specified information. The following command shows a list of all clients and their phone number and insurance policy number.","lastModifiedDate":"2021-04-01"},{"lineNumber":376,"author":{"gitId":"jlxw48"},"content":"   * `list -p -i`","lastModifiedDate":"2021-03-24"},{"lineNumber":377,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-23"},{"lineNumber":378,"author":{"gitId":"swayongshen"},"content":"     ![list phone](images/list-phone-policy-annotate.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":381,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"jlxw48"},"content":"  ","lastModifiedDate":"2021-03-23"},{"lineNumber":384,"author":{"gitId":"jlxw48"},"content":"### `find`: Search for client contact based on keywords","lastModifiedDate":"2021-03-24"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Finds and displays all clients whose field (name, phone, email, address, tags, insurance policy) contains any of the given keywords.","lastModifiedDate":"2021-03-23"},{"lineNumber":387,"author":{"gitId":"jlxw48"},"content":"Optional identifiers can be added to show the list of matched clients with only the specified field(s), similar to the [`list`](#list-list-all-clients) command.","lastModifiedDate":"2021-03-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"jlxw48"},"content":"**Format**: `find IDENTIFIER/KEYWORD [\u0026 KEYWORDS]…​ [-IDENTIFIER]…​`","lastModifiedDate":"2021-03-27"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"jlxw48"},"content":"* The search is **case-insensitive**. ","lastModifiedDate":"2021-03-23"},{"lineNumber":392,"author":{"gitId":"jlxw48"},"content":"  * E.g. `hans` will match `Hans`.","lastModifiedDate":"2021-03-27"},{"lineNumber":393,"author":{"gitId":"jlxw48"},"content":"* The **order of the keywords does not matter**.","lastModifiedDate":"2021-03-23"},{"lineNumber":394,"author":{"gitId":"jlxw48"},"content":"* Only **one** `IDENTIFIER` can be used in each `find` command.","lastModifiedDate":"2021-03-27"},{"lineNumber":395,"author":{"gitId":"jlxw48"},"content":"    * For more information about the identifiers for each field, refer to [What information can we store for each client contact?](#what-information-can-we-store-for-each-client-contact).","lastModifiedDate":"2021-03-27"},{"lineNumber":396,"author":{"gitId":"jlxw48"},"content":"* The delimiter `\u0026` between keywords allows you to search for Clients using multiple keywords.","lastModifiedDate":"2021-03-24"},{"lineNumber":397,"author":{"gitId":"jay9645"},"content":"    ","lastModifiedDate":"2021-03-02"},{"lineNumber":398,"author":{"gitId":"jlxw48"},"content":"**Examples**:","lastModifiedDate":"2021-03-23"},{"lineNumber":399,"author":{"gitId":"jlxw48"},"content":"* Find `Alex David` and `Alex Yeoh`.","lastModifiedDate":"2021-03-23"},{"lineNumber":400,"author":{"gitId":"jlxw48"},"content":"  * `find n/alex`","lastModifiedDate":"2021-03-23"},{"lineNumber":401,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":402,"author":{"gitId":"jlxw48"},"content":"* Find `Alex David`.","lastModifiedDate":"2021-03-23"},{"lineNumber":403,"author":{"gitId":"jlxw48"},"content":"  * `find n/alex david`","lastModifiedDate":"2021-03-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"swayongshen"},"content":"    ![find_alex_david](images/find_alex_david-annotate.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":406,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":407,"author":{"gitId":"jlxw48"},"content":"* Find `Alex David`, `Alex Yeoh` and `David Li`.","lastModifiedDate":"2021-03-23"},{"lineNumber":408,"author":{"gitId":"jlxw48"},"content":"  * `find n/alex \u0026 david`","lastModifiedDate":"2021-03-23"},{"lineNumber":409,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":410,"author":{"gitId":"jlxw48"},"content":"* Find all persons whose address contains `geylang`.","lastModifiedDate":"2021-03-23"},{"lineNumber":411,"author":{"gitId":"jlxw48"},"content":"  * `find a/geylang` - returns `Alex Yeoh` whose address is `Blk 30 Geylang Street 29, #06-40`","lastModifiedDate":"2021-03-23"},{"lineNumber":412,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":413,"author":{"gitId":"jlxw48"},"content":"* Find the email and phone number of all persons whose names contain `alex` and `david` using the `\u0026` delimiter, and only display their email and phone number.","lastModifiedDate":"2021-03-27"},{"lineNumber":414,"author":{"gitId":"jlxw48"},"content":"  * `find n/alex \u0026 david -e -p`","lastModifiedDate":"2021-03-24"},{"lineNumber":415,"author":{"gitId":"jlxw48"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":416,"author":{"gitId":"swayongshen"},"content":"    ![find_alex_\u0026_david_with_filter](images/find-alex-\u0026-david-with-filter-annotate.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":417,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":418,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":419,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"jlxw48"},"content":"### `policy`: Display policies associated with a client ","lastModifiedDate":"2021-03-24"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Launches a popup window to show all the policies associated with the selected contact, if the selected contact has any policies.","lastModifiedDate":"2021-03-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"jlxw48"},"content":"**Format**: `policy INDEX`","lastModifiedDate":"2021-03-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":428,"author":{"gitId":"jlxw48"},"content":"* Selects the client at the specified `INDEX`.","lastModifiedDate":"2021-03-23"},{"lineNumber":429,"author":{"gitId":"swayongshen"},"content":"* `INDEX` refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-01"},{"lineNumber":430,"author":{"gitId":"swayongshen"},"content":"* `INDEX` must be more than 1, and less than or equal to the index of the last item in the displayed list.","lastModifiedDate":"2021-04-01"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"jlxw48"},"content":"**Examples**:","lastModifiedDate":"2021-03-23"},{"lineNumber":433,"author":{"gitId":"swayongshen"},"content":"* `policy 2` displays the policies associated with the 2nd person in the currently displayed list.","lastModifiedDate":"2021-04-01"},{"lineNumber":434,"author":{"gitId":"jlxw48"},"content":"  ","lastModifiedDate":"2021-03-23"},{"lineNumber":435,"author":{"gitId":"swayongshen"},"content":"  ![with policy URL](images/with-policy-URL-annotate.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":436,"author":{"gitId":"jlxw48"},"content":"  ","lastModifiedDate":"2021-03-23"},{"lineNumber":437,"author":{"gitId":"jlxw48"},"content":"* `find n/Bernice` followed by `policy 1` displays the policies associated with the 1st person in the results of the `find` command.","lastModifiedDate":"2021-03-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":439,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":440,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":443,"author":{"gitId":"jlxw48"},"content":"### `delete`: Delete client contact","lastModifiedDate":"2021-03-24"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":445,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Deletes the specified client from ClientBook after listing or finding contacts.","lastModifiedDate":"2021-03-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":447,"author":{"gitId":"jlxw48"},"content":"**Format**: `delete INDEX`","lastModifiedDate":"2021-03-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":449,"author":{"gitId":"jlxw48"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2021-03-23"},{"lineNumber":450,"author":{"gitId":"swayongshen"},"content":"* `INDEX` refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-01"},{"lineNumber":451,"author":{"gitId":"swayongshen"},"content":"* `INDEX` must be more than 1, and less than or equal to the index of the last item in the displayed list.","lastModifiedDate":"2021-04-01"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":453,"author":{"gitId":"jlxw48"},"content":"**Examples**:","lastModifiedDate":"2021-03-23"},{"lineNumber":454,"author":{"gitId":"swayongshen"},"content":"* `delete 2` deletes the 2nd person in the currently displayed list.","lastModifiedDate":"2021-04-01"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":456,"author":{"gitId":"jlxw48"},"content":"* `find n/Charlotte` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-03-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":458,"author":{"gitId":"swayongshen"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-01"},{"lineNumber":459,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":460,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":461,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":462,"author":{"gitId":"swayongshen"},"content":"### `batch`: Execute commands in batch","lastModifiedDate":"2021-04-01"},{"lineNumber":463,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":464,"author":{"gitId":"swayongshen"},"content":"**Purpose**: Allows you to execute some commands in bulk, so that you do not need to repeatedly type in the same ","lastModifiedDate":"2021-04-01"},{"lineNumber":465,"author":{"gitId":"swayongshen"},"content":"commands.","lastModifiedDate":"2021-04-01"},{"lineNumber":466,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":467,"author":{"gitId":"swayongshen"},"content":"**Format**: `batch COMMAND INDICES [ARGUMENTS]`","lastModifiedDate":"2021-04-01"},{"lineNumber":468,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":469,"author":{"gitId":"swayongshen"},"content":"* Only `edit` and `delete` commands can be executed in batch.","lastModifiedDate":"2021-04-01"},{"lineNumber":470,"author":{"gitId":"swayongshen"},"content":"    * For more information on how these commands work and their parameters, refer to the","lastModifiedDate":"2021-04-01"},{"lineNumber":471,"author":{"gitId":"swayongshen"},"content":"      [`edit`](#edit-edit-client-contact) and [`delete`](#delete-delete-client-contact) sections accordingly.","lastModifiedDate":"2021-04-01"},{"lineNumber":472,"author":{"gitId":"swayongshen"},"content":"* `INDICES` are comma-separated e.g. `1, 2, 3`, and they refer to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-01"},{"lineNumber":473,"author":{"gitId":"swayongshen"},"content":"* `INDICES` must all be more than 1, and less than or equal to the index of the last item in the displayed list.","lastModifiedDate":"2021-04-01"},{"lineNumber":474,"author":{"gitId":"swayongshen"},"content":"* The optional `ARGUMENTS` input is only applicable if the `COMMAND` is `edit`.","lastModifiedDate":"2021-04-01"},{"lineNumber":475,"author":{"gitId":"swayongshen"},"content":"* For `edit`, you can only batch edit the following attributes:","lastModifiedDate":"2021-04-01"},{"lineNumber":476,"author":{"gitId":"swayongshen"},"content":"    * phone number","lastModifiedDate":"2021-04-01"},{"lineNumber":477,"author":{"gitId":"swayongshen"},"content":"    * address","lastModifiedDate":"2021-04-01"},{"lineNumber":478,"author":{"gitId":"swayongshen"},"content":"    * tags","lastModifiedDate":"2021-04-01"},{"lineNumber":479,"author":{"gitId":"swayongshen"},"content":"    * insurance policies","lastModifiedDate":"2021-04-01"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"swayongshen"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":482,"author":{"gitId":"swayongshen"},"content":":bulb: ","lastModifiedDate":"2021-04-01"},{"lineNumber":483,"author":{"gitId":"swayongshen"},"content":"**Tip**:","lastModifiedDate":"2021-04-01"},{"lineNumber":484,"author":{"gitId":"swayongshen"},"content":"The same rules apply when editing clients\u0027 phone number and address! \u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":485,"author":{"gitId":"swayongshen"},"content":"If a parameter is expected only once in the command, but you specified it multiple times, **only the last occurrence** of the parameter will be taken. ","lastModifiedDate":"2021-04-01"},{"lineNumber":486,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":488,"author":{"gitId":"swayongshen"},"content":"**Examples**:","lastModifiedDate":"2021-04-01"},{"lineNumber":489,"author":{"gitId":"swayongshen"},"content":"* To batch edit the tags of more than 1 client contact.","lastModifiedDate":"2021-04-01"},{"lineNumber":490,"author":{"gitId":"swayongshen"},"content":"    * `batch edit 1, 2, 4 p/91234567 a/Hougang Green t/TanFamily i/FamPol#111`","lastModifiedDate":"2021-04-01"},{"lineNumber":491,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":492,"author":{"gitId":"swayongshen"},"content":"* To batch delete more than 1 client contact.","lastModifiedDate":"2021-04-01"},{"lineNumber":493,"author":{"gitId":"swayongshen"},"content":"    * `batch delete 1, 2, 4`","lastModifiedDate":"2021-04-01"},{"lineNumber":494,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":495,"author":{"gitId":"jlxw48"},"content":"      [Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":496,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":497,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":498,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":499,"author":{"gitId":"jlxw48"},"content":"### `sort`: Sort list of clients","lastModifiedDate":"2021-03-24"},{"lineNumber":500,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":501,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Sorts the current list of clients in ClientBook.","lastModifiedDate":"2021-03-23"},{"lineNumber":502,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":503,"author":{"gitId":"swayongshen"},"content":"**Format**: `sort -IDENTIFIER -DIRECTION`","lastModifiedDate":"2021-04-01"},{"lineNumber":504,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":505,"author":{"gitId":"swayongshen"},"content":"* Sorts the list of clients according to the specified `IDENTIFIER` and `DIRECTION`.","lastModifiedDate":"2021-04-01"},{"lineNumber":506,"author":{"gitId":"swayongshen"},"content":"* The specified `IDENTIFIER` can be `-n` to sort by name alphabetically or `-i` to sort by number of insurance policies, but not both.","lastModifiedDate":"2021-04-01"},{"lineNumber":507,"author":{"gitId":"jlxw48"},"content":"* The specified `DIRECTION` can be `-asc` for ascending order or `-des` for descending order, but not both.","lastModifiedDate":"2021-03-23"},{"lineNumber":508,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":509,"author":{"gitId":"jlxw48"},"content":"**Examples**:","lastModifiedDate":"2021-03-23"},{"lineNumber":510,"author":{"gitId":"jlxw48"},"content":"* Sort the current list of clients by name in **descending** number of insurance policies.","lastModifiedDate":"2021-03-24"},{"lineNumber":511,"author":{"gitId":"jlxw48"},"content":"    * `sort -i -des`","lastModifiedDate":"2021-03-24"},{"lineNumber":512,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":513,"author":{"gitId":"jlxw48"},"content":"* Sort the current list of clients by name in **descending** alphabetical order.","lastModifiedDate":"2021-03-24"},{"lineNumber":514,"author":{"gitId":"jlxw48"},"content":"    * `sort -n -des`","lastModifiedDate":"2021-03-24"},{"lineNumber":515,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":516,"author":{"gitId":"swayongshen"},"content":"      ![sort](images/sort-des-annotate.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":517,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":518,"author":{"gitId":"swayongshen"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-01"},{"lineNumber":519,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":520,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":521,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":522,"author":{"gitId":"swayongshen"},"content":"### `meet`: Schedule a meeting with a client","lastModifiedDate":"2021-04-01"},{"lineNumber":523,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":524,"author":{"gitId":"swayongshen"},"content":"**Purpose**: Schedules a meeting on a particular date, start time, end time and place with a client in ClientBook.","lastModifiedDate":"2021-04-01"},{"lineNumber":525,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":526,"author":{"gitId":"swayongshen"},"content":"**Format**: `meet INDEX [-ACTION] DATE START END PLACE`","lastModifiedDate":"2021-04-01"},{"lineNumber":527,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":528,"author":{"gitId":"swayongshen"},"content":"* Schedules a meeting with the client at the specified `INDEX`.","lastModifiedDate":"2021-04-01"},{"lineNumber":529,"author":{"gitId":"swayongshen"},"content":"* `INDEX` refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-01"},{"lineNumber":530,"author":{"gitId":"swayongshen"},"content":"* `INDEX` must be more than 1, and less than or equal to the index of the last item in the displayed list.","lastModifiedDate":"2021-04-01"},{"lineNumber":531,"author":{"gitId":"swayongshen"},"content":"* `ACTION` can be `add` to add a meeting, `delete` to delete a meeting, `clear` to clear all meetings.","lastModifiedDate":"2021-04-01"},{"lineNumber":532,"author":{"gitId":"swayongshen"},"content":"* If `-ACTION` is empty, the default action is to add a meeting.","lastModifiedDate":"2021-04-01"},{"lineNumber":533,"author":{"gitId":"swayongshen"},"content":"* `DATE` must be in the `DD:MM:YYYY` format.","lastModifiedDate":"2021-04-01"},{"lineNumber":534,"author":{"gitId":"swayongshen"},"content":"* `START` and `END` must be in the `HH:MM` format.","lastModifiedDate":"2021-04-01"},{"lineNumber":535,"author":{"gitId":"swayongshen"},"content":"* `END` must be after `START` on the same `DATE`.","lastModifiedDate":"2021-04-01"},{"lineNumber":536,"author":{"gitId":"swayongshen"},"content":"* `PLACE` cannot be empty.","lastModifiedDate":"2021-04-01"},{"lineNumber":537,"author":{"gitId":"swayongshen"},"content":"* There is a check for clashes between meetings when adding a new meeting.","lastModifiedDate":"2021-04-01"},{"lineNumber":538,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":539,"author":{"gitId":"swayongshen"},"content":"**Examples**:","lastModifiedDate":"2021-04-01"},{"lineNumber":540,"author":{"gitId":"swayongshen"},"content":"* Add a meeting and there are no clashes.","lastModifiedDate":"2021-04-01"},{"lineNumber":541,"author":{"gitId":"swayongshen"},"content":"    * `meet 1 20.05.2021 15:00 16:00 MRT`","lastModifiedDate":"2021-04-01"},{"lineNumber":542,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":543,"author":{"gitId":"swayongshen"},"content":"      ![meet-add](images/meet-add.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":544,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":545,"author":{"gitId":"swayongshen"},"content":"* Add a meeting but there are clashes.","lastModifiedDate":"2021-04-01"},{"lineNumber":546,"author":{"gitId":"swayongshen"},"content":"    * `meet 3 -add 20.05.2021 15:30 17:30 MRT`","lastModifiedDate":"2021-04-01"},{"lineNumber":547,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":548,"author":{"gitId":"swayongshen"},"content":"      ![meet-clash](images/meet-clash.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":549,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":550,"author":{"gitId":"swayongshen"},"content":"* Delete a meeting.","lastModifiedDate":"2021-04-01"},{"lineNumber":551,"author":{"gitId":"swayongshen"},"content":"    * `meet 1 -delete 20.05.2021 15:00 16:00 MRT`","lastModifiedDate":"2021-04-01"},{"lineNumber":552,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":553,"author":{"gitId":"swayongshen"},"content":"* Clear all meetings.","lastModifiedDate":"2021-04-01"},{"lineNumber":554,"author":{"gitId":"swayongshen"},"content":"    * `meet 2 -clear`","lastModifiedDate":"2021-04-01"},{"lineNumber":555,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":556,"author":{"gitId":"swayongshen"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-01"},{"lineNumber":557,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":558,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":559,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":560,"author":{"gitId":"swayongshen"},"content":"### `addshortcut`: Add shortcut","lastModifiedDate":"2021-04-01"},{"lineNumber":561,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":562,"author":{"gitId":"swayongshen"},"content":"**Purpose**: Adds a shortcut to the existing shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":563,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":564,"author":{"gitId":"swayongshen"},"content":"**Format**: `addshortcut sn/SHORTCUT_NAME sc/SHORTCUT_COMMAND`","lastModifiedDate":"2021-04-01"},{"lineNumber":565,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":566,"author":{"gitId":"swayongshen"},"content":"* Adds a shortcut named `SHORTCUT_NAME` to the shortcut library and assigns a valid command `SHORTCUT_COMMAND` to it.","lastModifiedDate":"2021-04-01"},{"lineNumber":567,"author":{"gitId":"swayongshen"},"content":"* The specified `SHORTCUT_NAME` must be alphanumeric and must not already exist the shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":568,"author":{"gitId":"swayongshen"},"content":"* The specified `SHORTCUT_COMMAND` must be a valid command.","lastModifiedDate":"2021-04-01"},{"lineNumber":569,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":570,"author":{"gitId":"swayongshen"},"content":"**Examples**:","lastModifiedDate":"2021-04-01"},{"lineNumber":571,"author":{"gitId":"swayongshen"},"content":"* Add a shortcut named `ls` to represent the command `listshortcut` in the shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":572,"author":{"gitId":"swayongshen"},"content":"    * `addshortcut sn/ls sc/listshortcut`","lastModifiedDate":"2021-04-01"},{"lineNumber":573,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":574,"author":{"gitId":"swayongshen"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-01"},{"lineNumber":575,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":576,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":577,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":578,"author":{"gitId":"swayongshen"},"content":"### `editshortcut`: Edit shortcut","lastModifiedDate":"2021-04-01"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":580,"author":{"gitId":"swayongshen"},"content":"**Purpose**: Edits the command of a shortcut in the existing shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":581,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":582,"author":{"gitId":"swayongshen"},"content":"**Format**: `editshortcut sn/SHORTCUT_NAME sc/SHORTCUT_COMMAND`","lastModifiedDate":"2021-04-01"},{"lineNumber":583,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":584,"author":{"gitId":"swayongshen"},"content":"* Finds a shortcut named `SHORTCUT_NAME` in the shortcut library and replaces its existing command with the provided valid command `SHORTCUT_COMMAND`.","lastModifiedDate":"2021-04-01"},{"lineNumber":585,"author":{"gitId":"swayongshen"},"content":"* The specified `SHORTCUT_NAME` must be alphanumeric and must exist the shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":586,"author":{"gitId":"swayongshen"},"content":"* The specified `SHORTCUT_COMMAND` must be a valid command.","lastModifiedDate":"2021-04-01"},{"lineNumber":587,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":588,"author":{"gitId":"swayongshen"},"content":"**Examples**:","lastModifiedDate":"2021-04-01"},{"lineNumber":589,"author":{"gitId":"swayongshen"},"content":"* Edit a shortcut named `ls` in the shortcut library such that it takes on a new command `list`.","lastModifiedDate":"2021-04-01"},{"lineNumber":590,"author":{"gitId":"swayongshen"},"content":"    * `editshortcut sn/ls sc/list`","lastModifiedDate":"2021-04-01"},{"lineNumber":591,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":592,"author":{"gitId":"swayongshen"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-01"},{"lineNumber":593,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":594,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":595,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":596,"author":{"gitId":"swayongshen"},"content":"### `deleteshortcut`: Delete shortcut","lastModifiedDate":"2021-04-01"},{"lineNumber":597,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":598,"author":{"gitId":"swayongshen"},"content":"**Purpose**: Deletes a shortcut in the existing shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":599,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":600,"author":{"gitId":"swayongshen"},"content":"**Format**: `deleteshortcut SHORTCUT_NAME`","lastModifiedDate":"2021-04-01"},{"lineNumber":601,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":602,"author":{"gitId":"swayongshen"},"content":"* Finds a shortcut named `SHORTCUT_NAME` in the shortcut library and deletes it from the shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":603,"author":{"gitId":"swayongshen"},"content":"* The specified `SHORTCUT_NAME` must be alphanumeric and must exist in the shortcut library.","lastModifiedDate":"2021-04-02"},{"lineNumber":604,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":605,"author":{"gitId":"swayongshen"},"content":"**Examples**:","lastModifiedDate":"2021-04-01"},{"lineNumber":606,"author":{"gitId":"swayongshen"},"content":"* Delete a shortcut named `ls` in the shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":607,"author":{"gitId":"swayongshen"},"content":"    * `deleteshortcut ls`","lastModifiedDate":"2021-04-01"},{"lineNumber":608,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":609,"author":{"gitId":"swayongshen"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-01"},{"lineNumber":610,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":611,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":612,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":613,"author":{"gitId":"swayongshen"},"content":"### `listshortcut`: List all shortcuts","lastModifiedDate":"2021-04-01"},{"lineNumber":614,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":615,"author":{"gitId":"swayongshen"},"content":"**Purpose**: Lists all shortcuts in the existing shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":616,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":617,"author":{"gitId":"swayongshen"},"content":"**Format**: `listshortcut`","lastModifiedDate":"2021-04-01"},{"lineNumber":618,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":619,"author":{"gitId":"swayongshen"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-01"},{"lineNumber":620,"author":{"gitId":"swayongshen"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":621,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":622,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":623,"author":{"gitId":"swayongshen"},"content":"### `clearshortcut`: Clear all shortcuts","lastModifiedDate":"2021-04-01"},{"lineNumber":624,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":625,"author":{"gitId":"swayongshen"},"content":"**Purpose**: Clears all shortcuts in the existing shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":626,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":627,"author":{"gitId":"swayongshen"},"content":"**Format**: `clearshortcut`","lastModifiedDate":"2021-04-01"},{"lineNumber":628,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":629,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":630,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":631,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"jlxw48"},"content":"### `lock`: Lock ClientBook with a user-selected password ","lastModifiedDate":"2021-03-24"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Locks ClientBook with a user-selected password.","lastModifiedDate":"2021-03-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"jlxw48"},"content":"**Format**: `lock [CURRENT_PASSWORD] [NEW_PASSWORD]`","lastModifiedDate":"2021-03-23"},{"lineNumber":638,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":639,"author":{"gitId":"swayongshen"},"content":"* Verifies the current password before locking ClientBook with the new password.","lastModifiedDate":"2021-03-11"},{"lineNumber":640,"author":{"gitId":"swayongshen"},"content":"* The `CURRENT_PASSWORD` field can be omitted if ClientBook is not yet locked.","lastModifiedDate":"2021-03-14"},{"lineNumber":641,"author":{"gitId":"jlxw48"},"content":"* When `CURRENT_PASSWORD` and `NEW_PASSWORD` fields are both omitted, ClientBook will attempt to lock itself using the last used password that is safely stored on your device.","lastModifiedDate":"2021-03-23"},{"lineNumber":642,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":643,"author":{"gitId":"jlxw48"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":644,"author":{"gitId":"jlxw48"},"content":":exclamation: **Note**: After setting a password, ClientBook can only be launched through Command Prompt or Terminal.","lastModifiedDate":"2021-03-24"},{"lineNumber":645,"author":{"gitId":"jlxw48"},"content":"  * Refer to [Quick Start](#quick-start) on how to launch the application through Command Prompt or Terminal.","lastModifiedDate":"2021-03-24"},{"lineNumber":646,"author":{"gitId":"jlxw48"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":647,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":648,"author":{"gitId":"jlxw48"},"content":"**Examples**:","lastModifiedDate":"2021-03-23"},{"lineNumber":649,"author":{"gitId":"jlxw48"},"content":"* Lock ClientBook with password `123`.","lastModifiedDate":"2021-03-23"},{"lineNumber":650,"author":{"gitId":"jlxw48"},"content":"  * `lock 123`","lastModifiedDate":"2021-03-23"},{"lineNumber":651,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":652,"author":{"gitId":"jlxw48"},"content":"    ![lock 123](images/lock-new-pw.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":653,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":654,"author":{"gitId":"jlxw48"},"content":"* Change ClientBook\u0027s password from `123` to `456`.","lastModifiedDate":"2021-03-24"},{"lineNumber":655,"author":{"gitId":"jlxw48"},"content":"  * `lock 123 456`","lastModifiedDate":"2021-03-23"},{"lineNumber":656,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":657,"author":{"gitId":"jlxw48"},"content":"    ![lock 456](images/lock-update-pw.png)    ","lastModifiedDate":"2021-03-23"},{"lineNumber":658,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":659,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":660,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":661,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":662,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":663,"author":{"gitId":"jlxw48"},"content":"### `unlock`: Unlock ClientBook ","lastModifiedDate":"2021-03-24"},{"lineNumber":664,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":665,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Unlocks ClientBook.","lastModifiedDate":"2021-03-23"},{"lineNumber":666,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":667,"author":{"gitId":"jlxw48"},"content":"**Format**: `unlock CURRENT_PASSWORD`","lastModifiedDate":"2021-03-23"},{"lineNumber":668,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":669,"author":{"gitId":"swayongshen"},"content":"* Verifies the current password before unlocking ClientBook.","lastModifiedDate":"2021-03-11"},{"lineNumber":670,"author":{"gitId":"jlxw48"},"content":"* ClientBook\u0027s password is removed after executing this command. After executing this command, future launches of ClientBook will not require a password.","lastModifiedDate":"2021-03-24"},{"lineNumber":671,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":672,"author":{"gitId":"jlxw48"},"content":"**Examples**:","lastModifiedDate":"2021-03-23"},{"lineNumber":673,"author":{"gitId":"jlxw48"},"content":"* Unlock ClientBook with wrong password `123`.","lastModifiedDate":"2021-03-23"},{"lineNumber":674,"author":{"gitId":"jlxw48"},"content":"    * `unlock 123`","lastModifiedDate":"2021-03-23"},{"lineNumber":675,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":676,"author":{"gitId":"jlxw48"},"content":"      ![unlock 123](images/unlock-wrong-pw.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":677,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":678,"author":{"gitId":"jlxw48"},"content":"* Unlock ClientBook with correct password `456`.","lastModifiedDate":"2021-03-23"},{"lineNumber":679,"author":{"gitId":"jlxw48"},"content":"    * `unlock 456`","lastModifiedDate":"2021-03-23"},{"lineNumber":680,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":681,"author":{"gitId":"jlxw48"},"content":"      ![unlock 456](images/unlock-correct-pw.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":682,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":683,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":684,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":685,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":686,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":687,"author":{"gitId":"jlxw48"},"content":"### `exit`: Exiting the program ","lastModifiedDate":"2021-03-24"},{"lineNumber":688,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":689,"author":{"gitId":"jlxw48"},"content":"**Purpose**: Exits the program.","lastModifiedDate":"2021-03-23"},{"lineNumber":690,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":691,"author":{"gitId":"jlxw48"},"content":"**Format**: `exit`","lastModifiedDate":"2021-03-23"},{"lineNumber":692,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":693,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":694,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":695,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":696,"author":{"gitId":"swayongshen"},"content":"### Keyboard commands","lastModifiedDate":"2021-03-30"},{"lineNumber":697,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":698,"author":{"gitId":"swayongshen"},"content":"**Purpose**: We note that continuously typing the same command keywords can become tiresome. Hence, we have provided ","lastModifiedDate":"2021-03-27"},{"lineNumber":699,"author":{"gitId":"swayongshen"},"content":"[keyboard commands](#summary-of-keyboard-commands) which when pressed, will fill in the command keyword for you.","lastModifiedDate":"2021-03-30"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"jlxw48"},"content":"### Saving data","lastModifiedDate":"2021-03-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"jlxw48"},"content":"**Purpose**: ClientBook saves its data to a file in the home folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-03-24"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":705,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":706,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":707,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":708,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":709,"author":{"gitId":"jlxw48"},"content":"### Editing data file","lastModifiedDate":"2021-03-23"},{"lineNumber":710,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":711,"author":{"gitId":"jlxw48"},"content":"**Purpose**: ClientBook saves its data as a JSON file `[JAR file location]/data/clientbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-03-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":713,"author":{"gitId":"jlxw48"},"content":"* The data file is stored in a zip file inside the `data` folder in the same folder. ","lastModifiedDate":"2021-03-24"},{"lineNumber":714,"author":{"gitId":"jlxw48"},"content":"* If you previously set a `lock` for ClientBook, the zip folder can be unzipped with that same password.","lastModifiedDate":"2021-03-24"},{"lineNumber":715,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":716,"author":{"gitId":"jlxw48"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":717,"author":{"gitId":"jlxw48"},"content":":exclamation: **Caution**:","lastModifiedDate":"2021-03-24"},{"lineNumber":718,"author":{"gitId":"jlxw48"},"content":"If your changes to the data file makes its format invalid, **all your data will be lost** at the next run.","lastModifiedDate":"2021-03-24"},{"lineNumber":719,"author":{"gitId":"jlxw48"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":720,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":721,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":722,"author":{"gitId":"jlxw48"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":723,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":725,"author":{"gitId":"jlxw48"},"content":"### Upcoming features (v2.0 and beyond!)","lastModifiedDate":"2021-03-23"},{"lineNumber":726,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":727,"author":{"gitId":"jlxw48"},"content":"* Archiving data files","lastModifiedDate":"2021-03-23"},{"lineNumber":728,"author":{"gitId":"jlxw48"},"content":"* Customisable user interface","lastModifiedDate":"2021-03-23"},{"lineNumber":729,"author":{"gitId":"jlxw48"},"content":"* Login interface","lastModifiedDate":"2021-03-24"},{"lineNumber":730,"author":{"gitId":"jlxw48"},"content":"* And more!","lastModifiedDate":"2021-03-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":733,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":734,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"jlxw48"},"content":"## Frequently Asked Questions","lastModifiedDate":"2021-03-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"jlxw48"},"content":"### Setting Up","lastModifiedDate":"2021-03-23"},{"lineNumber":738,"author":{"gitId":"jlxw48"},"content":"**Q**: How do I check that Java is installed on my laptop?\u003cbr\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":739,"author":{"gitId":"jlxw48"},"content":"**A**: Launch Command Prompt (for Windows) or Terminal (for Mac OS/Linux) and enter the following command: `java -version`.","lastModifiedDate":"2021-03-23"},{"lineNumber":740,"author":{"gitId":"jlxw48"},"content":"If you get an error message (`Java command not found`), it means that Java is not installed on your laptop.\u003cbr\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":741,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":742,"author":{"gitId":"jlxw48"},"content":"**Q**: How do I install Java?\u003cbr\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":743,"author":{"gitId":"jlxw48"},"content":"**A**: Head over to the official Java website [here](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html), and download the appropriate file for your system!","lastModifiedDate":"2021-03-23"},{"lineNumber":744,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":745,"author":{"gitId":"jlxw48"},"content":"**Q**: How do I transfer my data to another laptop?\u003cbr\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":746,"author":{"gitId":"jlxw48"},"content":"**A**: Copy the entire home folder (with all the files inside) over to the other laptop! It\u0027s as simple as that!","lastModifiedDate":"2021-03-23"},{"lineNumber":747,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":748,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":749,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":750,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"jlxw48"},"content":"## Summary of Commands","lastModifiedDate":"2021-03-24"},{"lineNumber":753,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":754,"author":{"gitId":"jlxw48"},"content":"| Action | Format | Example |","lastModifiedDate":"2021-03-24"},{"lineNumber":755,"author":{"gitId":"jlxw48"},"content":"| --------|------------------ | --- |","lastModifiedDate":"2021-03-24"},{"lineNumber":756,"author":{"gitId":"jlxw48"},"content":"[**Help**](#viewing-help--help) | `help` | `help` |","lastModifiedDate":"2021-03-24"},{"lineNumber":757,"author":{"gitId":"jlxw48"},"content":"[**Add**](#add-client-contact-add) | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [i/POLICY_ID] [t/TAG]…​` | `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 i/Policy_1023 t/premium t/lifeinsurance` |","lastModifiedDate":"2021-03-24"},{"lineNumber":758,"author":{"gitId":"jlxw48"},"content":"[**Edit**](#edit-client-contact-edit) | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [i/POLICY_NUMBER]…​ [t/TAG]…​` | `edit 2 n/James Lee e/jameslee@example.com` |","lastModifiedDate":"2021-03-24"},{"lineNumber":759,"author":{"gitId":"swayongshen"},"content":"[**List**](#list-all-clients--list) | `list [-IDENTIFIER]` | `list -i` |","lastModifiedDate":"2021-04-01"},{"lineNumber":760,"author":{"gitId":"swayongshen"},"content":"[**Find**](#search-for-client-contact-based-on-keywords-find) | `find IDENTIFIER/KEYWORD [\u0026 KEYWORDS]…​ [-IDENTIFIER]…​` | `find a/Bedok \u0026 Clementi -p` |","lastModifiedDate":"2021-04-01"},{"lineNumber":761,"author":{"gitId":"jlxw48"},"content":"[**Policy**](#display-policies-associated-with-selected-client-policy) | `policy INDEX` | `policy 4` |","lastModifiedDate":"2021-03-24"},{"lineNumber":762,"author":{"gitId":"jlxw48"},"content":"[**Delete**](#delete-client-delete) | `delete INDEX` | `delete 3` |","lastModifiedDate":"2021-03-24"},{"lineNumber":763,"author":{"gitId":"swayongshen"},"content":"[**Batch**](#batch-execute-commands-in-batch) | `batch COMMAND INDICES [ARGUMENTS]` | `batch edit 1, 2, 4 p/91234567 a/Hougang Green t/TanFamily i/FamPol#111` |","lastModifiedDate":"2021-04-01"},{"lineNumber":764,"author":{"gitId":"swayongshen"},"content":"[**Sort**](#sort-list-of-clients-sort) | `sort -IDENTIFIER -DIRECTION` | `sort -n -d` |","lastModifiedDate":"2021-04-01"},{"lineNumber":765,"author":{"gitId":"swayongshen"},"content":"[**Meet**](#schedule-a-meeting-with-a-client-meet) | `meet INDEX [-ACTION] DATE START END PLACE` | `meet 1 20.05.2021 15:00 16:00 MRT` |","lastModifiedDate":"2021-04-01"},{"lineNumber":766,"author":{"gitId":"swayongshen"},"content":"[**Add Shortcut**](#addshortcut-add-shortcut) | `addshortcut sn/SHORTCUT_NAME sc/SHORTCUT_COMMAND` | `addshortcut sn/ls sc/listshortcut` |","lastModifiedDate":"2021-04-01"},{"lineNumber":767,"author":{"gitId":"swayongshen"},"content":"[**Edit Shortcut**](#editshortcut-edit-shortcut) | `editshortcut sn/SHORTCUT_NAME sc/SHORTCUT_COMMAND` | `editshortcut sn/ls sc/list` |","lastModifiedDate":"2021-04-01"},{"lineNumber":768,"author":{"gitId":"swayongshen"},"content":"[**Delete Shortcut**](#deleteshortcut-delete-shortcut) | `deleteshortcut SHORTCUT_NAME` | `deleteshortcut ls` |","lastModifiedDate":"2021-04-01"},{"lineNumber":769,"author":{"gitId":"swayongshen"},"content":"[**List Shortcuts**](#listshortcut-list-all-shortcuts) | `listshortcut` | `listshortcut` |","lastModifiedDate":"2021-04-01"},{"lineNumber":770,"author":{"gitId":"swayongshen"},"content":"[**Clear Shortcuts**](#clearshortcut-clear-all-shortcuts) | `clearshortcut` | `clearshortcut` |","lastModifiedDate":"2021-04-01"},{"lineNumber":771,"author":{"gitId":"jlxw48"},"content":"[**Lock**](#lock-clientbook-with-a-user-selected-password-lock) | `lock [CURRENT_PASSWORD] NEW_PASSWORD` | `lock 123 456` |","lastModifiedDate":"2021-03-24"},{"lineNumber":772,"author":{"gitId":"jlxw48"},"content":"[**Unlock**](#unlock-clientbook--unlock) | `unlock [CURRENT_PASSWORD]` | `unlock 456` |","lastModifiedDate":"2021-03-24"},{"lineNumber":773,"author":{"gitId":"jlxw48"},"content":"[**Exit**](#exiting-the-program--exit) | `exit` | `exit` |","lastModifiedDate":"2021-03-24"},{"lineNumber":774,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":775,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"},{"lineNumber":776,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":777,"author":{"gitId":"swayongshen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-01"},{"lineNumber":778,"author":{"gitId":"swayongshen"},"content":"## Summary of Keyboard Commands","lastModifiedDate":"2021-03-30"},{"lineNumber":779,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":780,"author":{"gitId":"swayongshen"},"content":"| Shortcut | Output |","lastModifiedDate":"2021-03-27"},{"lineNumber":781,"author":{"gitId":"swayongshen"},"content":"| --------|------------------ |","lastModifiedDate":"2021-03-27"},{"lineNumber":782,"author":{"gitId":"swayongshen"},"content":"CTRL + A | `add` |","lastModifiedDate":"2021-03-27"},{"lineNumber":783,"author":{"gitId":"swayongshen"},"content":"CTRL + D | `delete` |","lastModifiedDate":"2021-03-27"},{"lineNumber":784,"author":{"gitId":"swayongshen"},"content":"CTRL + E | `edit` |","lastModifiedDate":"2021-03-27"},{"lineNumber":785,"author":{"gitId":"swayongshen"},"content":"CTRL + F | `find` |","lastModifiedDate":"2021-03-27"},{"lineNumber":786,"author":{"gitId":"swayongshen"},"content":"CTRL + L | `list` |","lastModifiedDate":"2021-03-27"},{"lineNumber":787,"author":{"gitId":"swayongshen"},"content":"CTRL + S | `sort` |","lastModifiedDate":"2021-03-27"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":789,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-01"},{"lineNumber":790,"author":{"gitId":"swayongshen"},"content":"## Glossary","lastModifiedDate":"2021-04-01"},{"lineNumber":791,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":792,"author":{"gitId":"swayongshen"},"content":"1. **CLI** (Command Line Interface) A text box like interface which allows a user to enter and execute commands.","lastModifiedDate":"2021-04-02"},{"lineNumber":793,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":794,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":795,"author":{"gitId":"swayongshen"},"content":"2. **GUI** (Graphical user interface) A form of user interface with graphical features such as icons that allows a user to interact with our program.","lastModifiedDate":"2021-04-01"},{"lineNumber":796,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":797,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":798,"author":{"gitId":"swayongshen"},"content":"3. **UI** (User Interface) An interface for a user to interact with a program.","lastModifiedDate":"2021-04-02"},{"lineNumber":799,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":800,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":801,"author":{"gitId":"swayongshen"},"content":"4. **Java** A programming language and computing platform that is used to run ClientBook.","lastModifiedDate":"2021-04-02"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":804,"author":{"gitId":"swayongshen"},"content":"5. **Command Prompt** A command line interpreter application on the Windows operating system.","lastModifiedDate":"2021-04-02"},{"lineNumber":805,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":806,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":807,"author":{"gitId":"swayongshen"},"content":"6. **Terminal** A command line interpreter application on MacOS/Linux operating systems.","lastModifiedDate":"2021-04-02"},{"lineNumber":808,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":809,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":810,"author":{"gitId":"swayongshen"},"content":"7. **Attribute** The types of information you can store in ClientBook. E.g. phone number, address, name of your clients.","lastModifiedDate":"2021-04-02"},{"lineNumber":811,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":812,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":813,"author":{"gitId":"swayongshen"},"content":"8. **Identifier** The alphabetical letter associated with an attribute.","lastModifiedDate":"2021-04-02"},{"lineNumber":814,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":815,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":816,"author":{"gitId":"swayongshen"},"content":"9. **JSON** (JavaScript Object Notation) A format for storing and transporting data.","lastModifiedDate":"2021-04-01"},{"lineNumber":817,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":818,"author":{"gitId":"swayongshen"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-01"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":820,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":822,"author":{"gitId":"jlxw48"},"content":"## Contact Us","lastModifiedDate":"2021-03-23"},{"lineNumber":823,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":824,"author":{"gitId":"jlxw48"},"content":"Didn\u0027t find what you were looking for? Contact us at [clientbook@email.com](clientbook@email.com).","lastModifiedDate":"2021-03-23"},{"lineNumber":825,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":826,"author":{"gitId":"jlxw48"},"content":"ClientBook is still a work in progress and we hope to be able to further improve ClientBook to suit your needs. ","lastModifiedDate":"2021-03-23"},{"lineNumber":827,"author":{"gitId":"jlxw48"},"content":"Should you have any suggestions, feel free to drop us an email! ","lastModifiedDate":"2021-03-23"},{"lineNumber":828,"author":{"gitId":"jlxw48"},"content":"We would love to hear from you insurance agents who are actively out and about, providing us with the best services.","lastModifiedDate":"2021-03-23"},{"lineNumber":829,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":830,"author":{"gitId":"jlxw48"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"NBH99":5,"swayongshen":360,"-":115,"jlxw48":345,"jay9645":5}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"swayongshen"},"content":"    content: \"ClientBook\";","lastModifiedDate":"2021-04-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"swayongshen":1,"-":294}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"participant \":ClientBookParser\" as ClientBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"LogicManager -\u003e ClientBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"activate ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"ClientBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"DeleteCommandParser --\u003e ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"ClientBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"DeleteCommandParser --\u003e ClientBookParser : d","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"DeleteCommandParser -[hidden]-\u003e ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"ClientBookParser --\u003e LogicManager : d","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"deactivate ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":59,"jay9645":10}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"@startuml","lastModifiedDate":"2021-04-03"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"!include style.puml","lastModifiedDate":"2021-04-03"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"participant \":ClientBookParser\" as ClientBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"participant \"p:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"end box","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-03"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-03"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2021-04-03"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"end box","lastModifiedDate":"2021-04-03"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"[-\u003e LogicManager : execute(\"edit 1 i/P123 -insert\")","lastModifiedDate":"2021-04-03"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"activate LogicManager","lastModifiedDate":"2021-04-03"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"LogicManager -\u003e ClientBookParser : parseCommand(\"edit 1 i/P123 -insert\")","lastModifiedDate":"2021-04-03"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"activate ClientBookParser","lastModifiedDate":"2021-04-03"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"create EditCommand","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"ClientBookParser -\u003e EditCommand","lastModifiedDate":"2021-04-03"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"activate EditCommand","lastModifiedDate":"2021-04-03"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"EditCommand --\u003e ClientBookParser : e","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"deactivate EditCommand","lastModifiedDate":"2021-04-03"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-03"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"EditCommand -[hidden]-\u003e ClientBookParser","lastModifiedDate":"2021-04-03"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"ClientBookParser --\u003e LogicManager : e","lastModifiedDate":"2021-04-03"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"deactivate ClientBookParser","lastModifiedDate":"2021-04-03"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2021-04-03"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"activate EditCommand","lastModifiedDate":"2021-04-03"},{"lineNumber":37,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"create Person","lastModifiedDate":"2021-04-03"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"EditCommand -\u003e Person : createEditedPerson()","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"activate Person","lastModifiedDate":"2021-04-03"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"Person --\u003e EditCommand :editedPerson","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"deactivate Person","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"EditCommand -\u003e Model : setPerson(p)","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"activate Model","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"Model -\u003e AddressBook : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2021-04-03"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"activate AddressBook","lastModifiedDate":"2021-04-03"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2021-04-03"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"deactivate AddressBook","lastModifiedDate":"2021-04-03"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2021-04-03"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"deactivate Model","lastModifiedDate":"2021-04-03"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-03"},{"lineNumber":58,"author":{"gitId":"jay9645"},"content":"deactivate EditCommand","lastModifiedDate":"2021-04-03"},{"lineNumber":59,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-03"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-03"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"@enduml","lastModifiedDate":"2021-04-03"}],"authorContributionMap":{"jay9645":62}},{"path":"docs/diagrams/LockSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"swayongshen"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"!include style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"swayongshen"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"swayongshen"},"content":"participant \"u:LockCommand\" as LockCommand LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"swayongshen"},"content":"participant \":Authentication\" as Authentication STORAGE_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"swayongshen"},"content":"[-\u003e LogicManager : execute(lock 1234)","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"swayongshen"},"content":"activate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(lock 1234)","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"swayongshen"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"swayongshen"},"content":"create LockCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"swayongshen"},"content":"AddressBookParser -\u003e LockCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"swayongshen"},"content":"activate LockCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"swayongshen"},"content":"LockCommand --\u003e AddressBookParser","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"swayongshen"},"content":"deactivate LockCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"swayongshen"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"swayongshen"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"LogicManager -\u003e LockCommand : execute()","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"swayongshen"},"content":"activate LockCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"swayongshen"},"content":"LockCommand -\u003e Authentication : setPassword(1234)","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"swayongshen"},"content":"activate Authentication","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"swayongshen"},"content":"Authentication --\u003e LockCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"swayongshen"},"content":"deactivate Authentication","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"swayongshen"},"content":"LockCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"swayongshen"},"content":"deactivate LockCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"swayongshen"},"content":"LockCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"swayongshen"},"content":"destroy LockCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"swayongshen"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"swayongshen"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"swayongshen"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"swayongshen":45}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"Class ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"LogicManager --\u003e\"1\" ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"ClientBookParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"XYZCommandParser ..\u003e XYZCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"XYZCommand *-left-\u003e \"*\" XYZCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"jlxw48"},"content":"note bottom of XYZCommand: Whole-part relationship only \\nvalid for BatchCommand (whole) and \\nEditCommand/DeleteCommand (part))","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"note right of XYZCommandParser: Association between XYZCommandParser \\nand XYZCommandParser is only relevant \\nfor BatchCommandParser and \\nEditCommandParser/DeleteCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":59,"jay9645":3,"jlxw48":5}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"Interface ModifiableAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"Class ModifiableAddressBook","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Package Person {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"swayongshen"},"content":"Package InsurancePolicy {","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"Class InsurancePolicy","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"swayongshen"},"content":"}","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"AddressBook .up.|\u003e ModifiableAddressBook","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2019-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UniquePersonList o--\u003e \"*\" Person","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"swayongshen"},"content":"Person *--\u003e \"*\" InsurancePolicy","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ModelManager -----\u003e\" ~* filtered list\" Person","lastModifiedDate":"2021-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"NBH99":3,"swayongshen":5,"-":56}},{"path":"docs/diagrams/PolicyCommandDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"jlxw48"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"jlxw48"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"participant \":ClientBookParser\" as ClientBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"participant \":PolicyCommandParser\" as PolicyCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"participant \"p:PolicyCommand\" as PolicyCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"participant \"result :CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"box Person MODEL_COLOR_T1","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":"[-\u003e LogicManager : execute(\"policy 1\")","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"activate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"LogicManager -\u003e ClientBookParser : parseCommand(\"policy 1\")","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"activate ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":"create PolicyCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"ClientBookParser -\u003e PolicyCommandParser","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"activate PolicyCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"PolicyCommandParser --\u003e ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"deactivate PolicyCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"ClientBookParser -\u003e PolicyCommandParser : parse(\"1\")","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"activate PolicyCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"create PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"jlxw48"},"content":"PolicyCommandParser -\u003e PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"jlxw48"},"content":"activate PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"jlxw48"},"content":"PolicyCommand --\u003e PolicyCommandParser : p","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"deactivate PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"PolicyCommandParser --\u003e ClientBookParser : p","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"deactivate PolicyCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"PolicyCommandParser -[hidden]-\u003e ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"jlxw48"},"content":"destroy PolicyCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"ClientBookParser --\u003e LogicManager : p","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"deactivate ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"jlxw48"},"content":"LogicManager -\u003e PolicyCommand : execute()","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"jlxw48"},"content":"activate PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"PolicyCommand -\u003e Person : hasPolicies( )","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"jlxw48"},"content":"activate Person","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"Person --\u003e PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"deactivate Person","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"jlxw48"},"content":"alt Person has no policies","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"    create CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"jlxw48"},"content":"    PolicyCommand -\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"jlxw48"},"content":"    activate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"jlxw48"},"content":"    CommandResult --\u003e PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"jlxw48"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"jlxw48"},"content":"else Person has policies","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"    PolicyCommand -\u003e Person : getPersonNameAndAllPoliciesInString( )","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"jlxw48"},"content":"    activate Person","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"jlxw48"},"content":"    Person --\u003e PolicyCommand : policiesAndUrls","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"jlxw48"},"content":"    deactivate Person","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"jlxw48"},"content":"    create CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"jlxw48"},"content":"    PolicyCommand -\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"jlxw48"},"content":"    activate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"jlxw48"},"content":"    CommandResult --\u003e PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"jlxw48"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"end","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"jlxw48"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"jlxw48"},"content":"PolicyCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"jlxw48"},"content":"deactivate PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"jlxw48"},"content":"destroy PolicyCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"jlxw48"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"jlxw48"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"jlxw48"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"jlxw48":79,"jay9645":10}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"participant \":ClientBookParser\" as ClientBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"end box","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"end box","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"[-\u003e LogicManager : execute(\"sort -n -a\")","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"activate LogicManager","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"LogicManager -\u003e ClientBookParser : parseCommand(\"sort -n -a\")","lastModifiedDate":"2021-04-03"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"activate ClientBookParser","lastModifiedDate":"2021-04-03"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"create SortCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"ClientBookParser -\u003e SortCommandParser","lastModifiedDate":"2021-04-03"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"activate SortCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"SortCommandParser --\u003e ClientBookParser","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"ClientBookParser -\u003e SortCommandParser : parse(\"-n -a\")","lastModifiedDate":"2021-04-03"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"activate SortCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"create SortCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"SortCommandParser -\u003e SortCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"activate SortCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"SortCommand --\u003e SortCommandParser : s","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"deactivate SortCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"SortCommandParser --\u003e ClientBookParser : s","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"SortCommandParser -[hidden]-\u003e ClientBookParser","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"destroy SortCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"ClientBookParser --\u003e LogicManager : s","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"deactivate ClientBookParser","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"activate SortCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"SortCommand -\u003e Model : updateSortedPersonList(comparator)","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"activate Model","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"deactivate Model","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"create CommandResult","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"activate CommandResult","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"CommandResult --\u003e SortCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"deactivate SortCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"@enduml","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"NBH99":59,"jay9645":10}},{"path":"docs/diagrams/SortState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"title Initial state","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"@end","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"NBH99":15}},{"path":"docs/diagrams/SortState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"title After command \"sort -n -a\"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"note right on link: State ab0 modified.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"@end","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"NBH99":16}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"Class Authentication","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"StorageManager o--\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .left.|\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .down.\u003e JsonSerializableAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"JsonSerializableAddressBookStorage .right.\u003e JsonSerializablePerson","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"JsonSerializablePerson .right.\u003e JsonAdaptedTag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"JsonSerializablePerson .up.\u003e JsonAdaptedInsurancePolicy","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":24,"jay9645":2}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"title After command \"batch delete\"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab3:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wongkokian":2,"-":19}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"participant \":ClientBookParser\" as ClientBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"LogicManager -\u003e ClientBookParser : parseCommand(undo)","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"activate ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"ClientBookParser -\u003e UndoCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"UndoCommand --\u003e ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"ClientBookParser --\u003e LogicManager : u","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"deactivate ClientBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UndoCommand -\u003e Model : undoAddressBook()","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model -\u003e VersionedAddressBook : undo()","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"activate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"VersionedAddressBook -\u003e VersionedAddressBook :resetData(ReadOnlyAddressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"VersionedAddressBook --\u003e Model :","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":46,"jay9645":7}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"title: ClientBook","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W15-2/tp/actions)","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W15-2/tp/branch/master/graph/badge.svg?token\u003dALm93E5HmQ)](https://codecov.io/gh/AY2021S2-CS2103T-W15-2/tp)","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"**ClientBook is a desktop application for managing your clients\u0027 contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"* If you are interested in using ClientBook, head over to the [**User Guide**](https://ay2021s2-cs2103t-w15-2.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"* If you are interested about developing ClientBook, the [**Developer Guide**](https://ay2021s2-cs2103t-w15-2.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"swayongshen"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [zip4j](https://github.com/srikanth-lingala/zip4j)","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"wongkokian":3,"swayongshen":1,"-":12,"jlxw48":3}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"import seedu.address.storage.JsonShortcutLibraryStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"import seedu.address.storage.ShortcutLibraryStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"jay9645"},"content":"        Authentication authentication \u003d new Authentication(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"        if (authentication.isExistsZip()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"            //Delay for 1 second so that password prompt will be last message in terminal.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"            Thread.sleep(2000);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"            authentication.unlock();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"        authentication.setShutDownHook();","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibraryStorage shortcutLibraryStorage \u003d new JsonShortcutLibraryStorage(","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"                userPrefs.getShortcutLibraryFilePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, shortcutLibraryStorage);","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"jay9645"},"content":"        model \u003d initModelManager(storage, userPrefs, authentication);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs, Authentication authentication) {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"        Optional\u003cShortcutLibrary\u003e shortcutLibraryOptional;","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary initialLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"            shortcutLibraryOptional \u003d storage.readShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"            if (shortcutLibraryOptional.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"                logger.info(\"Shortcut library file not found. Will be starting with a empty ShortcutLibrary\");","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"            initialLibrary \u003d shortcutLibraryOptional.orElseGet(ShortcutLibrary::new);","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"            logger.warning(\"Shortcut library file not in the correct format. \"","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"                    + \"Will be starting with an empty ShortcutLibrary\");","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"            initialLibrary \u003d new ShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ShortcutLibrary\");","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"            initialLibrary \u003d new ShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"wongkokian"},"content":"        return new ModelManager(initialData, userPrefs, authentication, initialLibrary);","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wongkokian":28,"-":177,"jay9645":13}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_SHORTCUT_NAME_NOT_EXIST \u003d \"The shortcut name provided does not exist\";","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wongkokian":1,"-":12}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"    public int compareTo(Index o) {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"jlxw48"},"content":"        return Integer.compare(zeroBasedIndex, o.zeroBasedIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"jlxw48":6}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //@@author wongkokian-reused","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Counts how many times the substring appears in the larger string.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Note that the code only counts non-overlapping matches.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * A {@code null} or empty (\"\") String input returns {@code 0}.","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * StringUtil.countMatches(null, *)       \u003d 0","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * StringUtil.countMatches(\"\", *)         \u003d 0","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * StringUtil.countMatches(\"abba\", null)  \u003d 0","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * StringUtil.countMatches(\"abba\", \"\")    \u003d 0","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * StringUtil.countMatches(\"abba\", \"a\")   \u003d 2","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * StringUtil.countMatches(\"abba\", \"ab\")  \u003d 1","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * StringUtil.countMatches(\"abba\", \"xxx\") \u003d 0","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * StringUtil.countMatches(\"ababa\", \"aba\") \u003d 1","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param string  the String to check, may be null","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param substring  the substring to count, may be null","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the number of occurrences, 0 if either String is {@code null}","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static int countMatches(String string, String substring) {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (string.isEmpty() || substring.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        while ((index \u003d string.indexOf(substring, index)) !\u003d -1) { // indexOf returns -1 when there are no more matches","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            count++;","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            index +\u003d substring.length();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return count;","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":101,"jay9645":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"     * Returns the ShortcutLibrary.","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"     * @see seedu.address.model.Model#getShortcutLibrary()","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    ShortcutLibrary getShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"     * Returns the user prefs\u0027 shortcut library file path.","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"    Path getShortcutLibraryFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wongkokian":13,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.parser.ClientBookParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"    private ClientBookParser clientBookParser;","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"    private boolean isListModified;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"        clientBookParser \u003d new ClientBookParser(model.getShortcutLibrary());","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"        this.isListModified \u003d false;","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"    private boolean isListModifiedByCommand(Command command) {","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"        boolean isListCommandWithAttributes \u003d command instanceof ListCommand","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"                \u0026\u0026 ((ListCommand) command).isAttributeSpecified();","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"        boolean isFindCommandWithAttributes \u003d command instanceof FindCommand","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"                \u0026\u0026 ((FindCommand) command).isAttributeSpecified();","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"        return isFindCommandWithAttributes || isListCommandWithAttributes;","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"    private void updateClientBookParser(ShortcutLibrary shortcutLibrary) {","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"        this.clientBookParser \u003d new ClientBookParser(shortcutLibrary);","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"        if (isListModified) {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"            model.undoListModification();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"        Command command \u003d clientBookParser.parseCommand(commandText);","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"            if (isListModifiedByCommand(command)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"                this.isListModified \u003d true;","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"jay9645"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"jay9645"},"content":"        this.updateClientBookParser(model.getShortcutLibrary());","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"            this.storage.saveShortcutLibrary(model.getShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"    public ShortcutLibrary getShortcutLibrary() {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"        return model.getShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"    public Path getShortcutLibraryFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"        return model.getShortcutLibraryFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wongkokian":14,"-":84,"jay9645":27}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"swayongshen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE_POLICY;","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the client book. \"","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"swayongshen"},"content":"            + \"[\" + PREFIX_INSURANCE_POLICY + \"POLICY_ID] \"","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"swayongshen"},"content":"            + PREFIX_INSURANCE_POLICY + \"P12345 \"","lastModifiedDate":"2021-02-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This client already exists in the client book\";","lastModifiedDate":"2021-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"swayongshen":3,"-":64,"jay9645":3}},{"path":"src/main/java/seedu/address/logic/commands/AddShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" * Adds a shortcut to the existing shortcut library.","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"public class AddShortcutCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    public static final String COMMAND_WORD \u003d \"addshortcut\";","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"            + \": Adds a shortcut to the shortcut library.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"            + \"Parameters: sn/SHORTCUT_NAME (must be an existing shortcut name) \"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"            + \"sc/SHORTCUT_COMMAND (must be a valid command)\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"            + \"Example: \" + COMMAND_WORD + \" sn/sna sc/sort -n -asc\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New shortcut added: %1$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_DUPLICATE_SHORTCUT \u003d \"This shortcut name already exists in the shortcut library\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    private final Shortcut shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public AddShortcutCommand(String shortcutName, String shortcutCommand) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        this.shortcut \u003d new Shortcut(shortcutName, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        if (model.hasShortcut(shortcut.getShortcutName())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SHORTCUT);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        model.addShortcut(shortcut.getShortcutName(), shortcut.getShortcutCommand());","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, shortcut));","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"                || (other instanceof AddShortcutCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 shortcut.equals(((AddShortcutCommand) other).shortcut));","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":48}},{"path":"src/main/java/seedu/address/logic/commands/BatchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":" * Handles all execution of {@code BatchCommand} as well as for {@code EditCommand} or {@code DeleteCommand}.","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":" *","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":" * @param \u003cT\u003e the type of {@code Command} that will be executed by {@code BatchCommand}","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jlxw48"},"content":"public class BatchCommand\u003cT extends Command\u003e extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jlxw48"},"content":"    public static final String COMMAND_WORD \u003d \"batch\";","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":"            + \": Batch operation for all the listed clients.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"            + \"The same rules apply here, just like for the individual commands.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"            + \"Parameters: COMMAND (only edit or delete command are supported) \"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"            + \"ARGUMENTS (for the chosen command)\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"            + \"Example: \" + COMMAND_WORD + \" edit 1, 2 t/colleagues\";","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"Batch operation successful!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"    public static final String ERROR_MESSAGE \u003d \"Batch operation halted. Error message from batch command: \\n%s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"    private final List\u003cT\u003e listOfCommands;","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"jlxw48"},"content":"     * Creates a {@code BatchCommand} with a {@code List} of {@code EditCommands} or {@code DeleteCommands} to execute.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"     * @param listOfCommands {@code List} of {@code EditCommands} or {@code DeleteCommands} to execute","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"jlxw48"},"content":"    public BatchCommand(List\u003cT\u003e listOfCommands) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"        this.listOfCommands \u003d listOfCommands;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"     * Executes the individual commands on a copy to ensure that there are no errors, before proceeding to","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"jlxw48"},"content":"     * execute the commands on the real model.","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jlxw48"},"content":"     * @return {@code CommandResult} with the successful feedback message.","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jlxw48"},"content":"     * @throws CommandException when are are exceptions thrown by any of the individual commands.","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"jlxw48"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"            // Execute on the copy first to check for errors","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"            Model copy \u003d new ModelManager(model.getAddressBook(), model.getUserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"jlxw48"},"content":"            for (Command command : listOfCommands) {","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"jlxw48"},"content":"                command.execute(copy);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"jlxw48"},"content":"            // If successfully executed on copy, we can now execute on model without worrying about exceptions.","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"jlxw48"},"content":"            // Avoids having to maintain state/undo/redo functionality.","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"jlxw48"},"content":"            for (Command command : listOfCommands) {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"                CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"jlxw48"},"content":"                logger.info(\"Result of batch command: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"            return new CommandResult(SUCCESS_MESSAGE, false, false, false, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"jlxw48"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"jlxw48"},"content":"            throw new CommandException(String.format(ERROR_MESSAGE, e.getLocalizedMessage()));","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"jlxw48"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"jlxw48"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"jlxw48"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jlxw48"},"content":"        if (other instanceof BatchCommand) {","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"jlxw48"},"content":"            BatchCommand otherBatchCommand \u003d (BatchCommand) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"jlxw48"},"content":"            boolean areListsSame \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jlxw48"},"content":"            for (int i \u003d 0; i \u003c listOfCommands.size(); i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"jlxw48"},"content":"                Command fromMainList \u003d listOfCommands.get(i);","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"jlxw48"},"content":"                Command fromOtherList \u003d (Command) otherBatchCommand.listOfCommands.get(i);","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"jlxw48"},"content":"                areListsSame \u0026\u003d fromMainList.equals(fromOtherList);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"jlxw48"},"content":"            return areListsSame;","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"jlxw48"},"content":"        return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"jlxw48"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"wongkokian":3,"jlxw48":95}},{"path":"src/main/java/seedu/address/logic/commands/ClearShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" * Clears the Shortcut Library.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public class ClearShortcutCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public static final String COMMAND_WORD \u003d \"clearshortcut\";","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Shortcut library has been cleared!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        model.setShortcutLibrary(new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"    /** Policy information should be shown to the user. */","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"    private final boolean showPolicies;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    /** Shortcut Library should be shown to the user. */","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    private final boolean showShortcuts;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showPolicies, boolean showShortcuts,","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"                         boolean exit) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"        this.showPolicies \u003d showPolicies;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        this.showShortcuts \u003d showShortcuts;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        this(feedbackToUser, false, false, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"    public boolean isShowPolicies() {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"        return showPolicies;","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"    public boolean isShowShortcuts() {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        return showShortcuts;","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 showPolicies \u003d\u003d otherCommandResult.showPolicies","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 showShortcuts \u003d\u003d otherCommandResult.showShortcuts","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"        return Objects.hash(feedbackToUser, showHelp, showPolicies, showShortcuts, exit);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wongkokian":14,"-":68,"jay9645":8}},{"path":"src/main/java/seedu/address/logic/commands/CommandWord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":" * Collection of command words.","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"public enum CommandWord {","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"    ADD(\"add\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"    ADDSHORTCUT(\"addshortcut\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"    CLEAR(\"clear\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    CLEARSHORTCUT(\"clearshortcut\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    DELETESHORTCUT(\"deleteshortcut\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    EDIT(\"edit\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    EDITSHORTCUT(\"editshortcut\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    EXIT(\"exit\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    FIND(\"find\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    HELP(\"help\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    LISTSHORTCUT(\"listshortcut\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    LOCK(\"lock\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    POLICY(\"policy\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    SORT(\"sort\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    UNLOCK(\"unlock\");","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    private final String command;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    CommandWord(String command) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     * Returns true if {@code test} is contained in the values of CommandWord.","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    public static boolean contains(String test) {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        for (CommandWord c : CommandWord.values()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"            if (c.toString().equals(test)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    @Override public String toString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        return command;","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":46}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2021-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2021-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":51,"jay9645":2,"jlxw48":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" * Deletes a shortcut identified using it\u0027s shortcut name from the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"public class DeleteShortcutCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    public static final String COMMAND_WORD \u003d \"deleteshortcut\";","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"            + \": Deletes the shortcut identified by the shortcut name used in the shortcut library.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"            + \"Parameters: SHORTCUT_NAME (must be an existing shortcut name)\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"            + \"Example: \" + COMMAND_WORD + \" listshowpolicy\";","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_DELETE_SHORTCUT_SUCCESS \u003d \"Deleted Shortcut: %1$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    private final String shortcutName;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public DeleteShortcutCommand(String shortcutName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        this.shortcutName \u003d shortcutName;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary shortcutLibrary \u003d model.getShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        if (!shortcutLibrary.hasShortcut(shortcutName)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"            throw new CommandException(Messages.MESSAGE_SHORTCUT_NAME_NOT_EXIST);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        model.deleteShortcut(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SHORTCUT_SUCCESS, shortcutName));","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"                || (other instanceof DeleteShortcutCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 shortcutName.equals(((DeleteShortcutCommand) other).shortcutName)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":49}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"swayongshen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE_POLICY;","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-25"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2021-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"            + \"[\" + PREFIX_INSURANCE_POLICY + \" POLICY_ID] [-FLAG] where FLAG can be modify, insert or remove \"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"            + \"for editing policy ids. If no flag is specified, the default behaviour is replace.\"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"            + \"[\" + PREFIX_MEETING + \"MEETING]...\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2021-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"jlxw48"},"content":"    public static final String MESSAGE_NOT_EDITED_BATCH \u003d \"At least one field (tag or policy) to edit \"","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"jlxw48"},"content":"            + \"must be provided.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_MODIFY_POLICY_CONSTRAINT \u003d \"When -modify flag is indicated for editing policy,\"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"            + \" the format should be i/[TO_MODIFY];[TO_REPLACE]. \";","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_MODIFY_POLICY_NOT_FOUND \u003d \"The policy %s to modify or delete is not found!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"jlxw48"},"content":"    public static final String MESSAGE_EXCESS_BATCH_ARGUMENTS \u003d \"Batch edit can only edit tags or insurance policies.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"            + \"Please check that you have not entered other prefixes.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"    private final EditPolicyMode editPolicyMode;","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"jay9645"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor, EditPolicyMode editPolicyMode) {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"jay9645"},"content":"        this.editPolicyMode \u003d editPolicyMode;","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor, editPolicyMode);","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"jay9645"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor,","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"                                             EditPolicyMode editPolicyMode) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"jay9645"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone().get());","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"jay9645"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail().get());","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"jay9645"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress().get());","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"jay9645"},"content":"        List\u003cInsurancePolicy\u003e updatedPolicies;","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"jay9645"},"content":"        switch (editPolicyMode) {","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"jay9645"},"content":"        case REPLACE:","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"jay9645"},"content":"            updatedPolicies \u003d editPersonDescriptor.getPoliciesToAdd().orElse(personToEdit.getPolicies());","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"jay9645"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"jay9645"},"content":"        case MODIFY:","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"jay9645"},"content":"            List\u003cInsurancePolicy\u003e originalList \u003d personToEdit.getPolicies();","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"jay9645"},"content":"            List\u003cInsurancePolicy\u003e listToRemove \u003d editPersonDescriptor.getPoliciesToRemove().orElse(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"jay9645"},"content":"            List\u003cInsurancePolicy\u003e listToAdd \u003d editPersonDescriptor.getPoliciesToAdd().orElse(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"jay9645"},"content":"            updatedPolicies \u003d removeInsurancePolicies(originalList, listToRemove);","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"jay9645"},"content":"            updatedPolicies \u003d addInsurancePolicies(updatedPolicies, listToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"jay9645"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"jay9645"},"content":"        case APPEND:","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"jay9645"},"content":"            listToAdd \u003d editPersonDescriptor.getPoliciesToAdd().orElse(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"jay9645"},"content":"            updatedPolicies \u003d addInsurancePolicies(personToEdit.getPolicies(), listToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"jay9645"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"jay9645"},"content":"        case REMOVE:","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"jay9645"},"content":"            originalList \u003d personToEdit.getPolicies();","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"jay9645"},"content":"            listToRemove \u003d editPersonDescriptor.getPoliciesToRemove().orElse(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"jay9645"},"content":"            updatedPolicies \u003d removeInsurancePolicies(originalList, listToRemove);","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"jay9645"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"jay9645"},"content":"        default:","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"jay9645"},"content":"            throw new CommandException(EditPolicyMode.MESSAGE_EDIT_POLICY_MODE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"NBH99"},"content":"        List\u003cMeeting\u003e updatedMeetings \u003d editPersonDescriptor.getMeetings().orElse(personToEdit.getMeetings());","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"NBH99"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"NBH99"},"content":"                updatedTags, updatedPolicies, updatedMeetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"jay9645"},"content":"    private static List\u003cInsurancePolicy\u003e removeInsurancePolicies(List\u003cInsurancePolicy\u003e policiesToRemoveFrom,","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"jay9645"},"content":"                                             List\u003cInsurancePolicy\u003e policiesToRemove) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"jay9645"},"content":"        ArrayList\u003cInsurancePolicy\u003e policiesToRemoveFromTemp \u003d new ArrayList\u003c\u003e(policiesToRemoveFrom);","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"jay9645"},"content":"        for (InsurancePolicy insurancePolicy : policiesToRemove) {","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"jay9645"},"content":"            boolean isRemoved \u003d policiesToRemoveFromTemp.remove(insurancePolicy);","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"jay9645"},"content":"            if (!isRemoved) {","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"jay9645"},"content":"                throw new CommandException(String.format(MESSAGE_MODIFY_POLICY_NOT_FOUND, insurancePolicy.policyId));","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"jay9645"},"content":"        return policiesToRemoveFromTemp;","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"jay9645"},"content":"    private static List\u003cInsurancePolicy\u003e addInsurancePolicies(List\u003cInsurancePolicy\u003e policiesToAddTo,","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"jay9645"},"content":"                                             List\u003cInsurancePolicy\u003e policiesToAdd) {","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"jay9645"},"content":"        ArrayList\u003cInsurancePolicy\u003e policiesToAddToTemp \u003d new ArrayList\u003c\u003e(policiesToAddTo);","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"jay9645"},"content":"        policiesToAddToTemp.addAll(policiesToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"jay9645"},"content":"        return policiesToAddToTemp;","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"jay9645"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor)","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"jay9645"},"content":"                \u0026\u0026 editPolicyMode.equals(e.editPolicyMode);","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"jay9645"},"content":"    public enum EditPolicyMode {","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"jay9645"},"content":"        MODIFY, APPEND, REPLACE, REMOVE;","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"jay9645"},"content":"        public static final String MESSAGE_EDIT_POLICY_MODE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"jay9645"},"content":"                \"Edit policy mode should be specified by -MODE, where MODE should be insert, remove or modify.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"jay9645"},"content":"        public static final String MESSAGE_EDIT_POLICY_MULTIPLE_FLAG_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"jay9645"},"content":"                \"Only 1 edit policy mode should be specified.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"jay9645"},"content":"        private List\u003cInsurancePolicy\u003e policiesToAdd;","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"jay9645"},"content":"        private List\u003cInsurancePolicy\u003e policiesToRemove;","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"NBH99"},"content":"        private List\u003cMeeting\u003e meetings;","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"jay9645"},"content":"            setPoliciesToAdd(toCopy.policiesToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"jay9645"},"content":"            setPoliciesToRemove(toCopy.policiesToRemove);","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"NBH99"},"content":"            setMeetings(toCopy.meetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"jay9645"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, policiesToAdd, policiesToRemove,","lastModifiedDate":"2021-04-02"},{"lineNumber":234,"author":{"gitId":"jay9645"},"content":"                    meetings);","lastModifiedDate":"2021-04-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"jay9645"},"content":"        public void setPoliciesToAdd(List\u003cInsurancePolicy\u003e policiesToAdd) {","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"jay9645"},"content":"            this.policiesToAdd \u003d policiesToAdd;","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":289,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":290,"author":{"gitId":"jay9645"},"content":"        public Optional\u003cList\u003cInsurancePolicy\u003e\u003e getPoliciesToAdd() {","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"jay9645"},"content":"            return Optional.ofNullable(policiesToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"swayongshen"},"content":"        }","lastModifiedDate":"2021-02-25"},{"lineNumber":293,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":294,"author":{"gitId":"jay9645"},"content":"        public void setPoliciesToRemove(List\u003cInsurancePolicy\u003e policiesToRemove) {","lastModifiedDate":"2021-03-31"},{"lineNumber":295,"author":{"gitId":"jay9645"},"content":"            this.policiesToRemove \u003d policiesToRemove;","lastModifiedDate":"2021-03-31"},{"lineNumber":296,"author":{"gitId":"swayongshen"},"content":"        }","lastModifiedDate":"2021-02-25"},{"lineNumber":297,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":298,"author":{"gitId":"jay9645"},"content":"        public Optional\u003cList\u003cInsurancePolicy\u003e\u003e getPoliciesToRemove() {","lastModifiedDate":"2021-03-31"},{"lineNumber":299,"author":{"gitId":"jay9645"},"content":"            return Optional.ofNullable(policiesToRemove);","lastModifiedDate":"2021-03-31"},{"lineNumber":300,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":301,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":302,"author":{"gitId":"NBH99"},"content":"        public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"NBH99"},"content":"            this.meetings \u003d meetings;","lastModifiedDate":"2021-03-30"},{"lineNumber":304,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":305,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":306,"author":{"gitId":"NBH99"},"content":"        public Optional\u003cList\u003cMeeting\u003e\u003e getMeetings() {","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"NBH99"},"content":"            return Optional.ofNullable(meetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":309,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":329,"author":{"gitId":"swayongshen"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-02-25"},{"lineNumber":330,"author":{"gitId":"jay9645"},"content":"                    \u0026\u0026 getPoliciesToAdd().equals(e.getPoliciesToAdd())","lastModifiedDate":"2021-03-31"},{"lineNumber":331,"author":{"gitId":"jay9645"},"content":"                    \u0026\u0026 getPoliciesToRemove().equals(e.getPoliciesToRemove())","lastModifiedDate":"2021-04-02"},{"lineNumber":332,"author":{"gitId":"NBH99"},"content":"                    \u0026\u0026 getMeetings().equals(e.getMeetings());","lastModifiedDate":"2021-03-30"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"NBH99":15,"swayongshen":8,"-":219,"jay9645":89,"jlxw48":4}},{"path":"src/main/java/seedu/address/logic/commands/EditShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":" * Edits the shortcut command of an existing shortcut in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"public class EditShortcutCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    public static final String COMMAND_WORD \u003d \"editshortcut\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the shortcut command of the shortcut identified \"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"            + \"by the shortcut name used in the shortcut library. \"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"            + \"Existing command will be overwritten by the input command.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"            + \"Parameters: sn/SHORTCUT_NAME (must be an existing shortcut name) \"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"            + \"sc/SHORTCUT_COMMAND (must be a valid command)\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"            + \"Example: \" + COMMAND_WORD + \" sn/findfriends sc/find t/friend\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_EDIT_SHORTCUT_SUCCESS \u003d \"Edited Shortcut: %1$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    private final Shortcut shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     * @param shortcutName of the shortcut in the shortcut library to edit","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     * @param shortcutCommand to edit the shortcut with","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public EditShortcutCommand(String shortcutName, String shortcutCommand) {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        this.shortcut \u003d new Shortcut(shortcutName, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary shortcutLibrary \u003d model.getShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        if (!shortcutLibrary.hasShortcut(shortcut.getShortcutName())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"            throw new CommandException(Messages.MESSAGE_SHORTCUT_NAME_NOT_EXIST);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        model.setShortcut(shortcut.getShortcutName(), shortcut.getShortcutCommand());","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SHORTCUT_SUCCESS, shortcut));","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        if (!(other instanceof EditShortcutCommand)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        EditShortcutCommand e \u003d (EditShortcutCommand) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        return shortcut.equals(e.shortcut);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":70}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, false, true);","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wongkokian":1,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1d clients listed!\";","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_ATTRIBUTE \u003d \"%1d clients listed with %s attribute%s!\";","lastModifiedDate":"2021-04-03"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose chosen field contains any of \"","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            + \"Use a flag (n/, p/, e/, a/, t/, i/, m/) to search by name, phone, email, address, tags, insurance\"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"            + \"policies or meetings respectively.\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"            + \"Use \u0027\u0026\u0027 to find for multiple search terms.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"            + \"Specify attributes by typing \u0027-[ATTRIBUTE] after keywords\\n\"","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"            + \"Keywords cannot be empty.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"            + \"Parameters: FLAG/KEYWORD [\u0026 MORE_KEYWORDS]... [-ATTRIBUTE]... (attributes must be i for policy, \"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"            + \"p for phone, e for email, a for address or m for meeting)\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"            + \"Example: \" + COMMAND_WORD + \" e/alice@mail.com \u0026 bob@mail.com -a -i\";","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"jay9645"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"    private final List\u003cAttribute\u003e attributes;","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"     * Create a FindCommand that lists persons that satisfy given {@code Predicate}","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"     * @param predicate by which to filter list","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"        this.attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"     * Create a FindCommand that lists {@code Attribute} of persons that satisfy given {@code Predicate}","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"     * @param predicate by which to filter list","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"     * @param attributes that find will show","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate, List\u003cAttribute\u003e attributes) {","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"        this.attributes \u003d attributes;","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"    public boolean isAttributeSpecified() {","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"        return !this.attributes.isEmpty();","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"    private String getAttributesString() throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"jay9645"},"content":"        StringBuilder attributeName \u003d new StringBuilder();","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"        boolean isFirstAttribute \u003d true;","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"        for (Attribute attribute : this.attributes) {","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"            if (isFirstAttribute) {","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"                isFirstAttribute \u003d false;","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"            } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\", \");","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"jay9645"},"content":"            switch (attribute) {","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"jay9645"},"content":"            case EMAIL:","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\"email\");","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"jay9645"},"content":"            case PHONE:","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\"phone number\");","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"jay9645"},"content":"            case POLICY_ID:","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\"policy ID\");","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"jay9645"},"content":"            case ADDRESS:","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\"address\");","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"            case MEETING:","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"                attributeName.append(\"meeting\");","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"                break;","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"            default:","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"jay9645"},"content":"                throw new CommandException(\"Could not list with filtered attribute\");","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"        return attributeName.toString();","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"jay9645"},"content":"        if (!this.isAttributeSpecified()) {","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"                    String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"            model.updatePersonListByAttribute(this.attributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"jay9645"},"content":"            String attributeName \u003d getAttributesString();","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"jay9645"},"content":"            String attributeSuccessMessage;","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"jay9645"},"content":"            if (this.attributes.size() \u003d\u003d 1) {","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"jay9645"},"content":"                attributeSuccessMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_ATTRIBUTE,","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"jay9645"},"content":"                        model.getFilteredPersonList().size(), attributeName, \"\");","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"jay9645"},"content":"            } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"                attributeSuccessMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_ATTRIBUTE,","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"                        model.getFilteredPersonList().size(), attributeName, \"s\");","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"jay9645"},"content":"            return new CommandResult(attributeSuccessMessage);","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"NBH99":5,"swayongshen":1,"-":33,"jay9645":85}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wongkokian":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":" * Lists all persons in the address book to the user. Attribute can be specified to show only specific attributes.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_SUCCESS_ATTRIBUTE \u003d \"Listed all clients with %s attribute%s as filter\";","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"            + \": Lists clients, along with specified attributes\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"swayongshen"},"content":"            + \"Parameters: [-ATTRIBUTE]... (attributes must be i for policy, p for phone, e for email,\"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"swayongshen"},"content":"            + \" a for address or m for meeting)\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"            + \"Example: \" + COMMAND_WORD + \" -i -p\";","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"    private final List\u003cAttribute\u003e attributes;","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"     * @param attributes that list will show","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"    public ListCommand(List\u003cAttribute\u003e attributes) {","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"jay9645"},"content":"        requireNonNull(attributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"        this.attributes \u003d attributes;","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"    public ListCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"        this.attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"    public boolean isAttributeSpecified() {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"        return !this.attributes.isEmpty();","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"    private String getAttributesString() throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"        StringBuilder attributeName \u003d new StringBuilder();","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"        boolean isFirstAttribute \u003d true;","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"        for (Attribute attribute : this.attributes) {","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"            if (isFirstAttribute) {","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"                isFirstAttribute \u003d false;","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\", \");","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"jay9645"},"content":"            switch (attribute) {","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"jay9645"},"content":"            case EMAIL:","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\"email\");","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"            case PHONE:","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\"phone number\");","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"jay9645"},"content":"            case POLICY_ID:","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\"policy ID\");","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"            case ADDRESS:","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"                attributeName.append(\"address\");","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"            case MEETING:","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"                attributeName.append(\"meeting\");","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"                break;","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"jay9645"},"content":"            default:","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"jay9645"},"content":"                throw new CommandException(\"Could not list with filtered attribute\");","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"        return attributeName.toString();","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"jay9645"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"        if (!this.isAttributeSpecified()) {","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"jay9645"},"content":"            model.updatePersonListByAttribute(this.attributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"            String attributeName \u003d getAttributesString();","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"jay9645"},"content":"            String attributeSuccessMessage \u003d \"\";","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"jay9645"},"content":"            if (this.attributes.size() \u003d\u003d 1) {","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"jay9645"},"content":"                attributeSuccessMessage \u003d String.format(MESSAGE_SUCCESS_ATTRIBUTE, attributeName, \"\");","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"            } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"jay9645"},"content":"                attributeSuccessMessage \u003d String.format(MESSAGE_SUCCESS_ATTRIBUTE, attributeName, \"s\");","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"            return new CommandResult(attributeSuccessMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"jay9645"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"                || (other instanceof ListCommand // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"                \u0026\u0026 this.attributes.equals(((ListCommand) other).attributes)); // state check","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NBH99":3,"swayongshen":3,"-":21,"jay9645":79}},{"path":"src/main/java/seedu/address/logic/commands/ListShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" * Lists all persons in the address book to the user. Attribute can be specified to show only specific attributes.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public class ListShortcutCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public static final String COMMAND_WORD \u003d \"listshortcut\";","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary shortcutLibrary \u003d model.getShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        String shortcutList \u003d shortcutLibrary.getAllShortcutsInString();","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        return new CommandResult(shortcutList, false, false, true, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":23}},{"path":"src/main/java/seedu/address/logic/commands/LockCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"public class LockCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"    public static final String COMMAND_WORD \u003d \"lock\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"            + \": Locks ClientBook with a password.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"            + \"Parameters: CURRENT_PASSWORD(if any) NEW_PASSWORD\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"            + \"Example: \" + COMMAND_WORD + \" 12345\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_LOCK_SUCCESS_NEW_PASSWORD \u003d \"Locked ClientBook using new password.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_LOCK_SUCCESS_OLD_PASSWORD \u003d \"Locked ClientBook using your previous password.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_LOCK_SUCCESS_UPDATE_PASSWORD \u003d \"Successfully updated the password.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_ALREADY_LOCKED_INCORRECT_PASSWORD \u003d \"ClientBook is already locked, please \"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"            + \"enter the current password\\nand a new password to change the password.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_FAIL_TO_READ_PASSWORD_FILE \u003d \"Failed to read password file, please enter \"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"            + \"a new password to lock ClientBook.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_FAILED_TO_STORE_PASSWORD \u003d \"Failed to store password file.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"    private final Optional\u003cString\u003e currentPassword;","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"    private final Optional\u003cString\u003e newPassword;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"     * Instantiates a LockCommand object with the new password.","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"swayongshen"},"content":"     * @param newPassword password used to lock the clientbook.json file into a zip file.","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"    public LockCommand(String newPassword) {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"        this.currentPassword \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"jay9645"},"content":"        this.newPassword \u003d Optional.of(newPassword);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"     * Instantiates a LockCommand object with the current password and new password.","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"swayongshen"},"content":"     * @param currentPassword current password that is used to lock the zip file containing clientbook.json.","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"swayongshen"},"content":"     * @param newPassword password used to lock the clientbook.json file into a zip file.","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"    public LockCommand(String currentPassword, String newPassword) {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"        this.currentPassword \u003d Optional.of(currentPassword);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"        this.newPassword \u003d Optional.of(newPassword);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"jay9645"},"content":"     * Instantiates a LockCommand object with no passwords. The LockCommand will check for any previously used","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"jay9645"},"content":"     * password in the form of a password file.","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"    public LockCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"        this.currentPassword \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"        this.newPassword \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"        Authentication authentication \u003d model.getAuthentication();","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"        //There is an existing password","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"jay9645"},"content":"        if (authentication.isPasswordPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"jay9645"},"content":"            //Verify that the current password entered by user is the same as the existing password.","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"jay9645"},"content":"            if (this.currentPassword.isEmpty() || !authentication.getPassword().equals(this.currentPassword.get())) {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"jay9645"},"content":"                throw new CommandException(MESSAGE_ALREADY_LOCKED_INCORRECT_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"jay9645"},"content":"        //If newPassword is not entered, check for password in password file.","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"jay9645"},"content":"        if (this.newPassword.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"jay9645"},"content":"            useOldPassword(authentication);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"jay9645"},"content":"            return new CommandResult(MESSAGE_LOCK_SUCCESS_OLD_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"        //New password is entered, use this to lock the zip.","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"        setNewPassword(authentication);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"jay9645"},"content":"        //Case of updating password, since current password and new password are present.","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"        if (this.currentPassword.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"jay9645"},"content":"            return new CommandResult(MESSAGE_LOCK_SUCCESS_UPDATE_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"jay9645"},"content":"        //Case of a new lock without current password.","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"            return new CommandResult(MESSAGE_LOCK_SUCCESS_NEW_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"jay9645"},"content":"     * Attempts to read the user\u0027s previous password from a password file and set the password to the model.","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"jay9645"},"content":"    private void useOldPassword(Authentication authentication) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"            authentication.readPasswordFileAndSetPassword();","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"jay9645"},"content":"            throw new CommandException(MESSAGE_FAIL_TO_READ_PASSWORD_FILE, e);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"jay9645"},"content":"    private void setNewPassword(Authentication authentication) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"        //New password is entered, use this to lock the zip.","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"jay9645"},"content":"            authentication.setPassword(this.newPassword);","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"jay9645"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"jay9645"},"content":"            System.err.println(e);","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"jay9645"},"content":"            throw new CommandException(MESSAGE_FAILED_TO_STORE_PASSWORD, e);","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"jay9645"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"jay9645"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"jay9645"},"content":"                || (other instanceof LockCommand // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"jay9645"},"content":"                \u0026\u0026 currentPassword.equals(((LockCommand) other).currentPassword)","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"jay9645"},"content":"                \u0026\u0026 newPassword.equals(((LockCommand) other).newPassword)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"swayongshen":3,"jay9645":124}},{"path":"src/main/java/seedu/address/logic/commands/MeetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"public class MeetCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    public static final String COMMAND_WORD \u003d \"meet\";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    public static final String ADD_MEETING \u003d \"-add\";","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    public static final String CLEAR_MEETING \u003d \"-clear\";","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    public static final String DELETE_MEETING \u003d \"-delete\";","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    public static final String MEETING_EMPTY \u003d \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedule a meeting with a client.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"            + \"[-ACTION] (add, delete, clear) \"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"            + \"DATE (DD.MM.YYYY) START (HH:MM) END (HH:MM) PLACE\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"            + \"END must be after START on the same DATE.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3 -add 18.05.2021 15:00 18:00 MRT\";","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_CLASHING_MEETING \u003d \"The meeting clashes with \\n%1$s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_ADD_MEETING \u003d \"The meeting is added to the client %1$s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_DELETE_MEETING \u003d \"The meeting is deleted from the client %1$s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_CLEAR_MEETING \u003d \"All meetings are cleared from the client.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"    private final Index index;","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"    private final String action;","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    private final String date;","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"    private final String start;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    private final String end;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    private final String place;","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"     * Create a MeetCommand to change the meeting to the specified {@code Place} {@code Date} {@code Time}","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"     * @param index of the client in the list","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"     * @param action of the command","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"     * @param date of the meeting","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"     * @param start time of the meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"     * @param end time of the meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"     * @param place of the meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"    public MeetCommand(Index index, String action, String date, String start, String end, String place) {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"        this.place \u003d place;","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"        Person personToMeet \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"        if (action.equals(CLEAR_MEETING)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"            Person newPerson \u003d clearMeeting(personToMeet);","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"            model.setPerson(personToMeet, newPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"            return new CommandResult(MESSAGE_CLEAR_MEETING);","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"        Meeting meeting \u003d new Meeting(date, start, end, place);","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"        if (action.equals(DELETE_MEETING)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"            Person newPerson \u003d deleteMeeting(personToMeet, meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"            model.setPerson(personToMeet, newPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_MEETING, meeting));","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"        List\u003cPerson\u003e personList \u003d model.getWholePersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"        String clashes \u003d checkMeeting(personList, meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"        if (!clashes.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"            throw new CommandException(String.format(MESSAGE_CLASHING_MEETING, clashes));","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"        Person newPerson \u003d addMeeting(personToMeet, meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"        model.setPerson(personToMeet, newPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_MEETING, meeting));","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"        MeetCommand meetCommand \u003d (MeetCommand) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"                || (other instanceof MeetCommand // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 index.equals(meetCommand.index) // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 action.equals(meetCommand.action) // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 date.equals(meetCommand.date) // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 start.equals(meetCommand.start) // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 end.equals(meetCommand.end) // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 place.equals(meetCommand.place)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"     * Add a meeting of the client.","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"     * @param person of the meeting","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":"     * @param meeting details of the meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"     * @return Person with the new meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"    public static Person addMeeting(Person person, Meeting meeting) {","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"NBH99"},"content":"        Name updatedName \u003d person.getName();","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"NBH99"},"content":"        Phone updatedPhone \u003d person.getPhone().get();","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"NBH99"},"content":"        Email updatedEmail \u003d person.getEmail().get();","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"NBH99"},"content":"        Address updatedAddress \u003d person.getAddress().get();","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"NBH99"},"content":"        Set\u003cTag\u003e updatedTags \u003d person.getTags();","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"NBH99"},"content":"        List\u003cInsurancePolicy\u003e updatedPolicies \u003d person.getPolicies();","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"NBH99"},"content":"        List\u003cMeeting\u003e updatedMeeting \u003d new ArrayList\u003c\u003e(person.getMeetings());","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"NBH99"},"content":"        updatedMeeting.add(meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"NBH99"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"NBH99"},"content":"                updatedTags, updatedPolicies, updatedMeeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"NBH99"},"content":"     * Delete a meeting of the client.","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"NBH99"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"NBH99"},"content":"     * @param person of the meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"NBH99"},"content":"     * @param meeting details of the meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"NBH99"},"content":"     * @return Person without the meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"NBH99"},"content":"    public static Person deleteMeeting(Person person, Meeting meeting) {","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"NBH99"},"content":"        Name updatedName \u003d person.getName();","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"NBH99"},"content":"        Phone updatedPhone \u003d person.getPhone().get();","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"NBH99"},"content":"        Email updatedEmail \u003d person.getEmail().get();","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"NBH99"},"content":"        Address updatedAddress \u003d person.getAddress().get();","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"NBH99"},"content":"        Set\u003cTag\u003e updatedTags \u003d person.getTags();","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"NBH99"},"content":"        List\u003cInsurancePolicy\u003e updatedPolicies \u003d person.getPolicies();","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"NBH99"},"content":"        List\u003cMeeting\u003e updatedMeeting \u003d new ArrayList\u003c\u003e(person.getMeetings());","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"NBH99"},"content":"        updatedMeeting.remove(meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"NBH99"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"NBH99"},"content":"                updatedTags, updatedPolicies, updatedMeeting);","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"NBH99"},"content":"     * Clear all the meetings of the client.","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"NBH99"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"NBH99"},"content":"     * @param person of the meeting","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"NBH99"},"content":"     * @return Person without any meeting","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"NBH99"},"content":"    public static Person clearMeeting(Person person) {","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"NBH99"},"content":"        Name updatedName \u003d person.getName();","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"NBH99"},"content":"        Phone updatedPhone \u003d person.getPhone().get();","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"NBH99"},"content":"        Email updatedEmail \u003d person.getEmail().get();","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"NBH99"},"content":"        Address updatedAddress \u003d person.getAddress().get();","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"NBH99"},"content":"        Set\u003cTag\u003e updatedTags \u003d person.getTags();","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"NBH99"},"content":"        List\u003cInsurancePolicy\u003e updatedPolicies \u003d person.getPolicies();","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"NBH99"},"content":"        List\u003cMeeting\u003e updatedMeeting \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"NBH99"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"NBH99"},"content":"                updatedTags, updatedPolicies, updatedMeeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"NBH99"},"content":"     * Check for clashes for the meeting.","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"NBH99"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"NBH99"},"content":"     * @param personList meetings of all clients","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"NBH99"},"content":"     * @param meeting details of the meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"NBH99"},"content":"     * @return String of the list of clashed meetings","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"NBH99"},"content":"    public static String checkMeeting(List\u003cPerson\u003e personList, Meeting meeting) {","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"NBH99"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"NBH99"},"content":"        for (Person person : personList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"NBH99"},"content":"            for (Meeting meet : person.getMeetings()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"NBH99"},"content":"                if (meet.date.equals(meeting.date)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"NBH99"},"content":"                    LocalTime meetingStart \u003d LocalTime.parse(meeting.start, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"NBH99"},"content":"                    LocalTime meetingEnd \u003d LocalTime.parse(meeting.end, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"NBH99"},"content":"                    LocalTime meetStart \u003d LocalTime.parse(meet.start, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"NBH99"},"content":"                    LocalTime meetEnd \u003d LocalTime.parse(meet.end, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"NBH99"},"content":"                    boolean sameStart \u003d meetingStart.equals(meetStart) || meetingStart.equals(meetEnd);","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"NBH99"},"content":"                    boolean sameEnd \u003d meetingEnd.equals(meetStart) || meetingEnd.equals(meetEnd);","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"NBH99"},"content":"                    boolean betweenStart \u003d (meetingStart.isAfter(meetStart) \u0026\u0026 meetingStart.isBefore(meetEnd));","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"NBH99"},"content":"                    boolean betweenEnd \u003d (meetingEnd.isAfter(meetStart) \u0026\u0026 meetingEnd.isBefore(meetEnd));","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"NBH99"},"content":"                    boolean startEnd \u003d (meetingStart.isBefore(meetStart) \u0026\u0026 meetingEnd.isAfter(meetEnd));","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"NBH99"},"content":"                    if (sameStart || sameEnd || betweenStart || betweenEnd || startEnd) {","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"NBH99"},"content":"                        builder.append(meet.toString()).append(\"\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"NBH99"},"content":"                    }","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"NBH99"},"content":"                }","lastModifiedDate":"2021-03-23"},{"lineNumber":206,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"NBH99"},"content":"        if (builder.length() \u003e 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"NBH99"},"content":"            builder.deleteCharAt(builder.length() - 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"NBH99"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NBH99":214}},{"path":"src/main/java/seedu/address/logic/commands/PolicyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"import java.util.List;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":" * Displays the policies of the person identified using their displayed index in the address book.","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":"public class PolicyCommand extends Command {","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":"    public static final String COMMAND_WORD \u003d \"policy\";","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"jlxw48"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"            + \": Finds all policies associated a particular client.\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"jlxw48"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"    public static final String NO_POLICIES \u003d \"%1$s has no policies now!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"    public PolicyCommand(Index targetIndex) {","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"jlxw48"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"jlxw48"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"jlxw48"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"        Person personPoliciesToDisplay \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"jlxw48"},"content":"        if (!personPoliciesToDisplay.hasPolicies()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"            String feedback \u003d String.format(NO_POLICIES, personPoliciesToDisplay.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"            return new CommandResult(feedback, false, true, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"jlxw48"},"content":"        String policiesAndUrls \u003d personPoliciesToDisplay.getPersonNameAndAllPoliciesInString();","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        return new CommandResult(policiesAndUrls, false, true, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"jlxw48"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"                || (other instanceof PolicyCommand // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"                \u0026\u0026 targetIndex.equals(((PolicyCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"wongkokian":2,"jlxw48":56}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":" * Sorts the list of clients in the ClientBook.","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":" * Attribute and direction of the sorting need to be specified.","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    public static final String SORT_BY_NAME \u003d \"-n\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    public static final String SORT_BY_INSURANCE_POLICY \u003d \"-i\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    public static final String DIRECTION_ASCENDING \u003d \"-asc\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    public static final String DIRECTION_DESCENDING \u003d \"-des\";","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_SUCCESS_NAME_ASCENDING \u003d \"Sorted all clients by name in ascending order.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_SUCCESS_NAME_DESCENDING \u003d \"Sorted all clients by name in descending order.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_SUCCESS_INSURANCE_POLICY_ASCENDING \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            \"Sorted all clients by insurance policy in ascending order.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_SUCCESS_INSURANCE_POLICY_DESCENDING \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            \"Sorted all clients by insurance policy in descending order.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the list of clients by \"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"            + \"the specified property in the order of the specified direction.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"            + \"Parameters: -ATTRIBUTE (n or i) -DIRECTION (asc or des)\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"            + \"Example: \" + COMMAND_WORD + \" -n -asc\";","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    private final String attribute;","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"    private final String direction;","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"     * Create a SortCommand that sort by the given {@code Attribute} in the given {@code Direction}","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"     * @param attribute of the client to be sorted with","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"     * @param direction of the sorting order","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    public SortCommand(String attribute, String direction) {","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"        this.attribute \u003d attribute;","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"        this.direction \u003d direction;","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"        Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        assert(attribute.equals(SORT_BY_NAME) || attribute.equals(SORT_BY_INSURANCE_POLICY));","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"        assert(direction.equals(DIRECTION_ASCENDING) || direction.equals(DIRECTION_DESCENDING));","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"        if (attribute.equals(SORT_BY_INSURANCE_POLICY)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"            comparator \u003d new PolicyComparator();","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"            comparator \u003d new PersonNameComparator();","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"        if (direction.equals(DIRECTION_DESCENDING)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"            comparator \u003d comparator.reversed();","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"        model.updateSortedPersonList(comparator);","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"        if (direction.equals(DIRECTION_ASCENDING)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"            if (attribute.equals(SORT_BY_NAME)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"                return new CommandResult(MESSAGE_SUCCESS_NAME_ASCENDING);","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"            } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"                return new CommandResult(MESSAGE_SUCCESS_INSURANCE_POLICY_ASCENDING);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"            if (attribute.equals(SORT_BY_NAME)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"                return new CommandResult(MESSAGE_SUCCESS_NAME_DESCENDING);","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"                return new CommandResult(MESSAGE_SUCCESS_INSURANCE_POLICY_DESCENDING);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"        SortCommand sortCommand \u003d (SortCommand) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 attribute.equals(sortCommand.attribute) // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 direction.equals(sortCommand.direction)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"     * Comparator to compare the names of clients.","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"    public static class PersonNameComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"        public int compare(Person person, Person otherPerson) {","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"            return (person.getName().toString()).compareTo(otherPerson.getName().toString());","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"     * Comparator to compare the policies of clients.","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"    public static class PolicyComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"        public int compare(Person person, Person otherPerson) {","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"            List\u003cInsurancePolicy\u003e policy \u003d person.getPolicies();","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"            List\u003cInsurancePolicy\u003e otherPolicy \u003d otherPerson.getPolicies();","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"            if (policy.size() \u003e otherPolicy.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"                return 1;","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"            } else if (policy.size() \u003c otherPolicy.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"                return -1;","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"                return (policy.toString()).compareTo(otherPolicy.toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"NBH99":123}},{"path":"src/main/java/seedu/address/logic/commands/UnlockCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"public class UnlockCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"    public static final String COMMAND_WORD \u003d \"unlock\";","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"            + \": Unlocks ClientBook.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"            + \"Parameters: CURRENT_PASSWORD\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"            + \"Example: \" + COMMAND_WORD + \" 12345\";","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_UNLOCK_SUCCESS \u003d \"Unlocked ClientBook.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_ALREADY_UNLOCKED \u003d \"ClientBook is not locked.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_INCORRECT_PASSWORD \u003d \"You have entered the wrong password.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"    private final String currentPassword;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"     * Instantiates an UnlockCommand object with the password that the user has entered.","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"     * @param currentPassword user entered password used to unlock the zip file.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"    public UnlockCommand(String currentPassword) {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"        this.currentPassword \u003d currentPassword;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"        Authentication authentication \u003d model.getAuthentication();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"        if (!authentication.isPasswordPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"swayongshen"},"content":"            throw new CommandException(MESSAGE_ALREADY_UNLOCKED);","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"        if (!authentication.getPassword().equals(currentPassword)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"            throw new CommandException(MESSAGE_INCORRECT_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"        authentication.removePassword();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"        return new CommandResult(MESSAGE_UNLOCK_SUCCESS);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"                || (other instanceof UnlockCommand // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"                \u0026\u0026 currentPassword.equals(((UnlockCommand) other).currentPassword)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"swayongshen":1,"jay9645":51}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"swayongshen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE_POLICY;","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"import java.util.List;","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"swayongshen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-02-26"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"                        PREFIX_INSURANCE_POLICY, PREFIX_TAG, PREFIX_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"swayongshen"},"content":"        List\u003cInsurancePolicy\u003e policyList \u003d ParserUtil.parsePolicies(argMultimap.getAllValues(PREFIX_INSURANCE_POLICY));","lastModifiedDate":"2021-02-26"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"        List\u003cMeeting\u003e meetingList \u003d ParserUtil.parseMeetings(argMultimap.getAllValues(PREFIX_MEETING));","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, policyList, meetingList);","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"NBH99":5,"swayongshen":5,"-":58,"jay9645":1}},{"path":"src/main/java/seedu/address/logic/parser/AddShortcutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT_COMMAND;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.AddShortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":" * Parses input arguments and creates a new AddShortcutCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"public class AddShortcutCommandParser implements Parser\u003cAddShortcutCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     * Parses the given {@code String} of arguments in the context of the AddShortcutCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     * and returns an AddShortcutCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    public AddShortcutCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SHORTCUT_NAME, PREFIX_SHORTCUT_COMMAND);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SHORTCUT_NAME, PREFIX_SHORTCUT_COMMAND)","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        String shortcutName \u003d ParserUtil.formatShortcutName(argMultimap.getValue(PREFIX_SHORTCUT_NAME).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        String shortcutCommand \u003d ParserUtil.formatShortcutCommand(argMultimap.getValue(PREFIX_SHORTCUT_COMMAND).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        return new AddShortcutCommand(shortcutName, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":46}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"swayongshen"},"content":"     * Returns all values of {@code prefix}, until the next prefix.","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"swayongshen"},"content":"        List\u003cString\u003e values \u003d argMultimap.get(prefix);","lastModifiedDate":"2021-02-26"},{"lineNumber":53,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":54,"author":{"gitId":"swayongshen"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-02-26"},{"lineNumber":55,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":56,"author":{"gitId":"swayongshen"},"content":"        //Add all values up till the next prefix to the output.","lastModifiedDate":"2021-02-26"},{"lineNumber":57,"author":{"gitId":"swayongshen"},"content":"        for (String value : values) {","lastModifiedDate":"2021-02-26"},{"lineNumber":58,"author":{"gitId":"swayongshen"},"content":"            if (CliSyntax.isValidPrefix(value)) {","lastModifiedDate":"2021-02-26"},{"lineNumber":59,"author":{"gitId":"swayongshen"},"content":"                break;","lastModifiedDate":"2021-02-26"},{"lineNumber":60,"author":{"gitId":"swayongshen"},"content":"            }","lastModifiedDate":"2021-02-26"},{"lineNumber":61,"author":{"gitId":"swayongshen"},"content":"            output.add(value);","lastModifiedDate":"2021-02-26"},{"lineNumber":62,"author":{"gitId":"swayongshen"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":63,"author":{"gitId":"swayongshen"},"content":"        return output;","lastModifiedDate":"2021-02-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":73,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"swayongshen":16,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/BatchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE_POLICY;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.BatchCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jlxw48"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":" * Handles all parsing of {@code BatchCommand} as well as arguments for {@code EditCommand} or {@code DeleteCommand}.","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"public class BatchCommandParser implements Parser\u003cBatchCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"    public static final String INVALID_BATCH_COMMAND \u003d \"Invalid batch operation!\\nOnly edit and delete operations \"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"            + \"are supported.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"    public static final String INVALID_EDIT_ARGUMENTS \u003d \"Invalid arguments for edit command!\\nOnly \"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"            + \"phone numbers, addresses, tags and insurance policies can be edited in batch.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":"     * Parses input to prepare for a {@code BatchCommand}, and the {@code Commands} that will be executed by it.","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"     * First, parses and checks the validity of the {@code Command} that is to be executed in batch.","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"jlxw48"},"content":"     * Then, parses and checks the validity of the indices and arguments (if applicable) to be passed to the","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"jlxw48"},"content":"     * {@code Command} to be executed in bulk.","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"jlxw48"},"content":"     * @param args arguments of the {@BatchCommand} passed in by the user","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"     * @return a {@code BatchCommand} with the {@code List} of {@code Commands} to be executed in batch.","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"     * @throws ParseException if the user input for {@code BatchCommand} or the {@code Commands} does not conform to","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jlxw48"},"content":"     *      the expected format.","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"    public BatchCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"jlxw48"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"jlxw48"},"content":"            String[] splitCommandAndIndicesAndArgs \u003d args.trim().split(\" \", 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"            String inputCommand \u003d splitCommandAndIndicesAndArgs[0].trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"jlxw48"},"content":"            // Checks the validity of the Command that the user passed as input to the BatchCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"            switch (inputCommand) {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jlxw48"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jlxw48"},"content":"                /* falls through */","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"jlxw48"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jlxw48"},"content":"            default:","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"                throw new ParseException(INVALID_BATCH_COMMAND);","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"            // Tokenises and parses the user input","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"jlxw48"},"content":"            String inputIndicesAndArgs \u003d splitCommandAndIndicesAndArgs[1].trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"jlxw48"},"content":"                    ArgumentTokenizer.tokenize(inputIndicesAndArgs, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"jlxw48"},"content":"                            PREFIX_ADDRESS, PREFIX_TAG, PREFIX_INSURANCE_POLICY);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"jlxw48"},"content":"            List\u003cIndex\u003e listOfIndices \u003d parseAndPrepareIndices(argMultimap);","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"jlxw48"},"content":"            assert inputCommand.equals(EditCommand.COMMAND_WORD) || inputCommand.equals(DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"            if (inputCommand.equals(EditCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"jlxw48"},"content":"                return batchEdit(argMultimap, listOfIndices);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"jlxw48"},"content":"            } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"jlxw48"},"content":"                return batchDelete(listOfIndices);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"jlxw48"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"jlxw48"},"content":"            throw new ParseException(String.format(BatchCommand.ERROR_MESSAGE, e.getLocalizedMessage()));","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"jlxw48"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"jlxw48"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BatchCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"    private List\u003cIndex\u003e parseAndPrepareIndices(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"jlxw48"},"content":"        String indices \u003d argMultimap.getPreamble();","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"jlxw48"},"content":"        List\u003cIndex\u003e listOfIndices \u003d ParserUtil.parseIndices(indices.trim());","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"jlxw48"},"content":"        // Reverse sort the list so that upon deletion of clients, the same index can still be used since we deleted","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"jlxw48"},"content":"        // from the back. No side effect for EditCommands.","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"jlxw48"},"content":"        Collections.sort(listOfIndices);","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jlxw48"},"content":"        Collections.reverse(listOfIndices);","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"jlxw48"},"content":"        return listOfIndices;","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"jlxw48"},"content":"    private BatchCommand\u003cEditCommand\u003e batchEdit(ArgumentMultimap argMultimap, List\u003cIndex\u003e listOfIndices)","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"jlxw48"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"jlxw48"},"content":"        if (areOtherPrefixesEntered(argMultimap)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"jlxw48"},"content":"            throw new ParseException(INVALID_EDIT_ARGUMENTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jlxw48"},"content":"        // Joins the rest of the input by user to be passed to the EditCommands","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"jlxw48"},"content":"        List\u003cString\u003e listOfPhoneNumbers \u003d argMultimap.getAllValues(PREFIX_PHONE);","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"jlxw48"},"content":"        List\u003cString\u003e listOfAddresses \u003d argMultimap.getAllValues(PREFIX_ADDRESS);","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"jlxw48"},"content":"        List\u003cString\u003e listOfTags \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"jlxw48"},"content":"        List\u003cString\u003e listOfInsurancePolicies \u003d argMultimap.getAllValues(PREFIX_INSURANCE_POLICY);","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"jlxw48"},"content":"        String inputCommandArgs \u003d concatAllArguments(listOfPhoneNumbers, listOfAddresses, listOfTags,","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"jlxw48"},"content":"                listOfInsurancePolicies);","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"jlxw48"},"content":"        List\u003cEditCommand\u003e listOfEditCommands \u003d createEditCommands(listOfIndices, inputCommandArgs);","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"jlxw48"},"content":"        return new BatchCommand\u003c\u003e(listOfEditCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"jlxw48"},"content":"    private List\u003cEditCommand\u003e createEditCommands(List\u003cIndex\u003e listOfIndices, String inputCommandArgs)","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"jlxw48"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"jlxw48"},"content":"        EditCommandParser editCommandParser \u003d new EditCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"jlxw48"},"content":"        List\u003cEditCommand\u003e listOfEditCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"jlxw48"},"content":"        for (Index index : listOfIndices) {","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"jlxw48"},"content":"            String newCommandInput \u003d index.getOneBased() + \" \" + inputCommandArgs;","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"jlxw48"},"content":"            EditCommand editCommand \u003d editCommandParser.parse(newCommandInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"jlxw48"},"content":"            listOfEditCommands.add(editCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"jlxw48"},"content":"        return listOfEditCommands;","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"jlxw48"},"content":"    private BatchCommand\u003cDeleteCommand\u003e batchDelete(List\u003cIndex\u003e listOfIndices) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"jlxw48"},"content":"        List\u003cDeleteCommand\u003e listOfDeleteCommands \u003d createDeleteCommands(listOfIndices);","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"jlxw48"},"content":"        return new BatchCommand\u003c\u003e(listOfDeleteCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"jlxw48"},"content":"    private List\u003cDeleteCommand\u003e createDeleteCommands(List\u003cIndex\u003e listOfIndices) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"jlxw48"},"content":"        DeleteCommandParser deleteCommandParser \u003d new DeleteCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"jlxw48"},"content":"        List\u003cDeleteCommand\u003e listOfDeleteCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"jlxw48"},"content":"        for (Index index : listOfIndices) {","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"jlxw48"},"content":"            String indexString \u003d String.valueOf(index.getOneBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"jlxw48"},"content":"            DeleteCommand deleteCommand \u003d deleteCommandParser.parse(indexString);","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"jlxw48"},"content":"            listOfDeleteCommands.add(deleteCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"jlxw48"},"content":"        return listOfDeleteCommands;","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"jlxw48"},"content":"    private String concatAllArguments(List\u003cString\u003e listOfPhoneNumbers, List\u003cString\u003e listOfAddresses,","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"jlxw48"},"content":"                                      List\u003cString\u003e listOfTags, List\u003cString\u003e listOfInsurancePolicies) {","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"jlxw48"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"jlxw48"},"content":"        for (int i \u003d 0; i \u003c listOfPhoneNumbers.size(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"jlxw48"},"content":"            stringBuilder","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"jlxw48"},"content":"                    .append(PREFIX_PHONE.getPrefix())","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"jlxw48"},"content":"                    .append(listOfPhoneNumbers.get(i))","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"jlxw48"},"content":"                    .append(\" \");","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"jlxw48"},"content":"        for (int i \u003d 0; i \u003c listOfAddresses.size(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"jlxw48"},"content":"            stringBuilder","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"jlxw48"},"content":"                    .append(PREFIX_ADDRESS.getPrefix())","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"jlxw48"},"content":"                    .append(listOfAddresses.get(i))","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"jlxw48"},"content":"                    .append(\" \");","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"jlxw48"},"content":"        for (int i \u003d 0; i \u003c listOfTags.size(); i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"jlxw48"},"content":"            stringBuilder","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"jlxw48"},"content":"                    .append(PREFIX_TAG.getPrefix())","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"jlxw48"},"content":"                    .append(listOfTags.get(i))","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"jlxw48"},"content":"                    .append(\" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"jlxw48"},"content":"        for (int i \u003d 0; i \u003c listOfInsurancePolicies.size(); i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"jlxw48"},"content":"            stringBuilder","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"jlxw48"},"content":"                    .append(PREFIX_INSURANCE_POLICY.getPrefix())","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"jlxw48"},"content":"                    .append(listOfInsurancePolicies.get(i))","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"jlxw48"},"content":"                    .append(\" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"jlxw48"},"content":"        return stringBuilder.toString().trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"jlxw48"},"content":"    private boolean areOtherPrefixesEntered(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"jlxw48"},"content":"        return argMultimap.getValue(PREFIX_NAME).isPresent()","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"jlxw48"},"content":"                || argMultimap.getValue(PREFIX_EMAIL).isPresent();","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"jlxw48"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"jlxw48":177}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"swayongshen"},"content":"    public static final Prefix PREFIX_INSURANCE_POLICY \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"    public static final Prefix PREFIX_INSURANCE_POLICY_URL \u003d new Prefix(\"u/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public static final Prefix PREFIX_MEETING \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    public static final Prefix PREFIX_SHORTCUT_NAME \u003d new Prefix(\"sn/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    public static final Prefix PREFIX_SHORTCUT_COMMAND \u003d new Prefix(\"sc/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":24,"author":{"gitId":"swayongshen"},"content":"     * Checks if a given string is a valid prefix.","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"swayongshen"},"content":"     * @param input the string to validate.","lastModifiedDate":"2021-02-26"},{"lineNumber":26,"author":{"gitId":"swayongshen"},"content":"     * @return true if the string is a valid prefix.","lastModifiedDate":"2021-02-26"},{"lineNumber":27,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"swayongshen"},"content":"    public static boolean isValidPrefix(String input) {","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"        HashSet\u003cPrefix\u003e prefixes \u003d new HashSet\u003c\u003e(Arrays.asList(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"                PREFIX_TAG, PREFIX_INSURANCE_POLICY, PREFIX_INSURANCE_POLICY_URL, PREFIX_MEETING, PREFIX_SHORTCUT_NAME,","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"                PREFIX_SHORTCUT_COMMAND));","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"swayongshen"},"content":"        return prefixes.contains(new Prefix(input));","lastModifiedDate":"2021-02-26"},{"lineNumber":33,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"wongkokian":4,"NBH99":1,"swayongshen":13,"-":15,"jay9645":1}},{"path":"src/main/java/seedu/address/logic/parser/ClientBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.AddShortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.BatchCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.ClearShortcutCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.DeleteShortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.EditShortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.ListShortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.LockCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.commands.MeetCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.PolicyCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.UnlockCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"public class ClientBookParser {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    private static HashMap\u003cString, String\u003e shortcuts;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"jay9645"},"content":"    public ClientBookParser() {","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        shortcuts \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"    public ClientBookParser(ShortcutLibrary shortcutLibrary) {","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        shortcuts \u003d shortcutLibrary.getShortcuts();","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"jlxw48"},"content":"        case BatchCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"jlxw48"},"content":"            return new BatchCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":94,"author":{"gitId":"jay9645"},"content":"        case LockCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"            return new LockCommandParser().parse(arguments);","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"        case UnlockCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"jay9645"},"content":"            return new UnlockCommandParser().parse(arguments);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"jay9645"},"content":"        case PolicyCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"jay9645"},"content":"            return new PolicyCommandParser().parse(arguments);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"        case MeetCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"            return new MeetCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"        case AddShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"            return new AddShortcutCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"        case DeleteShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"            return new DeleteShortcutCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"        case EditShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"            return new EditShortcutCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"        case ListShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"            return new ListShortcutCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"        case ClearShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"            return new ClearShortcutCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"            if (shortcuts.containsKey(commandWord)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"                return this.parseCommand(shortcuts.get(commandWord));","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"wongkokian"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wongkokian":34,"NBH99":4,"-":70,"jlxw48":5,"jay9645":20}},{"path":"src/main/java/seedu/address/logic/parser/DeleteShortcutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.DeleteShortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" * Parses input arguments and creates a new DeleteShortcutCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public class DeleteShortcutCommandParser implements Parser\u003cDeleteShortcutCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteShortcutCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"     * and returns an DeleteShortcutCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public DeleteShortcutCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"            String shortcutName \u003d ParserUtil.formatShortcutName(args);","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"            return new DeleteShortcutCommand(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteShortcutCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":27}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"swayongshen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE_POLICY;","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.EditCommand.EditPolicyMode;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-26"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"swayongshen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"                        PREFIX_TAG, PREFIX_INSURANCE_POLICY, PREFIX_MEETING);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"        List\u003cString\u003e inputPolicies \u003d argMultimap.getAllValues(PREFIX_INSURANCE_POLICY);","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"        EditPolicyMode editPolicyMode \u003d getEditPolicyMode(inputPolicies);","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"        List\u003cString\u003e policiesTrimmed \u003d getPolicyListFromInput(inputPolicies);","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"jay9645"},"content":"        boolean isModeReplaceOrAppendPolicies \u003d editPolicyMode \u003d\u003d EditPolicyMode.REPLACE","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"jay9645"},"content":"                || editPolicyMode \u003d\u003d EditPolicyMode.APPEND;","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"jay9645"},"content":"        boolean isModeRemovePolicies \u003d editPolicyMode \u003d\u003d EditPolicyMode.REMOVE;","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"jay9645"},"content":"        boolean isModeModifyPolicies \u003d editPolicyMode \u003d\u003d EditPolicyMode.MODIFY;","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"jay9645"},"content":"        if (isModeReplaceOrAppendPolicies) {","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"jay9645"},"content":"            parsePoliciesForEdit(policiesTrimmed).ifPresent(editPersonDescriptor::setPoliciesToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"jay9645"},"content":"        } else if (isModeRemovePolicies) {","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"jay9645"},"content":"            parsePoliciesForEdit(policiesTrimmed).ifPresent(editPersonDescriptor::setPoliciesToRemove);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"jay9645"},"content":"        } else if (isModeModifyPolicies) {","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"            List\u003cList\u003cString\u003e\u003e addAndRemovePairs \u003d getPoliciesFromModifyPairs(policiesTrimmed);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"            parsePoliciesForEdit(addAndRemovePairs.get(1)).ifPresent(editPersonDescriptor::setPoliciesToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"            parsePoliciesForEdit(addAndRemovePairs.get(0)).ifPresent(editPersonDescriptor::setPoliciesToRemove);","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"        parseMeetingsForEdit(argMultimap.getAllValues(PREFIX_MEETING))","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"                .ifPresent(editPersonDescriptor::setMeetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"        return new EditCommand(index, editPersonDescriptor, editPolicyMode);","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"jay9645"},"content":"    private List\u003cList\u003cString\u003e\u003e getPoliciesFromModifyPairs(List\u003cString\u003e modifyPairs) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"jay9645"},"content":"        List\u003cString\u003e policiesToAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"jay9645"},"content":"        List\u003cString\u003e policiesToRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"        for (String pair : modifyPairs) {","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"            String[] policies \u003d pair.split(\";\");","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"            if (policies.length !\u003d 2 || (policies[0].isEmpty() || policies[1].isEmpty())) {","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"jay9645"},"content":"                throw new ParseException(EditCommand.MESSAGE_MODIFY_POLICY_CONSTRAINT);","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"jay9645"},"content":"            policiesToRemove.add(policies[0]);","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"jay9645"},"content":"            policiesToAdd.add(policies[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"jay9645"},"content":"        List\u003cList\u003cString\u003e\u003e removeAndAddPairs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"        removeAndAddPairs.add(policiesToRemove);","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"        removeAndAddPairs.add(policiesToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"jay9645"},"content":"        return removeAndAddPairs;","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"jay9645"},"content":"     * Get policy edit mode from input policies.","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"jay9645"},"content":"     * @param inputPolicies policy input from user","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"jay9645"},"content":"     * @return EditPolicyMode","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"jay9645"},"content":"     * @throws ParseException if there is more than one flag","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"jay9645"},"content":"    private EditPolicyMode getEditPolicyMode(List\u003cString\u003e inputPolicies) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"jay9645"},"content":"        // defensive","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"jay9645"},"content":"        if (!isNumOfFlagsValid(inputPolicies)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"jay9645"},"content":"            throw new ParseException(EditPolicyMode.MESSAGE_EDIT_POLICY_MULTIPLE_FLAG_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"jay9645"},"content":"        String policyWithFlag \u003d \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"jay9645"},"content":"        for (String policy : inputPolicies) {","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"jay9645"},"content":"            if (policy.contains(\"-\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"jay9645"},"content":"                policyWithFlag \u003d policy;","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"jay9645"},"content":"        if (policyWithFlag.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"jay9645"},"content":"            // default when no flag is specified","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"jay9645"},"content":"            return EditPolicyMode.REPLACE;","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"jay9645"},"content":"            String[] policyWithFlagSplit \u003d policyWithFlag.split(\" \");","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"jay9645"},"content":"            String flag \u003d \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"jay9645"},"content":"            for (String string : policyWithFlagSplit) {","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"jay9645"},"content":"                if (string.contains(\"-\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"jay9645"},"content":"                    flag \u003d string;","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"jay9645"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"jay9645"},"content":"            return ParserUtil.parseEditPolicyMode(flag);","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"jay9645"},"content":"    private static boolean isNumOfFlagsValid(List\u003cString\u003e inputPolicies) {","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"jay9645"},"content":"        int flagCount \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"jay9645"},"content":"        for (String policy : inputPolicies) {","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"jay9645"},"content":"            int flagNum \u003d StringUtil.countMatches(policy, \"-\");","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"jay9645"},"content":"            flagCount +\u003d flagNum;","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"jay9645"},"content":"            if (flagCount \u003e 1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"jay9645"},"content":"                return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"jay9645"},"content":"        return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"jay9645"},"content":"    private List\u003cString\u003e getPolicyListFromInput(List\u003cString\u003e inputStrings) {","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"jay9645"},"content":"        List\u003cString\u003e trimmedPolicies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"jay9645"},"content":"        for (String string : inputStrings) {","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"jay9645"},"content":"            if (string.contains(\"-\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"jay9645"},"content":"                trimmedPolicies.add(removeFlagFromPolicy(string));","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"jay9645"},"content":"            } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"jay9645"},"content":"                trimmedPolicies.add(string);","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"jay9645"},"content":"        return trimmedPolicies;","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"jay9645"},"content":"    private String removeFlagFromPolicy(String policyString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"jay9645"},"content":"        String[] policyStringsSplit \u003d policyString.split(\" \");","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"jay9645"},"content":"        ArrayList\u003cString\u003e trimmedPolicyStringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"jay9645"},"content":"        for (String str : policyStringsSplit) {","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"jay9645"},"content":"            if (!str.contains(\"-\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"jay9645"},"content":"                trimmedPolicyStringList.add(str);","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"jay9645"},"content":"        return String.join(\" \", trimmedPolicyStringList);","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":200,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":201,"author":{"gitId":"swayongshen"},"content":"     * Parses {@code Collection\u003cString\u003e policyId} into a {@code List\u003cInsurancePolicy\u003e} if {@code policies} is non-empty.","lastModifiedDate":"2021-02-26"},{"lineNumber":202,"author":{"gitId":"swayongshen"},"content":"     * If {@code policies} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-02-26"},{"lineNumber":203,"author":{"gitId":"swayongshen"},"content":"     * {@code List\u003cInsurancePolicy\u003e} containing zero policies.","lastModifiedDate":"2021-02-26"},{"lineNumber":204,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":205,"author":{"gitId":"swayongshen"},"content":"    private Optional\u003cList\u003cInsurancePolicy\u003e\u003e parsePoliciesForEdit(Collection\u003cString\u003e policyIds) throws ParseException {","lastModifiedDate":"2021-02-26"},{"lineNumber":206,"author":{"gitId":"swayongshen"},"content":"        assert policyIds !\u003d null;","lastModifiedDate":"2021-02-26"},{"lineNumber":207,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":208,"author":{"gitId":"swayongshen"},"content":"        if (policyIds.isEmpty()) {","lastModifiedDate":"2021-02-26"},{"lineNumber":209,"author":{"gitId":"swayongshen"},"content":"            return Optional.empty();","lastModifiedDate":"2021-02-26"},{"lineNumber":210,"author":{"gitId":"swayongshen"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":211,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":212,"author":{"gitId":"swayongshen"},"content":"        Collection\u003cString\u003e policyList \u003d policyIds.size() \u003d\u003d 1 \u0026\u0026 policyIds.contains(\"\")","lastModifiedDate":"2021-02-26"},{"lineNumber":213,"author":{"gitId":"swayongshen"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2021-02-26"},{"lineNumber":214,"author":{"gitId":"swayongshen"},"content":"                : policyIds;","lastModifiedDate":"2021-02-26"},{"lineNumber":215,"author":{"gitId":"swayongshen"},"content":"        return Optional.of(ParserUtil.parsePolicies(policyList));","lastModifiedDate":"2021-02-26"},{"lineNumber":216,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":217,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":218,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"NBH99"},"content":"     * Parses {@code Collection\u003cString\u003e meetings} into a {@code List\u003cMeeting\u003e} if {@code meetings} is non-empty.","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"NBH99"},"content":"     * If {@code meetings} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"NBH99"},"content":"     * {@code List\u003cMeeting\u003e} containing zero meetings.","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"NBH99"},"content":"    private Optional\u003cList\u003cMeeting\u003e\u003e parseMeetingsForEdit(Collection\u003cString\u003e meetings) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"NBH99"},"content":"        assert meetings !\u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"NBH99"},"content":"        if (meetings.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"NBH99"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"NBH99"},"content":"        Collection\u003cString\u003e meetingList \u003d meetings.size() \u003d\u003d 1 \u0026\u0026 meetings.contains(\"\")","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"NBH99"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"NBH99"},"content":"                : meetings;","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"NBH99"},"content":"        return Optional.of(ParserUtil.parseMeetings(meetingList));","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"NBH99":24,"swayongshen":21,"-":80,"jay9645":111}},{"path":"src/main/java/seedu/address/logic/parser/EditShortcutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT_COMMAND;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.EditShortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":" * Parses input arguments and creates a new EditShortcutCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"public class EditShortcutCommandParser implements Parser\u003cEditShortcutCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     * Parses the given {@code String} of arguments in the context of the EditShortcutCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     * and returns an EditShortcutCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    public EditShortcutCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SHORTCUT_NAME, PREFIX_SHORTCUT_COMMAND);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SHORTCUT_NAME, PREFIX_SHORTCUT_COMMAND)","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        String target \u003d ParserUtil.formatShortcutName(argMultimap.getValue(PREFIX_SHORTCUT_NAME).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        String shortcutCommand \u003d ParserUtil.formatShortcutCommand(argMultimap.getValue(PREFIX_SHORTCUT_COMMAND).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        return new EditShortcutCommand(target, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":48}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.InsurancePolicyContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.MeetingContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"    public static final String KEYWORDS_REGEX \u003d \"\\\\s*\u0026\\\\s*\";","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    //@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        int flagCount \u003d StringUtil.countMatches(trimmedArgs, \"/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        if (flagCount !\u003d 1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        String flag \u003d getFlag(trimmedArgs);","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        String noFlagArgs \u003d getArgsWithoutFlag(trimmedArgs);","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e keywords \u003d getKeywords(noFlagArgs);","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e attributeStrings \u003d getAttributeStrings(noFlagArgs);","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        List\u003cAttribute\u003e parsedAttributes \u003d ParserUtil.parseAttributes(attributeStrings);","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        switch (flag) {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        case \"n/\":","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(keywords), parsedAttributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"        case \"p/\":","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"            return new FindCommand(new PhoneContainsKeywordsPredicate(keywords), parsedAttributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        case \"e/\":","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"            return new FindCommand(new EmailContainsKeywordsPredicate(keywords), parsedAttributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        case \"a/\":","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"            return new FindCommand(new AddressContainsKeywordsPredicate(keywords), parsedAttributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"        case \"t/\":","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"            return new FindCommand(new TagContainsKeywordsPredicate(keywords), parsedAttributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"        case \"i/\":","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"            return new FindCommand(new InsurancePolicyContainsKeywordsPredicate(keywords), parsedAttributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"        case \"m/\":","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"            return new FindCommand(new MeetingContainsKeywordsPredicate(keywords), parsedAttributes);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"        default:","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"    private String getArgsWithoutFlag(String args) {","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"        return args.substring(2).trim();","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"    private String getFlag(String args) {","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"        return args.substring(0, 2);","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"    // takes in arguments from user and returns a list of keywords to find","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"    private List\u003cString\u003e getKeywords(String args) {","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e splitStrings \u003d Arrays.asList(args.split(\"\\\\s+\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"        ArrayList\u003cString\u003e removeAttributeStrings \u003d new ArrayList\u003c\u003e(splitStrings);","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"        for (String string : splitStrings) {","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"            if (string.contains(\"-\")) {","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"                removeAttributeStrings.remove(string);","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":"        String trimmedKeywords \u003d String.join(\" \", removeAttributeStrings);","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(trimmedKeywords.split(KEYWORDS_REGEX, -1));","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"        return keywords;","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"    // takes in arguments from user and returns a list of options for filter","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"    private List\u003cString\u003e getAttributeStrings(String args) {","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e splitStrings \u003d Arrays.asList(args.split(\"\\\\s+\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"        ArrayList\u003cString\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"        for (String string : splitStrings) {","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"            if (string.contains(\"-\")) {","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"                attributes.add(string);","lastModifiedDate":"2021-03-19"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"        return attributes;","lastModifiedDate":"2021-03-19"},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":127,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":128,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wongkokian":102,"NBH99":1,"-":15,"jay9645":10}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"        List\u003cString\u003e splitArgs \u003d Arrays.asList(trimmedArgs.split(\"\\\\s+\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"            return new ListCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"            List\u003cAttribute\u003e attributes \u003d ParserUtil.parseAttributes(splitArgs);","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"            return new ListCommand(attributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"jay9645":35,"jlxw48":1}},{"path":"src/main/java/seedu/address/logic/parser/LockCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.LockCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"public class LockCommandParser implements Parser\u003cLockCommand\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"    public LockCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"        String[] passwords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"            return new LockCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"        if (passwords.length \u003e 2) {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LockCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"        //Length 1: User only provided new password.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"        if (passwords.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"            return new LockCommand(passwords[0]);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"        //Length 2: With old and new password.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"        return new LockCommand(passwords[0], passwords[1]);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"jay9645":32}},{"path":"src/main/java/seedu/address/logic/parser/MeetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.ADD_MEETING;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.CLEAR_MEETING;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.DELETE_MEETING;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.MEETING_EMPTY;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import static seedu.address.model.meeting.Meeting.isValidMeeting;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.commands.MeetCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"public class MeetCommandParser implements Parser\u003cMeetCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     * Parses the given {@code String} of arguments in the context of the MeetCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     * and returns a MeetCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    public MeetCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            String[] splitArgs \u003d trimmedArgs.split(\"\\\\s+\", 5);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            if (!splitArgs[1].equals(ADD_MEETING) \u0026\u0026 !splitArgs[1].equals(DELETE_MEETING)","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"                    \u0026\u0026 !splitArgs[1].equals(CLEAR_MEETING)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"                if (isValidMeeting(splitArgs[1], splitArgs[2], splitArgs[3], splitArgs[4])) {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                    return new MeetCommand(ParserUtil.parseIndex(splitArgs[0]), ADD_MEETING,","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"                            splitArgs[1], splitArgs[2], splitArgs[3], splitArgs[4]);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"                } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"                }","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"            splitArgs \u003d trimmedArgs.split(\"\\\\s+\", 6);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"            if (splitArgs[1].equals(MeetCommand.CLEAR_MEETING)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"                return new MeetCommand(ParserUtil.parseIndex(splitArgs[0]), CLEAR_MEETING,","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"                        MEETING_EMPTY, MEETING_EMPTY, MEETING_EMPTY, MEETING_EMPTY);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"            if (!isValidMeeting(splitArgs[2], splitArgs[3], splitArgs[4], splitArgs[5])) {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"            return new MeetCommand(ParserUtil.parseIndex(splitArgs[0]), splitArgs[1],","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"                    splitArgs[2], splitArgs[3], splitArgs[4], splitArgs[5]);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"NBH99":57}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"import java.util.List;","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.EditCommand.EditPolicyMode;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"     * Parses {@code edit policy mode} into a {@code an EditPolicyMode enumeration} and returns it.","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"     * @throws ParseException if the specified mode does not match the required constraints).","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"    public static EditPolicyMode parseEditPolicyMode(String editPolicyMode) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"        String trimmedEditPolicyMode \u003d editPolicyMode.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"        switch (trimmedEditPolicyMode) {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"        case \"-insert\":","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"            return EditPolicyMode.APPEND;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"        case \"-remove\":","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"            return EditPolicyMode.REMOVE;","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"        case \"-modify\":","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"jay9645"},"content":"            return EditPolicyMode.MODIFY;","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"jay9645"},"content":"        default:","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"            throw new ParseException(EditPolicyMode.MESSAGE_EDIT_POLICY_MODE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"jlxw48"},"content":"     * Parses {@code oneBasedIndices} and adds to a {@code List\u003cIndex\u003e}. Leading and trailing whitespaces","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"jlxw48"},"content":"     * will be trimmed.","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"jlxw48"},"content":"     * @param oneBasedIndices comma separated indices input by the user","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"jlxw48"},"content":"     * @return {@code List\u003cIndex\u003e}.","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"jlxw48"},"content":"     * @throws ParseException if any of the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"jlxw48"},"content":"    public static List\u003cIndex\u003e parseIndices(String oneBasedIndices) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"jlxw48"},"content":"        String[] splitByComma \u003d oneBasedIndices.split(\",\");","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"jlxw48"},"content":"        for (int i \u003d 0; i \u003c splitByComma.length; i++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"jlxw48"},"content":"            splitByComma[i] \u003d splitByComma[i].trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"jlxw48"},"content":"        List\u003cIndex\u003e listOfIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"jlxw48"},"content":"        for (String index : splitByComma) {","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"jlxw48"},"content":"            listOfIndices.add(parseIndex(index));","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"jlxw48"},"content":"        return listOfIndices;","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"     * Parses {@code attributes list in string form} into a {@code list of Attributes} and returns it.","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"jay9645"},"content":"    public static List\u003cAttribute\u003e parseAttributes(List\u003cString\u003e attributes) throws ParseException {","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"        List\u003cAttribute\u003e parsedAttributesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"jay9645"},"content":"        for (String attribute : attributes) {","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"jay9645"},"content":"            switch (attribute) {","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"jay9645"},"content":"            case \"-i\":","lastModifiedDate":"2021-04-02"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"                parsedAttributesList.add(Attribute.POLICY_ID);","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"            case \"-p\":","lastModifiedDate":"2021-04-02"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"                parsedAttributesList.add(Attribute.PHONE);","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"jay9645"},"content":"            case \"-e\":","lastModifiedDate":"2021-04-02"},{"lineNumber":99,"author":{"gitId":"jay9645"},"content":"                parsedAttributesList.add(Attribute.EMAIL);","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"jay9645"},"content":"            case \"-a\":","lastModifiedDate":"2021-04-02"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"                parsedAttributesList.add(Attribute.ADDRESS);","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"            case \"-m\":","lastModifiedDate":"2021-04-02"},{"lineNumber":105,"author":{"gitId":"jay9645"},"content":"                parsedAttributesList.add(Attribute.MEETING);","lastModifiedDate":"2021-04-02"},{"lineNumber":106,"author":{"gitId":"jay9645"},"content":"                break;","lastModifiedDate":"2021-04-02"},{"lineNumber":107,"author":{"gitId":"jay9645"},"content":"            default:","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"jay9645"},"content":"                throw new ParseException(Attribute.MESSAGE_ATTRIBUTE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"        return parsedAttributesList;","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":200,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":201,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"jay9645"},"content":"     * Parses a {@code String policy} into a {@code InsurancePolicy}.","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"jay9645"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"jay9645"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"jay9645"},"content":"     * @throws ParseException if the given {@code policy} is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"jay9645"},"content":"    public static InsurancePolicy parsePolicy(String policy) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"jay9645"},"content":"        requireNonNull(policy);","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"jay9645"},"content":"        String trimmedPolicy \u003d policy.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"jay9645"},"content":"        if (!InsurancePolicy.isValidPolicyId(trimmedPolicy)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"jay9645"},"content":"            throw new ParseException(InsurancePolicy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"jay9645"},"content":"        String[] idAndUrl \u003d trimmedPolicy.split(\"\u003e\", 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"jay9645"},"content":"        if (!InsurancePolicy.hasPolicyUrl(idAndUrl)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"jay9645"},"content":"            return new InsurancePolicy(idAndUrl[0]);","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"jay9645"},"content":"        // Else contains URL too","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"jay9645"},"content":"        String policyId \u003d idAndUrl[0];","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"jay9645"},"content":"        String policyUrl \u003d idAndUrl[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"jay9645"},"content":"        return new InsurancePolicy(policyId, policyUrl);","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":228,"author":{"gitId":"swayongshen"},"content":"     * Parses {@code Collection\u003cString\u003e policies} into a {@code List\u003cInsurancePolicy\u003e}.","lastModifiedDate":"2021-02-26"},{"lineNumber":229,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":230,"author":{"gitId":"swayongshen"},"content":"    public static List\u003cInsurancePolicy\u003e parsePolicies(Collection\u003cString\u003e policies) throws ParseException {","lastModifiedDate":"2021-02-26"},{"lineNumber":231,"author":{"gitId":"swayongshen"},"content":"        requireNonNull(policies);","lastModifiedDate":"2021-02-26"},{"lineNumber":232,"author":{"gitId":"swayongshen"},"content":"        final List\u003cInsurancePolicy\u003e policyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-02-26"},{"lineNumber":233,"author":{"gitId":"jay9645"},"content":"        for (String policy : policies) {","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"jay9645"},"content":"            requireNonNull(policy);","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"jay9645"},"content":"            policyList.add(parsePolicy(policy));","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"swayongshen"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":237,"author":{"gitId":"swayongshen"},"content":"        return policyList;","lastModifiedDate":"2021-02-26"},{"lineNumber":238,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":239,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"NBH99"},"content":"     * Parses a {@code String meeting} into a {@code meeting}.","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"NBH99"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-23"},{"lineNumber":242,"author":{"gitId":"NBH99"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"NBH99"},"content":"     * @throws ParseException if the given {@code meeting} is invalid.","lastModifiedDate":"2021-03-23"},{"lineNumber":244,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"NBH99"},"content":"    public static Meeting parseMeeting(String meeting) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"NBH99"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-03-23"},{"lineNumber":247,"author":{"gitId":"NBH99"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"NBH99"},"content":"            String trimmedMeeting \u003d meeting.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"NBH99"},"content":"            String[] arguments \u003d trimmedMeeting.split(\"\\\\s+\", 4);","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"NBH99"},"content":"            if (Meeting.isValidMeeting(arguments[0], arguments[1], arguments[2], arguments[3])) {","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"NBH99"},"content":"                return new Meeting(arguments[0], arguments[1], arguments[2], arguments[3]);","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"NBH99"},"content":"            } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"NBH99"},"content":"                throw new ParseException(Meeting.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":255,"author":{"gitId":"NBH99"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"NBH99"},"content":"            throw new ParseException(Meeting.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":259,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":260,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":261,"author":{"gitId":"NBH99"},"content":"     * Parses {@code Collection\u003cString\u003e meeting} into a {@code List\u003cMeeting\u003e}.","lastModifiedDate":"2021-03-23"},{"lineNumber":262,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":263,"author":{"gitId":"NBH99"},"content":"    public static List\u003cMeeting\u003e parseMeetings(Collection\u003cString\u003e meeting) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"NBH99"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-03-23"},{"lineNumber":265,"author":{"gitId":"NBH99"},"content":"        final List\u003cMeeting\u003e meetingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"NBH99"},"content":"        for (String meet : meeting) {","lastModifiedDate":"2021-03-23"},{"lineNumber":267,"author":{"gitId":"NBH99"},"content":"            requireNonNull(meet);","lastModifiedDate":"2021-03-23"},{"lineNumber":268,"author":{"gitId":"NBH99"},"content":"            meetingList.add(parseMeeting(meet));","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":270,"author":{"gitId":"NBH99"},"content":"        return meetingList;","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":272,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"wongkokian"},"content":"     * Parses a {@code String shortcutName}.","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"wongkokian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":276,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":277,"author":{"gitId":"wongkokian"},"content":"     * @throws ParseException if the given {@code shortcutName} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":278,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":279,"author":{"gitId":"wongkokian"},"content":"    public static String formatShortcutName(String shortcutName) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":280,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":281,"author":{"gitId":"wongkokian"},"content":"        String trimmedShortcutName \u003d shortcutName.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":282,"author":{"gitId":"wongkokian"},"content":"        if (!Shortcut.isValidShortcutName(trimmedShortcutName)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":283,"author":{"gitId":"wongkokian"},"content":"            throw new ParseException(Shortcut.MESSAGE_NAME_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":284,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":285,"author":{"gitId":"wongkokian"},"content":"        return trimmedShortcutName;","lastModifiedDate":"2021-03-29"},{"lineNumber":286,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":287,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":288,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":289,"author":{"gitId":"wongkokian"},"content":"     * Parses a {@code String shortcutCommand}.","lastModifiedDate":"2021-03-29"},{"lineNumber":290,"author":{"gitId":"wongkokian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":291,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":292,"author":{"gitId":"wongkokian"},"content":"     * @throws ParseException if the given {@code shortcutCommand} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":293,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":294,"author":{"gitId":"wongkokian"},"content":"    public static String formatShortcutCommand(String shortcutCommand) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":295,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":296,"author":{"gitId":"wongkokian"},"content":"        String trimmedShortcutCommand \u003d shortcutCommand.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":297,"author":{"gitId":"wongkokian"},"content":"        if (!Shortcut.isValidShortcutCommand(trimmedShortcutCommand)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":298,"author":{"gitId":"wongkokian"},"content":"            throw new ParseException(Shortcut.MESSAGE_COMMAND_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":299,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":300,"author":{"gitId":"wongkokian"},"content":"        return trimmedShortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":301,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"wongkokian":32,"NBH99":33,"swayongshen":13,"-":123,"jay9645":82,"jlxw48":19}},{"path":"src/main/java/seedu/address/logic/parser/PolicyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.PolicyCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"public class PolicyCommandParser implements Parser\u003cPolicyCommand\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"    public PolicyCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"            return new PolicyCommand(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PolicyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"jay9645":27}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        String attribute;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        String direction;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            String[] arguments \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"            attribute \u003d arguments[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            direction \u003d arguments[1];","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"        if (!attribute.equals(SortCommand.SORT_BY_NAME)","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 !attribute.equals(SortCommand.SORT_BY_INSURANCE_POLICY)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"        if (!direction.equals(SortCommand.DIRECTION_ASCENDING)","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 !direction.equals(SortCommand.DIRECTION_DESCENDING)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"        return new SortCommand(attribute, direction);","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"NBH99":51}},{"path":"src/main/java/seedu/address/logic/parser/UnlockCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.UnlockCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"public class UnlockCommandParser implements Parser\u003cUnlockCommand\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"    public UnlockCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"        if (splitArgs.length !\u003d 1 || trimmedArgs.length() \u003d\u003d 0) {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"                    UnlockCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"        return new UnlockCommand(splitArgs[0]);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"jay9645":20}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"public class AddressBook implements ReadOnlyAddressBook, ModifiableAddressBook {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"    public ObservableList\u003cPerson\u003e getModifiablePersonList() {","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":"        return persons.asModifiableObservableList();","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NBH99":6,"-":119}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"     * Returns the user prefs\u0027 shortcut library file path.","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"    Path getShortcutLibraryFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"     * Sets the user prefs\u0027 shortcut library file path.","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    void setShortcutLibraryFilePath(Path shortcutLibraryFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"     * Updates the Persons in person list to have only the particular given {@code attribute}.","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"jay9645"},"content":"     * @throws NullPointerException if {@code attribute} is null.","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"jay9645"},"content":"    void updatePersonListByAttribute(List\u003cAttribute\u003e attributeTypes);","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"jay9645"},"content":"     * Undoes the last modification done on the person list.","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"     * If list has not been modified, this method does nothing.","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"jay9645"},"content":"    void undoListModification();","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"jay9645"},"content":"     * Returns an Authentication object needed to lock and unlock ClientBook.","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"jay9645"},"content":"    Authentication getAuthentication();","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"jay9645"},"content":"     * Updates the comparator of the sorted person list to sort by the given {@code comparator}.","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"jay9645"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"jay9645"},"content":"    void updateSortedPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"NBH99"},"content":"     * Returns an unmodifiable view of the entire person list","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"NBH99"},"content":"    ObservableList\u003cPerson\u003e getWholePersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"wongkokian"},"content":"     * Replaces Shortcut Library data with the data in {@code shortcutLibrary}.","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"wongkokian"},"content":"    void setShortcutLibrary(ShortcutLibrary shortcutLibrary);","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"wongkokian"},"content":"    /** Returns the ShortcutLibrary */","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"wongkokian"},"content":"    ShortcutLibrary getShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"wongkokian"},"content":"     * Returns true if a shortcut with the same identity {@code shortcutName} exists in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"wongkokian"},"content":"    boolean hasShortcut(String shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"wongkokian"},"content":"     * Deletes the shortcut with the given name.","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"wongkokian"},"content":"     * {@code shortcutName} must exist in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"wongkokian"},"content":"    void deleteShortcut(String shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"wongkokian"},"content":"     * Adds the shortcut with the given shortcut name and command.","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"wongkokian"},"content":"     * {@code shortcutName} must not already exist in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"wongkokian"},"content":"    void addShortcut(String shortcutName, String shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"wongkokian"},"content":"     * Replaces the given shortcut named {@code target} with a new {@code shortcutCommand}.","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"wongkokian"},"content":"     * {@code target} must exist in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"wongkokian"},"content":"    void setShortcut(String target, String shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wongkokian":43,"NBH99":4,"-":87,"jay9645":27}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"    private List\u003cPerson\u003e backUpList;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"    private final Authentication authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"    private final ObservableList\u003cPerson\u003e modifiedList;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    private final ShortcutLibrary shortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs and Authentication and shortcutLibrary.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, Authentication authentication,","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"                        ShortcutLibrary shortcutLibrary) {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"        this.backUpList \u003d new ArrayList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"        this.authentication \u003d authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"        modifiedList \u003d this.addressBook.getModifiablePersonList();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        this.shortcutLibrary \u003d shortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs and shortcutLibrary.","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ShortcutLibrary shortcutLibrary) {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"        this.backUpList \u003d new ArrayList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"        modifiedList \u003d this.addressBook.getModifiablePersonList();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"        this.authentication \u003d new Authentication();","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        this.shortcutLibrary \u003d shortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"        this(new AddressBook(), new UserPrefs(), new Authentication(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"    public Path getShortcutLibraryFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"        return userPrefs.getShortcutLibraryFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"    public void setShortcutLibraryFilePath(Path shortcutLibraryFilePath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutLibraryFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"        userPrefs.setShortcutLibraryFilePath(shortcutLibraryFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"jay9645"},"content":"        this.backUpList \u003d new ArrayList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"jay9645"},"content":"        this.backUpList \u003d new ArrayList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"jay9645"},"content":"        this.backUpList \u003d new ArrayList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"jay9645"},"content":"    public void updatePersonListByAttribute(List\u003cAttribute\u003e attributeTypes) {","lastModifiedDate":"2021-03-19"},{"lineNumber":181,"author":{"gitId":"jay9645"},"content":"        List\u003cPerson\u003e tempPersonsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"jay9645"},"content":"        for (int i \u003d 0; i \u003c filteredPersons.size(); i++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"jay9645"},"content":"            Person person \u003d filteredPersons.get(i);","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"jay9645"},"content":"            tempPersonsList.add(new Person(person, attributeTypes));","lastModifiedDate":"2021-03-19"},{"lineNumber":185,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"jay9645"},"content":"        modifiedList.setAll(tempPersonsList);","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"jay9645"},"content":"    public void undoListModification() {","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"jay9645"},"content":"        modifiedList.setAll(backUpList);","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 shortcutLibrary.equals(other.shortcutLibrary);","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"jay9645"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Authenticator Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"jay9645"},"content":"    public Authentication getAuthentication() {","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"jay9645"},"content":"        return this.authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"jay9645"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorted Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"jay9645"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"jay9645"},"content":"    public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"jay9645"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"jay9645"},"content":"        modifiedList.sort(comparator);","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"NBH99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Whole Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"NBH99"},"content":"     * Returns an unmodifiable view of the entire person list","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"NBH99"},"content":"    public ObservableList\u003cPerson\u003e getWholePersonList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"NBH99"},"content":"        return new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":237,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":238,"author":{"gitId":"wongkokian"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Shortcut Library \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"wongkokian"},"content":"    public void setShortcutLibrary(ShortcutLibrary shortcutLibrary) {","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"wongkokian"},"content":"        this.shortcutLibrary.resetData(shortcutLibrary.getShortcuts());","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"wongkokian"},"content":"    public ShortcutLibrary getShortcutLibrary() {","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"wongkokian"},"content":"        return shortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"wongkokian"},"content":"    public boolean hasShortcut(String shortcutName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"wongkokian"},"content":"        return shortcutLibrary.hasShortcut(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"wongkokian"},"content":"    public void deleteShortcut(String shortcutName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"wongkokian"},"content":"        shortcutLibrary.removeShortcut(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"wongkokian"},"content":"    public void addShortcut(String shortcutName, String shortcutCommand) {","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"wongkokian"},"content":"        shortcutLibrary.addShortcut(shortcutName, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":265,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":266,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":267,"author":{"gitId":"wongkokian"},"content":"    public void setShortcut(String target, String shortcutCommand) {","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"wongkokian"},"content":"        requireAllNonNull(target, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":269,"author":{"gitId":"wongkokian"},"content":"        shortcutLibrary.setShortcut(target, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wongkokian":58,"NBH99":9,"-":158,"jay9645":46}},{"path":"src/main/java/seedu/address/model/ModifiableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":" * Modifiable view of an address book","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"public interface ModifiableAddressBook {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"     * Returns an modifiable view of the persons list.","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    ObservableList\u003cPerson\u003e getModifiablePersonList();","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"NBH99":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    Path getShortcutLibraryFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"wongkokian":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    private Path shortcutLibraryFilePath \u003d Paths.get(\"data\" , \"shortcutlibrary.json\");","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        setShortcutLibraryFilePath(newUserPrefs.getShortcutLibraryFilePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"    public Path getShortcutLibraryFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        return shortcutLibraryFilePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"    public void setShortcutLibraryFilePath(Path shortcutLibraryFilePath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutLibraryFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        this.shortcutLibraryFilePath \u003d shortcutLibraryFilePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 shortcutLibraryFilePath.equals(o.shortcutLibraryFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, shortcutLibraryFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"        sb.append(\"\\nShortcut library file location : \" + shortcutLibraryFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wongkokian":15,"-":85}},{"path":"src/main/java/seedu/address/model/attribute/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.model.attribute;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":" * An enumeration of Attributes that a person object can have","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"public enum Attribute {","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    POLICY_ID, EMAIL, ADDRESS, PHONE, MEETING;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_ATTRIBUTE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"            \"Attribute should be specified by -ATTRIBUTE, where ATTRIBUTE should be i for policy, p for phone,\"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"swayongshen"},"content":"                    + \" e for email, a for address or m for meetings.\";","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"NBH99":1,"swayongshen":2,"jay9645":9}},{"path":"src/main/java/seedu/address/model/insurancepolicy/InsurancePolicy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swayongshen"},"content":"package seedu.address.model.insurancepolicy;","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"/**","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":" * Represents an InsurancePolicy in the address book.","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"swayongshen"},"content":" */","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"public class InsurancePolicy {","lastModifiedDate":"2021-02-25"},{"lineNumber":13,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"PolicyIDs should not contain \u0027\u003e\u0027!. URLs should be \"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"            + \"preceded by \u0027\u003e\u0027 after the PolicyID.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"    public static final String MESSAGE_NO_POLICY \u003d \"Currently does not have an active policy\";","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"swayongshen"},"content":"    public final String policyId;","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"    private String policyUrl;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":20,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-25"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"     * Constructs an {@code InsurancePolicy} without URL.","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"swayongshen"},"content":"     *","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"swayongshen"},"content":"     * @param policyId the Id associated with the policy.","lastModifiedDate":"2021-02-25"},{"lineNumber":24,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-25"},{"lineNumber":25,"author":{"gitId":"swayongshen"},"content":"    public InsurancePolicy(String policyId) {","lastModifiedDate":"2021-02-25"},{"lineNumber":26,"author":{"gitId":"swayongshen"},"content":"        requireNonNull(policyId);","lastModifiedDate":"2021-02-25"},{"lineNumber":27,"author":{"gitId":"swayongshen"},"content":"        this.policyId \u003d policyId;","lastModifiedDate":"2021-02-25"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"        this.policyUrl \u003d null;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"     * Constructs an {@code InsurancePolicy} with URL.","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"     * @param policyId the Id associated with the policy.","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"     * @param url the URL to the policy document.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"jay9645"},"content":"    public InsurancePolicy(String policyId, String url) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"        this.policyId \u003d policyId;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"        this.policyUrl \u003d url;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"     * Retrieves the {@code policyUrl} associated with this policy.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"jay9645"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"     * @return the {@code policyUrl} in {@code Optional\u003cString\u003e}.","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"    public Optional\u003cString\u003e getOptionalPolicyUrl() {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"        return Optional.ofNullable(policyUrl);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"     * Checks if another object is the equal to this policy by comparing policy Id and policy URL.","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"swayongshen"},"content":"     * @param other the other object.","lastModifiedDate":"2021-02-25"},{"lineNumber":55,"author":{"gitId":"swayongshen"},"content":"     * @return true if the object is equal to this policy.","lastModifiedDate":"2021-02-25"},{"lineNumber":56,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-25"},{"lineNumber":57,"author":{"gitId":"swayongshen"},"content":"    @Override","lastModifiedDate":"2021-02-25"},{"lineNumber":58,"author":{"gitId":"swayongshen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-25"},{"lineNumber":59,"author":{"gitId":"jay9645"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"        } else if (!(other instanceof InsurancePolicy)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"jay9645"},"content":"        InsurancePolicy otherPolicy \u003d (InsurancePolicy) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"            return policyId.equals(otherPolicy.policyId) \u0026\u0026 policyUrl.equals(otherPolicy.policyUrl);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"            return policyId.equals(otherPolicy.policyId);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-25"},{"lineNumber":73,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":74,"author":{"gitId":"swayongshen"},"content":"    @Override","lastModifiedDate":"2021-02-25"},{"lineNumber":75,"author":{"gitId":"swayongshen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-25"},{"lineNumber":76,"author":{"gitId":"jay9645"},"content":"        return Objects.hash(policyUrl, policyId);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-25"},{"lineNumber":78,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":79,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-25"},{"lineNumber":80,"author":{"gitId":"swayongshen"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-02-25"},{"lineNumber":81,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-25"},{"lineNumber":82,"author":{"gitId":"swayongshen"},"content":"    public String toString() {","lastModifiedDate":"2021-02-25"},{"lineNumber":83,"author":{"gitId":"jay9645"},"content":"        if (policyUrl \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"            return policyId + \": No URL!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"        return policyId + \": \" + policyUrl;","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"jay9645"},"content":"     * Checks if input contains a valid policy ID without \u0027\u003e\u0027 character in the ID.","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"jay9645"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"jay9645"},"content":"     * @param input policy input to check.","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"     * @return true if policy input contains a valid policy ID.","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"    public static boolean isValidPolicyId(String input) {","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"        String[] splitByAngularBracket \u003d input.split(\"\u003e\", 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"jay9645"},"content":"        if (splitByAngularBracket.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"jay9645"},"content":"            // return true if length is 1, since no \u0027\u003e\u0027 was used, meaning no URL and valid policy ID.","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"jay9645"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"        // If input is of a correct format, then splitting by \u0027\u003e\u0027 would give us policy ID in the 0th index,","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"        // and policy URL in the 1st index.","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"jay9645"},"content":"        // By definition, URLs should not contain angular brackets, as they are usually used as delimiters around","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"jay9645"},"content":"        // URLs in free text. Hence our choice to use the \u0027\u003e\u0027 character as delimiter here.","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"jay9645"},"content":"        // Thus, we want to check if the URL contains any \u0027\u003e\u0027 which was what the input should have been split by.","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"        String possibleUrl \u003d splitByAngularBracket[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"jay9645"},"content":"        for (int i \u003d 0; i \u003c possibleUrl.length(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"jay9645"},"content":"            if (possibleUrl.charAt(i) \u003d\u003d \u0027\u003e\u0027) {","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"jay9645"},"content":"                return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"jay9645"},"content":"        return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"jay9645"},"content":"     * Checks if a policy input by user contains a URL associated with the policy.","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"jay9645"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"jay9645"},"content":"     * @param test policy input split by our delimiter \u0027\u003e\u0027.","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"jay9645"},"content":"     * @return true if input contains URL.","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"jay9645"},"content":"    public static boolean hasPolicyUrl(String[] test) {","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"jay9645"},"content":"        return test.length \u003d\u003d 2;","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"swayongshen"},"content":"}","lastModifiedDate":"2021-02-25"}],"authorContributionMap":{"swayongshen":36,"jay9645":90,"jlxw48":5}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":" * Represents a meeting with a client in the ClientBook.","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMeeting(String, String, String, String)}","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"public class Meeting {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            \"Meetings should only contain date, start time, end time, place and they should not be blank\";","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    public final String date;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    public final String start;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    public final String end;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    public final String place;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    public final String meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"     * Constructs a {@code Meeting}.","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"     * @param start A valid start time.","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"     * @param end A valid end time.","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"     * @param place A valid place.","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    public Meeting(String date, String start, String end, String place) {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        requireAllNonNull(date, start, end, place);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"        checkArgument(isValidMeeting(date, start, end, place), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        this.place \u003d place;","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"        this.meeting \u003d date + \" \" + start + \" \" + end + \" \" + place;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"     * Returns a new meeting by parsing the given string.","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"    public static Meeting newMeeting(String meeting) {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"            return ParserUtil.parseMeeting(meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"            return null;","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"     * Returns true if the given strings can form a valid meeting.","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"    public static boolean isValidMeeting(String date, String start, String end, String place) {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"        return checkDate(date) \u0026\u0026 checkTime(start, end) \u0026\u0026 place.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"     * Returns true if a given string is a valid meeting.","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"    public static boolean isValidMeeting(String meeting) {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"        Meeting meet \u003d newMeeting(meeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"        if (meet \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"            return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"        return isValidMeeting(meet.date, meet.start, meet.end, meet.place);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"     * Returns true if a given string is a date in the valid format.","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"    public static boolean checkDate(String date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"            LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd.MM.uuuu\").withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"     * Returns true if a given string is a time in the valid format.","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"    public static boolean checkTime(String start, String end) {","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"            LocalTime startTime \u003d LocalTime.parse(start, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"            LocalTime endTime \u003d LocalTime.parse(end, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"            return endTime.isAfter(startTime);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"    public String toString() {","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"        return \"Date: \" + date + \"  Start: \" + start + \"  End: \" + end + \"  Place: \" + place;","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"                || (other instanceof Meeting // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 date.equals(((Meeting) other).date) // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 start.equals(((Meeting) other).start) // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 end.equals(((Meeting) other).end) // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 place.equals(((Meeting) other).place)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"        return Objects.hash(date, start, end, place);","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"NBH99":125}},{"path":"src/main/java/seedu/address/model/person/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"                .anyMatch(keyword -\u003e person.getAddress().get().value.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"                || (other instanceof AddressContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 keywords.equals(((AddressContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":30}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"                .anyMatch(keyword -\u003e person.getEmail().get().value.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":30}},{"path":"src/main/java/seedu/address/model/person/InsurancePolicyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" * Tests that a {@code Person}\u0027s {@code InsurancePolicy} matches any of the keywords given.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"public class InsurancePolicyContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    public InsurancePolicyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    static boolean checkPolicies(List\u003cInsurancePolicy\u003e policies, String keyword) {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        boolean containsKeyword \u003d false;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        for (InsurancePolicy policy : policies) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"            if (policy.policyId.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"                containsKeyword \u003d true;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"                break;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        return containsKeyword;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"                .anyMatch(keyword -\u003e checkPolicies(person.getPolicies(), keyword));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"                || (other instanceof InsurancePolicyContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 keywords.equals(((InsurancePolicyContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":43}},{"path":"src/main/java/seedu/address/model/person/MeetingContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":" * Tests that a {@code Person}\u0027s {@code Meeting} matches any of the keywords given.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"public class MeetingContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    public MeetingContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    static boolean checkMeeting(List\u003cMeeting\u003e meetings, String keyword) {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        boolean containsKeyword \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        for (Meeting meeting : meetings) {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            if (meeting.meeting.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"                containsKeyword \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            try {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"                LocalTime keyTime \u003d LocalTime.parse(keyword, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"                LocalTime meetingStart \u003d LocalTime.parse(meeting.start, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"                LocalTime meetingEnd \u003d LocalTime.parse(meeting.end, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"                if ((keyTime.isAfter(meetingStart) \u0026\u0026 keyTime.isBefore(meetingEnd))) {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                    containsKeyword \u003d true;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"                    break;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"                continue;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"        return containsKeyword;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"                .anyMatch(keyword -\u003e checkMeeting(person.getMeetings(), keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"                || (other instanceof MeetingContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 keywords.equals(((MeetingContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"NBH99":56}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    //@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"                .anyMatch(keyword -\u003e person.getName().fullName.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    //@@author","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wongkokian":7,"-":24}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"    private static final String MY_POLICIES \u003d \"%s\u0027s Policies\";","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"    private final Optional\u003cPhone\u003e phone;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"    private final Optional\u003cEmail\u003e email;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"    private final Optional\u003cAddress\u003e address;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"    private final List\u003cInsurancePolicy\u003e policies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-02-25"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    private final List\u003cMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"jay9645"},"content":"    private boolean isShowPolicyList \u003d false;","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"     * Every field is present and not null.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"                  Set\u003cTag\u003e tags, List\u003cInsurancePolicy\u003e policies, List\u003cMeeting\u003e meeting) {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        requireAllNonNull(name, phone, email, address, tags, policies, meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"swayongshen"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-02-25"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"        this.phone \u003d Optional.of(phone);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"        this.email \u003d Optional.of(email);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"        this.address \u003d Optional.of(address);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"swayongshen"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-02-25"},{"lineNumber":50,"author":{"gitId":"swayongshen"},"content":"        this.policies.addAll(policies);","lastModifiedDate":"2021-02-25"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        this.meetings.addAll(meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"        this.isShowPolicyList \u003d true;","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-25"},{"lineNumber":54,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":55,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"     * Constructor to be used when {@code Person} does not have any associated policies.","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"        this.phone \u003d Optional.of(phone);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"        this.email \u003d Optional.of(email);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"        this.address \u003d Optional.of(address);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"jay9645"},"content":"        this.isShowPolicyList \u003d false;","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"     * Creates a code{Person} with the specified code{attribute} using the input code{person}.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"     * Other than name and tags, other unspecified field is empty.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"    public Person(Person person, List\u003cAttribute\u003e attributes) {","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"jay9645"},"content":"        requireAllNonNull(person, attributes);","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"jay9645"},"content":"        this.name \u003d person.name;","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"jay9645"},"content":"        if (attributes.contains(Attribute.POLICY_ID)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"jay9645"},"content":"            this.policies.addAll(person.policies);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"jay9645"},"content":"            this.isShowPolicyList \u003d true;","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"jay9645"},"content":"        if (attributes.contains(Attribute.PHONE)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"jay9645"},"content":"            this.phone \u003d Optional.of(person.getPhone().get());","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"jay9645"},"content":"            this.phone \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"        if (attributes.contains(Attribute.ADDRESS)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"            this.address \u003d Optional.of(person.getAddress().get());","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"jay9645"},"content":"            this.address \u003d Optional.empty();","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"        if (attributes.contains(Attribute.EMAIL)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"jay9645"},"content":"            this.email \u003d Optional.of(person.getEmail().get());","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"jay9645"},"content":"            this.email \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"        if (attributes.contains(Attribute.MEETING)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"            this.meetings.addAll(person.meetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"        this.tags.addAll(person.tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"jay9645"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":116,"author":{"gitId":"jay9645"},"content":"    public boolean isShowPolicyList() {","lastModifiedDate":"2021-04-02"},{"lineNumber":117,"author":{"gitId":"jay9645"},"content":"        return this.isShowPolicyList;","lastModifiedDate":"2021-04-02"},{"lineNumber":118,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":119,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-25"},{"lineNumber":129,"author":{"gitId":"swayongshen"},"content":"     * Returns an immutable policy arraylist, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-02-25"},{"lineNumber":130,"author":{"gitId":"swayongshen"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-02-25"},{"lineNumber":131,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-25"},{"lineNumber":132,"author":{"gitId":"swayongshen"},"content":"    public List\u003cInsurancePolicy\u003e getPolicies() {","lastModifiedDate":"2021-02-25"},{"lineNumber":133,"author":{"gitId":"swayongshen"},"content":"        return Collections.unmodifiableList(policies);","lastModifiedDate":"2021-02-25"},{"lineNumber":134,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-25"},{"lineNumber":135,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":136,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"NBH99"},"content":"     * Returns an immutable meeting arraylist, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"NBH99"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"NBH99"},"content":"    public List\u003cMeeting\u003e getMeetings() {","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"NBH99"},"content":"        return Collections.unmodifiableList(meetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"swayongshen"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-02-25"},{"lineNumber":177,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 otherPerson.getPolicies().equals(getPolicies())","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"NBH99"},"content":"                \u0026\u0026 otherPerson.getMeetings().equals(getMeetings());","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"NBH99"},"content":"        return Objects.hash(name, phone, email, address, tags, policies, meetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"jay9645"},"content":"    public boolean hasPolicies() {","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"jay9645"},"content":"        return policies.size() \u003e 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"jlxw48"},"content":"    public String getPersonNameAndAllPoliciesInString() {","lastModifiedDate":"2021-03-18"},{"lineNumber":192,"author":{"gitId":"jay9645"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"jlxw48"},"content":"        builder.append(String.format(MY_POLICIES, name)).append(\"\\n\");","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"jay9645"},"content":"        policies.forEach(string -\u003e builder.append(string).append(\"\\n\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"jay9645"},"content":"        return builder.substring(0, builder.length() - 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"jay9645"},"content":"        builder.append(getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"jay9645"},"content":"        if (this.phone.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"jay9645"},"content":"            builder.append(\"; Phone: \").append(phone.get());","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"jay9645"},"content":"        if (this.email.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"jay9645"},"content":"            builder.append(\"; Email: \").append(email.get());","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"jay9645"},"content":"        if (this.address.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"jay9645"},"content":"            builder.append(\"; Address: \").append(address.get());","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":217,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":218,"author":{"gitId":"swayongshen"},"content":"        List\u003cInsurancePolicy\u003e policies \u003d getPolicies();","lastModifiedDate":"2021-02-25"},{"lineNumber":219,"author":{"gitId":"swayongshen"},"content":"        if (!policies.isEmpty()) {","lastModifiedDate":"2021-02-25"},{"lineNumber":220,"author":{"gitId":"jay9645"},"content":"            builder.append(\"; Policies: \");","lastModifiedDate":"2021-03-15"},{"lineNumber":221,"author":{"gitId":"jay9645"},"content":"            policies.forEach(policyString -\u003e builder.append(policyString).append(\", \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"jay9645"},"content":"            builder.deleteCharAt(builder.length() - 1).deleteCharAt(builder.length() - 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"swayongshen"},"content":"        }","lastModifiedDate":"2021-02-25"},{"lineNumber":224,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"NBH99"},"content":"        if (!meetings.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"NBH99"},"content":"            builder.append(\"; Meeting: \");","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"NBH99"},"content":"            meetings.forEach(meetingString -\u003e builder.append(meetingString).append(\", \"));","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"NBH99"},"content":"            builder.deleteCharAt(builder.length() - 1).deleteCharAt(builder.length() - 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NBH99":26,"swayongshen":21,"-":110,"jay9645":72,"jlxw48":5}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"                .anyMatch(keyword -\u003e person.getPhone().get().value.contains(keyword));","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":30}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    static boolean checkTags(Set\u003cTag\u003e tags, String keyword) {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        boolean containsKeyword \u003d false;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"            if (tag.tagName.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"                containsKeyword \u003d true;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"                break;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        return containsKeyword;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"                .anyMatch(keyword -\u003e checkTags(person.getTags(), keyword));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":44}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"jay9645"},"content":"     * Returns the backing list as a modifiable {@code ObservableList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"jay9645"},"content":"    public ObservableList\u003cPerson\u003e asModifiableObservableList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"jay9645"},"content":"        return internalList;","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":137,"jay9645":8}},{"path":"src/main/java/seedu/address/model/shortcut/Shortcut.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.CommandWord;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.parser.ClientBookParser;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" * Represents an Shortcut in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidShortcutName(String)} and","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":" * command is valid as declared in {@link #isValidShortcutCommand(String)}","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"public class Shortcut {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_NAME_CONSTRAINTS \u003d \"Shortcut names should be alphanumeric and should not be \"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"            + \"the same as existing commands\";","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_COMMAND_CONSTRAINTS \u003d \"Shortcut commands should be valid\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    public final String shortcutName;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    public final String shortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     * Constructs a {@code Shortcut}.","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * @param shortcutName A valid shortcut name.","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @param shortcutCommand A valid shortcut command.","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    public Shortcut(String shortcutName, String shortcutCommand) {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        checkArgument(isValidShortcutName(shortcutName), MESSAGE_NAME_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        checkArgument(isValidShortcutCommand(shortcutCommand), MESSAGE_COMMAND_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        this.shortcutName \u003d shortcutName;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        this.shortcutCommand \u003d shortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     * Returns true if a given string is a valid shortcut name.","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    public static boolean isValidShortcutName(String test) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !CommandWord.contains(test);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"     * Returns true if a given string is a valid command.","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"    public static boolean isValidShortcutCommand(String test) {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"            ClientBookParser clientBookParser \u003d new ClientBookParser();","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"            clientBookParser.parseCommand(test);","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        } catch (ParseException ex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"     * Returns the shortcut name.","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"    public String getShortcutName() {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        return this.shortcutName;","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"     * Returns the shortcut command.","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"    public String getShortcutCommand() {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        return this.shortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"     * Returns true if both shortcuts have the same name.","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"    public boolean isSameShortcutName(Shortcut otherShortcut) {","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"        return otherShortcut !\u003d null","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 otherShortcut.getShortcutName().equals(getShortcutName());","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"                || (other instanceof Shortcut // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 shortcutName.equals(((Shortcut) other).shortcutName) // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 shortcutCommand.equals(((Shortcut) other).shortcutCommand)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"        return shortcutName.hashCode();","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"    public String toString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"        return shortcutName + \" \u003d \" + shortcutCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":101,"jay9645":3}},{"path":"src/main/java/seedu/address/model/shortcut/ShortcutLibrary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"public class ShortcutLibrary {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"    public static final String NO_SHORTCUT_FEEDBACK \u003d \"You have no shortcuts!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"    private static final String TITLE \u003d \"Shortcuts\";","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    private HashMap\u003cString, String\u003e shortcuts;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    public ShortcutLibrary() {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"        this.shortcuts \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"     * Creates a ShortcutLibrary using the Shortcuts in the {@code toBeCopied}","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    public ShortcutLibrary(HashMap\u003cString, String\u003e toBeCopied) {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"     * Resets the existing data of this {@code ShortcutLibrary} with {@code newData}.","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    public void resetData(HashMap\u003cString, String\u003e newData) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        this.shortcuts \u003d newData;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    //// person-level operations","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     * Returns true if a shortcut with the same identity {@code shortcutName} exists in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    public boolean hasShortcut(String shortcutName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        return this.shortcuts.containsKey(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"     * Adds a shortcut to the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"     * The shortcut must not already exist in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"    public void addShortcut(String shortcutName, String shortcutCommand) {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        this.shortcuts.put(shortcutName, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"     * Replaces the given shortcut named {@code target} in the list with a new {@code shortcutCommand}.","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"     * {@code target} must exist in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    public void setShortcut(String target, String shortcutCommand) {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        shortcuts.replace(target, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"     * Removes a shortcut named {@code shortcutName} from this {@code ShortcutLibrary}.","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"     * {@code shortcutName} must exist in the shortcut library.","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"    public void removeShortcut(String shortcutName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        shortcuts.remove(shortcutName);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"     * Returns true is ShortcutLibrary is empty.","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"        return shortcuts.isEmpty();","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"    public String getAllShortcutsInString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"        if (shortcuts.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"            return NO_SHORTCUT_FEEDBACK;","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"        final StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"        sb.append(TITLE).append(\"\\n\");","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"        sb.append(this.toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"    //// accessor methods","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"    public HashMap\u003cString, String\u003e getShortcuts() {","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"        return this.shortcuts;","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"    //// util methods","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"    public String toString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"        shortcuts.forEach((name, command) -\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"            String mapping \u003d name + \" \u003d \" + command + \"\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"            sb.append(mapping);","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"        });","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"        return sb.substring(0, sb.length() - 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"                || (other instanceof ShortcutLibrary // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"                \u0026\u0026 shortcuts.equals(((ShortcutLibrary) other).shortcuts));","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"        return shortcuts.hashCode();","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":119}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"import java.util.List;","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.JsonAdaptedInsurancePolicy;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new InsurancePolicy(\"POL_123\")),","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new Meeting(\"20.02.2021\", \"15:00\", \"18:00\", \"MRT\"))),","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"jlxw48"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new InsurancePolicy(\"POL#9999999999\")),","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new Meeting(\"15.03.2021\", \"20:30\", \"22:30\", \"Mall\"))),","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new InsurancePolicy(\"POL_456\")),","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new Meeting(\"30.06.2021\", \"14:00\", \"15:00\", \"Address\"))),","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"jlxw48"},"content":"                Arrays.asList(new InsurancePolicy(\"#12345\u003ewww.policycompany.com/#12345\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"                                new InsurancePolicy(\"#67890\u003ewww.policycompany.com/#67890\")),","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new Meeting(\"25.04.2021\", \"12:30\", \"15:30\", \"Address\"))),","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new InsurancePolicy(\"POL_789\")),","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new Meeting(\"03.05.2021\", \"15:00\", \"18:00\", \"MRT\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"                                new Meeting(\"08.05.2021\", \"12:00\", \"14:00\", \"MRT\"))),","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new InsurancePolicy(\"POL#111111111\")),","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"                Arrays.asList(new Meeting(\"28.02.2021\", \"09:00\", \"11:00\", \"Mall\")))","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":80,"author":{"gitId":"jay9645"},"content":"     * Returns a list of {@code InsurancePolicy} from the list of strings given.","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":82,"author":{"gitId":"swayongshen"},"content":"    public static List\u003cInsurancePolicy\u003e getPolicyList(String... strings) {","lastModifiedDate":"2021-02-26"},{"lineNumber":83,"author":{"gitId":"swayongshen"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-02-26"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"                .map(policyString -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"                    String[] policyIdAndUrl \u003d JsonAdaptedInsurancePolicy.policyIdAndUrlParser(policyString);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"                    return new InsurancePolicy(policyIdAndUrl[0], policyIdAndUrl[1]);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"jay9645"},"content":"                })","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"swayongshen"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-02-26"},{"lineNumber":89,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"     * Returns a list of {@code Meeting} from the list of strings given.","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"    public static List\u003cMeeting\u003e getMeetingList(String... strings) {","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"                .map(Meeting::newMeeting)","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"NBH99":26,"swayongshen":8,"-":54,"jay9645":7,"jlxw48":4}},{"path":"src/main/java/seedu/address/storage/Authentication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"import java.io.File;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"import java.security.InvalidKeyException;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"import java.security.MessageDigest;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"import javax.crypto.BadPaddingException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"import javax.crypto.Cipher;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"import javax.crypto.IllegalBlockSizeException;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"import javax.crypto.NoSuchPaddingException;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"import javax.crypto.SecretKey;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":"import javax.crypto.spec.SecretKeySpec;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"import net.lingala.zip4j.ZipFile;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"import net.lingala.zip4j.exception.ZipException;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"import net.lingala.zip4j.model.ZipParameters;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"import net.lingala.zip4j.model.enums.AesKeyStrength;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"import net.lingala.zip4j.model.enums.CompressionLevel;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"import net.lingala.zip4j.model.enums.CompressionMethod;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"import net.lingala.zip4j.model.enums.EncryptionMethod;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":" * Handles the encryption and decryption of the data .json file.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"jay9645"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"public class Authentication {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"    private static final String ENCRYPTION_KEY \u003d \"wQhgIpxA2KAds5PF2bJc32\";","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"    private static final String PASSWORD_FILE_NAME \u003d \"keystore\";","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"jay9645"},"content":"    /** Path of the .json file containing the serialized address book */","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"    private final Path filePath;","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"    private Optional\u003cString\u003e password \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"     * Instantiates an Authentication object with the path of the data .json file.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"     * @param filePath path of the data .json file","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"    public Authentication(Path filePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"swayongshen"},"content":"     * Instantiates Authentication object with the default path \"/data/clientbook.json\"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"    public Authentication() {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"swayongshen"},"content":"        this.filePath \u003d Paths.get(\"/data/clientbook.json\");","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"        this.password \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"     * Initiates a feedback loop to get the user\u0027s password to unlock the encrypted zip file.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"    public void unlock() throws ZipException {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"        assert isExistsZip() : \"Zip must exist to call the unlock() method.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"        //If there is zip but it\u0027s not locked, just unzip it.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"        if (!isExistsLockedZip()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"jay9645"},"content":"            attemptUnzipUnprotected();","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"jay9645"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"jay9645"},"content":"            while (true) {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"jay9645"},"content":"                System.out.println(\"Please enter your password: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"                String attemptPassword \u003d scanner.nextLine();","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"jay9645"},"content":"                if (attemptUnzip(attemptPassword)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"jay9645"},"content":"                    this.password \u003d Optional.of(attemptPassword);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"jay9645"},"content":"                    System.out.println(\"Password is verified. Launching ClientBook.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"jay9645"},"content":"                    break;","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"jay9645"},"content":"                } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"                    System.out.println(\"Password is incorrect, please try again.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"                }","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"jay9645"},"content":"     * Checks if the locked zip containing the data file exists.","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"jay9645"},"content":"     * @return true if the locked zip exists, false otherwise.","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"jay9645"},"content":"    public boolean isExistsZip() {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"        return Files.exists(Paths.get(this.getZipPath()));","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"jay9645"},"content":"     * Checks if the locked zip file containing the data .json file exists.","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"jay9645"},"content":"     * @return true if the zip file exists.","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"jay9645"},"content":"     * @throws ZipException if error occurs when checking if the zip file is encrypted.","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"    public boolean isExistsLockedZip() throws ZipException {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"        ZipFile dataZip \u003d new ZipFile(this.getZipPath());","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"jay9645"},"content":"        return isExistsZip() \u0026\u0026 dataZip.isEncrypted();","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"jay9645"},"content":"     * Locks the data .json file in a password protected zip file and delete the original data .json file.","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"jay9645"},"content":"     * Assumes: data .json file exists.","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"    public void lock() throws ZipException {","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"jay9645"},"content":"        ZipFile dataZip;","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"jay9645"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"jay9645"},"content":"            //If ClientBook is locked, encrypt the zip file using the password.","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"jay9645"},"content":"            if (this.password.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"jay9645"},"content":"                dataZip \u003d new ZipFile(this.getZipPath(), this.password.get().toCharArray());","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"jay9645"},"content":"                ZipParameters parameters \u003d new ZipParameters();","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"jay9645"},"content":"                parameters.setEncryptFiles(true);","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"jay9645"},"content":"                parameters.setEncryptionMethod(EncryptionMethod.AES);","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"jay9645"},"content":"                parameters.setAesKeyStrength(AesKeyStrength.KEY_STRENGTH_256);","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"jay9645"},"content":"                parameters.setCompressionLevel(CompressionLevel.NORMAL);","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"jay9645"},"content":"                parameters.setCompressionMethod(CompressionMethod.DEFLATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"jay9645"},"content":"                dataZip.addFile(this.filePath.toString(), parameters);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"jay9645"},"content":"            //ClientBook is not locked, zip the data .json file without a password.","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"jay9645"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"jay9645"},"content":"                dataZip \u003d new ZipFile(this.getZipPath());","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"jay9645"},"content":"                dataZip.addFile(this.filePath.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"jay9645"},"content":"        } catch (ZipException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"jay9645"},"content":"            logger.info(\"Failed to compress data .json file into a zip file\");","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"jay9645"},"content":"            throw e;","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"jay9645"},"content":"     * Sets a hook to lock the data .json file in the zip file when the application closes.","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"jay9645"},"content":"    public void setShutDownHook() {","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"jay9645"},"content":"        Runtime.getRuntime().addShutdownHook(new Thread(() -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"jay9645"},"content":"            try {","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"jay9645"},"content":"                this.lock();","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"jay9645"},"content":"                this.deleteJson();","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"jay9645"},"content":"            } catch (ZipException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"jay9645"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"jay9645"},"content":"        }));","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"jay9645"},"content":"    public String getPassword() {","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"jay9645"},"content":"        return this.password.orElse(\"\");","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"jay9645"},"content":"    public boolean isPasswordPresent() {","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"jay9645"},"content":"        return this.password.isPresent();","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"jay9645"},"content":"    public void setPassword(Optional\u003cString\u003e password) throws NoSuchPaddingException,","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"jay9645"},"content":"            NoSuchAlgorithmException, IOException, BadPaddingException,","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"jay9645"},"content":"            IllegalBlockSizeException, InvalidKeyException {","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"jay9645"},"content":"        this.password \u003d password;","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"jay9645"},"content":"        encryptAndStorePassword();","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"jay9645"},"content":"    public void removePassword() {","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"jay9645"},"content":"        this.password \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"jay9645"},"content":"     * Reads the password from the password file if any and set it to this.password.","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"jay9645"},"content":"    public void readPasswordFileAndSetPassword() throws IOException, IllegalBlockSizeException,","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"jay9645"},"content":"            InvalidKeyException, BadPaddingException, NoSuchAlgorithmException, NoSuchPaddingException {","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"jay9645"},"content":"        //Decrypt the password file if it exists.","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"jay9645"},"content":"        File passwordFile \u003d new File(this.getPasswordFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"jay9645"},"content":"        if (!passwordFile.exists()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"jay9645"},"content":"            this.password \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"jay9645"},"content":"        byte[] encryptedPasswordBytes \u003d Files.readAllBytes(passwordFile.toPath());","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"jay9645"},"content":"        this.password \u003d Optional.of(decryptPassword(encryptedPasswordBytes));","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"jay9645"},"content":"        encryptAndStorePassword();","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"jay9645"},"content":"    private void deleteJson() {","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"jay9645"},"content":"        File dataJson \u003d new File(this.filePath.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"jay9645"},"content":"        dataJson.delete();","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"jay9645"},"content":"    private boolean attemptUnzip(String password) throws ZipException {","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"jay9645"},"content":"        ZipFile dataZip \u003d new ZipFile(this.getZipPath());","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"jay9645"},"content":"        //First check if zip file encrypted and set the password to be used.","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"jay9645"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"jay9645"},"content":"            if (dataZip.isEncrypted()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"jay9645"},"content":"                dataZip.setPassword(password.toCharArray());","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"jay9645"},"content":"        } catch (ZipException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"jay9645"},"content":"            logger.info(\"Error attempting to check zip file at: \" + this.getZipPath());","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"jay9645"},"content":"            throw e;","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"jay9645"},"content":"        //Attempt to unzip the file using the provided password.","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"jay9645"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"jay9645"},"content":"            dataZip.extractAll(this.getFolderPath());","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"jay9645"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"jay9645"},"content":"        } catch (ZipException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"jay9645"},"content":"            logger.info(\"Error when unzipping file at: \" + this.getZipPath());","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"jay9645"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"swayongshen"},"content":"     * Attempts to unzip the unprotected clientbook.zip file.","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"jay9645"},"content":"     * @return true if unzip is successful","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"jay9645"},"content":"     * @throws ZipException when trying to unzip the file.","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"jay9645"},"content":"    private boolean attemptUnzipUnprotected() throws ZipException {","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"jay9645"},"content":"        return attemptUnzip(\"\");","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"jay9645"},"content":"     * Gets the path of the .zip file containing the data .json file.","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"swayongshen"},"content":"    String getZipPath() {","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"jay9645"},"content":"        String zipPath \u003d filePath.toString().replaceAll(\"\\\\.json$\", \".zip\");","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"jay9645"},"content":"        return zipPath;","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"jay9645"},"content":"     * Gets path of the folder containing the data .json file.","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"jay9645"},"content":"    private String getFolderPath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"jay9645"},"content":"        String folderPath \u003d this.filePath.getParent().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"jay9645"},"content":"        return folderPath;","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"swayongshen"},"content":"    String getPasswordFilePath() {","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"jay9645"},"content":"        return this.getFolderPath() + \"/\" + PASSWORD_FILE_NAME;","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"jay9645"},"content":"    private SecretKey getSecretKeyFromEncryptionKey() throws NoSuchAlgorithmException {","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"jay9645"},"content":"        byte[] encodedKey \u003d ENCRYPTION_KEY.getBytes(StandardCharsets.UTF_8);","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"jay9645"},"content":"        //Hash the encodedkey","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"jay9645"},"content":"        byte[] encodedKeyDigest \u003d MessageDigest.getInstance(\"SHA-1\").digest(encodedKey);","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"jay9645"},"content":"        //Get first 16 byte \u003d 128 bits to be used as key.","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"jay9645"},"content":"        encodedKeyDigest \u003d Arrays.copyOf(encodedKeyDigest, 16);","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"jay9645"},"content":"        return new SecretKeySpec(encodedKeyDigest, \"AES\");","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"jay9645"},"content":"    //@@authoer swayongshen-rused","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"jay9645"},"content":"    //Resused from https://howtodoinjava.com/java/java-security/java-aes-encryption-example/","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"jay9645"},"content":"    private void encryptAndStorePassword() throws IOException, NoSuchPaddingException,","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"jay9645"},"content":"            NoSuchAlgorithmException, BadPaddingException, IllegalBlockSizeException, InvalidKeyException {","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"jay9645"},"content":"        //Encrypt this.password using DES into a byte[].","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"jay9645"},"content":"        SecretKey myKey \u003d getSecretKeyFromEncryptionKey();","lastModifiedDate":"2021-03-17"},{"lineNumber":256,"author":{"gitId":"jay9645"},"content":"        Cipher cipher \u003d Cipher.getInstance(\"AES/ECB/PKCS5Padding\");","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"jay9645"},"content":"        cipher.init(Cipher.ENCRYPT_MODE, myKey);","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"jay9645"},"content":"        byte[] passwordBytes \u003d this.getPassword().getBytes(StandardCharsets.UTF_8);","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"jay9645"},"content":"        byte[] passwordEncrypted \u003d cipher.doFinal(passwordBytes);","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":261,"author":{"gitId":"jay9645"},"content":"        //Write the encrypted password byte[] into the password file.","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"jay9645"},"content":"        File passwordFile \u003d new File(this.getPasswordFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"jay9645"},"content":"        FileUtil.createParentDirsOfFile(passwordFile.toPath());","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"jay9645"},"content":"        FileOutputStream outputStream \u003d new FileOutputStream(passwordFile);","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"jay9645"},"content":"        outputStream.write(passwordEncrypted);","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"jay9645"},"content":"    //@@authoer swayongshen-rused","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"jay9645"},"content":"    //Resused from https://howtodoinjava.com/java/java-security/java-aes-encryption-example/","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"jay9645"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"jay9645"},"content":"     * Decrypts the bytes of the encrypted password which was read from the password file.","lastModifiedDate":"2021-03-17"},{"lineNumber":272,"author":{"gitId":"jay9645"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":273,"author":{"gitId":"jay9645"},"content":"    private String decryptPassword(byte[] encryptedPasswordBytes) throws NoSuchPaddingException,","lastModifiedDate":"2021-03-17"},{"lineNumber":274,"author":{"gitId":"jay9645"},"content":"            NoSuchAlgorithmException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException {","lastModifiedDate":"2021-03-17"},{"lineNumber":275,"author":{"gitId":"jay9645"},"content":"        Cipher cipher \u003d Cipher.getInstance(\"AES/ECB/PKCS5PADDING\");","lastModifiedDate":"2021-03-17"},{"lineNumber":276,"author":{"gitId":"jay9645"},"content":"        SecretKey myKey \u003d this.getSecretKeyFromEncryptionKey();","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"jay9645"},"content":"        cipher.init(Cipher.DECRYPT_MODE, myKey);","lastModifiedDate":"2021-03-17"},{"lineNumber":278,"author":{"gitId":"jay9645"},"content":"        byte[] textDecrypted \u003d cipher.doFinal(encryptedPasswordBytes);","lastModifiedDate":"2021-03-17"},{"lineNumber":279,"author":{"gitId":"jay9645"},"content":"        return new String(textDecrypted);","lastModifiedDate":"2021-03-17"},{"lineNumber":280,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":281,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":283,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"swayongshen":5,"jay9645":278}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInsurancePolicy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swayongshen"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-02-26"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"/**","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":" * Jackson-friendly version of {@link InsurancePolicy}.","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":" */","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"public class JsonAdaptedInsurancePolicy {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"    private static final String NO_URL_JSON \u003d \"no_url\";","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":"    private static final String NO_URL_DISPLAY \u003d \"No URL!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"    private final String policyId;","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"    private final String policyUrl;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"swayongshen"},"content":"     * Constructs a {@code JsonAdaptedInsurancePolicy} with the given {@code policyId}.","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":22,"author":{"gitId":"swayongshen"},"content":"    @JsonCreator","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":"    public JsonAdaptedInsurancePolicy(String policyAndUrlIfPresent) {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"        String[] policyAndUrl \u003d policyIdAndUrlParser(policyAndUrlIfPresent);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"        this.policyId \u003d policyAndUrl[0];","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"        this.policyUrl \u003d policyAndUrl[1];","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"     * Converts a given {@code InsurancePolicy} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":32,"author":{"gitId":"swayongshen"},"content":"    public JsonAdaptedInsurancePolicy(InsurancePolicy source) {","lastModifiedDate":"2021-02-26"},{"lineNumber":33,"author":{"gitId":"swayongshen"},"content":"        policyId \u003d source.policyId;","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"jlxw48"},"content":"        policyUrl \u003d source.getOptionalPolicyUrl().orElse(NO_URL_DISPLAY);","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"     * Parses raw input from JSON file and returns in a format usable by {@code InsurancePolicy} constructor.","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"     * @param policyAndUrlIfPresent raw input form JSON file.","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"     * @return policy ID and policy URL (if any) stored in an array.","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jlxw48"},"content":"    public static String[] policyIdAndUrlParser(String policyAndUrlIfPresent) {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"        String[] policyIdAndUrl \u003d policyAndUrlIfPresent.split(\"\u003e\", 2);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"jlxw48"},"content":"        if (policyIdAndUrl.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"            return new String[] {policyIdAndUrl[0], NO_URL_DISPLAY};","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"jlxw48"},"content":"        policyIdAndUrl[1] \u003d definePolicyUrl(policyIdAndUrl[1]);","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"        return policyIdAndUrl;","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"    private static String definePolicyUrl(String urlIfPresent) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"        if (urlIfPresent.equals(NO_URL_JSON)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"            return NO_URL_DISPLAY;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"        return urlIfPresent;","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":60,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":61,"author":{"gitId":"swayongshen"},"content":"    @JsonValue","lastModifiedDate":"2021-02-26"},{"lineNumber":62,"author":{"gitId":"jlxw48"},"content":"    public String getPolicyInfo() {","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jlxw48"},"content":"        return policyId + \"\u003e\" + policyUrl;","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":65,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":66,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":67,"author":{"gitId":"swayongshen"},"content":"     * Converts this Jackson-friendly adapted InsurancePolicy object into the model\u0027s {@code InsurancePolicy} object.","lastModifiedDate":"2021-02-26"},{"lineNumber":68,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":69,"author":{"gitId":"swayongshen"},"content":"    public InsurancePolicy toModelType() {","lastModifiedDate":"2021-02-26"},{"lineNumber":70,"author":{"gitId":"jlxw48"},"content":"        return new InsurancePolicy(policyId, policyUrl);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":72,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":73,"author":{"gitId":"swayongshen"},"content":"}","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"swayongshen":35,"jlxw48":38}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"public class JsonAdaptedMeeting {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    private final String meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given {@code meeting}.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    public JsonAdaptedMeeting(String meeting) {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        meeting \u003d source.meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    @JsonValue","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    public String getMeeting() {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        return meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"     * Converts this Jackson-friendly adapted meeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        if (!Meeting.isValidMeeting(meeting)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"            throw new IllegalValueException(Meeting.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"        return Meeting.newMeeting(meeting);","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"NBH99":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-26"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"    private final List\u003cJsonAdaptedInsurancePolicy\u003e policies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"swayongshen"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-02-26"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"            @JsonProperty(\"policies\") List\u003cJsonAdaptedInsurancePolicy\u003e policies,","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"            @JsonProperty(\"meeting\") List\u003cJsonAdaptedMeeting\u003e meeting) {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"swayongshen"},"content":"        if (policies !\u003d null) {","lastModifiedDate":"2021-02-26"},{"lineNumber":54,"author":{"gitId":"swayongshen"},"content":"            this.policies.addAll(policies);","lastModifiedDate":"2021-02-26"},{"lineNumber":55,"author":{"gitId":"swayongshen"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"        if (meeting !\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"            this.meetings.addAll(meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"        phone \u003d source.getPhone().get().value;","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"        email \u003d source.getEmail().get().value;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"        address \u003d source.getAddress().get().value;","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"swayongshen"},"content":"        policies.addAll(source.getPolicies().stream()","lastModifiedDate":"2021-02-26"},{"lineNumber":73,"author":{"gitId":"swayongshen"},"content":"                .map(JsonAdaptedInsurancePolicy::new)","lastModifiedDate":"2021-02-26"},{"lineNumber":74,"author":{"gitId":"swayongshen"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-02-26"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"        meetings.addAll(source.getMeetings().stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"                .map(JsonAdaptedMeeting::new)","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"swayongshen"},"content":"        final List\u003cInsurancePolicy\u003e personPolicies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-02-26"},{"lineNumber":92,"author":{"gitId":"swayongshen"},"content":"        for (JsonAdaptedInsurancePolicy policy : policies) {","lastModifiedDate":"2021-02-26"},{"lineNumber":93,"author":{"gitId":"swayongshen"},"content":"            personPolicies.add(policy.toModelType());","lastModifiedDate":"2021-02-26"},{"lineNumber":94,"author":{"gitId":"swayongshen"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":95,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"        final List\u003cMeeting\u003e personMeetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"        for (JsonAdaptedMeeting meeting : meetings) {","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"            personMeetings.add(meeting.toModelType());","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":135,"author":{"gitId":"swayongshen"},"content":"        final List\u003cInsurancePolicy\u003e modelPolicies \u003d new ArrayList\u003c\u003e(personPolicies);","lastModifiedDate":"2021-02-26"},{"lineNumber":136,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":137,"author":{"gitId":"NBH99"},"content":"        final List\u003cMeeting\u003e modelMeetings \u003d new ArrayList\u003c\u003e(personMeetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"NBH99"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelPolicies, modelMeetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"NBH99":18,"swayongshen":17,"-":104,"jay9645":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedShortcut.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":" * Jackson-friendly version of {@link Shortcut}.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"public class JsonAdaptedShortcut {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    private final String shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     * Constructs a {@code JsonAdaptedShortcut} with the given {@code shortcutName} and {@code shortcutCommand}.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    public JsonAdaptedShortcut(String shortcut) {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        this.shortcut \u003d shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Converts a given {@code Shortcut} into this class for Jackson use.","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    public JsonAdaptedShortcut(Shortcut source) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        shortcut \u003d source.getShortcutName() + \"\u003d\" + source.getShortcutCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    @JsonValue","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    public String getShortcut() {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        return shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"     * Converts this Jackson-friendly adapted shortcut object into the model\u0027s {@code Shortcut} object.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted shortcut.","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    public Shortcut toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        String[] split \u003d shortcut.split(\"\u003d\");","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        String shortcutName \u003d split[0];","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        String shortcutCommand \u003d split[1];","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        if (!Shortcut.isValidShortcutName(shortcutName)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"            throw new IllegalValueException(Shortcut.MESSAGE_NAME_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        if (!Shortcut.isValidShortcutCommand(shortcutCommand)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"            throw new IllegalValueException(Shortcut.MESSAGE_COMMAND_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        return new Shortcut(shortcutName, shortcutCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":55}},{"path":"src/main/java/seedu/address/storage/JsonSerializableShortcutLibrary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":" * An Immutable ShortcutLibrary that is serializable to JSON format.","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"@JsonRootName(value \u003d \"shortcutlibrary\")","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"public class JsonSerializableShortcutLibrary {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    public static final String MESSAGE_DUPLICATE_SHORTCUT \u003d \"Shortcuts list contains duplicate shortcut(s).\";","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    private final List\u003cJsonAdaptedShortcut\u003e jsonAdaptedShortcuts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     * Constructs a {@code JsonSerializableShortcutLibrary} with the given shortcuts.","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    public JsonSerializableShortcutLibrary(","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"            @JsonProperty(\"jsonAdaptedShortcuts\") List\u003cJsonAdaptedShortcut\u003e jsonAdaptedShortcuts) {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        this.jsonAdaptedShortcuts.addAll(jsonAdaptedShortcuts);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     * Converts a given {@code ShortcutLibrary} into this class for Jackson use.","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableShortcutLibrary}.","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    public JsonSerializableShortcutLibrary(ShortcutLibrary source) {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        source.getShortcuts().forEach((name, command) -\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"            JsonAdaptedShortcut jsonAdaptedShortcut \u003d new JsonAdaptedShortcut(name + \"\u003d\" + command);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"            jsonAdaptedShortcuts.add(jsonAdaptedShortcut);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        });","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"     * Converts this shortcut library into the model\u0027s {@code ShortcutLibrary} object.","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"    public ShortcutLibrary toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary shortcutLibrary \u003d new ShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        for (JsonAdaptedShortcut jsonAdaptedShortcut : jsonAdaptedShortcuts) {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"            Shortcut shortcut \u003d jsonAdaptedShortcut.toModelType();","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"            if (shortcutLibrary.hasShortcut(shortcut.getShortcutName())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SHORTCUT);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"            shortcutLibrary.addShortcut(shortcut.getShortcutName(), shortcut.getShortcutCommand());","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        return shortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":62}},{"path":"src/main/java/seedu/address/storage/JsonShortcutLibraryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":" * A class to access ShortcutLibrary data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"public class JsonShortcutLibraryStorage implements ShortcutLibraryStorage {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonShortcutLibraryStorage.class);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public JsonShortcutLibraryStorage(Path filePath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    public Path getShortcutLibraryFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        return filePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    public Optional\u003cShortcutLibrary\u003e readShortcutLibrary() throws DataConversionException {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        return readShortcutLibrary(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"     * Similar to {@link #readShortcutLibrary()}.","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    public Optional\u003cShortcutLibrary\u003e readShortcutLibrary(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        Optional\u003cJsonSerializableShortcutLibrary\u003e jsonShortcutLibrary \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"                filePath, JsonSerializableShortcutLibrary.class);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        if (jsonShortcutLibrary.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"            return Optional.of(jsonShortcutLibrary.get().toModelType());","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    public void saveShortcutLibrary(ShortcutLibrary shortcutLibrary) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"        saveShortcutLibrary(shortcutLibrary, filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"     * Similar to {@link #saveShortcutLibrary(ShortcutLibrary)}.","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"    public void saveShortcutLibrary(ShortcutLibrary shortcutLibrary, Path filePath) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(shortcutLibrary);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableShortcutLibrary(shortcutLibrary), filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":80}},{"path":"src/main/java/seedu/address/storage/ShortcutLibraryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":" * Represents a storage for {@link seedu.address.model.shortcut.ShortcutLibrary}.","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"public interface ShortcutLibraryStorage {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    Path getShortcutLibraryFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     * Returns ShortcutLibrary data as a {@link ShortcutLibrary}.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    Optional\u003cShortcutLibrary\u003e readShortcutLibrary() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"     * @see #getShortcutLibraryFilePath()","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    Optional\u003cShortcutLibrary\u003e readShortcutLibrary(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"     * Saves the given {@link ShortcutLibrary} to the storage.","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"     * @param shortcutLibrary cannot be null.","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    void saveShortcutLibrary(ShortcutLibrary shortcutLibrary) throws IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     * @see #saveShortcutLibrary(ShortcutLibrary)","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    void saveShortcutLibrary(ShortcutLibrary shortcutLibrary, Path filePath) throws IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, ShortcutLibraryStorage {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    Path getShortcutLibraryFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    Optional\u003cShortcutLibrary\u003e readShortcutLibrary() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    void saveShortcutLibrary(ShortcutLibrary shortcutLibrary) throws IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wongkokian":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    private ShortcutLibraryStorage shortcutLibraryStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}, {@code UserPrefStorage}","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"     * and {@code ShortcutLibraryStorage}.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"                          ShortcutLibraryStorage shortcutLibraryStorage) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        this.shortcutLibraryStorage \u003d shortcutLibraryStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ShortcutLibrary methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"    public Path getShortcutLibraryFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"        return shortcutLibraryStorage.getShortcutLibraryFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"    public Optional\u003cShortcutLibrary\u003e readShortcutLibrary() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"        return readShortcutLibrary(shortcutLibraryStorage.getShortcutLibraryFilePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"    public Optional\u003cShortcutLibrary\u003e readShortcutLibrary(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"        return shortcutLibraryStorage.readShortcutLibrary(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"    public void saveShortcutLibrary(ShortcutLibrary shortcutLibrary) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"        saveShortcutLibrary(shortcutLibrary, shortcutLibraryStorage.getShortcutLibraryFilePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":"    public void saveShortcutLibrary(ShortcutLibrary shortcutLibrary, Path filePath) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"        shortcutLibraryStorage.saveShortcutLibrary(shortcutLibrary, filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wongkokian":36,"-":77}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"swayongshen"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"import javafx.scene.input.KeyCodeCombination;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":37,"author":{"gitId":"swayongshen"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, ke-\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"swayongshen"},"content":"            KeyboardCommands.matchAndSet(this.commandTextField, ke);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"swayongshen"},"content":"        });","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"swayongshen"},"content":"    private static class KeyboardCommands {","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"swayongshen"},"content":"        private static final KeyCombination CTRL_F \u003d new KeyCodeCombination(KeyCode.F,","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"swayongshen"},"content":"                KeyCombination.CONTROL_DOWN);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"swayongshen"},"content":"        private static final KeyCombination CTRL_L \u003d new KeyCodeCombination(KeyCode.L,","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"swayongshen"},"content":"                KeyCombination.CONTROL_DOWN);","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"swayongshen"},"content":"        private static final KeyCombination CTRL_A \u003d new KeyCodeCombination(KeyCode.A,","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"swayongshen"},"content":"                KeyCombination.CONTROL_DOWN);","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"swayongshen"},"content":"        private static final KeyCombination CTRL_D \u003d new KeyCodeCombination(KeyCode.D,","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"swayongshen"},"content":"                KeyCombination.CONTROL_DOWN);","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"swayongshen"},"content":"        private static final KeyCombination CTRL_E \u003d new KeyCodeCombination(KeyCode.E,","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"swayongshen"},"content":"                KeyCombination.CONTROL_DOWN);","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"swayongshen"},"content":"        private static final KeyCombination CTRL_S \u003d new KeyCodeCombination(KeyCode.S,","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"swayongshen"},"content":"                KeyCombination.CONTROL_DOWN);","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        //@@author swayongshen-reused","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        //https://stackoverflow.com/questions/25397742/javafx-keyboard-event-shortcut-key","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * Handles the KeyEvent which happens when keyboard keys are pressed. Checks if the keys pressed","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * are part of the pre-defined shortcuts and fill the CommandBox\u0027s text field appropriately.","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * @param textField CommandBox\u0027s text field","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * @param keyEvent the KeyEvent which contains information about what keys are pressed.","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public static void matchAndSet(TextField textField, KeyEvent keyEvent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (CTRL_F.match(keyEvent)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Platform.runLater(() -\u003e setTextAndSetCaretToEnd(textField, \"find\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            } else if (CTRL_L.match(keyEvent)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                Platform.runLater(() -\u003e setTextAndSetCaretToEnd(textField, \"list\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            } else if (CTRL_A.match(keyEvent)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                Platform.runLater(() -\u003e setTextAndSetCaretToEnd(textField, \"add\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            } else if (CTRL_D.match(keyEvent)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Platform.runLater(() -\u003e setTextAndSetCaretToEnd(textField, \"delete\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            } else if (CTRL_E.match(keyEvent)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Platform.runLater(() -\u003e setTextAndSetCaretToEnd(textField, \"edit\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            } else if (CTRL_S.match(keyEvent)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Platform.runLater(() -\u003e setTextAndSetCaretToEnd(textField, \"sort\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            //Prevent keyEvent from being re-handled.","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Platform.runLater(keyEvent::consume);","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private static void setTextAndSetCaretToEnd(TextField textField, String text) {","lastModifiedDate":"2021-04-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            textField.setText(text);","lastModifiedDate":"2021-04-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            textField.positionCaret(textField.getLength());","lastModifiedDate":"2021-04-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"swayongshen":28,"-":118}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w15-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"jlxw48":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"    private PoliciesWindow policiesWindow;","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    private ShortcutsWindow shortcutsWindow;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"jlxw48"},"content":"        policiesWindow \u003d new PoliciesWindow();","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"        shortcutsWindow \u003d new ShortcutsWindow();","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"jlxw48"},"content":"     * Opens a window to display all policies associated with selected client, or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"jlxw48"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"jlxw48"},"content":"    public void showPolicies(String nameAndPolicies) {","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"jlxw48"},"content":"        String[] nameAndPoliciesSplit \u003d nameAndPolicies.split(\"\\n\", 2);","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"jlxw48"},"content":"        if (nameAndPoliciesSplit.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"jlxw48"},"content":"            policiesWindow.noPolicyToDisplay(nameAndPoliciesSplit[0]);","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"jlxw48"},"content":"        } else {","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"jlxw48"},"content":"            final String windowTitle \u003d nameAndPoliciesSplit[0];","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"jlxw48"},"content":"            final String allPolicies \u003d nameAndPoliciesSplit[1];","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"jlxw48"},"content":"            policiesWindow.setPoliciesToDisplay(windowTitle, allPolicies);","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"jlxw48"},"content":"        if (!policiesWindow.isShowing()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"jlxw48"},"content":"            policiesWindow.show();","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"jlxw48"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"jlxw48"},"content":"            policiesWindow.focus();","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":174,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":175,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":176,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"wongkokian"},"content":"     * Opens a window to display all shortcuts, or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"wongkokian"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"wongkokian"},"content":"    public void showShortcuts(String shortcuts) {","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"wongkokian"},"content":"        String[] shortcutSplit \u003d shortcuts.split(\"\\n\", 2);","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"wongkokian"},"content":"        if (shortcutSplit.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"wongkokian"},"content":"            shortcutsWindow.noShortcutToDisplay(shortcutSplit[0]);","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"wongkokian"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"wongkokian"},"content":"            final String windowTitle \u003d shortcutSplit[0];","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"wongkokian"},"content":"            final String allShortcuts \u003d shortcutSplit[1];","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"wongkokian"},"content":"            shortcutsWindow.setShortcutsToDisplay(windowTitle, allShortcuts);","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"wongkokian"},"content":"        if (!shortcutsWindow.isShowing()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"wongkokian"},"content":"            shortcutsWindow.show();","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"wongkokian"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"wongkokian"},"content":"            shortcutsWindow.focus();","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"jlxw48"},"content":"            if (commandResult.isShowPolicies()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":234,"author":{"gitId":"jlxw48"},"content":"                showPolicies(commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-11"},{"lineNumber":235,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":236,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":237,"author":{"gitId":"wongkokian"},"content":"            if (commandResult.isShowShortcuts()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"wongkokian"},"content":"                showShortcuts(commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"wongkokian"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wongkokian":28,"-":196,"jlxw48":28}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"swayongshen"},"content":"    @FXML","lastModifiedDate":"2021-02-25"},{"lineNumber":47,"author":{"gitId":"swayongshen"},"content":"    private Label insurancePolicies;","lastModifiedDate":"2021-02-25"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    private Label meetings;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"    private VBox gridPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"        if (person.isShowPolicyList()) {","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"            if (!person.getPolicies().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"swayongshen"},"content":"                insurancePolicies.setText(person.getPolicies().stream()","lastModifiedDate":"2021-02-25"},{"lineNumber":64,"author":{"gitId":"swayongshen"},"content":"                        .map(Object::toString)","lastModifiedDate":"2021-02-25"},{"lineNumber":65,"author":{"gitId":"jay9645"},"content":"                        .collect(Collectors.joining(\"\\n\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"            } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"                insurancePolicies.setText(InsurancePolicy.MESSAGE_NO_POLICY);","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"            gridPane.getChildren().remove(insurancePolicies);","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"            gridPane.setMinHeight(gridPane.getMinHeight() - 20);","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"jay9645"},"content":"        if (!person.getTags().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jay9645"},"content":"            person.getTags().stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jay9645"},"content":"        if (person.getPhone().isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jay9645"},"content":"            phone.setText(person.getPhone().get().value);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jay9645"},"content":"            gridPane.getChildren().remove(phone);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"            gridPane.setMinHeight(gridPane.getMinHeight() - 20);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jay9645"},"content":"        if (person.getAddress().isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"jay9645"},"content":"            address.setText(person.getAddress().get().value);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"jay9645"},"content":"            gridPane.getChildren().remove(address);","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"jay9645"},"content":"            gridPane.setMinHeight(gridPane.getMinHeight() - 20);","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"jay9645"},"content":"        if (person.getEmail().isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"            email.setText(person.getEmail().get().value);","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"jay9645"},"content":"            gridPane.getChildren().remove(email);","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"jay9645"},"content":"            gridPane.setMinHeight(gridPane.getMinHeight() - 20);","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"        if (!person.getMeetings().isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"            meetings.setText(person.getMeetings().stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"                    .map(Object::toString)","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"                    .collect(Collectors.joining(\"\\n\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"            gridPane.getChildren().remove(meetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"            gridPane.setMinHeight(gridPane.getMinHeight() - 20);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"NBH99":11,"swayongshen":5,"-":72,"jay9645":40}},{"path":"src/main/java/seedu/address/ui/PoliciesWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"public class PoliciesWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"jlxw48"},"content":"    private static final String NO_POLICY_FEEDBACK \u003d \"This contact has no policies now!\";","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"    private static final String NOT_URL \u003d \"No URL!\";","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"jlxw48"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PoliciesWindow.class);","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":"    private static final String FXML \u003d \"PoliciesWindow.fxml\";","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":"    private static final String COPY_URL_TEXT \u003d \"Copy URL!\";","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"    private VBox outerBox;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"     * Creates a new PoliciesWindow.","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":"     * @param root Stage to use as the root of the PoliciesWindow.","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"jlxw48"},"content":"    public PoliciesWindow(Stage root) {","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"jlxw48"},"content":"        super(FXML, root);","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"     * Creates a new PoliciesWindow.","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"    public PoliciesWindow() {","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"        this(new Stage());","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"jlxw48"},"content":"     * Shows the policies window.","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"jlxw48"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"jlxw48"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"jlxw48"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"jlxw48"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"jlxw48"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"jlxw48"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"jlxw48"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"jlxw48"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"jlxw48"},"content":"    public void show() {","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"jlxw48"},"content":"        logger.fine(\"Showing policies, if any, associated with chosen contact.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"jlxw48"},"content":"        getRoot().show();","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"jlxw48"},"content":"     * Returns true if the policies window is currently being shown.","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"jlxw48"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"jlxw48"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"jlxw48"},"content":"     * Hides the policies window.","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"jlxw48"},"content":"    public void hide() {","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"        getRoot().hide();","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"jlxw48"},"content":"     * Focuses on the policies window.","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"jlxw48"},"content":"    public void focus() {","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"jlxw48"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"jlxw48"},"content":"     * Copies the URL to the policy to the clipboard.","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"jlxw48"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"jlxw48"},"content":"    private void copyUrl(String urlToCopy) {","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"jlxw48"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"jlxw48"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"jlxw48"},"content":"        url.putString(urlToCopy);","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"jlxw48"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"jlxw48"},"content":"     * Formats a policy window for a contact with no policies.","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"jlxw48"},"content":"     * @param noPolicyFeedback {@code String} to display indicating that contact has no policies.","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"jlxw48"},"content":"    public void noPolicyToDisplay(String noPolicyFeedback) {","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"jlxw48"},"content":"        clearWindow();","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"jlxw48"},"content":"        String[] nameAndFeedback \u003d noPolicyFeedback.split(\" has \");","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"jlxw48"},"content":"        String name \u003d nameAndFeedback[0];","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"jlxw48"},"content":"        setWindowTitle(name + \"\u0027s Policies\");","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"jlxw48"},"content":"        HBox row \u003d new HBox();","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"jlxw48"},"content":"        setupHBoxRowNoButton(row, noPolicyFeedback);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"jlxw48"},"content":"        outerBox.getChildren().add(row);","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"jlxw48"},"content":"        formatOuterBox();","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"jlxw48"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"jlxw48"},"content":"     * Formats and sets up policies and their URLs for display in window.","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"jlxw48"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"jlxw48"},"content":"     * @param policiesToDisplay joined {@code String} of all policies associated with the chosen contact.","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"jlxw48"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"jlxw48"},"content":"    public void setPoliciesToDisplay(String windowTitle, String policiesToDisplay) {","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"jlxw48"},"content":"        clearWindow();","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"jlxw48"},"content":"        setWindowTitle(windowTitle);","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"jlxw48"},"content":"        String[] split \u003d policiesToDisplay.split(\"\\n\");","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"jlxw48"},"content":"        for (int i \u003d 0; i \u003c split.length; i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"jlxw48"},"content":"            HBox row \u003d new HBox(10);","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"jlxw48"},"content":"            String[] policyNumAndUrl \u003d split[i].split(\": \", 2);","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"jlxw48"},"content":"            final String possibleUrl \u003d policyNumAndUrl[1];","lastModifiedDate":"2021-03-11"},{"lineNumber":135,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"jlxw48"},"content":"            if (isUrl(possibleUrl)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":137,"author":{"gitId":"jlxw48"},"content":"                setupHBoxRowWithButton(row, split[i], possibleUrl);","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"jlxw48"},"content":"            } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"jlxw48"},"content":"                setupHBoxRowNoButton(row, split[i]);","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"jlxw48"},"content":"            outerBox.getChildren().add(row);","lastModifiedDate":"2021-03-11"},{"lineNumber":142,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":143,"author":{"gitId":"jlxw48"},"content":"        formatOuterBox();","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"jlxw48"},"content":"    private void clearWindow() {","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"jlxw48"},"content":"        outerBox.getChildren().clear();","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"jlxw48"},"content":"    private void setWindowTitle(String windowTitle) {","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"jlxw48"},"content":"        getRoot().setTitle(windowTitle);","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"jlxw48"},"content":"    private void setupHBoxRowWithButton(HBox row, String rowText, String url) {","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"jlxw48"},"content":"        Button rowButton \u003d new Button(COPY_URL_TEXT);","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"jlxw48"},"content":"        rowButton.setOnAction(e -\u003e copyUrl(url));","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"jlxw48"},"content":"        row.setAlignment(Pos.CENTER);","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"jlxw48"},"content":"        row.getChildren().addAll(new Label(rowText), rowButton);","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"jlxw48"},"content":"    private void setupHBoxRowNoButton(HBox row, String rowText) {","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"jlxw48"},"content":"        row.getChildren().add(new Label(rowText));","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"jlxw48"},"content":"    private void formatOuterBox() {","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"jlxw48"},"content":"        outerBox.setSpacing(10);","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"jlxw48"},"content":"        outerBox.setPadding(new Insets(25, 50, 25, 50));","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":169,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"jlxw48"},"content":"    private boolean isUrl(String possibleUrl) {","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"jlxw48"},"content":"        return !possibleUrl.equals(NOT_URL);","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"jlxw48"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"jlxw48":173}},{"path":"src/main/java/seedu/address/ui/ShortcutsWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"public class ShortcutsWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ShortcutsWindow.class);","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    private static final String FXML \u003d \"ShortcutsWindow.fxml\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    private VBox outerBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"     * Creates a new ShortcutsWindow.","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"     * @param root Stage to use as the root of the ShortcutsWindow.","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public ShortcutsWindow(Stage root) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        super(FXML, root);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"     * Creates a new ShortcutsWindow.","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public ShortcutsWindow() {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        this(new Stage());","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"     * Shows the shortcuts window.","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"    public void show() {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        logger.fine(\"Showing shortcuts, if any.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        getRoot().show();","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"     * Returns true if the shortcuts window is currently being shown.","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"     * Hides the shortcuts window.","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"    public void hide() {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"        getRoot().hide();","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"     * Focuses on the shortcuts window.","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"    public void focus() {","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"     * Formats a shortcut window when there are no shortcuts.","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"     * @param noShortcutFeedback {@code String} to display indicating there are no shortcuts.","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"    public void noShortcutToDisplay(String noShortcutFeedback) {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"        clearWindow();","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"        setWindowTitle(\"Shortcuts\");","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"        HBox row \u003d new HBox();","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"        setupHBoxRowNoButton(row, noShortcutFeedback);","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"        outerBox.getChildren().add(row);","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"        formatOuterBox();","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"     * Formats and sets up shortcuts for display in window.","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"     * @param shortcutsToDisplay joined {@code String} of all shortcuts.","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"    public void setShortcutsToDisplay(String windowTitle, String shortcutsToDisplay) {","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"        clearWindow();","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"        setWindowTitle(windowTitle);","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":"        String[] split \u003d shortcutsToDisplay.split(\"\\n\");","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"        for (int i \u003d 0; i \u003c split.length; i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"            HBox row \u003d new HBox(10);","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"            setupHBoxRowNoButton(row, split[i]);","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"            outerBox.getChildren().add(row);","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"        formatOuterBox();","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"    private void clearWindow() {","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"        outerBox.getChildren().clear();","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"    private void setWindowTitle(String windowTitle) {","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"        getRoot().setTitle(windowTitle);","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"    private void setupHBoxRowNoButton(HBox row, String rowText) {","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"wongkokian"},"content":"        row.getChildren().add(new Label(rowText));","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"wongkokian"},"content":"    private void formatOuterBox() {","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"wongkokian"},"content":"        outerBox.setSpacing(10);","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"wongkokian"},"content":"        outerBox.setPadding(new Insets(25, 50, 25, 50));","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"wongkokian"},"content":"        outerBox.setMinWidth(200);","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"wongkokian"},"content":"        outerBox.autosize();","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":137}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"         title\u003d\"ClientBook\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"\u003c!--          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Policies\"\u003e--\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"\u003c!--            \u003cMenuItem fx:id\u003d\"policiesMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#showPolicies\" text\u003d\"Help\" /\u003e--\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"\u003c!--          \u003c/Menu\u003e--\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":59,"jay9645":4}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"    \u003cVBox fx:id\u003d\"gridPane\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"      \u003cLabel fx:id\u003d\"insurancePolicies\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$insurancePolicies\" /\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"      \u003cLabel fx:id\u003d\"meetings\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$meetings\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NBH99":1,"swayongshen":1,"-":35,"jay9645":1}},{"path":"src/main/resources/view/PoliciesWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Policies\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/\" xmlns:fx\u003d\"http://javafx.com/fxml/\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"            \u003cVBox fx:id\u003d\"outerBox\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"                \u003cchildren /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"jay9645":19}},{"path":"src/main/resources/view/ShortcutsWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"\u003cfx:root resizable\u003d\"true\" title\u003d\"Shortcuts\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/\" xmlns:fx\u003d\"http://javafx.com/fxml/\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"            \u003cVBox fx:id\u003d\"outerBox\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"                \u003cchildren /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wongkokian":19}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    \"policies\" : [\"#1111\u003eno_url\"],","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    \"meeting\" : [ \"17.08.2021 17:30 18:30 Mall\" ]","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    \"policies\" : [\"P#2222\u003ewww.youtube.com\"],","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    \"meeting\" : [ ]","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    \"policies\" : [ ],","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    \"meeting\" : [ \"13.05.2021 19:30 20:00 MRT\" ]","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    \"policies\" : [ \"Pol_3333\u003eno_url\", \"Pol_3334\u003ewww.google.com\" ],","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    \"meeting\" : [ ]","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    \"policies\" : [ ],","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"    \"meeting\" : [ \"18.07.2021 15:30 17:00 Mall\" ]","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    \"policies\" : [ ],","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    \"meeting\" : [ ]","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"    \"policies\" : [ \"Policy_4444\u003eno_url\", \"Policy_4445\u003ewww.facebook.com\", \"Policy_4446\u003eno_url\",","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"      \"Policy_4447\u003ewww.yahoo.com\" ],","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"    \"meeting\" : [ \"19.09.2021 14:30 15:30 LRT\" ]","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"NBH99":14,"swayongshen":2,"-":39,"jay9645":6}},{"path":"src/test/data/JsonSerializableShortcutLibraryTest/duplicateShortcutLibrary.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"{","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"  \"jsonAdaptedShortcuts\" : [ \"ls\u003dlist -p\", \"ls\u003dlistshortcut\", \"sna\u003dsort -n -asc\" ]","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":2,"swayongshen":1}},{"path":"src/test/data/JsonSerializableShortcutLibraryTest/invalidShortcutLibrary.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"{","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"  \"jsonAdaptedShortcuts\" : [ \"listphone*\u003dlist -p\", \"ls\u003dlist shortcut\", \"sna\u003dsort -n -asc\" ]","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":2,"swayongshen":1}},{"path":"src/test/data/JsonSerializableShortcutLibraryTest/typicalShortcutLibrary.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"{","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"  \"jsonAdaptedShortcuts\" : [ \"listphone\u003dlist -p\", \"ls\u003dlistshortcut\", \"sna\u003dsort -n -asc\", \"h\u003dhelp\", \"fa\u003dfind n/alex\" ]","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":2,"swayongshen":1}},{"path":"src/test/data/JsonShortcutLibraryStorageTest/invalidAndValidShortcutLibrary.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"{","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"  \"jsonAdaptedShortcuts\" : [ \"listphone*\u003dlist -p\", \"ls\u003dlistshortcut\", \"sna!\u003dsort -n -asc\" ]","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":2,"swayongshen":1}},{"path":"src/test/data/JsonShortcutLibraryStorageTest/invalidShortcutLibrary.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"{","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"  \"jsonAdaptedShortcuts\" : [ \"listphone*\u003dlist -p\", \"ls\u003dlist shortcut\", \"sna!\u003dsort -n -asc\" ]","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":2,"swayongshen":1}},{"path":"src/test/data/JsonShortcutLibraryStorageTest/notJsonFormatShortcutLibrary.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"not json format!","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":1}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"  \"addressBookFilePath\" : \"clientbook.json\"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"swayongshen":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"  \"addressBookFilePath\" : \"clientbook.json\"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"swayongshen":1,"-":10}},{"path":"src/test/data/LockTest/addressbook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swayongshen"},"content":"{","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"  \"persons\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"swayongshen"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"swayongshen"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"    \"policies\" : [\"#1111\u003eno_url\"]","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"swayongshen"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"swayongshen"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"swayongshen"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"swayongshen"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"    \"policies\" : [\"P#2222\u003ewww.youtube.com\"]","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"swayongshen"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"swayongshen"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"swayongshen"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"swayongshen"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"swayongshen"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"swayongshen"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"swayongshen"},"content":"    \"policies\" : [ ]","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"swayongshen"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"swayongshen"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"swayongshen"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"swayongshen"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"swayongshen"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"swayongshen"},"content":"    \"policies\" : [ \"Pol_3333\u003eno_url\", \"Pol_3334\u003ewww.google.com\" ]","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"swayongshen"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"swayongshen"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"swayongshen"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"swayongshen"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"swayongshen"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"swayongshen"},"content":"    \"policies\" : [ ]","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"swayongshen"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"swayongshen"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"swayongshen"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"swayongshen"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"swayongshen"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"swayongshen"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"swayongshen"},"content":"    \"policies\" : [ ]","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"swayongshen"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"swayongshen"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"swayongshen"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"swayongshen"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"swayongshen"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"swayongshen"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"swayongshen"},"content":"    \"policies\" : [ \"Policy_4444\u003eno_url\", \"Policy_4445\u003ewww.facebook.com\", \"Policy_4446\u003eno_url\",","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"swayongshen"},"content":"      \"Policy_4447\u003ewww.yahoo.com\" ]","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"swayongshen"},"content":"  } ]","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"swayongshen"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"swayongshen":54}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    //@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"    //---------------- Tests for countMatches ------------------------------------------------","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"    public void countMatches() {","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        // empty string and empty substring","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"        assertFalse(StringUtil.countMatches(\"\", \"\") !\u003d 0);","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        // empty string and non-empty substring","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        assertFalse(StringUtil.countMatches(\"\", \"a\") !\u003d 0);","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        // non-empty string and empty substring","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"        assertFalse(StringUtil.countMatches(\"aaa\", \"\") !\u003d 0);","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        // non-empty string and non-empty substring (with match)","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"        assertFalse(StringUtil.countMatches(\"abca\", \"a\") !\u003d 2);","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        // non-empty string and non-empty substring (without match)","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        assertFalse(StringUtil.countMatches(\"abca\", \"d\") !\u003d 0);","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        // whitespaces","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"        assertFalse(StringUtil.countMatches(\"    \", \" \") !\u003d 4);","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"    //@@author","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wongkokian":25,"-":131}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"import seedu.address.storage.JsonShortcutLibraryStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        JsonShortcutLibraryStorage shortcutLibraryStorage \u003d new JsonShortcutLibraryStorage(","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"                temporaryFolder.resolve(\"shortcutLibrary.json\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, shortcutLibraryStorage);","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"        JsonShortcutLibraryStorage shortcutLibraryStorage \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"                new JsonShortcutLibraryStorage(temporaryFolder.resolve(\"ioExceptionShortcutLibrary.json\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, shortcutLibraryStorage);","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withPolicies().withMeetings().build();","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new Authentication(),","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wongkokian":10,"NBH99":1,"-":158,"jay9645":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wongkokian":3,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"        public Path getShortcutLibraryFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"        public void setShortcutLibraryFilePath(Path shortcutLibraryFilePath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"jay9645"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"jay9645"},"content":"        public void updatePersonListByAttribute(List\u003cAttribute\u003e attributeTypes) {","lastModifiedDate":"2021-03-19"},{"lineNumber":169,"author":{"gitId":"jay9645"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"jay9645"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"jay9645"},"content":"        public Authentication getAuthentication() {","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"jay9645"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"jay9645"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"jay9645"},"content":"        public void undoListModification() {","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"jay9645"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"jay9645"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"jay9645"},"content":"        public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"jay9645"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"jay9645"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"NBH99"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"NBH99"},"content":"        public ObservableList\u003cPerson\u003e getWholePersonList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"NBH99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"wongkokian"},"content":"        public void setShortcutLibrary(ShortcutLibrary shortcutLibrary) {","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":195,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"wongkokian"},"content":"        public ShortcutLibrary getShortcutLibrary() {","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"wongkokian"},"content":"        public boolean hasShortcut(String shortcutName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":205,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"wongkokian"},"content":"        public void deleteShortcut(String shortcutName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"wongkokian"},"content":"        public void addShortcut(String shortcutName, String shortcutCommand) {","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":215,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"wongkokian"},"content":"        public void setShortcut(String target, String shortcutCommand) {","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":220,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"wongkokian":44,"NBH99":3,"-":194,"jay9645":24}},{"path":"src/test/java/seedu/address/logic/commands/AddShortcutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.attribute.Attribute;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"public class AddShortcutCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public void constructor_emptyShortcutName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"                new AddShortcutCommand(\"\", \"list\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    public void constructor_emptyShortcutCommand_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"                new AddShortcutCommand(\"ls\", \"\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    public void constructor_invalidShortcutName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"                new AddShortcutCommand(\"abc!\", \"list\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"    public void constructor_invalidShortcutCommand_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"                new AddShortcutCommand(\"abc\", \"list all\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    public void execute_shortcutAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        AddShortcutCommandTest.ModelStubAcceptingShortcutAdded modelStub \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"                new AddShortcutCommandTest.ModelStubAcceptingShortcutAdded();","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        String validShortcutName \u003d \"ls\";","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"        String validShortcutCommand \u003d \"list\";","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        Shortcut validShortcut \u003d new Shortcut(validShortcutName, validShortcutCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        CommandResult commandResult \u003d new AddShortcutCommand(validShortcutName,","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"                validShortcutCommand).execute(modelStub);","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        assertEquals(String.format(AddShortcutCommand.MESSAGE_SUCCESS, validShortcut),","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        assertEquals(Arrays.asList(validShortcut), modelStub.shortcutsAdded);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"    public void execute_duplicateShortcut_throwsCommandException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        String validShortcutName \u003d \"ls\";","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"        String validShortcutCommand \u003d \"list\";","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"        Shortcut validShortcut \u003d new Shortcut(validShortcutName, validShortcutCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"        AddShortcutCommand addShortcutCommand \u003d new AddShortcutCommand(validShortcutName, validShortcutCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"        AddShortcutCommandTest.ModelStub modelStub \u003d new AddShortcutCommandTest.ModelStubWithShortcut(validShortcut);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"        assertThrows(CommandException.class, AddShortcutCommand.MESSAGE_DUPLICATE_SHORTCUT, () -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"                addShortcutCommand.execute(modelStub));","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"    public void equals() {","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"        Shortcut first \u003d new Shortcut(\"first\", \"list\");","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        Shortcut second \u003d new Shortcut(\"second\", \"help\");","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"        AddShortcutCommand addFirstShortcutCommand \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"                new AddShortcutCommand(first.getShortcutName(), first.getShortcutCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"        AddShortcutCommand addSecondShortcutCommand \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"                new AddShortcutCommand(second.getShortcutName(), second.getShortcutCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"        assertTrue(addFirstShortcutCommand.equals(addFirstShortcutCommand));","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"        AddShortcutCommand addFirstShortcutCommandCopy \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"                new AddShortcutCommand(first.getShortcutName(), first.getShortcutCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"        assertTrue(addFirstShortcutCommand.equals(addFirstShortcutCommandCopy));","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"        assertFalse(addFirstShortcutCommand.equals(1));","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"        assertFalse(addFirstShortcutCommand.equals(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"        // different shortcut -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"        assertFalse(addFirstShortcutCommand.equals(addSecondShortcutCommand));","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"wongkokian"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"wongkokian"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"wongkokian"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"wongkokian"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"wongkokian"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"wongkokian"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"wongkokian"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"wongkokian"},"content":"        public Path getShortcutLibraryFilePath() {","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"wongkokian"},"content":"        public void setShortcutLibraryFilePath(Path shortcutLibraryFilePath) {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"wongkokian"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"wongkokian"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"wongkokian"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"wongkokian"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"wongkokian"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"wongkokian"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"wongkokian"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"wongkokian"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"wongkokian"},"content":"        public void updatePersonListByAttribute(List\u003cAttribute\u003e attributeTypes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"wongkokian"},"content":"        public Authentication getAuthentication() {","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"wongkokian"},"content":"        public void undoListModification() {","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"wongkokian"},"content":"        public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":216,"author":{"gitId":"wongkokian"},"content":"        public ObservableList\u003cPerson\u003e getWholePersonList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":217,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":218,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":219,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":220,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"wongkokian"},"content":"        public void setShortcutLibrary(ShortcutLibrary shortcutLibrary) {","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":223,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"wongkokian"},"content":"        public ShortcutLibrary getShortcutLibrary() {","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":228,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"wongkokian"},"content":"        public boolean hasShortcut(String shortcutName) {","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":233,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"wongkokian"},"content":"        public void deleteShortcut(String shortcutName) {","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"wongkokian"},"content":"        public void addShortcut(String shortcutName, String shortcutCommand) {","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":243,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"wongkokian"},"content":"        public void setShortcut(String target, String shortcutCommand) {","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":248,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"wongkokian"},"content":"     * A Model stub that contains a single shortcut.","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"wongkokian"},"content":"    private class ModelStubWithShortcut extends AddShortcutCommandTest.ModelStub {","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"wongkokian"},"content":"        private final Shortcut shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":257,"author":{"gitId":"wongkokian"},"content":"        ModelStubWithShortcut(Shortcut shortcut) {","lastModifiedDate":"2021-03-31"},{"lineNumber":258,"author":{"gitId":"wongkokian"},"content":"            requireNonNull(shortcut);","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"wongkokian"},"content":"            this.shortcut \u003d shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":261,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":262,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":263,"author":{"gitId":"wongkokian"},"content":"        public boolean hasShortcut(String shortcutName) {","lastModifiedDate":"2021-03-31"},{"lineNumber":264,"author":{"gitId":"wongkokian"},"content":"            requireNonNull(shortcutName);","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"wongkokian"},"content":"            Shortcut shortcut \u003d new Shortcut(shortcutName, \"list\");","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"wongkokian"},"content":"            return this.shortcut.isSameShortcutName(shortcut);","lastModifiedDate":"2021-04-01"},{"lineNumber":267,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":268,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":269,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":270,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":271,"author":{"gitId":"wongkokian"},"content":"     * A Model stub that always accept the shortcut being added.","lastModifiedDate":"2021-03-31"},{"lineNumber":272,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":273,"author":{"gitId":"wongkokian"},"content":"    private class ModelStubAcceptingShortcutAdded extends AddShortcutCommandTest.ModelStub {","lastModifiedDate":"2021-03-31"},{"lineNumber":274,"author":{"gitId":"wongkokian"},"content":"        final ArrayList\u003cShortcut\u003e shortcutsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":275,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":276,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":277,"author":{"gitId":"wongkokian"},"content":"        public boolean hasShortcut(String shortcutName) {","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"wongkokian"},"content":"            requireNonNull(shortcutName);","lastModifiedDate":"2021-03-31"},{"lineNumber":279,"author":{"gitId":"wongkokian"},"content":"            Shortcut shortcut \u003d new Shortcut(shortcutName, \"list\");","lastModifiedDate":"2021-03-31"},{"lineNumber":280,"author":{"gitId":"wongkokian"},"content":"            return shortcutsAdded.stream().anyMatch(shortcut::isSameShortcutName);","lastModifiedDate":"2021-04-01"},{"lineNumber":281,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":282,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":283,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"wongkokian"},"content":"        public void addShortcut(String shortcutName, String shortcutCommand) {","lastModifiedDate":"2021-03-31"},{"lineNumber":285,"author":{"gitId":"wongkokian"},"content":"            requireNonNull(shortcutName);","lastModifiedDate":"2021-03-31"},{"lineNumber":286,"author":{"gitId":"wongkokian"},"content":"            requireNonNull(shortcutCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"wongkokian"},"content":"            shortcutsAdded.add(new Shortcut(shortcutName, shortcutCommand));","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":289,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":290,"author":{"gitId":"wongkokian"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"wongkokian"},"content":"        public ShortcutLibrary getShortcutLibrary() {","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"wongkokian"},"content":"            return new ShortcutLibrary();","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":294,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":295,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":296,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":296}},{"path":"src/test/java/seedu/address/logic/commands/BatchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jlxw48"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ID;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ID_WITH_URL;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.parser.DeleteCommandParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.parser.EditCommandParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":" * Contains integration tests (interaction with the Model) and unit tests for BatchCommand.","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"public class BatchCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    private static final Model MODEL \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"            new ShortcutLibrary());","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"jlxw48"},"content":"    private static final EditCommandParser EDIT_COMMAND_PARSER \u003d new EditCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jlxw48"},"content":"    private static final DeleteCommandParser DELETE_COMMAND_PARSER \u003d new DeleteCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"    private static final List\u003cIndex\u003e LIST_OF_INDICES \u003d Arrays.asList(Index.fromOneBased(7), Index.fromOneBased(6),","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"            Index.fromOneBased(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"    public void execute_validIndexUnfilteredListForBatchEdit_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(MODEL.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"jlxw48"},"content":"        for (Index index : LIST_OF_INDICES) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"jlxw48"},"content":"            Person personToEdit \u003d MODEL.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"            PersonBuilder personBuilder \u003d new PersonBuilder(personToEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jlxw48"},"content":"            Person editedPerson \u003d personBuilder","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jlxw48"},"content":"                    .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"jlxw48"},"content":"                    .withPolicies(VALID_POLICY_ID, VALID_POLICY_ID_WITH_URL)","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"                    .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jlxw48"},"content":"            expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"        String expectedMessage \u003d BatchCommand.SUCCESS_MESSAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"jlxw48"},"content":"        List\u003cEditCommand\u003e listOfEditCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"        createEditCommands(listOfEditCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"jlxw48"},"content":"        BatchCommand\u003cEditCommand\u003e batchEditCommand \u003d new BatchCommand\u003c\u003e(listOfEditCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"jlxw48"},"content":"        assertCommandSuccess(batchEditCommand, MODEL, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"    public void execute_validIndexUnfilteredListForBatchDelete_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        ModelManager expectedModel \u003d new ModelManager(MODEL.getAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"jlxw48"},"content":"        for (Index index : LIST_OF_INDICES) {","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"jlxw48"},"content":"            Person personToDelete \u003d MODEL.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"jlxw48"},"content":"            expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"jlxw48"},"content":"        String expectedMessage \u003d BatchCommand.SUCCESS_MESSAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"jlxw48"},"content":"        List\u003cDeleteCommand\u003e listOfDeleteCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"jlxw48"},"content":"        createDeleteCommands(listOfDeleteCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"jlxw48"},"content":"        BatchCommand\u003cDeleteCommand\u003e batchDeleteCommand \u003d new BatchCommand\u003c\u003e(listOfDeleteCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"jlxw48"},"content":"        assertCommandSuccess(batchDeleteCommand, MODEL, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"jlxw48"},"content":"    public void equalsEdit() {","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"jlxw48"},"content":"        List\u003cEditCommand\u003e listOfEditCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jlxw48"},"content":"        createEditCommands(listOfEditCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"jlxw48"},"content":"        final BatchCommand\u003cEditCommand\u003e standardBatchEdit \u003d new BatchCommand\u003c\u003e(listOfEditCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"jlxw48"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"jlxw48"},"content":"        BatchCommand\u003cEditCommand\u003e commandWithSameValues \u003d new BatchCommand\u003c\u003e(listOfEditCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"jlxw48"},"content":"        assertTrue(standardBatchEdit.equals(commandWithSameValues));","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"jlxw48"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"jlxw48"},"content":"        assertTrue(standardBatchEdit.equals(standardBatchEdit));","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"jlxw48"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"jlxw48"},"content":"        assertFalse(standardBatchEdit.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"jlxw48"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"jlxw48"},"content":"        assertFalse(standardBatchEdit.equals(new HelpCommand()));","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"jlxw48"},"content":"        // different list of edit commands with different indices -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"jlxw48"},"content":"        List\u003cEditCommand\u003e anotherListOfEditCommandsWithDiffIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"jlxw48"},"content":"        createAnotherListOfEditCommands(anotherListOfEditCommandsWithDiffIndices, CommandTestUtil.ARGS_FOR_EDIT);","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"jlxw48"},"content":"        assertFalse(standardBatchEdit.equals(new BatchCommand\u003c\u003e(anotherListOfEditCommandsWithDiffIndices)));","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"jlxw48"},"content":"        // different list of edit commands with different arguments -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"jlxw48"},"content":"        String anotherArgsForEdit \u003d \"t/bestfriend i/Pol_#456\u003ewww.facebook.com\";","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"jlxw48"},"content":"        List\u003cEditCommand\u003e anotherListOfEditCommandsWithDiffArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"jlxw48"},"content":"        createAnotherListOfEditCommands(anotherListOfEditCommandsWithDiffArgs, anotherArgsForEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"jlxw48"},"content":"        assertFalse(standardBatchEdit.equals(new BatchCommand\u003c\u003e(anotherListOfEditCommandsWithDiffArgs)));","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"jlxw48"},"content":"    public void equalsDelete() {","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"jlxw48"},"content":"        List\u003cDeleteCommand\u003e listOfDeleteCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"jlxw48"},"content":"        createDeleteCommands(listOfDeleteCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"jlxw48"},"content":"        BatchCommand\u003cDeleteCommand\u003e standardBatchDelete \u003d new BatchCommand\u003c\u003e(listOfDeleteCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"jlxw48"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"jlxw48"},"content":"        BatchCommand commandWithSameValues \u003d new BatchCommand\u003c\u003e(listOfDeleteCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"jlxw48"},"content":"        assertTrue(standardBatchDelete.equals(commandWithSameValues));","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"jlxw48"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"jlxw48"},"content":"        assertTrue(standardBatchDelete.equals(standardBatchDelete));","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"jlxw48"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"jlxw48"},"content":"        assertFalse(standardBatchDelete.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"jlxw48"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"jlxw48"},"content":"        assertFalse(standardBatchDelete.equals(new HelpCommand()));","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"jlxw48"},"content":"        // different list of delete commands with different indices -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"jlxw48"},"content":"        List\u003cDeleteCommand\u003e anotherListOfDeleteCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"jlxw48"},"content":"        createAnotherListOfDeleteCommands(anotherListOfDeleteCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"jlxw48"},"content":"        assertFalse(standardBatchDelete.equals(new BatchCommand\u003c\u003e(anotherListOfDeleteCommands)));","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"jlxw48"},"content":"        // different list of edit commands -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"jlxw48"},"content":"        List\u003cEditCommand\u003e listOfEditCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"jlxw48"},"content":"        createEditCommands(listOfEditCommands);","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"jlxw48"},"content":"        assertFalse(standardBatchDelete.equals(new BatchCommand\u003c\u003e(listOfEditCommands)));","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"jlxw48"},"content":"    private void createDeleteCommands(List\u003cDeleteCommand\u003e listOfDeleteCommands) {","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"jlxw48"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"jlxw48"},"content":"            for (Index index : LIST_OF_INDICES) {","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"jlxw48"},"content":"                String newCommandInput \u003d String.valueOf(index.getOneBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"jlxw48"},"content":"                DeleteCommand deleteCommand \u003d DELETE_COMMAND_PARSER.parse(newCommandInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"jlxw48"},"content":"                listOfDeleteCommands.add(deleteCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"jlxw48"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"jlxw48"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"jlxw48"},"content":"    private void createAnotherListOfDeleteCommands(List\u003cDeleteCommand\u003e listOfDeleteCommands) {","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"jlxw48"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"jlxw48"},"content":"            for (Index index : LIST_OF_INDICES) {","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"jlxw48"},"content":"                String newCommandInput \u003d String.valueOf(1);","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"jlxw48"},"content":"                DeleteCommand deleteCommand \u003d DELETE_COMMAND_PARSER.parse(newCommandInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"jlxw48"},"content":"                listOfDeleteCommands.add(deleteCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"jlxw48"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"jlxw48"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"jlxw48"},"content":"    private void createEditCommands(List\u003cEditCommand\u003e listOfEditCommands) {","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"jlxw48"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"jlxw48"},"content":"            for (Index index : LIST_OF_INDICES) {","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"jlxw48"},"content":"                String newCommandInput \u003d index.getOneBased() + \" \" + CommandTestUtil.ARGS_FOR_EDIT;","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"jlxw48"},"content":"                EditCommand editCommand \u003d EDIT_COMMAND_PARSER.parse(newCommandInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"jlxw48"},"content":"                listOfEditCommands.add(editCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"jlxw48"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"jlxw48"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"jlxw48"},"content":"    private void createAnotherListOfEditCommands(List\u003cEditCommand\u003e listOfEditCommands, String argsForEdit) {","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"jlxw48"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"jlxw48"},"content":"            for (Index index : LIST_OF_INDICES) {","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"jlxw48"},"content":"                String newCommandInput \u003d 1 + \" \" + argsForEdit;","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"jlxw48"},"content":"                EditCommand editCommand \u003d EDIT_COMMAND_PARSER.parse(newCommandInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"jlxw48"},"content":"                listOfEditCommands.add(editCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"jlxw48"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"jlxw48"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"jlxw48"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"wongkokian":6,"jlxw48":187}},{"path":"src/test/java/seedu/address/logic/commands/ClearShortcutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.TypicalShortcuts.getTypicalShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"public class ClearShortcutCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public void execute_emptyShortcutLibrary_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        assertCommandSuccess(new ClearShortcutCommand(), model, ClearShortcutCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public void execute_nonShortcutLibrary_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), new Authentication(),","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"                getTypicalShortcutLibrary());","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new Authentication(),","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"                getTypicalShortcutLibrary());","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        expectedModel.setShortcutLibrary(new ShortcutLibrary());","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        assertCommandSuccess(new ClearShortcutCommand(), model, ClearShortcutCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":36}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false)));","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false)));","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, true)));","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false, false).hashCode());","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, false, true).hashCode());","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"wongkokian":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"swayongshen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE_POLICY;","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT_COMMAND;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"swayongshen"},"content":"    public static final String VALID_POLICY_ID \u003d \"P#1245\";","lastModifiedDate":"2021-02-26"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"    public static final String VALID_POLICY_ID_WITH_URL \u003d \"POL#6789\u003ewww.youtube.com\";","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"    public static final String VALID_MEETING_AMY \u003d \"17.7.2021 17:30 20:00 Mall\";","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"    public static final String VALID_MEETING_BOB \u003d \"23.03.2021 12:30 15:30 MRT\";","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    public static final String VALID_SHORTCUT_NAME \u003d \"ls\";","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    public static final String VALID_SHORTCUT_COMMAND \u003d \"list\";","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"swayongshen"},"content":"    public static final String POLICY_DESC \u003d \" \" + PREFIX_INSURANCE_POLICY + VALID_POLICY_ID;","lastModifiedDate":"2021-02-26"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"    public static final String MEETING_DESC_AMY \u003d \" \" + PREFIX_MEETING + VALID_MEETING_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"    public static final String MEETING_DESC_BOB \u003d \" \" + PREFIX_MEETING + VALID_MEETING_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    public static final String VALID_SHORTCUT_NAME_DESC \u003d \" \" + PREFIX_SHORTCUT_NAME + VALID_SHORTCUT_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"    public static final String VALID_SHORTCUT_COMMAND_DESC \u003d \" \" + PREFIX_SHORTCUT_COMMAND + VALID_SHORTCUT_COMMAND;","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"    public static final String INVALID_SHORTCUT_NAME_DESC \u003d \" \" + PREFIX_SHORTCUT_NAME + \"ls*\";","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"    public static final String INVALID_SHORTCUT_COMMAND_DESC \u003d \" \" + PREFIX_SHORTCUT_COMMAND + \"list all\";","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"jlxw48"},"content":"    public static final String ARGS_FOR_EDIT \u003d \"t/\" + VALID_TAG_HUSBAND + \" i/\" + VALID_POLICY_ID + \" i/\"","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"jlxw48"},"content":"            + VALID_POLICY_ID_WITH_URL;","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"swayongshen"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-02-26"},{"lineNumber":88,"author":{"gitId":"swayongshen"},"content":"                .withPolicies(VALID_POLICY_ID).build();","lastModifiedDate":"2021-02-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wongkokian":9,"NBH99":5,"swayongshen":5,"-":127,"jlxw48":4}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wongkokian":4,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/DeleteShortcutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.TypicalShortcuts.getTypicalShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":" * {@code DeleteShortcutCommand}.","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"public class DeleteShortcutCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), new Authentication(),","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"            getTypicalShortcutLibrary());","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    public void execute_validShortcutName_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        String nameOfShortcutToDelete \u003d \"ls\";","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        DeleteShortcutCommand deleteShortcutCommand \u003d new DeleteShortcutCommand(\"ls\");","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        String expectedMessage \u003d String.format(DeleteShortcutCommand.MESSAGE_DELETE_SHORTCUT_SUCCESS,","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"                nameOfShortcutToDelete);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), new Authentication(),","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"                getTypicalShortcutLibrary());","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        expectedModel.deleteShortcut(nameOfShortcutToDelete);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        assertCommandSuccess(deleteShortcutCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    public void execute_invalidShortcutName_throwsCommandException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        String nameOfNonExistentShortcut \u003d \"abc\";","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        DeleteShortcutCommand deleteShortcutCommand \u003d new DeleteShortcutCommand(nameOfNonExistentShortcut);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        assertCommandFailure(deleteShortcutCommand, model, Messages.MESSAGE_SHORTCUT_NAME_NOT_EXIST);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"    public void equals() {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        DeleteShortcutCommand first \u003d new DeleteShortcutCommand(\"sna\");","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        DeleteShortcutCommand second \u003d new DeleteShortcutCommand(\"ls\");","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        assertTrue(first.equals(first));","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        DeleteShortcutCommand firstCopy \u003d new DeleteShortcutCommand(\"sna\");","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        assertTrue(first.equals(firstCopy));","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        assertFalse(first.equals(1));","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        assertFalse(first.equals(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        // different shortcut name -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        assertFalse(first.equals(second));","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":72}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"jay9645"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor(),","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"jay9645"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"jay9645"},"content":"                new EditPersonDescriptorBuilder(personInList).build(), EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"jay9645"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"jay9645"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"jay9645"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY,","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"jay9645"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor,","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"wongkokian"},"content":"        assertFalse(standardCommand.equals(new HelpCommand()));","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"jay9645"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY,","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.REPLACE)));","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"jay9645"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.REPLACE)));","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"jay9645"},"content":"        // different edit policy mode -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"jay9645"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.MODIFY)));","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"jay9645"},"content":"        final EditCommand modifyCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY,","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.MODIFY);","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"jay9645"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"jay9645"},"content":"        assertTrue(modifyCommand.equals(modifyCommand));","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"jay9645"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"jay9645"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY,","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.MODIFY)));","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"jay9645"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"jay9645"},"content":"        assertFalse(modifyCommand.equals(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"jay9645"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"jay9645"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.MODIFY)));","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"jay9645"},"content":"        // same command -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"jay9645"},"content":"        assertTrue(modifyCommand.equals(new EditCommand(INDEX_FIRST_PERSON, copyDescriptor,","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"jay9645"},"content":"                EditCommand.EditPolicyMode.MODIFY)));","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"wongkokian":11,"-":155,"jay9645":42}},{"path":"src/test/java/seedu/address/logic/commands/EditShortcutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.TypicalShortcuts.getTypicalShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditShortcutCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"public class EditShortcutCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), getTypicalShortcutLibrary());","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public void execute_validShortcutNameAndCommand_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        Shortcut editedShortcut \u003d new Shortcut(\"ls\", \"list\");","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        EditShortcutCommand editShortcutCommand \u003d new EditShortcutCommand(editedShortcut.getShortcutName(),","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"                editedShortcut.getShortcutCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        String expectedMessage \u003d String.format(EditShortcutCommand.MESSAGE_EDIT_SHORTCUT_SUCCESS, editedShortcut);","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), getTypicalShortcutLibrary());","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        expectedModel.setShortcut(editedShortcut.getShortcutName(), editedShortcut.getShortcutCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        assertCommandSuccess(editShortcutCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    public void execute_invalidShortcutName_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        Shortcut editedShortcut \u003d new Shortcut(\"abc\", \"list\");","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        EditShortcutCommand editShortcutCommand \u003d new EditShortcutCommand(editedShortcut.getShortcutName(),","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"                editedShortcut.getShortcutCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        assertCommandFailure(editShortcutCommand, model, Messages.MESSAGE_SHORTCUT_NAME_NOT_EXIST);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"    public void equals() {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        final EditShortcutCommand first \u003d new EditShortcutCommand(\"sna\", \"sort -n -asc\");","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        final EditShortcutCommand second \u003d new EditShortcutCommand(\"sna\", \"sort -n -asc\");","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        assertTrue(first.equals(second));","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        assertTrue(first.equals(first));","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        assertFalse(first.equals(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        assertFalse(first.equals(1));","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"        // different shortcut name -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        assertFalse(first.equals(new EditShortcutCommand(\"sortname\", \"sort -n -asc\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        // different shortcut command -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        assertFalse(first.equals(new EditShortcutCommand(\"sna\", \"list\")));","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":71}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"                false, false, false, true);","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"wongkokian":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import static seedu.address.logic.commands.FindCommand.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"        PhoneContainsKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"        FindCommand findThirdCommand \u003d new FindCommand(thirdPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"        // different search field -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"        assertFalse(findFirstCommand.equals(findThirdCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"n/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz \u0026 Elle \u0026 Kunz\");","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\u0026\\\\s+\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wongkokian":3,"-":77,"jay9645":11}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"wongkokian":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wongkokian":3,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/ListShortcutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.TypicalShortcuts.getTypicalShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"public class ListShortcutCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    private Model model;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs(), getTypicalShortcutLibrary());","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), model.getShortcutLibrary());","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    public void execute_showsSameShortcutList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        String expectedMessage \u003d expectedModel.getShortcutLibrary().getAllShortcutsInString();","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false,","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"                true, false);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        assertCommandSuccess(new ListShortcutCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":36}},{"path":"src/test/java/seedu/address/logic/commands/LockCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"swayongshen"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jay9645"},"content":" * {@code LockCommand}.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"public class LockCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":"    private static final String DEFAULT_PASSWORD \u003d \"1234\";","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":"    private static final String NEW_PASSWORD \u003d \"5678\";","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"    private static final String WRONG_PASSWORD \u003d \"6767\";","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"LockTest\");","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"            new Authentication(TEST_DATA_FOLDER), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"    public void execute_newLock_success() throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"jay9645"},"content":"        LockCommand command \u003d new LockCommand(DEFAULT_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"        command.execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"        assertEquals(DEFAULT_PASSWORD, model.getAuthentication().getPassword());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"swayongshen"},"content":"    public void execute_replacePassword_success() throws CommandException, NoSuchFieldException,","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"swayongshen"},"content":"            IllegalAccessException {","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"swayongshen"},"content":"        Field password \u003d Authentication.class.getDeclaredField(\"password\");","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"swayongshen"},"content":"        password.setAccessible(true);","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"swayongshen"},"content":"        Authentication authentication \u003d model.getAuthentication();","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"swayongshen"},"content":"        password.set(authentication, Optional.of(DEFAULT_PASSWORD));","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"        LockCommand replaceWithNewPassword \u003d new LockCommand(DEFAULT_PASSWORD, NEW_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"        replaceWithNewPassword.execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"        assertEquals(NEW_PASSWORD, model.getAuthentication().getPassword());","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"    public void execute_useSamePassword_success() throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"        LockCommand setOldPassword \u003d new LockCommand(DEFAULT_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"jay9645"},"content":"        setOldPassword.execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"jay9645"},"content":"        model.getAuthentication().removePassword();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"        LockCommand restorePassword \u003d new LockCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"        restorePassword.execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"        assertEquals(DEFAULT_PASSWORD, model.getAuthentication().getPassword());","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"swayongshen"},"content":"    public void execute_equals_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"swayongshen"},"content":"        LockCommand firstCommand \u003d new LockCommand(DEFAULT_PASSWORD, NEW_PASSWORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"swayongshen"},"content":"        LockCommand secondCommand \u003d new LockCommand(DEFAULT_PASSWORD, NEW_PASSWORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"swayongshen"},"content":"        assertEquals(secondCommand, firstCommand);","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"swayongshen"},"content":"    public void execute_wrongPassword_throwsCommandException() throws IllegalAccessException, NoSuchFieldException {","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"swayongshen"},"content":"        LockCommand command \u003d new LockCommand(WRONG_PASSWORD, NEW_PASSWORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"swayongshen"},"content":"        Field password \u003d Authentication.class.getDeclaredField(\"password\");","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"swayongshen"},"content":"        password.setAccessible(true);","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"swayongshen"},"content":"        Authentication authentication \u003d model.getAuthentication();","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"swayongshen"},"content":"        password.set(authentication, Optional.of(DEFAULT_PASSWORD));","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"swayongshen"},"content":"        assertCommandFailure(command, model, LockCommand.MESSAGE_ALREADY_LOCKED_INCORRECT_PASSWORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":2,"swayongshen":27,"jay9645":52}},{"path":"src/test/java/seedu/address/logic/commands/MeetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.ADD_MEETING;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.CLEAR_MEETING;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.DELETE_MEETING;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.MEETING_EMPTY;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"public class MeetCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    private static final String MEETING_DATE \u003d \"15.06.2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    private static final String MEETING_START \u003d \"15:00\";","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    private static final String MEETING_END \u003d \"18:00\";","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    private static final String MEETING_PLACE \u003d \"KENT RIDGE MRT\";","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new Authentication(),","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"            new ShortcutLibrary());","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    public void execute_addMeetingNoClashes_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"        Meeting meeting \u003d new Meeting(MEETING_DATE, MEETING_START, MEETING_END, MEETING_PLACE);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"        Person newPerson \u003d MeetCommand.addMeeting(person, meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"        MeetCommand meetCommand \u003d new MeetCommand(INDEX_FIRST_PERSON, ADD_MEETING,","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                MEETING_DATE, MEETING_START, MEETING_END, MEETING_PLACE);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        String expectedMessage \u003d String.format(MeetCommand.MESSAGE_ADD_MEETING, meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"                new Authentication(), new ShortcutLibrary());","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), newPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"        assertCommandSuccess(meetCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"    public void execute_addMeetingHasClashes_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"        Meeting clashedMeeting \u003d person.getMeetings().get(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"        MeetCommand meetCommand \u003d new MeetCommand(INDEX_FIRST_PERSON, ADD_MEETING,","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"                clashedMeeting.date, MEETING_START, MEETING_END, MEETING_PLACE);","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"        String expectedMessage \u003d String.format(MeetCommand.MESSAGE_CLASHING_MEETING, clashedMeeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"        assertCommandFailure(meetCommand, model, expectedMessage);","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"    public void execute_deleteMeeting_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"        Meeting meeting \u003d new Meeting(MEETING_DATE, MEETING_START, MEETING_END, MEETING_PLACE);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"        Person newPerson \u003d MeetCommand.addMeeting(person, meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"        MeetCommand meetCommand \u003d new MeetCommand(INDEX_FIRST_PERSON, DELETE_MEETING,","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"                MEETING_DATE, MEETING_START, MEETING_END, MEETING_PLACE);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"        String expectedMessage \u003d String.format(MeetCommand.MESSAGE_DELETE_MEETING, meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"            meetCommand.execute(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"        } catch (CommandException ex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"            assert true;","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"        Person newerPerson \u003d MeetCommand.deleteMeeting(newPerson, meeting);","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"                new Authentication() , new ShortcutLibrary());","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), newerPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"        assertCommandSuccess(meetCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"    public void execute_clearMeeting_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"        Person newPerson \u003d MeetCommand.clearMeeting(person);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"        MeetCommand meetCommand \u003d new MeetCommand(INDEX_FIRST_PERSON, CLEAR_MEETING,","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"                MEETING_EMPTY, MEETING_START, MEETING_END, MEETING_PLACE);","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"                new Authentication(), new ShortcutLibrary());","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), newPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"        assertCommandSuccess(meetCommand, model, MeetCommand.MESSAGE_CLEAR_MEETING, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"wongkokian":10,"NBH99":91}},{"path":"src/test/java/seedu/address/logic/commands/PolicyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jlxw48"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":"public class PolicyCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"    public void execute_validIndexUnfilteredListNoPolicies_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"        Person personPoliciesToDisplay \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"        PolicyCommand policyCommand \u003d new PolicyCommand(INDEX_THIRD_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"        String expectedMessage \u003d String.format(PolicyCommand.NO_POLICIES, personPoliciesToDisplay.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, true, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        assertCommandSuccess(policyCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"    public void execute_validIndexUnfilteredListWithPolicies_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"jlxw48"},"content":"        Person personPoliciesToDisplay \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"jlxw48"},"content":"        PolicyCommand policyCommand \u003d new PolicyCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jlxw48"},"content":"        String expectedMessage \u003d personPoliciesToDisplay.getPersonNameAndAllPoliciesInString();","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, true, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        assertCommandSuccess(policyCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"        PolicyCommand policyCommand \u003d new PolicyCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"        assertCommandFailure(policyCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"jlxw48"},"content":"    public void execute_validIndexFilteredListNoPolicies_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"jlxw48"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"jlxw48"},"content":"        Person personPoliciesToDisplay \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"        PolicyCommand policyCommand \u003d new PolicyCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"jlxw48"},"content":"        String expectedMessage \u003d String.format(PolicyCommand.NO_POLICIES, personPoliciesToDisplay.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, true, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"jlxw48"},"content":"        // there should be no change to the model, since this is not a command which modifies the {@code model}","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"jlxw48"},"content":"        showPersonAtIndex(expectedModel, INDEX_THIRD_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"        assertCommandSuccess(policyCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"    public void execute_validIndexFilteredListWithPolicies_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"jlxw48"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"jlxw48"},"content":"        Person personPoliciesToDisplay \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"jlxw48"},"content":"        PolicyCommand policyCommand \u003d new PolicyCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"jlxw48"},"content":"        String expectedMessage \u003d personPoliciesToDisplay.getPersonNameAndAllPoliciesInString();","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, true, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"jlxw48"},"content":"        // there should be no change to the model, since this is not a command which modifies the {@code model}","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"jlxw48"},"content":"        showPersonAtIndex(expectedModel, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"        assertCommandSuccess(policyCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"jlxw48"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"jlxw48"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"jlxw48"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"jlxw48"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"jlxw48"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"jlxw48"},"content":"        PolicyCommand policyCommand \u003d new PolicyCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"jlxw48"},"content":"        assertCommandFailure(policyCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"jlxw48"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"jlxw48"},"content":"        PolicyCommand policyFirstCommand \u003d new PolicyCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"jlxw48"},"content":"        PolicyCommand policySecondCommand \u003d new PolicyCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"jlxw48"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"jlxw48"},"content":"        assertTrue(policyFirstCommand.equals(policyFirstCommand));","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"jlxw48"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"jlxw48"},"content":"        PolicyCommand policyFirstCommandCopy \u003d new PolicyCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"jlxw48"},"content":"        assertTrue(policyFirstCommand.equals(policyFirstCommandCopy));","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"jlxw48"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"jlxw48"},"content":"        assertFalse(policyFirstCommand.equals(1));","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"jlxw48"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"jlxw48"},"content":"        assertFalse(policyFirstCommand.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"jlxw48"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"jlxw48"},"content":"        assertFalse(policyFirstCommand.equals(policySecondCommand));","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"jlxw48"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"wongkokian":14,"jlxw48":116}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SortCommand.","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"public class SortCommandTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    public void execute_nameSortedInAscendingOrder() {","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_ASCENDING);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"        Comparator\u003cPerson\u003e comparator \u003d new SortCommand.PersonNameComparator();","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS_NAME_ASCENDING, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"    public void execute_nameSortedInDescendingOrder() {","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_DESCENDING);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        Comparator\u003cPerson\u003e comparator \u003d new SortCommand.PersonNameComparator();","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"        comparator \u003d comparator.reversed();","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS_NAME_DESCENDING, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    public void execute_policySortedInAscendingOrder() {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        SortCommand sortCommand \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"                new SortCommand(SortCommand.SORT_BY_INSURANCE_POLICY, SortCommand.DIRECTION_ASCENDING);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"        Comparator\u003cPerson\u003e comparator \u003d new SortCommand.PolicyComparator();","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"        assertCommandSuccess(sortCommand, model,","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"                SortCommand.MESSAGE_SUCCESS_INSURANCE_POLICY_ASCENDING, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"    public void execute_policySortedInDescendingOrder() {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"        SortCommand sortCommand \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"                new SortCommand(SortCommand.SORT_BY_INSURANCE_POLICY, SortCommand.DIRECTION_DESCENDING);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"                new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"        Comparator\u003cPerson\u003e comparator \u003d new SortCommand.PolicyComparator();","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"        comparator \u003d comparator.reversed();","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"        assertCommandSuccess(sortCommand, model,","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"                SortCommand.MESSAGE_SUCCESS_INSURANCE_POLICY_DESCENDING, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"wongkokian":10,"NBH99":67}},{"path":"src/test/java/seedu/address/logic/commands/UnlockCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jay9645"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jay9645"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jay9645"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jay9645"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jay9645"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jay9645"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jay9645"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jay9645"},"content":"import java.security.InvalidKeyException;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jay9645"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import javax.crypto.BadPaddingException;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"import javax.crypto.IllegalBlockSizeException;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jay9645"},"content":"import javax.crypto.NoSuchPaddingException;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jay9645"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"jay9645"},"content":"import seedu.address.storage.Authentication;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"jay9645"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"jay9645"},"content":" * {@code LockCommand}.","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"public class UnlockCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"    private static final String DEFAULT_PASSWORD \u003d \"1234\";","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jay9645"},"content":"    private static final String INCORRECT_PASSWORD \u003d \"5678\";","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"LockTest\");","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jay9645"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"            new Authentication(TEST_DATA_FOLDER), new ShortcutLibrary());","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"    public void execute_unlock_success() throws CommandException, NoSuchPaddingException, NoSuchAlgorithmException,","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"            IOException, BadPaddingException, IllegalBlockSizeException, InvalidKeyException {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"jay9645"},"content":"        model.getAuthentication().setPassword(Optional.of(DEFAULT_PASSWORD));","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"        UnlockCommand command \u003d new UnlockCommand(DEFAULT_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"jay9645"},"content":"        command.execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"        assertEquals(\"\", model.getAuthentication().getPassword());","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"    public void execute_unlockWrongPassword_throwsCommandException() throws NoSuchPaddingException,","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"jay9645"},"content":"            NoSuchAlgorithmException, IOException, BadPaddingException, IllegalBlockSizeException, InvalidKeyException {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"        model.getAuthentication().setPassword(Optional.of(DEFAULT_PASSWORD));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"        UnlockCommand command \u003d new UnlockCommand(INCORRECT_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"        assertCommandFailure(command, model, UnlockCommand.MESSAGE_INCORRECT_PASSWORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"swayongshen"},"content":"    public void execute_equals_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"swayongshen"},"content":"        UnlockCommand firstCommand \u003d new UnlockCommand(DEFAULT_PASSWORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"swayongshen"},"content":"        UnlockCommand secondCommand \u003d new UnlockCommand(DEFAULT_PASSWORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"swayongshen"},"content":"        assertEquals(firstCommand, secondCommand);","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"swayongshen"},"content":"    public void execute_unlockAlreadyUnlocked_throwsCommandException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"swayongshen"},"content":"        model.getAuthentication().removePassword();","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"swayongshen"},"content":"        UnlockCommand command \u003d new UnlockCommand(DEFAULT_PASSWORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"swayongshen"},"content":"        assertCommandFailure(command, model, UnlockCommand.MESSAGE_ALREADY_UNLOCKED);","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":2,"swayongshen":14,"jay9645":53}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"                .withMeetings(VALID_MEETING_BOB).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MEETING_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MEETING_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MEETING_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MEETING_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MEETING_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MEETING_DESC_BOB, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withPolicies().withMeetings().build();","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"                + ADDRESS_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"NBH99":13,"-":131}},{"path":"src/test/java/seedu/address/logic/parser/AddShortcutCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SHORTCUT_COMMAND_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SHORTCUT_NAME_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_COMMAND;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_COMMAND_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_NAME_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.AddShortcutCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"public class AddShortcutCommandParserTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    private AddShortcutCommandParser parser \u003d new AddShortcutCommandParser();","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    public void parse_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        Shortcut expectedShortcut \u003d new Shortcut(VALID_SHORTCUT_NAME, VALID_SHORTCUT_COMMAND);","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_SHORTCUT_NAME_DESC + VALID_SHORTCUT_COMMAND_DESC,","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"                new AddShortcutCommand(expectedShortcut.getShortcutName(), expectedShortcut.getShortcutCommand()));","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        // missing shortcut name prefix","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, VALID_SHORTCUT_NAME + VALID_SHORTCUT_COMMAND_DESC, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        // missing shortcut command prefix","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, VALID_SHORTCUT_NAME_DESC + VALID_SHORTCUT_COMMAND, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, VALID_SHORTCUT_NAME + VALID_SHORTCUT_COMMAND, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        // invalid shortcut name","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, INVALID_SHORTCUT_NAME_DESC + VALID_SHORTCUT_COMMAND_DESC,","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"                Shortcut.MESSAGE_NAME_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        // invalid shortcut command","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, VALID_SHORTCUT_NAME_DESC + INVALID_SHORTCUT_COMMAND_DESC,","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"                Shortcut.MESSAGE_COMMAND_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        // both invalid values, only invalid shortcut name reported","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, INVALID_SHORTCUT_NAME_DESC + INVALID_SHORTCUT_COMMAND_DESC,","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"                Shortcut.MESSAGE_NAME_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + VALID_SHORTCUT_NAME_DESC + VALID_SHORTCUT_COMMAND_DESC,","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":65}},{"path":"src/test/java/seedu/address/logic/parser/BatchCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.BatchCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jlxw48"},"content":"public class BatchCommandParserTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jlxw48"},"content":"    private static final BatchCommandParser BATCH_COMMAND_PARSER \u003d new BatchCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":"    private static final EditCommandParser EDIT_COMMAND_PARSER \u003d new EditCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":"    private static final DeleteCommandParser DELETE_COMMAND_PARSER \u003d new DeleteCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"    private static final List\u003cIndex\u003e LIST_OF_INDICES \u003d Arrays.asList(Index.fromOneBased(3), Index.fromOneBased(2),","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"            Index.fromOneBased(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"    public void parse_validArgsForBatchEdit_returnsBatchEditCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"            List\u003cEditCommand\u003e listOfEditCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":"            for (Index index : LIST_OF_INDICES) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"                String newCommandInput \u003d index.getOneBased() + \" \" + CommandTestUtil.ARGS_FOR_EDIT;","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"jlxw48"},"content":"                EditCommand editCommand \u003d EDIT_COMMAND_PARSER.parse(newCommandInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"jlxw48"},"content":"                listOfEditCommands.add(editCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"jlxw48"},"content":"            assertParseSuccess(BATCH_COMMAND_PARSER, \"edit 1, 2,3 t/husband i/P#1245 i/POL#6789\u003ewww.youtube.com\",","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jlxw48"},"content":"                    new BatchCommand\u003c\u003e(listOfEditCommands));","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jlxw48"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jlxw48"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"jlxw48"},"content":"    public void parse_validArgsForBatchDelete_returnsBatchDeleteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"jlxw48"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"jlxw48"},"content":"            List\u003cDeleteCommand\u003e listOfDeleteCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jlxw48"},"content":"            for (Index index : LIST_OF_INDICES) {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jlxw48"},"content":"                String newCommandInput \u003d String.valueOf(index.getOneBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"jlxw48"},"content":"                DeleteCommand deleteCommand \u003d DELETE_COMMAND_PARSER.parse(newCommandInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jlxw48"},"content":"                listOfDeleteCommands.add(deleteCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jlxw48"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"jlxw48"},"content":"            assertParseSuccess(BATCH_COMMAND_PARSER, \"delete 1, 2,3\",","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"jlxw48"},"content":"                    new BatchCommand\u003c\u003e(listOfDeleteCommands));","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"jlxw48"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"jlxw48"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"jlxw48"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"jlxw48"},"content":"    public void parse_invalidIndices_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"delete 0, 1, 2\",","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, ParserUtil.MESSAGE_INVALID_INDEX));","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"edit 0, 4, 5 t/husband i/P#1245 i/POL#6789\u003ewww.youtube.com\",","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, ParserUtil.MESSAGE_INVALID_INDEX));","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"jlxw48"},"content":"    public void parse_invalidEditArguments_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"edit 1, 4, 5 n/Tom i/P#1245 i/POL#6789\u003ewww.youtube.com\",","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, BatchCommandParser.INVALID_EDIT_ARGUMENTS));","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"jlxw48"},"content":"    public void parse_invalidCommandForBatch_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"add n/Tom a/Orchard p/9999 e/tom@tom.com t/tom i/POL_#tom123\",","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, BatchCommandParser.INVALID_BATCH_COMMAND));","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"policy 1\",","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, BatchCommandParser.INVALID_BATCH_COMMAND));","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"exit\",","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, BatchCommandParser.INVALID_BATCH_COMMAND));","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"list\",","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, BatchCommandParser.INVALID_BATCH_COMMAND));","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"find\",","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, BatchCommandParser.INVALID_BATCH_COMMAND));","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"sort -n -des\",","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, BatchCommandParser.INVALID_BATCH_COMMAND));","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(BATCH_COMMAND_PARSER, \"lock 123\",","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"jlxw48"},"content":"                String.format(BatchCommand.ERROR_MESSAGE, BatchCommandParser.INVALID_BATCH_COMMAND));","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"jlxw48"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jlxw48":100}},{"path":"src/test/java/seedu/address/logic/parser/ClientBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"public class ClientBookParserTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"jay9645"},"content":"    private final ClientBookParser parser \u003d new ClientBookParser();","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"        System.out.println(PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor, EditCommand.EditPolicyMode.REPLACE), command);","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"                FindCommand.COMMAND_WORD + \" n/\" + keywords.stream().collect(Collectors.joining(\" \u0026 \")));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"jay9645"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" -i\") instanceof ListCommand);","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" -p\") instanceof ListCommand);","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" -a\") instanceof ListCommand);","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" -e\") instanceof ListCommand);","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"swayongshen"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" -e -a -p -i\") instanceof ListCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" -n -asc\") instanceof SortCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" -i -des\") instanceof SortCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"NBH99":6,"swayongshen":1,"-":91,"jay9645":8}},{"path":"src/test/java/seedu/address/logic/parser/DeleteShortcutCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.DeleteShortcutCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"public class DeleteShortcutCommandParserTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    private DeleteShortcutCommandParser parser \u003d new DeleteShortcutCommandParser();","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"ls\", new DeleteShortcutCommand(VALID_SHORTCUT_NAME));","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, \"*\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"                DeleteShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":26}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"swayongshen"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-02-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"jay9645"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"jay9645"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"jay9645"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"jay9645"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"jay9645"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"jay9645"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"jay9645"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"jay9645"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"jay9645"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"jay9645"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"jay9645"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, EditCommand.EditPolicyMode.REPLACE);","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"swayongshen":1,"-":199,"jay9645":11}},{"path":"src/test/java/seedu/address/logic/parser/EditShortcutCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SHORTCUT_COMMAND_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SHORTCUT_NAME_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_COMMAND;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_COMMAND_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_NAME_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import seedu.address.logic.commands.EditShortcutCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"public class EditShortcutCommandParserTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditShortcutCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    private EditShortcutCommandParser parser \u003d new EditShortcutCommandParser();","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        // no shortcut name specified","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, VALID_SHORTCUT_COMMAND_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        // no shortcut command specified","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, VALID_SHORTCUT_NAME_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        // no shortcut name and command specified","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, INVALID_SHORTCUT_NAME_DESC + VALID_SHORTCUT_COMMAND_DESC,","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"                Shortcut.MESSAGE_NAME_CONSTRAINTS); // invalid shortcut name","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, VALID_SHORTCUT_NAME_DESC + INVALID_SHORTCUT_COMMAND_DESC,","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"                Shortcut.MESSAGE_COMMAND_CONSTRAINTS); // invalid shortcut command","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, INVALID_SHORTCUT_NAME_DESC + INVALID_SHORTCUT_COMMAND_DESC,","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"                Shortcut.MESSAGE_NAME_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        String userInput \u003d VALID_SHORTCUT_NAME_DESC + VALID_SHORTCUT_COMMAND_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        EditShortcutCommand expectedCommand \u003d new EditShortcutCommand(VALID_SHORTCUT_NAME, VALID_SHORTCUT_COMMAND);","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":58}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.InsurancePolicyContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"jay9645"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"jay9645"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jay9645"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    //@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        FindCommand expectedNameFindCommand \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        FindCommand expectedPhoneFindCommand \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"                new FindCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(\"12345\", \"98765\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        FindCommand expectedEmailFindCommand \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"                new FindCommand(new EmailContainsKeywordsPredicate(Arrays.asList(\"sam@mail.com\", \"bob@mail.com\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        FindCommand expectedAddressFindCommand \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"                new FindCommand(new AddressContainsKeywordsPredicate(Arrays.asList(\"Bedok\", \"Tampines\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        FindCommand expectedTagFindCommand \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"                new FindCommand(new TagContainsKeywordsPredicate(Arrays.asList(\"friend\", \"family\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        FindCommand expectedInsurancePolicyFindCommand \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"                new FindCommand(new InsurancePolicyContainsKeywordsPredicate(Arrays.asList(\"P12345\", \"P98765\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"n/Alice \u0026 Bob\", expectedNameFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"p/12345 \u0026 98765\", expectedPhoneFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"e/sam@mail.com \u0026 bob@mail.com\", expectedEmailFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"a/Bedok \u0026 Tampines\", expectedAddressFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"t/friend \u0026 family\", expectedTagFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"i/P12345 \u0026 P98765\", expectedInsurancePolicyFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"\\n n/ \\n Alice \\n \u0026 \\t Bob  \\t\", expectedNameFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"\\n p/ \\n 12345 \\n \u0026 \\t 98765  \\t\", expectedPhoneFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"\\n e/ \\n sam@mail.com \\n \u0026 \\t bob@mail.com  \\t\", expectedEmailFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"\\n a/ \\n Bedok \\n \u0026 \\t Tampines  \\t\", expectedAddressFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"\\n t/ \\n friend \\n \u0026 \\t family  \\t\", expectedTagFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        assertParseSuccess(parser, \"\\n i/ \\n P12345 \\n \u0026 \\t P98765  \\t\", expectedInsurancePolicyFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    public void parse_invalidFlag_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, \"address/Bedok \u0026 Tampines\",","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"    public void parse_emptyKeywords_throwParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, \"n/John \u0026 \u0026 Tom\",","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"    public void parse_multipleFlag_throwParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, \"n/John p/98765432\",","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"    public void parse_noFlag_throwParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"        assertParseFailure(parser, \"98765432\",","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"wongkokian":57,"-":21,"jay9645":7}},{"path":"src/test/java/seedu/address/logic/parser/MeetCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.ADD_MEETING;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.CLEAR_MEETING;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.DELETE_MEETING;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.MeetCommand.MEETING_EMPTY;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.commands.MeetCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"public class MeetCommandParserTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    private static final String MEETING_DATE \u003d \"15.06.2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    private static final String MEETING_START \u003d \"15:00\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    private static final String MEETING_END \u003d \"18:00\";","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    private static final String MEETING_PLACE \u003d \"KENT RIDGE MRT\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    private MeetCommandParser parser \u003d new MeetCommandParser();","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MeetCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"        // missing index","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"15.06.2021 15:00 18:00 KENT RIDGE MRT\",","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MeetCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"        // missing place","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"1 15.06.2021 15:00 18:00\",","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MeetCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        // invalid index","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"0 15.06.2021 15:00 18:00 KENT RIDGE MRT\",","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_INDEX));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        // invalid date","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"1 15/06/2021 15:00 18:00 KENT RIDGE MRT\",","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MeetCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"        // invalid time","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"1 15.06.2021 1500 1800 KENT RIDGE MRT\",","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MeetCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"    public void parse_validArgs_returnsMeetCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        // default add meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"        assertParseSuccess(parser, \"1 15.06.2021 15:00 18:00 KENT RIDGE MRT\",","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"                new MeetCommand(INDEX_FIRST_PERSON, ADD_MEETING,","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"                        MEETING_DATE, MEETING_START, MEETING_END, MEETING_PLACE));","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"        // add meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"        assertParseSuccess(parser, \"1 -add 15.06.2021 15:00 18:00 KENT RIDGE MRT\",","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"                new MeetCommand(INDEX_FIRST_PERSON, ADD_MEETING,","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"                        MEETING_DATE, MEETING_START, MEETING_END, MEETING_PLACE));","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"        // delete meeting","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"        assertParseSuccess(parser, \"1 -delete 15.06.2021 15:00 18:00 KENT RIDGE MRT\",","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"                new MeetCommand(INDEX_FIRST_PERSON, DELETE_MEETING,","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"                        MEETING_DATE, MEETING_START, MEETING_END, MEETING_PLACE));","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"        // clear meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"        assertParseSuccess(parser, \"1 -clear\",","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"                new MeetCommand(INDEX_FIRST_PERSON, CLEAR_MEETING,","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"                        MEETING_EMPTY, MEETING_EMPTY, MEETING_EMPTY, MEETING_EMPTY));","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"NBH99":77}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"    private static final String INVALID_POLICYID_NO_URL \u003d \"Policy_123\";","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"    private static final String INVALID_POLICYID_URL \u003d \"Policy_12345\u003ewww.google.com\";","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"    private static final String VALID_POLICYID_NO_URL \u003d \"Policy_1234\";","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"    private static final String VALID_POLICYID_URL \u003d \"Policy_1235\u003ewww.google.com\";","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":196,"jay9645":4}},{"path":"src/test/java/seedu/address/logic/parser/PolicyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jlxw48"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jlxw48"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jlxw48"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jlxw48"},"content":"import seedu.address.logic.commands.PolicyCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jlxw48"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jlxw48"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jlxw48"},"content":" * outside of the PolicyCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jlxw48"},"content":" * same path through the PolicyCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jlxw48"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jlxw48"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jlxw48"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jlxw48"},"content":"public class PolicyCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jlxw48"},"content":"    private PolicyCommandParser parser \u003d new PolicyCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"jlxw48"},"content":"    public void parse_validArgs_returnsPolicyCommand() {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jlxw48"},"content":"        assertParseSuccess(parser, \"1\", new PolicyCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jlxw48"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jlxw48"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jlxw48"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jlxw48"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, PolicyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jlxw48"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jlxw48"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"jlxw48":32}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        // missing attribute","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"-asc\",","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        // missing direction","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"-i\",","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"        // invalid attribute","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"-f -des\",","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"        // invalid direction","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        assertParseFailure(parser, \"-n -f\",","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    public void parse_validArgs_returnsSortCommand() {","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        // sort by name in ascending order","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"        assertParseSuccess(parser, \"-n -asc\",","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"                new SortCommand(SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_ASCENDING));","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        // sort by name in descending order","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        assertParseSuccess(parser, \"-n -des\",","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"                new SortCommand(SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_DESCENDING));","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"        // sort by policy in ascending order","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        assertParseSuccess(parser, \"-i -asc\",","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"                new SortCommand(SortCommand.SORT_BY_INSURANCE_POLICY, SortCommand.DIRECTION_ASCENDING));","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"        // sort by policy in descending order","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"        assertParseSuccess(parser, \"-i -des\",","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"                new SortCommand(SortCommand.SORT_BY_INSURANCE_POLICY, SortCommand.DIRECTION_DESCENDING));","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"NBH99":58}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary shortcutLibrary \u003d new ShortcutLibrary();","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, shortcutLibrary);","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, shortcutLibrary);","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"wongkokian"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, shortcutLibrary)));","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"wongkokian"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, shortcutLibrary)));","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":132,"author":{"gitId":"wongkokian"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, shortcutLibrary)));","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"wongkokian":7,"-":127}},{"path":"src/test/java/seedu/address/model/insurancepolicy/InsurancePolicyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swayongshen"},"content":"package seedu.address.model.insurancepolicy;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"swayongshen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"swayongshen"},"content":"public class InsurancePolicyTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"    private static final String POLICY_ID_CONTAINS_ANGULAR_BRACKET \u003d \"Policy\u003e1234\u003ewww.google.com\";","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"swayongshen"},"content":"    private static final String CORRECT_POLICY_WITH_URL \u003d \"Policy1234\u003ewww.google.com\";","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"swayongshen"},"content":"    private static final String CORRECT_POLICY \u003d \"Policy1234\";","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"swayongshen"},"content":"    private static final String DEFAULT_POLICY_ID \u003d \"P#123\";","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"    private static final String DEFAULT_POLICY_URL \u003d \"www.aviva.com\";","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"swayongshen"},"content":"    public void execute_checkPolicyIdWithCarrotValidity_false() {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"swayongshen"},"content":"        assertFalse(InsurancePolicy.isValidPolicyId(POLICY_ID_CONTAINS_ANGULAR_BRACKET));","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"swayongshen"},"content":"    public void execute_checkCorrectPolicyValid_true() {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"swayongshen"},"content":"        assertTrue(InsurancePolicy.isValidPolicyId(CORRECT_POLICY));","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"    public void execute_checkCorrectPolicyWithUrl_true() {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"swayongshen"},"content":"        assertTrue(InsurancePolicy.isValidPolicyId(CORRECT_POLICY_WITH_URL));","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"    public void execute_checkEquals_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"swayongshen"},"content":"        assertEquals(new InsurancePolicy(DEFAULT_POLICY_ID, DEFAULT_POLICY_URL),","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"swayongshen"},"content":"                new InsurancePolicy(DEFAULT_POLICY_ID, DEFAULT_POLICY_URL));","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"swayongshen"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"swayongshen":39}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"public class MeetingTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    private static final String INVALID_MEETING \u003d \"23.12.2021/1830/2000/KENT RIDGE MRT\";","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    private static final String INVALID_DATE \u003d \"23/12/2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    private static final String INVALID_START \u003d \"1830\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    private static final String INVALID_END \u003d \"25:00\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    private static final String INVALID_PLACE \u003d \"      ABC      \";","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    private static final String VALID_MEETING \u003d \"23.12.2021 18:30 20:00 KENT RIDGE MRT\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    private static final String VALID_DATE \u003d \"23.12.2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    private static final String VALID_START \u003d \"18:30\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    private static final String VALID_END \u003d \"20:00\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    private static final String VALID_PLACE \u003d \"KENT RIDGE MRT\";","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    public void constructor_newMeeting_equal() {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"        assertEquals(new Meeting(VALID_DATE, VALID_START, VALID_END, VALID_PLACE),","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"                Meeting.newMeeting(VALID_MEETING));","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    public void isValidMeeting_true() {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"        // valid meeting","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        assertTrue(Meeting.isValidMeeting(VALID_MEETING));","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"        // valid place date time","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"        assertTrue(Meeting.isValidMeeting(VALID_DATE, VALID_START, VALID_END, VALID_PLACE));","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"    public void isValidMeeting_false() {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"        // invalid meeting","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"        assertFalse(Meeting.isValidMeeting(INVALID_MEETING));","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"        // invalid date","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        assertFalse(Meeting.isValidMeeting(INVALID_DATE, VALID_START, VALID_END, VALID_PLACE));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        // invalid time","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        assertFalse(Meeting.isValidMeeting(VALID_DATE, INVALID_START, INVALID_END, VALID_PLACE));","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"        // invalid start end","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"        assertFalse(Meeting.isValidMeeting(VALID_DATE, VALID_END, VALID_START, VALID_PLACE));","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"        // invalid place","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"        assertFalse(Meeting.isValidMeeting(VALID_DATE, VALID_START, VALID_END, INVALID_PLACE));","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"NBH99":55}},{"path":"src/test/java/seedu/address/model/person/AddressContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"public class AddressContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        AddressContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"                new AddressContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        AddressContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"                new AddressContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        AddressContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"                new AddressContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        // One keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        AddressContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"                new AddressContainsKeywordsPredicate(Collections.singletonList(\"Orchard\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Orchard Road\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Orchard\", \"Road\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Orchard Road\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Tampines\", \"Bedok\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Bedok South\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"oRChaRD\", \"rOaD\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Orchard Road\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Clementi Street\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Outram\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Jurong East\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"        // Keywords match phone, email and name, but does not match address","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Alice\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":80}},{"path":"src/test/java/seedu/address/model/person/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        // One keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        EmailContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"alice\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@mail.com\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice\", \"tan\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alicetan@mail.com\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"bob\", \"carol\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"bob@mail.com\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"tAN\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alicetan@mail.com\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"alice@mail.com\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"carol\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"bob@mail.com\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        // Keywords match phone, name and address, but does not match email","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Brice\", \"Main\", \"Street\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Brice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"                .withEmail(\"rice@mail.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":78}},{"path":"src/test/java/seedu/address/model/person/InsurancePolicyContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"public class InsurancePolicyContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        InsurancePolicyContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"                new InsurancePolicyContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        InsurancePolicyContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"                new InsurancePolicyContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        InsurancePolicyContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"                new InsurancePolicyContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    public void test_insurancePolicyContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        // One keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        InsurancePolicyContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"                new InsurancePolicyContainsKeywordsPredicate(Collections.singletonList(\"P12345\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicies(\"P12345\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new InsurancePolicyContainsKeywordsPredicate(Arrays.asList(\"12\", \"345\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicies(\"P12345\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new InsurancePolicyContainsKeywordsPredicate(Arrays.asList(\"987\", \"P12\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicies(\"P12345\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new InsurancePolicyContainsKeywordsPredicate(Arrays.asList(\"p123\", \"P1234\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicies(\"P12345\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"    public void test_insurancePolicyDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        InsurancePolicyContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"                new InsurancePolicyContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicies(\"P12345\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new InsurancePolicyContainsKeywordsPredicate(Arrays.asList(\"P98765\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicies(\"P12345\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"        // Keywords match phone, email and address, but does not match insurance policy","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new InsurancePolicyContainsKeywordsPredicate(","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withPolicies(\"P98765\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":82}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ID;","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":92,"author":{"gitId":"swayongshen"},"content":"        // different policies -\u003e returns false","lastModifiedDate":"2021-02-26"},{"lineNumber":93,"author":{"gitId":"swayongshen"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPolicies(VALID_POLICY_ID).build();","lastModifiedDate":"2021-02-26"},{"lineNumber":94,"author":{"gitId":"swayongshen"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-02-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"swayongshen":5,"-":91}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"98765432\");","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"98765432\", \"12345678\");","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"                new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        // One keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"98765432\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"98765\", \"65432\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"12345\", \"65432\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"12345\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        // Keywords match name, email and address, but does not match phone","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"123456\")","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":74}},{"path":"src/test/java/seedu/address/model/person/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"//@@author wongkokian","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        // One keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"best\", \"friend\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"bestfriend\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friend\", \"family\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"bestfriend\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"fRIenD\", \"bEST\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"bestfriend\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friend\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"family\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        // Keywords match phone, email and address, but does not match tag","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withTags(\"family\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wongkokian":76}},{"path":"src/test/java/seedu/address/model/shortcut/ShortcutLibraryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_COMMAND;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.model.shortcut.ShortcutLibrary.NO_SHORTCUT_FEEDBACK;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.TypicalShortcuts.getTypicalShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"public class ShortcutLibraryTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    private final ShortcutLibrary shortcutLibrary \u003d new ShortcutLibrary();","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    private final ShortcutLibrary shortcutLibraryWithMap \u003d new ShortcutLibrary(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        assertEquals(Collections.emptyMap(), shortcutLibrary.getShortcuts());","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    public void constructorWithMap() {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        assertEquals(Collections.emptyMap(), shortcutLibraryWithMap.getShortcuts());","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        assertThrows(NullPointerException.class, () -\u003e shortcutLibrary.resetData(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    public void resetData_withValidShortcutLibrary_replacesData() {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary newData \u003d getTypicalShortcutLibrary();","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        shortcutLibrary.resetData(newData.getShortcuts());","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        assertEquals(newData, shortcutLibrary);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    public void hasShortcut_nullShortcut_throwsNullPointerException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        assertThrows(NullPointerException.class, () -\u003e shortcutLibrary.hasShortcut(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"    public void hasShortcut_shortcutNotInShortcutLibrary_returnsFalse() {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"        assertFalse(shortcutLibrary.hasShortcut(VALID_SHORTCUT_NAME));","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"    public void hasShortcut_shortcutInShortcutLibrary_returnsTrue() {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"        shortcutLibrary.addShortcut(VALID_SHORTCUT_NAME, VALID_SHORTCUT_COMMAND);","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"        assertTrue(shortcutLibrary.hasShortcut(VALID_SHORTCUT_NAME));","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"    public void isEmpty_hasShortcuts_returnsFalse() {","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        shortcutLibrary.addShortcut(VALID_SHORTCUT_NAME, VALID_SHORTCUT_COMMAND);","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        assertFalse(shortcutLibrary.isEmpty());","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"    public void isEmpty_noShortcuts_returnsTrue() {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        assertTrue(shortcutLibrary.isEmpty());","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"    public void getAllShortcutsInString_noShortcuts_returnNoShortcutFeedback() {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        assertTrue(shortcutLibrary.getAllShortcutsInString().equals(NO_SHORTCUT_FEEDBACK));","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":76}},{"path":"src/test/java/seedu/address/model/shortcut/ShortcutTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.model.shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_COMMAND;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHORTCUT_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"public class ShortcutTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Shortcut(null, null));","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    public void constructor_invalidShortcutName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"        String invalidShortcutName \u003d \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        String validShortcutCommand \u003d \"list\";","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Shortcut(invalidShortcutName, validShortcutCommand));","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    public void constructor_invalidShortcutCommand_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        String validShortcutName \u003d \"abc\";","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        String invalidShortcutCommand \u003d \"sort\";","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Shortcut(validShortcutName, invalidShortcutCommand));","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public void isValidShortcutName() {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        // null shortcut name","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"        assertThrows(NullPointerException.class, () -\u003e Shortcut.isValidShortcutName(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    public void isValidShortcutCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"        // null shortcut command","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        assertThrows(NullPointerException.class, () -\u003e Shortcut.isValidShortcutCommand(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    public void getShortcutName() {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"        Shortcut shortcut \u003d new Shortcut(VALID_SHORTCUT_NAME, VALID_SHORTCUT_COMMAND);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"        assertTrue(shortcut.getShortcutName().equals(VALID_SHORTCUT_NAME));","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"    public void getShortcutCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        Shortcut shortcut \u003d new Shortcut(VALID_SHORTCUT_NAME, VALID_SHORTCUT_COMMAND);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"        assertTrue(shortcut.getShortcutCommand().equals(VALID_SHORTCUT_COMMAND));","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    public void isSameShortcut() {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"        Shortcut first \u003d new Shortcut(\"ls\", \"list\");","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"        Shortcut second \u003d new Shortcut(\"ls\", \"help\");","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"        Shortcut third \u003d new Shortcut(\"sna\", \"list\");","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"        // same name, different command -\u003e true","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"        assertTrue(first.isSameShortcutName(second));","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"        // same command, different name -\u003e false","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"        assertFalse(first.isSameShortcutName(third));","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        // same values, different object -\u003e true","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        assertTrue(first.isSameShortcutName(new Shortcut(\"ls\", \"list\")));","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        // null -\u003e false","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"        assertFalse(first.isSameShortcutName(null));","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":75}},{"path":"src/test/java/seedu/address/storage/AuthenticationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swayongshen"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"swayongshen"},"content":"import java.io.File;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"swayongshen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"swayongshen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"swayongshen"},"content":"import java.security.InvalidKeyException;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"swayongshen"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"swayongshen"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"swayongshen"},"content":"import javax.crypto.BadPaddingException;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"swayongshen"},"content":"import javax.crypto.IllegalBlockSizeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"import javax.crypto.NoSuchPaddingException;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"swayongshen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"swayongshen"},"content":"import net.lingala.zip4j.exception.ZipException;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"swayongshen"},"content":"public class AuthenticationTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"swayongshen"},"content":"    private static final String DEFAULT_PASSWORD \u003d \"1234\";","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"swayongshen"},"content":"    private static final Path TEST_DATA_PATH \u003d Paths.get(\"src\", \"test\", \"data\", \"LockTest\",","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"swayongshen"},"content":"            \"addressbook.json\");","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"swayongshen"},"content":"    void execute_setPassword_success() throws NoSuchPaddingException, NoSuchAlgorithmException,","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"swayongshen"},"content":"            IOException, BadPaddingException, IllegalBlockSizeException, InvalidKeyException {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"swayongshen"},"content":"        Authentication authentication \u003d new Authentication(TEST_DATA_PATH);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"swayongshen"},"content":"        authentication.setPassword(Optional.of(DEFAULT_PASSWORD));","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"swayongshen"},"content":"        File passwordFile \u003d new File(authentication.getPasswordFilePath());","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"swayongshen"},"content":"        assertTrue(passwordFile.exists());","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"swayongshen"},"content":"        //Clean up","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"swayongshen"},"content":"        passwordFile.delete();","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"swayongshen"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"swayongshen"},"content":"    void execute_lockUnlock_success() throws IllegalAccessException, NoSuchFieldException, ZipException {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"swayongshen"},"content":"        Field password \u003d Authentication.class.getDeclaredField(\"password\");","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"swayongshen"},"content":"        password.setAccessible(true);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"swayongshen"},"content":"        Authentication authentication \u003d new Authentication(TEST_DATA_PATH);","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"swayongshen"},"content":"        password.set(authentication, Optional.of(DEFAULT_PASSWORD));","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"swayongshen"},"content":"        authentication.lock();","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"swayongshen"},"content":"        File zipFile \u003d new File(authentication.getZipPath());","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"swayongshen"},"content":"        File dataFile \u003d new File(TEST_DATA_PATH.toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"swayongshen"},"content":"        //Pass password into System.in stream for unlock() to read.","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"swayongshen"},"content":"        System.setIn(new ByteArrayInputStream(DEFAULT_PASSWORD.getBytes()));","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"swayongshen"},"content":"        authentication.unlock();","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"swayongshen"},"content":"        assertTrue(dataFile.exists() \u0026\u0026 zipFile.exists());","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"swayongshen"},"content":"        //Clean up","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"swayongshen"},"content":"        zipFile.delete();","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"swayongshen"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"swayongshen":57}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    private static final String INVALID_MEETING \u003d \" \";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().get().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().get().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().get().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"swayongshen"},"content":"    private static final List\u003cJsonAdaptedInsurancePolicy\u003e VALID_POLICIES \u003d BENSON.getPolicies().stream()","lastModifiedDate":"2021-02-26"},{"lineNumber":36,"author":{"gitId":"swayongshen"},"content":"            .map(JsonAdaptedInsurancePolicy::new)","lastModifiedDate":"2021-02-26"},{"lineNumber":37,"author":{"gitId":"swayongshen"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-02-26"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    private static final List\u003cJsonAdaptedMeeting\u003e VALID_MEETING \u003d BENSON.getMeetings().stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            .map(JsonAdaptedMeeting::new)","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"swayongshen"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-02-26"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"                        VALID_TAGS, VALID_POLICIES, VALID_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"swayongshen"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-02-26"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"                VALID_POLICIES, VALID_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"swayongshen"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-02-26"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"                        VALID_POLICIES, VALID_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"swayongshen"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-02-26"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"                VALID_POLICIES, VALID_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"swayongshen"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-02-26"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"                        VALID_POLICIES, VALID_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"swayongshen"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-02-26"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"                VALID_POLICIES, VALID_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"swayongshen"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-02-26"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"                        VALID_POLICIES, VALID_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"swayongshen"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2021-02-26"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"                VALID_POLICIES, VALID_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"swayongshen"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2021-02-26"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"                        VALID_POLICIES, VALID_MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"NBH99"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"NBH99"},"content":"    public void toModelType_invalidMeeting_throwsIllegalValueException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"NBH99"},"content":"        List\u003cJsonAdaptedMeeting\u003e invalidMeeting \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"NBH99"},"content":"        invalidMeeting.add(new JsonAdaptedMeeting(INVALID_MEETING));","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"NBH99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"NBH99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"NBH99"},"content":"                        VALID_POLICIES, invalidMeeting);","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"NBH99"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"NBH99":22,"swayongshen":12,"-":98,"jay9645":3}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedShortcutTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"public class JsonAdaptedShortcutTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    private static final String INVALID_NAME_SHORTCUT \u003d \"*\u003dlist\";","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    private static final String INVALID_COMMAND_SHORTCUT \u003d \"ls\u003dlist all\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"    private static final String VALID_SHORTCUT \u003d \"ls\u003dlist\";","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    private static final Shortcut SHORTCUT \u003d new Shortcut(\"ls\", \"list\");","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    public void constructorWithShortcut() {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"        JsonAdaptedShortcut shortcut \u003d new JsonAdaptedShortcut(SHORTCUT);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"        JsonAdaptedShortcut expectedShortcut \u003d new JsonAdaptedShortcut(VALID_SHORTCUT);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"        assertEquals(shortcut.getShortcut(), expectedShortcut.getShortcut());","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    public void toModelType_validShortcut_returnsShortcut() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        JsonAdaptedShortcut shortcut \u003d new JsonAdaptedShortcut(VALID_SHORTCUT);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        assertEquals(SHORTCUT, shortcut.toModelType());","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public void toModelType_invalidShortcutName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        JsonAdaptedShortcut shortcut \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"                new JsonAdaptedShortcut(INVALID_NAME_SHORTCUT);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        String expectedMessage \u003d Shortcut.MESSAGE_NAME_CONSTRAINTS;","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, shortcut::toModelType);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"    public void toModelType_invalidShortcutCommand_throwsIllegalValueException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"        JsonAdaptedShortcut shortcut \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"                new JsonAdaptedShortcut(INVALID_COMMAND_SHORTCUT);","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        String expectedMessage \u003d Shortcut.MESSAGE_COMMAND_CONSTRAINTS;","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, shortcut::toModelType);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"    public void getShortcut_returnsShortcutInString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"        JsonAdaptedShortcut shortcut \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"                new JsonAdaptedShortcut(VALID_SHORTCUT);","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"        assertTrue(shortcut.getShortcut().equals(VALID_SHORTCUT));","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":55}},{"path":"src/test/java/seedu/address/storage/JsonSerializableShortcutLibraryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import seedu.address.testutil.TypicalShortcuts;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"public class JsonSerializableShortcutLibraryTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"            \"JsonSerializableShortcutLibraryTest\");","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    private static final Path TYPICAL_SHORTCUT_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalShortcutLibrary.json\");","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    private static final Path INVALID_SHORTCUT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidShortcutLibrary.json\");","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"    private static final Path DUPLICATE_SHORTCUT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateShortcutLibrary.json\");","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    public void toModelType_typicalShortcutsFile_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"        JsonSerializableShortcutLibrary dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_SHORTCUT_FILE,","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"                JsonSerializableShortcutLibrary.class).get();","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary shortcutLibraryFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary typicalShortcutLibrary \u003d TypicalShortcuts.getTypicalShortcutLibrary();","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"        assertEquals(shortcutLibraryFromFile, typicalShortcutLibrary);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"    public void toModelType_invalidShortcutFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"        JsonSerializableShortcutLibrary dataFromFile \u003d JsonUtil.readJsonFile(INVALID_SHORTCUT_FILE,","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"                JsonSerializableShortcutLibrary.class).get();","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    public void toModelType_duplicateShortcuts_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"        JsonSerializableShortcutLibrary dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_SHORTCUT_FILE,","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"                JsonSerializableShortcutLibrary.class).get();","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableShortcutLibrary.MESSAGE_DUPLICATE_SHORTCUT,","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":46}},{"path":"src/test/java/seedu/address/storage/JsonShortcutLibraryStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.TypicalShortcuts.getTypicalShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"public class JsonShortcutLibraryStorageTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"            \"JsonShortcutLibraryStorageTest\");","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"    @TempDir","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"    public void readShortcutLibrary_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"        assertThrows(NullPointerException.class, () -\u003e readShortcutLibrary(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"    private Optional\u003cShortcutLibrary\u003e readShortcutLibrary(String filePath) throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"        return new JsonShortcutLibraryStorage(Paths.get(filePath)).readShortcutLibrary(","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"                addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wongkokian"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wongkokian"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wongkokian"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wongkokian"},"content":"                : null;","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wongkokian"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wongkokian"},"content":"        assertFalse(readShortcutLibrary(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wongkokian"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wongkokian"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wongkokian"},"content":"                readShortcutLibrary(\"notJsonFormatShortcutLibrary.json\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wongkokian"},"content":"    public void readShortcutLibrary_invalidShortcutLibrary_throwDataConversionException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wongkokian"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"wongkokian"},"content":"                readShortcutLibrary(\"invalidShortcutLibrary.json\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"wongkokian"},"content":"    public void readShortcutLibrary_invalidAndValidShortcutLibrary_throwDataConversionException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"wongkokian"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"wongkokian"},"content":"                readShortcutLibrary(\"invalidAndValidShortcutLibrary.json\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"wongkokian"},"content":"    public void readAndSaveShortcutLibrary_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"wongkokian"},"content":"        Path filePath \u003d testFolder.resolve(\"TempShortcutLibrary.json\");","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary original \u003d getTypicalShortcutLibrary();","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"wongkokian"},"content":"        JsonShortcutLibraryStorage jsonShortcutLibraryStorage \u003d new JsonShortcutLibraryStorage(filePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"wongkokian"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"        jsonShortcutLibraryStorage.saveShortcutLibrary(original, filePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary readBack \u003d jsonShortcutLibraryStorage.readShortcutLibrary(filePath).get();","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"        assertEquals(original, new ShortcutLibrary(readBack.getShortcuts()));","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"swayongshen"},"content":"        original.addShortcut(\"listaddress\", \"list -a\");","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"        original.removeShortcut(\"sna\");","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"        jsonShortcutLibraryStorage.saveShortcutLibrary(original, filePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"        readBack \u003d jsonShortcutLibraryStorage.readShortcutLibrary(filePath).get();","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"        assertEquals(original, new ShortcutLibrary(readBack.getShortcuts()));","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"        original.addShortcut(\"findbedok\", \"find a/bedok\");","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"        jsonShortcutLibraryStorage.saveShortcutLibrary(original); // file path not specified","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        readBack \u003d jsonShortcutLibraryStorage.readShortcutLibrary().get(); // file path not specified","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"        assertEquals(original, new ShortcutLibrary(readBack.getShortcuts()));","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"wongkokian"},"content":"    public void saveShortcutLibrary_nullShortcutLibrary_throwsNullPointerException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"wongkokian"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveShortcutLibrary(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"wongkokian"},"content":"     * Saves {@code ShortcutLibrary} at the specified {@code filePath}.","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"wongkokian"},"content":"    private void saveShortcutLibrary(ShortcutLibrary shortcutLibrary, String filePath) {","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"wongkokian"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"wongkokian"},"content":"            new JsonShortcutLibraryStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"wongkokian"},"content":"                    .saveShortcutLibrary(shortcutLibrary, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"wongkokian"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"wongkokian"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"wongkokian"},"content":"    public void saveShortcutLibrary_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"wongkokian"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveShortcutLibrary(new ShortcutLibrary(), null));","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":111,"swayongshen":1}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"swayongshen"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"clientbook.json\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"swayongshen":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"import static seedu.address.testutil.TypicalShortcuts.getTypicalShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        JsonShortcutLibraryStorage shortcutLibraryStorage \u003d new JsonShortcutLibraryStorage(","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"                getTempFilePath(\"shlib\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, shortcutLibraryStorage);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"wongkokian"},"content":"    public void shortcutLibraryReadSave() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"wongkokian"},"content":"        /*","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"wongkokian"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"wongkokian"},"content":"         * {@link JsonShortcutLibraryStorage} class.","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"wongkokian"},"content":"         */","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary original \u003d getTypicalShortcutLibrary();","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"wongkokian"},"content":"        storageManager.saveShortcutLibrary(original);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary retrieved \u003d storageManager.readShortcutLibrary().get();","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"wongkokian"},"content":"        assertEquals(original, new ShortcutLibrary(retrieved.getShortcuts()));","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"wongkokian"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"wongkokian"},"content":"    public void getShortcutLibraryFilePath() {","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"wongkokian"},"content":"        assertNotNull(storageManager.getShortcutLibraryFilePath());","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wongkokian":22,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"import java.util.List;","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"        descriptor.setPhone(person.getPhone().get());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"        descriptor.setEmail(person.getEmail().get());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"        descriptor.setAddress(person.getAddress().get());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"        descriptor.setPoliciesToAdd(person.getPolicies());","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        descriptor.setMeetings(person.getMeetings());","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":90,"author":{"gitId":"swayongshen"},"content":"     * Parses the {@code policies} into a {@code List\u003cInsurancePolicy\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2021-02-26"},{"lineNumber":91,"author":{"gitId":"swayongshen"},"content":"     * that we are building.","lastModifiedDate":"2021-02-26"},{"lineNumber":92,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":93,"author":{"gitId":"swayongshen"},"content":"    public EditPersonDescriptorBuilder withPolicies(String... policyIds) {","lastModifiedDate":"2021-02-26"},{"lineNumber":94,"author":{"gitId":"swayongshen"},"content":"        List\u003cInsurancePolicy\u003e policyList \u003d Stream.of(policyIds).map(InsurancePolicy::new).collect(Collectors.toList());","lastModifiedDate":"2021-02-26"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"        descriptor.setPoliciesToAdd(policyList);","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"swayongshen"},"content":"        return this;","lastModifiedDate":"2021-02-26"},{"lineNumber":97,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":98,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"     * Parses the {@code meetings} into the {@code List\u003cMeeting\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"     * that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"    public EditPersonDescriptorBuilder withMeeting(String... meetings) {","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"        List\u003cMeeting\u003e meetingList \u003d Stream.of(meetings).map(Meeting::newMeeting).collect(Collectors.toList());","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"        descriptor.setMeetings(meetingList);","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"NBH99":12,"swayongshen":11,"-":84,"jay9645":5}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"swayongshen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"import java.util.List;","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"swayongshen"},"content":"    private List\u003cInsurancePolicy\u003e policies;","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    private List\u003cMeeting\u003e meetings;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"swayongshen"},"content":"        policies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-02-26"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"        phone \u003d personToCopy.getPhone().get();","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"        email \u003d personToCopy.getEmail().get();","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"        address \u003d personToCopy.getAddress().get();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"swayongshen"},"content":"        policies \u003d new ArrayList\u003c\u003e(personToCopy.getPolicies());","lastModifiedDate":"2021-02-26"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"        meetings \u003d new ArrayList\u003c\u003e(personToCopy.getMeetings());","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"swayongshen"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":103,"author":{"gitId":"swayongshen"},"content":"     * Sets the {@code policies} of the {@code Person} that we are building.","lastModifiedDate":"2021-02-26"},{"lineNumber":104,"author":{"gitId":"swayongshen"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":105,"author":{"gitId":"jay9645"},"content":"    public PersonBuilder withPolicies(String ... policies) {","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"jay9645"},"content":"        this.policies \u003d SampleDataUtil.getPolicyList(policies);","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"swayongshen"},"content":"        return this;","lastModifiedDate":"2021-02-26"},{"lineNumber":108,"author":{"gitId":"swayongshen"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":109,"author":{"gitId":"swayongshen"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"     * Sets the {@code Meeting} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"    public PersonBuilder withMeetings(String ... meetings) {","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"        this.meetings \u003d SampleDataUtil.getMeetingList(meetings);","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"        return new Person(name, phone, email, address, tags, policies, meetings);","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"NBH99":13,"swayongshen":12,"-":92,"jay9645":5}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"swayongshen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE_POLICY;","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"swayongshen"},"content":"import java.util.List;","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"swayongshen"},"content":"import seedu.address.model.insurancepolicy.InsurancePolicy;","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().get().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jay9645"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().get().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jay9645"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().get().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"swayongshen"},"content":"        person.getPolicies().stream().forEach(","lastModifiedDate":"2021-02-26"},{"lineNumber":46,"author":{"gitId":"swayongshen"},"content":"            s -\u003e sb.append(PREFIX_INSURANCE_POLICY + s.policyId + \" \")","lastModifiedDate":"2021-02-26"},{"lineNumber":47,"author":{"gitId":"swayongshen"},"content":"        );","lastModifiedDate":"2021-02-26"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"        person.getMeetings().stream().forEach(","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"            s -\u003e sb.append(PREFIX_MEETING + s.meeting + \" \")","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"swayongshen"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2021-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"        if (descriptor.getPoliciesToAdd().isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"            List\u003cInsurancePolicy\u003e policies \u003d descriptor.getPoliciesToAdd().get();","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"swayongshen"},"content":"            if (policies.isEmpty()) {","lastModifiedDate":"2021-02-26"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"                sb.append(PREFIX_INSURANCE_POLICY).append(\" \");","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"swayongshen"},"content":"            } else {","lastModifiedDate":"2021-02-26"},{"lineNumber":76,"author":{"gitId":"swayongshen"},"content":"                policies.forEach(s -\u003e sb.append(PREFIX_INSURANCE_POLICY).append(s.policyId).append(\" \"));","lastModifiedDate":"2021-02-26"},{"lineNumber":77,"author":{"gitId":"swayongshen"},"content":"            }","lastModifiedDate":"2021-02-26"},{"lineNumber":78,"author":{"gitId":"swayongshen"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"        if (descriptor.getMeetings().isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"            List\u003cMeeting\u003e meeting \u003d descriptor.getMeetings().get();","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"            if (meeting.isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"                sb.append(PREFIX_MEETING);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"            } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"                meeting.forEach(s -\u003e sb.append(PREFIX_MEETING).append(s.meeting).append(\" \"));","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"NBH99":14,"swayongshen":12,"-":58,"jay9645":5}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"swayongshen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ID;","lastModifiedDate":"2021-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"jay9645"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"jay9645"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jay9645"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jay9645"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"swayongshen"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"jay9645"},"content":"            .withPolicies(\"#1111\u003eno_url\")","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"            .withMeetings(\"17.08.2021 17:30 18:30 Mall\")","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"swayongshen"},"content":"            .build();","lastModifiedDate":"2021-02-26"},{"lineNumber":38,"author":{"gitId":"jay9645"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jay9645"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"swayongshen"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-02-26"},{"lineNumber":43,"author":{"gitId":"jay9645"},"content":"            .withPolicies(\"P#2222\u003ewww.youtube.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"jay9645"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"jay9645"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"jay9645"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"jay9645"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jay9645"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"jay9645"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"            .withMeetings(\"13.05.2021 19:30 20:00 MRT\")","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"jay9645"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"jay9645"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"jay9645"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jay9645"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"jay9645"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"jay9645"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"jay9645"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"jay9645"},"content":"            .withPolicies(\"Pol_3333\u003eno_url\", \"Pol_3334\u003ewww.google.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"jay9645"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"jay9645"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"jay9645"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"jay9645"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jay9645"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jay9645"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"            .withMeetings(\"18.07.2021 15:30 17:00 Mall\")","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"jay9645"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"jay9645"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"jay9645"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"jay9645"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"jay9645"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"jay9645"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"jay9645"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"jay9645"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"jay9645"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"jay9645"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"jay9645"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"jay9645"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"jay9645"},"content":"            .withPolicies(\"Policy_4444\u003eno_url\", \"Policy_4445\u003ewww.facebook.com\", \"Policy_4446\u003eno_url\",","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"jay9645"},"content":"                    \"Policy_4447\u003ewww.yahoo.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"            .withMeetings(\"19.09.2021 14:30 15:30 LRT\")","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"jay9645"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"jay9645"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"jay9645"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"jay9645"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"jay9645"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"jay9645"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"jay9645"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"jay9645"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"jay9645"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"jay9645"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"jay9645"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"jay9645"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"jay9645"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":98,"author":{"gitId":"jay9645"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"jay9645"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"jay9645"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"jay9645"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"jay9645"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"jay9645"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"jay9645"},"content":"            .withPolicies(VALID_POLICY_ID)","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"            .withMeetings(VALID_MEETING_AMY)","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"jay9645"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"jay9645"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"jay9645"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"jay9645"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"jay9645"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"jay9645"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"jay9645"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"            .withMeetings(VALID_MEETING_BOB)","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"NBH99":8,"swayongshen":4,"-":53,"jay9645":69}},{"path":"src/test/java/seedu/address/testutil/TypicalShortcuts.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongkokian"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wongkokian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wongkokian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wongkokian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.Shortcut;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wongkokian"},"content":"import seedu.address.model.shortcut.ShortcutLibrary;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wongkokian"},"content":"public class TypicalShortcuts {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wongkokian"},"content":"    public static final Shortcut FIRST \u003d new Shortcut(\"ls\", \"listshortcut\");","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wongkokian"},"content":"    public static final Shortcut SECOND \u003d new Shortcut(\"sna\", \"sort -n -asc\");","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wongkokian"},"content":"    public static final Shortcut THIRD \u003d new Shortcut(\"fa\", \"find n/alex\");","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wongkokian"},"content":"    public static final Shortcut FOURTH \u003d new Shortcut(\"h\", \"help\");","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"swayongshen"},"content":"    public static final Shortcut FIFTH \u003d new Shortcut(\"listphone\", \"list -p\");","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wongkokian"},"content":"    private TypicalShortcuts() {} // prevents instantiation","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wongkokian"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wongkokian"},"content":"     * Returns an {@code ShortcutLibrary} with all the typical shortcuts.","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wongkokian"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wongkokian"},"content":"    public static ShortcutLibrary getTypicalShortcutLibrary() {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wongkokian"},"content":"        ShortcutLibrary sl \u003d new ShortcutLibrary();","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wongkokian"},"content":"        for (Shortcut shortcut : getTypicalShortcuts()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wongkokian"},"content":"            sl.addShortcut(shortcut.getShortcutName(), shortcut.getShortcutCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wongkokian"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wongkokian"},"content":"        return sl;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wongkokian"},"content":"    public static List\u003cShortcut\u003e getTypicalShortcuts() {","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wongkokian"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FIRST, SECOND, THIRD, FOURTH, FIFTH));","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wongkokian"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wongkokian"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wongkokian"},"content":"","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wongkokian":34,"swayongshen":1}}]
