[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W12-1/tp/actions)","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"* This is **an app to help insurance agents specializing in medical insurance to keep track of their clients\u0027 information**.\u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"vivegank":3,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"    //PERTAINING TO GOOGLE DRIVE SAVING","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"    compile \u0027com.google.api-client:google-api-client:1.23.0\u0027","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"    compile \u0027com.google.oauth-client:google-oauth-client-jetty:1.23.0\u0027","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"    compile \u0027com.google.apis:google-api-services-drive:v3-rev110-1.23.0\u0027","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nicholasnge":5,"-":72,"vivegank":4}},{"path":"data/docBob.json","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"{","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"  \"persons\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Alanis Hines\",","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 2:44\",","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"appointmentLabel\",","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"else if (patientBoxMedicalRecords.getChildren().size() !\u003d 0) {\\n            medicalRecordInfo.setText(String.format(\\\"%d medical record(s) found:\\\",\"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"    } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"175cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"69kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ \"14/4/21 14:00\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"31/3/21 18:18\",","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"main\",","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"content content content\"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"31/3/21 19:41\",","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"main\",","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"\"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"      }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"New Section\",","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"\"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"    }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 13:15\",","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"newiuhfo\",","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"iasochiag\"","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"      }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"wcearhsrt\",","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"srtjnsrtb\"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"      }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"rthnsrtbsr\",","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"tbrstnrtnj\"","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"    } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Andreea Hanna\",","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ \"18/9/21 15:00\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 3:55\",","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"dswafghbnj\",","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"sdfghjk\"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"    } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Ava Shepherd\",","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Bernice Yu\",","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"99272758\",","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"berniceyu@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"168cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"50kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"colleagues\", \"friends\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ \"14/5/21 14:00\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Breanna Frye\",","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ \"19/6/21 19:00\", \"19/9/21 19:00\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 3:58\",","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"weqrtyhj\",","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"wqedrfghnjmk,\"","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"nicholasnge"},"content":"    } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Charlotte Oliveiro\",","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"93210283\",","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"charlotte@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"170cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"53kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"neighbours\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ \"14/5/21 14:00\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"29/3/21 23:49\",","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"asfsdbdbfasfsdbdbf\",","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"sdvdsthbrdthtynsdvdsthbrdthtyn\"","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"nicholasnge"},"content":"    }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"31/3/21 22:57\",","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"asfsdbdbf\",","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"sdvdsthbrdthtyn\"","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"nicholasnge"},"content":"      }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"esrbrdtndty\",","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"dgndgthyn\"","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"nicholasnge"},"content":"      }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"dn dthyn\",","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"tfyndtyndtyn\"","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"nicholasnge"},"content":"      }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"d\",","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"fgbdntdyn\"","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"nicholasnge"},"content":"    }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"31/3/21 23:35\",","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"dorubhsiderubh\",","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"odifhgvilsueogiherth\"","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"nicholasnge"},"content":"      }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"sdrvslirutjbhlistrh\",","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"dfihblisutrhboiaurehob\"","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"nicholasnge"},"content":"    }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"31/3/21 23:59\",","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"nicholasnge"},"content":"    }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 0:04\",","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"nicholasnge"},"content":"    }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 0:19\",","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"ewferh\",","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"ergertbt\"","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"nicholasnge"},"content":"    }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 4:20\",","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"nicholasnge"},"content":"    } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"David Li\",","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"91031282\",","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"lidavid@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"163cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":175,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"63kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":177,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"family\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":178,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ \"19/9/21 19:00\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":179,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Gene Lyons\",","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":184,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":186,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Geoffrey Huber\",","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":194,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":195,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":196,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":197,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":198,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":199,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ \"19/9/21 19:00\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":202,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":203,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Gurdeep Dejesus\",","lastModifiedDate":"2021-04-01"},{"lineNumber":204,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":205,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":206,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":207,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":208,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":209,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":211,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":212,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":213,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":214,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Irfan Ibrahim\",","lastModifiedDate":"2021-04-01"},{"lineNumber":215,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92492021\",","lastModifiedDate":"2021-04-01"},{"lineNumber":216,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"irfan@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":217,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2021-04-01"},{"lineNumber":218,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"179cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":219,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"66kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":220,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : true,","lastModifiedDate":"2021-04-01"},{"lineNumber":221,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"classmates\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":222,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":223,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":224,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 0:19\",","lastModifiedDate":"2021-04-01"},{"lineNumber":225,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":226,"author":{"gitId":"nicholasnge"},"content":"    }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":227,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 12:59\",","lastModifiedDate":"2021-04-01"},{"lineNumber":228,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":229,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"ewqrtyujkil\",","lastModifiedDate":"2021-04-01"},{"lineNumber":230,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"sfgd\"","lastModifiedDate":"2021-04-01"},{"lineNumber":231,"author":{"gitId":"nicholasnge"},"content":"      }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":232,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"ergvrv\",","lastModifiedDate":"2021-04-01"},{"lineNumber":233,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"ergrehreh\"","lastModifiedDate":"2021-04-01"},{"lineNumber":234,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":235,"author":{"gitId":"nicholasnge"},"content":"    } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":236,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":237,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Kaia Metcalfe\",","lastModifiedDate":"2021-04-01"},{"lineNumber":238,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":239,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":240,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":241,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":242,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":243,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":244,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":245,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ \"19/9/21 19:00\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":246,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":247,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 4:03\",","lastModifiedDate":"2021-04-01"},{"lineNumber":248,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":249,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"wasdefrgthyjuiklo;p\u0027[\",","lastModifiedDate":"2021-04-01"},{"lineNumber":250,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"wedrftgyhujikol8p\"","lastModifiedDate":"2021-04-01"},{"lineNumber":251,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":252,"author":{"gitId":"nicholasnge"},"content":"    } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":253,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":254,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Kimora Green\",","lastModifiedDate":"2021-04-01"},{"lineNumber":255,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":256,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":257,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":258,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":259,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":260,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":261,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":262,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":263,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":264,"author":{"gitId":"nicholasnge"},"content":"      \"dateString\" : \"1/4/21 4:05\",","lastModifiedDate":"2021-04-01"},{"lineNumber":265,"author":{"gitId":"nicholasnge"},"content":"      \"sections\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":266,"author":{"gitId":"nicholasnge"},"content":"        \"title\" : \"23435\",","lastModifiedDate":"2021-04-01"},{"lineNumber":267,"author":{"gitId":"nicholasnge"},"content":"        \"body\" : \"23143546\"","lastModifiedDate":"2021-04-01"},{"lineNumber":268,"author":{"gitId":"nicholasnge"},"content":"      } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":269,"author":{"gitId":"nicholasnge"},"content":"    } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":270,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":271,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Lacy Cline\",","lastModifiedDate":"2021-04-01"},{"lineNumber":272,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":273,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":274,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":275,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":276,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":277,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":278,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":279,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":280,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":281,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":282,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Maisey Walmsley\",","lastModifiedDate":"2021-04-01"},{"lineNumber":283,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":284,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":285,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":286,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":287,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":288,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":289,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":290,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":291,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":292,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":293,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Maksim Decker\",","lastModifiedDate":"2021-04-01"},{"lineNumber":294,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":295,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":296,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":297,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":298,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":299,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":300,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":301,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":302,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":303,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":304,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Myron Wagner\",","lastModifiedDate":"2021-04-01"},{"lineNumber":305,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":306,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":307,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":308,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":309,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":310,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":311,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":312,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":313,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":314,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":315,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Naya Young\",","lastModifiedDate":"2021-04-01"},{"lineNumber":316,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":317,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":318,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":319,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":320,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":321,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":322,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":323,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":324,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":325,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":326,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Patsy Delgado\",","lastModifiedDate":"2021-04-01"},{"lineNumber":327,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":328,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":329,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":330,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":331,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":332,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":333,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":334,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":335,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":336,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":337,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Reilly Esparza\",","lastModifiedDate":"2021-04-01"},{"lineNumber":338,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":339,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":340,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":341,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":342,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":343,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":344,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":345,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":346,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":347,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":348,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Robert Vance\",","lastModifiedDate":"2021-04-01"},{"lineNumber":349,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":350,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":351,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":352,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":353,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":354,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":355,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":356,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":357,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":358,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":359,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-04-01"},{"lineNumber":360,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":361,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":362,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":363,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":364,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":365,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":366,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":367,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":368,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":369,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":370,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Sommer Frost\",","lastModifiedDate":"2021-04-01"},{"lineNumber":371,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":372,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":373,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":374,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":375,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":376,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":377,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"bronchitis\", \"cough\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":378,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":379,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":380,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":381,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Tala Lawson\",","lastModifiedDate":"2021-04-01"},{"lineNumber":382,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":383,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":384,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":385,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":386,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":387,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":388,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":389,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":390,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":391,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":392,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Tate Britton\",","lastModifiedDate":"2021-04-01"},{"lineNumber":393,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":394,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":395,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":396,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":397,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":398,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":399,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":400,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":401,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":402,"author":{"gitId":"nicholasnge"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":403,"author":{"gitId":"nicholasnge"},"content":"    \"name\" : \"Teri Guy\",","lastModifiedDate":"2021-04-01"},{"lineNumber":404,"author":{"gitId":"nicholasnge"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-04-01"},{"lineNumber":405,"author":{"gitId":"nicholasnge"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-04-01"},{"lineNumber":406,"author":{"gitId":"nicholasnge"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-01"},{"lineNumber":407,"author":{"gitId":"nicholasnge"},"content":"    \"height\" : \"172cm\",","lastModifiedDate":"2021-04-01"},{"lineNumber":408,"author":{"gitId":"nicholasnge"},"content":"    \"weight\" : \"58kg\",","lastModifiedDate":"2021-04-01"},{"lineNumber":409,"author":{"gitId":"nicholasnge"},"content":"    \"isArchived\" : false,","lastModifiedDate":"2021-04-01"},{"lineNumber":410,"author":{"gitId":"nicholasnge"},"content":"    \"tagged\" : [ \"asidjoajc\" ],","lastModifiedDate":"2021-04-01"},{"lineNumber":411,"author":{"gitId":"nicholasnge"},"content":"    \"appointments\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":412,"author":{"gitId":"nicholasnge"},"content":"    \"records\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":413,"author":{"gitId":"nicholasnge"},"content":"  } ]","lastModifiedDate":"2021-04-01"},{"lineNumber":414,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"nicholasnge":414}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"### Glendon Chua","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"\u003cimg src\u003d\"images/bigdoot.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"[[github](https://github.com/BigDoot)]","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"[[portfolio](team/BigDoot.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"* Responsibilities: Testing, Code quality","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"### Nicholas Nge","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"\u003cimg src\u003d\"images/nicholasnge.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"[[github](http://github.com/nicholasnge)]","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"[[portfolio](team/nicholasnge.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"* Responsibilities: UI, Deliverables and deadlines","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"### Prerthan Munireternam","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"\u003cimg src\u003d\"images/prerthan99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"[[github](http://github.com/prerthan99)] [[portfolio](team/prerthan99.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"* Role: Documentation","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"* Responsibilities: Data, Integration","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"### Vivegan","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"\u003cimg src\u003d\"images/vivegank.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"[[github](http://github.com/vivegank)]","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"[[portfolio](team/vivegank.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"* Responsibilities: Dev Ops + Threading, Scheduling and tracking","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"BigDoot":1,"nicholasnge":19,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"nicholasnge"},"content":"1. The command execution can affect the `Model` (e.g. adding a patient).","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"vivegank"},"content":"### \\[Proposed\\] Archiving certain contacts","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"vivegank"},"content":"_{Coming soon}_","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"vivegank"},"content":"### \\[Proposed\\] Adding Medical Information such as Appointments and Medical Records","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"vivegank"},"content":"_{Coming soon}_","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"vivegank"},"content":"### \\[Proposed\\] Viewing all upcoming appointments the doctor has","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"vivegank"},"content":"_{Coming soon}_","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"BigDoot"},"content":"### Viewing all information regarding a patient","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"BigDoot"},"content":"**How**","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"BigDoot"},"content":"The viewing mechanism is facilitated by the `ViewPatientCommand` which extends `Command`. It mainly overrides `Command#execute` in order to return a `CommandResult` with a patient(`Person` object) attribute. When `MainWindow#executeCommand` is ran, `CommandResult` will then trigger `MainWindow#handlePatientViewBox` since it has a patient. `MainWindow#handlePatientViewBox` handles the construction of the `StackPane` containing all the patient information. It clears the `viewPatienBoxPlaceholder` in case there are Javafx nodes from the previous patient, and adds a new `ViewPatientBox` to it. The constructor of `ViewPatientBox` takes in a `Person` object and extracts information such as their name, phone, address, email, tags, appointments and medical records and adds the information to the labels and Panes which will be displayed in the `ViewPatientBox` UI.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"BigDoot"},"content":"**Why**","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"BigDoot"},"content":"Since `MainWindow` dictates what to show on the UI depending on the `CommandResult` after running `logic.execute(commandtext)`, we can easily allow `MainWindow#executeCommand` to call `MainWindow#handlePatientViewBox` when it detects that a patient is present in `CommandResult`. `MainWindow#handlePatientViewBox` can then simply contruct the `StackPane` containing the patient\u0027s information.","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"BigDoot"},"content":"**Sequence Diagram**","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"BigDoot"},"content":"_{To be added}_","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"vivegank"},"content":"* Clinics where patient information is managed in a written medium such as pen and paper","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"vivegank"},"content":"* has many patients to manage","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"vivegank"},"content":"* has a need to edit and maintain patients personal and medical information","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"prerthan99"},"content":"* well versed in CLI","lastModifiedDate":"2021-03-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":191,"author":{"gitId":"prerthan99"},"content":"**Value proposition**:","lastModifiedDate":"2021-03-02"},{"lineNumber":192,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":193,"author":{"gitId":"vivegank"},"content":"* Ease the job of clinics with a centralised record of its patients","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"vivegank"},"content":"* Doctors can easily access patient\u0027s personal and medical information without having to go through stacks of paper","lastModifiedDate":"2021-03-25"},{"lineNumber":195,"author":{"gitId":"vivegank"},"content":"* Helps the clinic doctor to keep track of his appointments","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"prerthan99"},"content":"* For those proficient in typing, ease management of assets ","lastModifiedDate":"2021-03-02"},{"lineNumber":197,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"vivegank"},"content":"| `* * *`  | user                                       | add patient\u0027s contact.         | have a separate place to store patient-specific information            |","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"vivegank"},"content":"| `* * *`  | user                                       | delete patient\u0027s contact       | remove unwanted patients                                               |","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"vivegank"},"content":"| `* * *`  | user                                       | view all my patients           | view a list of all my patients                                        |","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"vivegank"},"content":"| `* * *`  | user                                       | find a patient by name         | locate details of patients without having to go through the entire list |","lastModifiedDate":"2021-03-25"},{"lineNumber":210,"author":{"gitId":"vivegank"},"content":"| `* * *`  | user                                       | add appointments to a patient  | know when is my next appointment with the specific patient                               |","lastModifiedDate":"2021-03-25"},{"lineNumber":211,"author":{"gitId":"vivegank"},"content":"| `* * *`  | user                                       | view all my upcoming appointments | know when is my next appointment |","lastModifiedDate":"2021-03-25"},{"lineNumber":212,"author":{"gitId":"vivegank"},"content":"| `* * `  | user                                       | archive a patient\u0027s contact information | reduce clutter |","lastModifiedDate":"2021-03-25"},{"lineNumber":213,"author":{"gitId":"prerthan99"},"content":"| `* *`    | user                                       | see all the commands available | know what commands to use                |","lastModifiedDate":"2021-03-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"vivegank"},"content":"(For all use cases below, the **System** is `Bob` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"vivegank"},"content":"**Use case: Adding a new patient**","lastModifiedDate":"2021-03-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"vivegank"},"content":"  1. User chooses to add a patient.","lastModifiedDate":"2021-03-25"},{"lineNumber":226,"author":{"gitId":"vivegank"},"content":"  2. User enters the requested details of patient.","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"vivegank"},"content":"  3. Bob adds the client and displays the new log of clients.","lastModifiedDate":"2021-03-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"vivegank"},"content":"  *2a. Bob detects an error in the format of the entered data.","lastModifiedDate":"2021-03-25"},{"lineNumber":234,"author":{"gitId":"vivegank"},"content":"  *    2a1. Bob requests for the correct format of the data.","lastModifiedDate":"2021-03-25"},{"lineNumber":235,"author":{"gitId":"vivegank"},"content":"  *    2a2. User enters new data.","lastModifiedDate":"2021-03-25"},{"lineNumber":236,"author":{"gitId":"vivegank"},"content":"  *    Steps 2a1-2a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-03-25"},{"lineNumber":237,"author":{"gitId":"vivegank"},"content":"  ","lastModifiedDate":"2021-03-25"},{"lineNumber":238,"author":{"gitId":"vivegank"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":240,"author":{"gitId":"vivegank"},"content":"      Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":242,"author":{"gitId":"vivegank"},"content":"**Use case: Listing all patients**","lastModifiedDate":"2021-03-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":246,"author":{"gitId":"vivegank"},"content":"1. User requests to list all patients.","lastModifiedDate":"2021-03-25"},{"lineNumber":247,"author":{"gitId":"vivegank"},"content":"2. Bob shows a list of patients.","lastModifiedDate":"2021-03-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":251,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":253,"author":{"gitId":"vivegank"},"content":"  *2a. The list is empty","lastModifiedDate":"2021-03-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"vivegank"},"content":"**Use case: Deleting a patient\u0027s information**","lastModifiedDate":"2021-03-25"},{"lineNumber":258,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":259,"author":{"gitId":"vivegank"},"content":"**Pre-requisite:** Use \u0027list\u0027 to list out the index of all the patients","lastModifiedDate":"2021-03-25"},{"lineNumber":260,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":261,"author":{"gitId":"vivegank"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":262,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":263,"author":{"gitId":"vivegank"},"content":"1. User requests to delete a specific patient in the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"vivegank"},"content":"2. Bob deletes the patient.","lastModifiedDate":"2021-03-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"prerthan99"},"content":"      Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":270,"author":{"gitId":"vivegank"},"content":"**Extensions**","lastModifiedDate":"2021-03-25"},{"lineNumber":271,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":272,"author":{"gitId":"vivegank"},"content":"  *1a. The given index is invalid","lastModifiedDate":"2021-03-25"},{"lineNumber":273,"author":{"gitId":"vivegank"},"content":"  *    1a1. Bob shows an error message.","lastModifiedDate":"2021-03-25"},{"lineNumber":274,"author":{"gitId":"vivegank"},"content":"        ","lastModifiedDate":"2021-03-25"},{"lineNumber":275,"author":{"gitId":"vivegank"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-03-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"prerthan99"},"content":"1. Domain rules : at least 1 user added","lastModifiedDate":"2021-03-02"},{"lineNumber":282,"author":{"gitId":"prerthan99"},"content":"2. Constraints : System should be compatible with previous version and easily scalable to add new functionalities","lastModifiedDate":"2021-03-02"},{"lineNumber":283,"author":{"gitId":"prerthan99"},"content":"3. Technical requirement : System should be able to work on any processor i.e. 32 bit or 64 bit.","lastModifiedDate":"2021-03-02"},{"lineNumber":284,"author":{"gitId":"prerthan99"},"content":"4. Technical requirement : System should be scalable enough to be able to keep up with new processors (more than 64)","lastModifiedDate":"2021-03-02"},{"lineNumber":285,"author":{"gitId":"prerthan99"},"content":"5. Technical requirement : System should be able to work on an operating system (OS) i.e. MacOS, Windows, Linux etc.","lastModifiedDate":"2021-03-02"},{"lineNumber":286,"author":{"gitId":"prerthan99"},"content":"6. Performance requirement : System should have at most a tolerable lag time but not too long that it is off putting","lastModifiedDate":"2021-03-02"},{"lineNumber":287,"author":{"gitId":"prerthan99"},"content":"7. Quality requirement : System should be straightforward enough that a novice should at the very least be able to add, edit and delete users","lastModifiedDate":"2021-03-02"},{"lineNumber":288,"author":{"gitId":"prerthan99"},"content":"8. Process requirement : i.e. the project should adhere to the schedule pre decided (subject to minor adjustments within the agreed upon room for error)","lastModifiedDate":"2021-03-02"},{"lineNumber":289,"author":{"gitId":"prerthan99"},"content":"9. Miscellaneous : the program should not contain any offending imaginary and or vulgar words/language","lastModifiedDate":"2021-03-02"},{"lineNumber":290,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"nicholasnge"},"content":"### Deleting a patient","lastModifiedDate":"2021-04-01"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"nicholasnge"},"content":"1. Deleting a patient while all patients are being shown","lastModifiedDate":"2021-04-01"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"nicholasnge"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list.","lastModifiedDate":"2021-04-01"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"nicholasnge"},"content":"      Expected: No patient is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-01"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"prerthan99":18,"BigDoot":7,"nicholasnge":5,"-":269,"vivegank":50}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"  \u003cimg width\u003d\"341\" height\u003d\"381\" src\u003d\"https://user-images.githubusercontent.com/48408342/112603571-29845b80-8e50-11eb-8dee-bb88603fffb8.png\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"**DocBob** is a **desktop app for managing patient medical information and appointments, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). DocBob is targeted at Doctors and Nurses like you! If you can type fast, DocBob can help you keep track of your patient\u0027s **medical information** and **scheduled appointments** more efficiently than any other patient information management app in the market. With DocBob, you will never have to go through the hassle of manually keeping track of your patients\u0027 medical information and appointments ever again.","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"The **purpose of this User Guide(UG)** is to help new users understand how to get the app running by following the **Quick Start** guide. The **Features** section will help you learn the basic commands, their formatting and usages. You can easily navigate through this guide with the provided **Table of Contents** below.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"1. Download the latest `bob.jar` from [here](https://github.com/AY2021S2-CS2103T-W12-1/tp/releases).","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Doc Bob.","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"1. Double-click the file to start the app. The GUI similar to the mock-up below should appear in a few seconds. Note how the app contains some sample data. To learn how to use the Command Line Interface (CLI), try out the example commands given below with the sample data. Once you are familiar with the CLI, you can use the `clear` command to remove all sample data and start adding your own data!\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"1. This should work for you regardless of your operating system (OS).","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will list out all available commands.\u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"   * **`list`** : List out all patients in DocBob\u0027s contact list.","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"   * **`add n/Shrek p/66666666 e/shrek@swampmail.com a/Swamp h/243cm w/94kg`** : Adds a patient named `Shrek` to DocBob\u0027s contact list.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"   * **`appt 1 d/010120301200`** : Adds a scheduled upcoming appointment with the patient at index 1 in DocBob\u0027s contact list, on 1st January 2030 12pm.","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"### List out all available commands : `help`","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"Opens a help window containing a link to this User Guide and a list of all available commands for use in the app, with format example.","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"Example: `help`","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"Output:","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"DocBob will open up a help window with command information.","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"![image](https://user-images.githubusercontent.com/48408342/112743708-35952800-8fcc-11eb-9d1a-a7d5b52aac73.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"### Adding a patients\u0027 contact: `add`","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"Adds a patient to DocBob\u0027s patient list.","lastModifiedDate":"2021-04-03"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"Format: `add n/Name p/phoneNumber e/Email a/Address h/Height w/Weight [t/TAG]`","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"Example:","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":"* `add n/Shrek p/66666666 e/shrek@swampmail.com a/Swamp h/243cm w/94kg t/smelly`","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":"Output:","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"BigDoot"},"content":"`New patient added: Shrek; Phone: 66666666; Email: shrek@swampmail.com; Address: Swamp; Height: 243cm; Weight: 94kg; Tags: [smelly]`","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":"### Deleting a patients\u0027 contact : `delete`","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"Deletes a patient from DocBob\u0027s patient list, identified by the index number shown in the displayed patient list.","lastModifiedDate":"2021-04-03"},{"lineNumber":96,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"BigDoot"},"content":"Format : `delete INDEX`","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"BigDoot"},"content":"where INDEX must be a positive integer (1,2,3,...)","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"Example:","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"BigDoot"},"content":"* `delete 1`","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"BigDoot"},"content":"Output:","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"BigDoot"},"content":"`Deleted Person: Shrek; Phone: 66666666; Email: shrek@swampmail.com; Address: Swamp; Height: 243cm; Weight: 94kg; Tags: [smelly]`","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"### Listing out all patients : `list`","lastModifiedDate":"2021-04-03"},{"lineNumber":108,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"Shows the main list of all your saved patients information, with their next scheduled appointment beside their name.","lastModifiedDate":"2021-04-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"BigDoot"},"content":"Example: `list`","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"BigDoot"},"content":"Output:","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"BigDoot"},"content":"![image](https://user-images.githubusercontent.com/48408342/112432500-f7092e80-8d7b-11eb-85b9-2aaab776d47d.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"BigDoot"},"content":"### Adding an appointment to a patient : `appt`","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"BigDoot"},"content":"Adds a scheduled upcoming appointment with a patient in DocBob\u0027s contact list. Add an appointment and its date and time to a patient identified by the index number shown in the displayed patient list.","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"BigDoot"},"content":"Format: `appt INDEX /dDATE`","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"prerthan99"},"content":"where INDEX must be a positive integer (1,2,3,...)","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"BigDoot"},"content":"and DATE is DDMMYYYYhhmm or DDMMhhmm","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"prerthan99"},"content":"Examples:","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"BigDoot"},"content":"* `appt 3 d/25120800`","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"BigDoot"},"content":"Output:","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"BigDoot"},"content":"`Appointment added: Sat, 25 Dec, 08:00`","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"BigDoot"},"content":"### Listing out your upcoming appointments : `listappt`","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"BigDoot"},"content":"Shows a list of all your upcoming appointments with the patients in DocBob\u0027s contact list, sorted by nearest date and time.","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"BigDoot"},"content":"Format: `listappt`","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"BigDoot"},"content":"Example: `listappt`","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"BigDoot"},"content":"Output: ","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"BigDoot"},"content":"`Hey Doc, here are your upcoming appointments!`\u003cbr\u003e ","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"BigDoot"},"content":"`Thu, 25 Mar, 14:00 - Bernice Yu`\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"BigDoot"},"content":"`Fri, 11 Jun, 14:00 - David Li`\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"BigDoot"},"content":"`Thu, 11 Nov, 12:00 - Alex Yeoh`\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"BigDoot"},"content":"`Thu, 11 Nov, 12:00 - Roy Balakrishnan`\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"BigDoot"},"content":"`Sun, 12 Dec, 12:00 - Alex Yeoh`\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"BigDoot"},"content":"`Sun, 12 Dec, 12:12 - Charlotte Oliveiro`\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"BigDoot"},"content":"### Create a new medical record for a patient : `mrec`","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"BigDoot"},"content":"Opens an editor for you to write a custom medical report for the patient, identified by the index number shown in the displayed patient list.","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"BigDoot"},"content":"Format : `mrec INDEX`","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"BigDoot"},"content":"where INDEX must be a positive integer (1,2,3,...)","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"BigDoot"},"content":"Examples:","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"BigDoot"},"content":"* `mrec 3`","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"BigDoot"},"content":"Output:","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"BigDoot"},"content":"![image](https://user-images.githubusercontent.com/48408342/112743647-aee04b00-8fcb-11eb-8ac4-9ccf999bde49.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"BigDoot"},"content":"### View all information regarding a patient : `view`","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"BigDoot"},"content":"Shows an overview of all contact information, tags, appointments and medical records of a patient, identified by the index number shown in the displayed patient list.","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"BigDoot"},"content":"Format : `view INDEX`","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"BigDoot"},"content":"where INDEX must be a positive integer (1,2,3,...)","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"BigDoot"},"content":"Examples:","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"BigDoot"},"content":"* `view 1`","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"BigDoot"},"content":"Output: ","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"BigDoot"},"content":"![image](https://user-images.githubusercontent.com/48408342/112605797-a6183980-8e52-11eb-9694-55d0ff014af4.png)","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"BigDoot"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"BigDoot"},"content":"Exits the program.","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"BigDoot"},"content":"Format: `exit`","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":189,"author":{"gitId":"prerthan99"},"content":"### Editing a patient information : `edit`","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"nicholasnge"},"content":"Edits an existing patient in the list.","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"vivegank"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [h/HEIGHT] [w/WEIGHT] [t/TAG]…​`","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"nicholasnge"},"content":"* Edits the patient at the specified `INDEX`. The index refers to the index number shown in the displayed patient list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"prerthan99"},"content":"* When editing tags, the existing tags of the patient will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"prerthan99"},"content":"* You can remove all the patient’s tags by typing `t/` without","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"prerthan99"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st patient to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"prerthan99"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd patient to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"prerthan99"},"content":"### Locating patient by name : `find`","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"BigDoot"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"vivegank"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-04-03"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"prerthan99"},"content":"Clears all entries from DocBob.","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"vivegank"},"content":"### Archiving a patient : `archive`","lastModifiedDate":"2021-04-03"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":233,"author":{"gitId":"vivegank"},"content":"Archives a patient from DocBob\u0027s patient list, identified by the index number shown in the displayed patient list.","lastModifiedDate":"2021-04-03"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":235,"author":{"gitId":"vivegank"},"content":"Format : `archive INDEX`","lastModifiedDate":"2021-04-03"},{"lineNumber":236,"author":{"gitId":"vivegank"},"content":"where INDEX must be a positive integer (1,2,3,...)","lastModifiedDate":"2021-04-03"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":238,"author":{"gitId":"vivegank"},"content":"* Remember to be on the main list when archiving a patient using the `list` command.","lastModifiedDate":"2021-04-03"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":240,"author":{"gitId":"vivegank"},"content":"Example:","lastModifiedDate":"2021-04-03"},{"lineNumber":241,"author":{"gitId":"vivegank"},"content":"* `archive 1`","lastModifiedDate":"2021-04-03"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":243,"author":{"gitId":"vivegank"},"content":"Output:","lastModifiedDate":"2021-04-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":245,"author":{"gitId":"vivegank"},"content":"`Archived Person: Shrek; Phone: 66666666; Email: shrek@swampmail.com; Address: Swamp; Height: 243cm; Weight: 94kg; Tags: [smelly]`","lastModifiedDate":"2021-04-03"},{"lineNumber":246,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":247,"author":{"gitId":"vivegank"},"content":"### Listing out all archived patients : `archivelist`","lastModifiedDate":"2021-04-03"},{"lineNumber":248,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":249,"author":{"gitId":"vivegank"},"content":"Shows the list of all your archived patients information, with their next scheduled appointment beside their name.","lastModifiedDate":"2021-04-03"},{"lineNumber":250,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":251,"author":{"gitId":"vivegank"},"content":"Format: `archivelist`","lastModifiedDate":"2021-04-03"},{"lineNumber":252,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":253,"author":{"gitId":"vivegank"},"content":"### Unarchiving a patient : `unarchive`","lastModifiedDate":"2021-04-03"},{"lineNumber":254,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":255,"author":{"gitId":"vivegank"},"content":"Unarchives a patient from DocBob\u0027s archived patient list, identified by the index number shown in the displayed archived patient list.","lastModifiedDate":"2021-04-03"},{"lineNumber":256,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":257,"author":{"gitId":"vivegank"},"content":"Format : `unarchive INDEX`","lastModifiedDate":"2021-04-03"},{"lineNumber":258,"author":{"gitId":"vivegank"},"content":"where INDEX must be a positive integer (1,2,3,...)","lastModifiedDate":"2021-04-03"},{"lineNumber":259,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":260,"author":{"gitId":"vivegank"},"content":"* Remember to be on the archive list when archiving a patient using the `archivelist` command.","lastModifiedDate":"2021-04-03"},{"lineNumber":261,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":262,"author":{"gitId":"vivegank"},"content":"Example:","lastModifiedDate":"2021-04-03"},{"lineNumber":263,"author":{"gitId":"vivegank"},"content":"* `unarchive 1`","lastModifiedDate":"2021-04-03"},{"lineNumber":264,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":265,"author":{"gitId":"vivegank"},"content":"Output:","lastModifiedDate":"2021-04-03"},{"lineNumber":266,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":267,"author":{"gitId":"vivegank"},"content":"`Unarchived Person: Shrek; Phone: 66666666; Email: shrek@swampmail.com; Address: Swamp; Height: 243cm; Weight: 94kg; Tags: [smelly]`","lastModifiedDate":"2021-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"BigDoot"},"content":"Client contact data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-03-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":275,"author":{"gitId":"BigDoot"},"content":"Client contact data is saved as a JSON file `[JAR file location]/data/docBob.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-03-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":278,"author":{"gitId":"BigDoot"},"content":"If your changes to the data file makes its format invalid, docBob will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-03-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"BigDoot"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous DocBob home folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"BigDoot"},"content":"**help** | `help`","lastModifiedDate":"2021-03-25"},{"lineNumber":295,"author":{"gitId":"vivegank"},"content":"**add** | `add n/Name p/phoneNumber e/Email a/Address h/Height w/Weight [t/TAGS]` \u003cbr\u003e e.g., `add n/Shrek p/66666666 e/shrek@swampmail.com a/Swamp h/243cm w/94kg`","lastModifiedDate":"2021-03-27"},{"lineNumber":296,"author":{"gitId":"BigDoot"},"content":"**delete** | `delete INDEX` \u003cbr\u003e e.g., `delete 1`","lastModifiedDate":"2021-03-25"},{"lineNumber":297,"author":{"gitId":"BigDoot"},"content":"**list** | `list`","lastModifiedDate":"2021-03-25"},{"lineNumber":298,"author":{"gitId":"BigDoot"},"content":"**appt** | `appt 1 d/010120211200`","lastModifiedDate":"2021-03-25"},{"lineNumber":299,"author":{"gitId":"BigDoot"},"content":"**listappt** | `listappt`","lastModifiedDate":"2021-03-25"},{"lineNumber":300,"author":{"gitId":"BigDoot"},"content":"**mrec** | `mrec 3`","lastModifiedDate":"2021-03-26"},{"lineNumber":301,"author":{"gitId":"BigDoot"},"content":"**view** | `view 1`","lastModifiedDate":"2021-03-26"},{"lineNumber":302,"author":{"gitId":"vivegank"},"content":"**archive** | `archive 2`","lastModifiedDate":"2021-04-03"},{"lineNumber":303,"author":{"gitId":"vivegank"},"content":"**archivelist** | `archivelist`","lastModifiedDate":"2021-04-03"},{"lineNumber":304,"author":{"gitId":"vivegank"},"content":"**unarchive** | `unarchive 2`","lastModifiedDate":"2021-04-03"},{"lineNumber":305,"author":{"gitId":"BigDoot"},"content":"**exit** | `exit`","lastModifiedDate":"2021-03-25"},{"lineNumber":306,"author":{"gitId":"prerthan99"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":307,"author":{"gitId":"prerthan99"},"content":"## Issues","lastModifiedDate":"2021-03-28"},{"lineNumber":308,"author":{"gitId":"prerthan99"},"content":"In the event of any issues while using the app and or UG, please contact the team at the emails below \u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":309,"author":{"gitId":"prerthan99"},"content":"prerthanmunireternam@yahoo.com","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"prerthan99":20,"BigDoot":115,"nicholasnge":2,"-":130,"vivegank":42}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":" * Changes the remark of an existing patient in the address book.","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the patient identified \"","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"nicholasnge"},"content":"     * @param index of the patient in the filtered patient list to edit the remark","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"nicholasnge"},"content":"     * @param remark of the patient to be updated to","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"nicholasnge"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of patient data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the patient’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a patient.","lastModifiedDate":"2021-04-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"nicholasnge"},"content":"Create a new `Remark` in `seedu.address.model.patient`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-04-01"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"nicholasnge"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each patient.","lastModifiedDate":"2021-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"nicholasnge"},"content":"public PersonCard(Person patient, int displayedIndex) {","lastModifiedDate":"2021-04-01"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"nicholasnge"},"content":"    remark.setText(patient.getRemark().value);","lastModifiedDate":"2021-04-01"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"nicholasnge"},"content":"        Person patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":344,"author":{"gitId":"nicholasnge"},"content":"        Person editedPatient \u003d new Person(patientToEdit.getName(), patientToEdit.getPhone(), patientToEdit.getEmail(),","lastModifiedDate":"2021-04-01"},{"lineNumber":345,"author":{"gitId":"nicholasnge"},"content":"                patientToEdit.getAddress(), remark, patientToEdit.getTags());","lastModifiedDate":"2021-04-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"nicholasnge"},"content":"        model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"nicholasnge"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"nicholasnge"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2021-04-01"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"nicholasnge"},"content":"    private String generateSuccessMessage(Person patientToEdit) {","lastModifiedDate":"2021-04-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"nicholasnge"},"content":"        return String.format(message, patientToEdit);","lastModifiedDate":"2021-04-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"nicholasnge":18,"-":376}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.patient.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"nicholasnge"},"content":"  \"patients\": [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nicholasnge":2,"-":101}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.address.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"nicholasnge"},"content":"       Person patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"nicholasnge"},"content":"       Person editedPatient \u003d createEditedPerson(patientToEdit, editPersonDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"nicholasnge"},"content":"       if (!patientToEdit.isSamePerson(editedPatient) \u0026\u0026 model.hasPerson(editedPatient)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"nicholasnge"},"content":"       model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"nicholasnge"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"nicholasnge"},"content":"       patients.addAll(","lastModifiedDate":"2021-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nicholasnge":6,"-":244}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"nicholasnge"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BigDoot":1,"nicholasnge":1,"-":181}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command! DocBob doesn\u0027t understand you bro.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigDoot":1,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    CommandResult execute(Command command) throws CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    ObservableList\u003cPatient\u003e getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nicholasnge":4,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"    public CommandResult execute(Command command) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        logger.info(\"----------------[USER COMMAND][\" + command.toString() + \"]\");","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"        return commandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"nicholasnge"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPersonList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nicholasnge":18,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to DocBob. \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"            + PREFIX_HEIGHT + \"HEIGHT \"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"            + PREFIX_WEIGHT + \"WEIGHT \"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"            + PREFIX_HEIGHT + \"169cm \"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"            + PREFIX_WEIGHT + \"69kg \"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patient already exists in DocBob!\";","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"    private final Patient toAdd;","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigDoot":3,"nicholasnge":5,"-":59,"vivegank":6}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":" * Archives a Person in DocBob.","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"            + \": Archives the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_ARCHIVE_PERSON_SUCCESS \u003d \"Archived patient: %1$s\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"            + \"The patient has been stored in the archives.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_ALREADY_ARCHIVED_PERSON \u003d \"This person is already in your archives.\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    public ArchiveCommand(Index targetIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"        Patient patientToArchive \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        if (patientToArchive.isArchived()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"            throw new CommandException(MESSAGE_ALREADY_ARCHIVED_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"        model.archivePerson(patientToArchive);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"        return new CommandResult(String.format(MESSAGE_ARCHIVE_PERSON_SUCCESS, patientToArchive));","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"                || (other instanceof ArchiveCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"                \u0026\u0026 targetIndex.equals(((ArchiveCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"nicholasnge":6,"vivegank":55}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ARCHIVED_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"public class ArchiveListCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"    public static final String COMMAND_WORD \u003d \"archivelist\";","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hey Doc, here are your archived patients!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"            + \": Shows a list of all your archived patient contacts.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"            + \"Parameters: None\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ARCHIVED_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"nicholasnge":2,"vivegank":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import java.util.List;","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"import seedu.address.model.medical.Appointment;","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.MedicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"    /** Editor should be shown to the user. */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    private final boolean showEdit;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    /** Patient whose view box will be shown to the user. */","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    private final Patient patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    /** MedicalRecord to be viewed/edited. */","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    private final MedicalRecord medicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"    /** List of appointments that should be shown to the user. */","lastModifiedDate":"2021-04-03"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    private final List\u003cAppointment\u003e appointments;","lastModifiedDate":"2021-04-03"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showEdit,","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"                         Patient patient, MedicalRecord medicalRecord, List\u003cAppointment\u003e appointments, boolean exit) {","lastModifiedDate":"2021-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"        this.showEdit \u003d showEdit;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"        this.medicalRecord \u003d medicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"        this.appointments \u003d appointments;","lastModifiedDate":"2021-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"     * Constructs a {@code CommandResult} with the specified fields and {@code showEdit}","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"     * set to default value.","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"        this(feedbackToUser, showHelp, false, null, null, null, exit);","lastModifiedDate":"2021-04-03"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"    public boolean isShowEdit() {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"        return showEdit;","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"    public boolean isShowViewBox() {","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"        return patient !\u003d null;","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"    public boolean showAppointments() {","lastModifiedDate":"2021-04-03"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"        return appointments !\u003d null;","lastModifiedDate":"2021-04-03"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"nicholasnge"},"content":"    public Patient getPatient() {","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":"        return patient;","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"nicholasnge"},"content":"    public MedicalRecord getMedicalRecord() {","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"nicholasnge"},"content":"        return medicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"BigDoot"},"content":"    public List\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2021-04-03"},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"        return appointments;","lastModifiedDate":"2021-04-03"},{"lineNumber":101,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":102,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"                \u0026\u0026 showEdit \u003d\u003d otherCommandResult.showEdit","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"                \u0026\u0026 patient \u003d\u003d otherCommandResult.patient","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"        return Objects.hash(feedbackToUser, showHelp, showEdit, patient, exit);","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigDoot":27,"nicholasnge":28,"-":69,"vivegank":3}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"        Patient patientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"        model.deletePerson(patientToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, patientToDelete));","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigDoot":1,"nicholasnge":5,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_MAIN_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"            + \"[\" + PREFIX_HEIGHT + \"HEIGHT] \"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"            + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_ARCHIVED_PERSON \u003d \"This person is in your archives.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"            + \"Please unarchive before editing.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"nicholasnge"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"nicholasnge"},"content":"        if (patientToEdit.isArchived()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"            throw new CommandException(MESSAGE_ARCHIVED_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"nicholasnge"},"content":"        Patient editedPatient \u003d createEditedPerson(patientToEdit, editPersonDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"nicholasnge"},"content":"        if (!patientToEdit.isSamePerson(editedPatient) \u0026\u0026 model.hasPerson(editedPatient)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"        model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"nicholasnge"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_MAIN_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"BigDoot"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPatient),","lastModifiedDate":"2021-04-03"},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"                false, false, editedPatient, null, null, false);","lastModifiedDate":"2021-04-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"nicholasnge"},"content":"    private static Patient createEditedPerson(Patient patientToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"nicholasnge"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"nicholasnge"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"nicholasnge"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"nicholasnge"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"nicholasnge"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(patientToEdit.getAddress());","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"nicholasnge"},"content":"        Height updatedHeight \u003d editPersonDescriptor.getHeight().orElse(patientToEdit.getHeight());","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"nicholasnge"},"content":"        Weight updatedWeight \u003d editPersonDescriptor.getWeight().orElse(patientToEdit.getWeight());","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"nicholasnge"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"nicholasnge"},"content":"        Patient updatedPatient \u003d new Patient(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"                updatedHeight, updatedWeight, updatedTags);","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"nicholasnge"},"content":"        updatedPatient.setArchived(editPersonDescriptor.isArchived());","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"nicholasnge"},"content":"        return updatedPatient;","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"vivegank"},"content":"        private Height height;","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"vivegank"},"content":"        private Weight weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"vivegank"},"content":"        private boolean isArchived;","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"vivegank"},"content":"            setHeight(toCopy.height);","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"vivegank"},"content":"            setWeight(toCopy.weight);","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"vivegank"},"content":"            setArchived(toCopy.isArchived());","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"vivegank"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, height, weight, tags);","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"vivegank"},"content":"        public void setHeight(Height height) {","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"vivegank"},"content":"            this.height \u003d height;","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"vivegank"},"content":"        public Optional\u003cHeight\u003e getHeight() {","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"vivegank"},"content":"            return Optional.ofNullable(height);","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"vivegank"},"content":"        public void setWeight(Weight weight) {","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"vivegank"},"content":"            this.weight \u003d weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"vivegank"},"content":"        public Optional\u003cWeight\u003e getWeight() {","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"vivegank"},"content":"            return Optional.ofNullable(weight);","lastModifiedDate":"2021-03-27"},{"lineNumber":226,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"vivegank"},"content":"        public void setArchived(boolean isArchived) {","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"vivegank"},"content":"            this.isArchived \u003d isArchived;","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"vivegank"},"content":"        public boolean isArchived() {","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"vivegank"},"content":"            return isArchived;","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":272,"author":{"gitId":"vivegank"},"content":"                    \u0026\u0026 getHeight().equals(e.getHeight())","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"vivegank"},"content":"                    \u0026\u0026 getWeight().equals(e.getWeight())","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"vivegank"},"content":"                    \u0026\u0026 (isArchived() \u003d\u003d e.isArchived())","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"BigDoot":2,"nicholasnge":25,"-":207,"vivegank":44}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ARCHIVED_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_MAIN_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        Patient checkPatient;","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"            checkPatient \u003d lastShownList.get(0);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"            if (checkPatient.isArchived()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"                model.updateFilteredPersonList(predicate.and(PREDICATE_SHOW_ARCHIVED_PATIENTS));","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"                model.updateFilteredPersonList(predicate.and(PREDICATE_SHOW_MAIN_PATIENTS));","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"            model.updateFilteredPersonList(predicate.and(PREDICATE_SHOW_MAIN_PATIENTS));","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"nicholasnge":10,"-":41,"vivegank":7}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_MAIN_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hey Doc, here are your patients!\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"            + \": Shows a list of all your saved patient contacts.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"            + \"Parameters: None\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_MAIN_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigDoot":5,"nicholasnge":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/UnarchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":" * Unarchives a Person in DocBob.","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"public class UnarchiveCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    public static final String COMMAND_WORD \u003d \"unarchive\";","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"            + \": Unarchives the patient identified by the index number used in the archived patient list.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_UNARCHIVE_PERSON_SUCCESS \u003d \"Unarchived patient: %1$s\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"            + \". The patient is now back in your main list.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_PERSON_NOT_ARCHIVED \u003d \"This person is not in your archives.\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    public UnarchiveCommand(Index targetIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"        Patient patientToUnarchive \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        if (!patientToUnarchive.isArchived()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_ARCHIVED);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"        model.unarchivePerson(patientToUnarchive);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"        return new CommandResult(String.format(MESSAGE_UNARCHIVE_PERSON_SUCCESS, patientToUnarchive));","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"                || (other instanceof UnarchiveCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"                \u0026\u0026 targetIndex.equals(((UnarchiveCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"nicholasnge":6,"vivegank":55}},{"path":"src/main/java/seedu/address/logic/commands/medical/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_MAIN_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"import seedu.address.model.medical.Appointment;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.MedicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    public static final String COMMAND_WORD \u003d \"appt\";","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment with a patient \"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"            + \"identified by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \\n\" + Appointment.MESSAGE_CONSTRAINTS_DATE_FORMAT","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \" + PREFIX_DATE + \"24051800\";","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Appointment added: %s\";","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_ARCHIVED_PERSON \u003d \"You cannot add appointments to an archived person.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"            + \"Unarchive the person and try again.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"    private final Index index;","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"     * @param date  details to edit the person with","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"    public AddAppointmentCommand(Index index, LocalDateTime date) {","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        Patient patient \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"        for (MedicalRecord rec : patient.getRecords()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"            System.out.println(rec.toString());","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"        if (patient.isArchived()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"            throw new CommandException(MESSAGE_ARCHIVED_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"        Appointment appointment \u003d new Appointment(date);","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"        patient.addAppointment(appointment);","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"        model.setPerson(patient, patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_MAIN_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, appointment.getDateDisplay()),","lastModifiedDate":"2021-04-03"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"                false, false, patient, null, null, false);","lastModifiedDate":"2021-04-03"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"            return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"        if (!(other instanceof AddAppointmentCommand)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":"        // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"        AddAppointmentCommand c \u003d (AddAppointmentCommand) other;","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":"        return index.equals(c.index)","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"                \u0026\u0026 date.equals(c.date);","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"BigDoot":74,"nicholasnge":12,"vivegank":6}},{"path":"src/main/java/seedu/address/logic/commands/medical/ListAppointmentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"import seedu.address.model.medical.Appointment;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":" * Lists all upcoming appointments to the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"public class ListAppointmentsCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    public static final String COMMAND_WORD \u003d \"listappt\";","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"            + \": Lists out all your upcoming appointments.\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"            + \"Parameters: None\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hey Doc, here are your upcoming appointments!\";","lastModifiedDate":"2021-04-03"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        List\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"        for (Patient p: lastShownList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"            List\u003cAppointment\u003e appointmentList \u003d p.getAppointments();","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"            for (Appointment appt : appointmentList) {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"                appointments.add(appt.setPerson(p));","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"        Collections.sort(appointments);","lastModifiedDate":"2021-04-03"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_PATIENTS_WITH_APPT);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"        //model.sortFilteredPersonList(Model.COMPARATOR_BY_FIRST_APPT_DATE);","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"        return new CommandResult(MESSAGE_SUCCESS,","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"                false, false, null, null, appointments, false);","lastModifiedDate":"2021-04-03"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"BigDoot":43,"nicholasnge":4}},{"path":"src/main/java/seedu/address/logic/commands/medical/OpenMedicalRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"public class OpenMedicalRecordCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"    public static final String COMMAND_WORD \u003d \"mrec\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Opens an editor for a medical report for a patient \"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"            + \"identified by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Medical Record for: %s\";","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"    private final Index index;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"    public OpenMedicalRecordCommand(Index index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"        Patient patient \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, patient.getName()), false, true,","lastModifiedDate":"2021-04-03"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"                patient, null, null, false);","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"BigDoot":7,"nicholasnge":40}},{"path":"src/main/java/seedu/address/logic/commands/medical/SaveMedicalRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_MAIN_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.MedicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"public class SaveMedicalRecordCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Medical record added for: %s\";","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"    private final Patient patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"    private final MedicalRecord mrec;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"     * @param patient in the filtered patient list to add medical record to","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"     * @param mrec MedicalRecord to be saved","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    public SaveMedicalRecordCommand(Patient patient, MedicalRecord mrec) {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(mrec);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"        this.mrec \u003d mrec;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_MAIN_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"        this.patient.addMedicalRecord(mrec);","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"        model.setPerson(this.patient, this.patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.patient.getName(), mrec.getDateDisplay()),","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"                false, false, patient, null, null, false);","lastModifiedDate":"2021-04-03"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"BigDoot":1,"nicholasnge":38}},{"path":"src/main/java/seedu/address/logic/commands/medical/ViewMedicalRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.MedicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"public class ViewMedicalRecordCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"    public static final String COMMAND_WORD \u003d \"vrec\";","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views a past medical report of a patient \"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"            + \"identified by the index number of the medical record of the currently selected patient. \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Medical Record for: %s\";","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    private final Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    public ViewMedicalRecordCommand(Index index) {","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"        Patient patient \u003d model.getSelectedPatient();","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        MedicalRecord mrec \u003d patient.getRecords().get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, patient.getName()), false, true,","lastModifiedDate":"2021-04-03"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"                patient, mrec, null, false);","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"BigDoot":2,"nicholasnge":39}},{"path":"src/main/java/seedu/address/logic/commands/medical/ViewPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":" * Lists all upcoming appointments with a patient.","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"public class ViewPatientCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"            + \": Displays all information regarding the patient identified by the index number used in the \"","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"            + \"displayed patient list.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hey Doc, here is the information regarding %s! \\n\";","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"    private final Index index;","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"     * @param index of the patient in the filtered patient list to view","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"    public ViewPatientCommand(Index index) {","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"        Patient patientToView \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"        model.selectPatient(patientToView);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, patientToView.getName()),","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"                            false, false, patientToView, null, null, false);","lastModifiedDate":"2021-04-03"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"BigDoot":49,"nicholasnge":5}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"                        PREFIX_HEIGHT, PREFIX_WEIGHT, PREFIX_TAG);","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"                PREFIX_HEIGHT, PREFIX_WEIGHT)","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"        Weight weight \u003d ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get());","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"        Height height \u003d ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT).get());","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"        Patient patient \u003d new Patient(name, phone, email, address, height, weight, tagList);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"nicholasnge":3,"-":55,"vivegank":10}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.ArchiveListCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.UnarchiveCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.AddAppointmentCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.ListAppointmentsCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.OpenMedicalRecordCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.ViewMedicalRecordCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.ViewPatientCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.medical.AddAppointmentCommandParser;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.medical.OpenMedicalRecordCommandParser;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.medical.ViewMedicalRecordCommandParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.parser.medical.ViewPatientCommandParser;","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"            return new ArchiveCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"        case ArchiveListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"            return new ArchiveListCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"        case UnarchiveCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"            return new UnarchiveCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":93,"author":{"gitId":"nicholasnge"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"nicholasnge"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"BigDoot"},"content":"        case ListAppointmentsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"BigDoot"},"content":"            return new ListAppointmentsCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"nicholasnge"},"content":"        case OpenMedicalRecordCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"nicholasnge"},"content":"            return new OpenMedicalRecordCommandParser().parse(arguments);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"BigDoot"},"content":"        case ViewPatientCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"BigDoot"},"content":"            return new ViewPatientCommandParser().parse(arguments);","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"nicholasnge"},"content":"        case ViewMedicalRecordCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"nicholasnge"},"content":"            return new ViewMedicalRecordCommandParser().parse(arguments);","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigDoot":7,"nicholasnge":17,"-":76,"vivegank":13}},{"path":"src/main/java/seedu/address/logic/parser/ArchiveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":" * Parses input arguments and creates a new ArchiveCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"public class ArchiveCommandParser implements Parser\u003cArchiveCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"     * Parses the given {@code String} of arguments in the context of the ArchiveCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"     * and returns a ArchiveCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    public ArchiveCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"            return new ArchiveCommand(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ArchiveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"vivegank":29}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    public static final Prefix PREFIX_HEIGHT \u003d new Prefix(\"h/\");","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"w/\");","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nicholasnge":1,"-":14,"vivegank":2}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"                        PREFIX_HEIGHT, PREFIX_WEIGHT, PREFIX_TAG);","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"        if (argMultimap.getValue(PREFIX_HEIGHT).isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"            editPersonDescriptor.setHeight(ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT).get()));","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"        if (argMultimap.getValue(PREFIX_WEIGHT).isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"            editPersonDescriptor.setWeight(ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get()));","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":81,"vivegank":10}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    public static final String MESSAGE_INVALID_DATE_NUMBER \u003d \"Date should contain only valid integers.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"     * Parses a {@code String height} into a {@code Height}.","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"     * @throws ParseException if the given {@code height} is invalid.","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"    public static Height parseHeight(String height) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"        requireNonNull(height);","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"        String trimmedHeight \u003d height.trim();","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"        if (!Height.isValidHeight(trimmedHeight)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"            throw new ParseException(Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"        return new Height(trimmedHeight);","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"     * Parses a {@code String weight} into a {@code Weight}.","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"     * @throws ParseException if the given {@code weight} is invalid.","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"    public static Weight parseWeight(String weight) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"        requireNonNull(weight);","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"        String trimmedWeight \u003d weight.trim();","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"vivegank"},"content":"        if (!Weight.isValidWeight(trimmedWeight)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"            throw new ParseException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"        return new Weight(trimmedWeight);","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"nicholasnge"},"content":"     * Parses {@code String unsortedDate} into a {@code LocalDateTime}.","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"nicholasnge"},"content":"    public static LocalDateTime parseDate(String unsortedDate) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"nicholasnge"},"content":"        LocalDateTime date;","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"nicholasnge"},"content":"        if (unsortedDate.length() \u003d\u003d 12) { // following the format DDMMYYYYhhmm","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"nicholasnge"},"content":"            try {","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"nicholasnge"},"content":"                int day \u003d Integer.parseInt(unsortedDate.substring(0, 2));","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"nicholasnge"},"content":"                int month \u003d Integer.parseInt(unsortedDate.substring(2, 4));","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"nicholasnge"},"content":"                int year \u003d Integer.parseInt(unsortedDate.substring(4, 8));","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"nicholasnge"},"content":"                int hour \u003d Integer.parseInt(unsortedDate.substring(8, 10));","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"nicholasnge"},"content":"                int min \u003d Integer.parseInt(unsortedDate.substring(10, 12));","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"nicholasnge"},"content":"                date \u003d LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"nicholasnge"},"content":"            } catch (NumberFormatException | DateTimeException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"nicholasnge"},"content":"                throw new ParseException(MESSAGE_INVALID_DATE_NUMBER);","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"nicholasnge"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"nicholasnge"},"content":"        } else if (unsortedDate.length() \u003d\u003d 8) { // following the format DDMMhhmm","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"nicholasnge"},"content":"            try {","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"nicholasnge"},"content":"                int day \u003d Integer.parseInt(unsortedDate.substring(0, 2));","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"nicholasnge"},"content":"                int month \u003d Integer.parseInt(unsortedDate.substring(2, 4));","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"nicholasnge"},"content":"                int hour \u003d Integer.parseInt(unsortedDate.substring(4, 6));","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"nicholasnge"},"content":"                int min \u003d Integer.parseInt(unsortedDate.substring(6, 8));","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"nicholasnge"},"content":"                date \u003d LocalDateTime.of(LocalDateTime.now().getYear(), month, day, hour, min);","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"nicholasnge"},"content":"            } catch (NumberFormatException | DateTimeException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"nicholasnge"},"content":"                throw new ParseException(MESSAGE_INVALID_DATE_NUMBER);","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"nicholasnge"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"nicholasnge"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"nicholasnge"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS_DATE_FORMAT);","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"nicholasnge"},"content":"        if (date.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"nicholasnge"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS_MIN_DATE);","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"nicholasnge"},"content":"        return date;","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nicholasnge":40,"-":124,"vivegank":32}},{"path":"src/main/java/seedu/address/logic/parser/UnarchiveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.UnarchiveCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":" * Parses input arguments and creates a new UnarchiveCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"public class UnarchiveCommandParser implements Parser\u003cUnarchiveCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"     * Parses the given {@code String} of arguments in the context of the UnarchiveCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"     * and returns a UnarchiveCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    public UnarchiveCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"            return new UnarchiveCommand(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnarchiveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"vivegank":29}},{"path":"src/main/java/seedu/address/logic/parser/medical/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.logic.parser.medical;","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.AddAppointmentCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"        Index index;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"        LocalDateTime date;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        System.out.println(\"index: \" + index.toString());","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"            date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        System.out.println(\"prefix date: \" + date.toString());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"        return new AddAppointmentCommand(index, date);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"nicholasnge":50}},{"path":"src/main/java/seedu/address/logic/parser/medical/OpenMedicalRecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.logic.parser.medical;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.OpenMedicalRecordCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"public class OpenMedicalRecordCommandParser implements Parser\u003cOpenMedicalRecordCommand\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"    // TODO DOCUMENTATION","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    public OpenMedicalRecordCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"            return new OpenMedicalRecordCommand(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenMedicalRecordCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"nicholasnge":30}},{"path":"src/main/java/seedu/address/logic/parser/medical/ViewMedicalRecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.logic.parser.medical;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.OpenMedicalRecordCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.ViewMedicalRecordCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"public class ViewMedicalRecordCommandParser implements Parser\u003cViewMedicalRecordCommand\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"    // TODO DOCUMENTATION","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"    public ViewMedicalRecordCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"            return new ViewMedicalRecordCommand(index);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenMedicalRecordCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"nicholasnge":31}},{"path":"src/main/java/seedu/address/logic/parser/medical/ViewPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"package seedu.address.logic.parser.medical;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.medical.ViewPatientCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":" * Parses input arguments and creates a new ViewPatientCommand object","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"public class ViewPatientCommandParser implements Parser\u003cViewPatientCommand\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewPatientCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"     * and returns a ViewPatientCommand object for execution.","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    public ViewPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"            return new ViewPatientCommand(index);","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewPatientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"BigDoot":30}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"    public void setPersons(List\u003cPatient\u003e patients) {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        this.persons.setPersons(patients);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"    public boolean hasPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"        return persons.contains(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"    public void addPerson(Patient p) {","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"nicholasnge"},"content":"    public void setPerson(Patient target, Patient editedPatient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"nicholasnge"},"content":"        persons.setPerson(target, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"nicholasnge"},"content":"    public void removePerson(Patient key) {","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"     * Archives the given person {@code target} in the address book.","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"nicholasnge"},"content":"    public void archivePerson(Patient target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        persons.archive(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"     * Unarchives the given person {@code target} in the address book.","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"nicholasnge"},"content":"    public void unarchivePerson(Patient target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"        persons.unarchive(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"nicholasnge"},"content":"    public ObservableList\u003cPatient\u003e getPersonList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicholasnge":14,"-":108,"vivegank":14}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"     * {@code Predicate} that only shows patients in the main list","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_MAIN_PATIENTS \u003d patient -\u003e !patient.isArchived();","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"     * {@code Predicate} that only shows archived patients","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ARCHIVED_PATIENTS \u003d Patient::isArchived;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"     * {@code Predicate} that only shows patients with appointments","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_PATIENTS_WITH_APPT \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"        patient -\u003e patient.getAppointments().size() \u003e 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"     * {@code Comparator} that only shows patients with appointments","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"    Comparator\u003cPatient\u003e COMPARATOR_BY_FIRST_APPT_DATE \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"            Comparator.comparing(patient -\u003e patient.getAppointments().get(0).getDate());","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"     * Returns the AddressBook","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"nicholasnge"},"content":"    boolean hasPerson(Patient patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"nicholasnge"},"content":"    void deletePerson(Patient target);","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"nicholasnge"},"content":"    void addPerson(Patient patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"nicholasnge"},"content":"    void setPerson(Patient target, Patient editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"     * Archives the given person.","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"     * {@code person} must not already exist in the archives of address book.","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"nicholasnge"},"content":"    void archivePerson(Patient patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"     * Unarchives the given person.","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"nicholasnge"},"content":"    void unarchivePerson(Patient patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"nicholasnge"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"nicholasnge"},"content":"    ObservableList\u003cPatient\u003e getFilteredPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"nicholasnge"},"content":"    void updateFilteredPersonList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"nicholasnge"},"content":"     * Sorts the filtered person list to sort by the given {@code comparator}.","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"nicholasnge"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"nicholasnge"},"content":"    void sortFilteredPersonList(Comparator\u003cPatient\u003e comparator);","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"nicholasnge"},"content":"     * Selects a patient to be the selected patient in the patient box.","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"nicholasnge"},"content":"    void selectPatient(Patient patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"nicholasnge"},"content":"     * Gets the selected patient in the patient box.","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"nicholasnge"},"content":"    Patient getSelectedPatient();","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nicholasnge":54,"-":76,"vivegank":11}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    private Patient selectedPatient;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"        // initialise to only show main persons (no archived patients)","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_MAIN_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"nicholasnge"},"content":"    public boolean hasPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"nicholasnge"},"content":"        return addressBook.hasPerson(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"nicholasnge"},"content":"    public void deletePerson(Patient target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"nicholasnge"},"content":"    public void addPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"nicholasnge"},"content":"        addressBook.addPerson(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"nicholasnge"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_MAIN_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"nicholasnge"},"content":"    public void setPerson(Patient target, Patient editedPatient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"nicholasnge"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"nicholasnge"},"content":"        addressBook.setPerson(target, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"nicholasnge"},"content":"        if (target.equals(this.selectedPatient)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"nicholasnge"},"content":"            selectPatient(editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"nicholasnge"},"content":"    public void archivePerson(Patient target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"        addressBook.archivePerson(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"nicholasnge"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ARCHIVED_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"nicholasnge"},"content":"    public void unarchivePerson(Patient target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"vivegank"},"content":"        addressBook.unarchivePerson(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"nicholasnge"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_MAIN_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"nicholasnge"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPersonList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"nicholasnge"},"content":"        return filteredPatients;","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"nicholasnge"},"content":"    public void updateFilteredPersonList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"nicholasnge"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"nicholasnge"},"content":"    public void sortFilteredPersonList(Comparator\u003cPatient\u003e comparator) {","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"nicholasnge"},"content":"        filteredPatients.sort(comparator);","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"nicholasnge"},"content":"    public void selectPatient(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"nicholasnge"},"content":"        this.selectedPatient \u003d patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"nicholasnge"},"content":"    public Patient getSelectedPatient() {","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"nicholasnge"},"content":"        return this.selectedPatient;","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 filteredPatients.equals(other.filteredPatients);","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicholasnge":45,"-":135,"vivegank":7}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"    ObservableList\u003cPatient\u003e getPersonList();","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicholasnge":2,"-":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"    Path getSettingsFilePath();","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"nicholasnge":1,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"docBob.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"    private Path settingsFilePath \u003d Paths.get(\"data\" , \"settings.json\");","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"        setSettingsFilePath(newUserPrefs.getSettingsFilePath());","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"    public Path getSettingsFilePath() {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        return settingsFilePath;","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"    private void setSettingsFilePath(Path settingsFilePath) {","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"        requireNonNull(settingsFilePath);","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"        this.settingsFilePath \u003d settingsFilePath;","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"        sb.append(\"\\nLocal settings file location : \" + settingsFilePath);","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BigDoot":1,"nicholasnge":13,"-":87}},{"path":"src/main/java/seedu/address/model/medical/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.medical.DateFormat.DATE_FORMAT_DISPLAY;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.medical.DateFormat.DATE_FORMAT_STORAGE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":" * Represents an Appointment of a Patient.","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"public class Appointment implements Comparable\u003cAppointment\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"    public static final String MESSAGE_CONSTRAINTS_MIN_DATE \u003d \"Date must be in the future\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"    public static final String MESSAGE_CONSTRAINTS_DATE_FORMAT \u003d \"Date format: \"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"            + \"DDMMYYYYhhmm or DDMMhhmm. If the year is omitted, the current year is\"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"            + \" assumed.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    private Patient patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"    private String zoomMeetingUrl;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"    private LocalDateTime date;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"    public Appointment(LocalDateTime date) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    public Appointment(Patient patient, LocalDateTime date) {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        requireAllNonNull(patient, date);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"    public String getZoomMeetingUrl() {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"        return zoomMeetingUrl;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"        return date;","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"    // for storage into JSON","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"    public String getDateStorage() {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"        return date.format(DATE_FORMAT_STORAGE);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"    // for displaying, doesnt have year","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"    public String getDateDisplay() {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        return date.format(DATE_FORMAT_DISPLAY);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"    public Patient getPerson() {","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"        return patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"    public Appointment setPerson(Patient p) {","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"        return new Appointment(p, this.date);","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"        return patient.hashCode() + date.hashCode();","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"            return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"        return otherAppointment.getPerson().equals(getPerson())","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"                \u0026\u0026 otherAppointment.getDate().equals(getDate());","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"    public String toString() {","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"nicholasnge"},"content":"        return getDateDisplay() + \" - \" + ((patient !\u003d null) ? patient.getName() : \"\");","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"BigDoot"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"BigDoot"},"content":"    public int compareTo(Appointment o) {","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"BigDoot"},"content":"        if (this.date.isEqual(o.date)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"BigDoot"},"content":"            return 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"BigDoot"},"content":"        } else if (this.date.isAfter(o.date)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"BigDoot"},"content":"            return 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"BigDoot"},"content":"            return -1;","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"BigDoot":48,"nicholasnge":53,"vivegank":3}},{"path":"src/main/java/seedu/address/model/medical/DateFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"public class DateFormat {","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"    public static final DateTimeFormatter DATE_FORMAT_STORAGE \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"d/M/yy H:mm\")","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"            .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"            .toFormatter();","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"    public static final DateTimeFormatter DATE_FORMAT_DISPLAY \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"EEE, dd MMM, HH:mm\")","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"            .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"            .toFormatter();","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"    public static final DateTimeFormatter DATE_FORMAT_NO_TIME \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd MMM YYYY\")","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"                    .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"                    .toFormatter();","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"nicholasnge":26}},{"path":"src/main/java/seedu/address/model/medical/MedicalRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.medical.DateFormat.DATE_FORMAT_DISPLAY;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.medical.DateFormat.DATE_FORMAT_NO_TIME;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.medical.DateFormat.DATE_FORMAT_STORAGE;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":" * Represents a Appointment of a Patient.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"public class MedicalRecord {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"    // attributes from appointment","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"    private LocalDateTime date;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"    private String zoomMeetingUrl;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"    private List\u003cSection\u003e sections;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"    public MedicalRecord(LocalDateTime date, List\u003cSection\u003e sections) {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"        this.sections \u003d sections;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    public MedicalRecord(Appointment appointment, List\u003cString\u003e sections) {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"        this.date \u003d appointment.getDate();","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"        this.zoomMeetingUrl \u003d appointment.getZoomMeetingUrl();","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"        this.sections \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        for (String section : sections) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"            this.sections.add(new Section(section));","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"        return date;","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"    public String getZoomMeetingUrl() {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        return zoomMeetingUrl;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"    public List\u003cSection\u003e getSections() {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"        return Collections.unmodifiableList(sections);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"    public int hashCode() {","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"        return date.hashCode() + sections.hashCode();","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"    // for storage into JSON","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"    public String getDateStorage() {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"        return date.format(DATE_FORMAT_STORAGE);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"    // for displaying on ui","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"    public String getDateDisplay() {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"        return date.format(DATE_FORMAT_DISPLAY);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"    // for displaying on ui","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"    public String getDateNoTime() {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"        return date.format(DATE_FORMAT_NO_TIME);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"    public String toString() {","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"        String sectionsString \u003d \"\";","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"        for (Section s : this.sections) {","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"            sectionsString +\u003d s.toString();","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"nicholasnge"},"content":"        return \"Record: \" + date + \" - \" + sectionsString;","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"nicholasnge"},"content":"     * Two MedicalRecords are equal if they have the same LocalDateTime","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"nicholasnge"},"content":"     * This makes intuitive sense, since a patient cant have two medical records at the same time","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"nicholasnge"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"nicholasnge"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"            return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"nicholasnge"},"content":"        if (!(other instanceof MedicalRecord)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"nicholasnge"},"content":"            return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"nicholasnge"},"content":"        MedicalRecord otherMedicalRecord \u003d (MedicalRecord) other;","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"nicholasnge"},"content":"        return otherMedicalRecord.getDate().equals(getDate());","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"nicholasnge":95,"vivegank":3}},{"path":"src/main/java/seedu/address/model/medical/Section.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":" * Represents a Section of a Medical Record.","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"public class Section {","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"    public static final int MAX_TITLE_LENGTH \u003d 30;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Title must be less than \" + MAX_TITLE_LENGTH + \" characters long\";","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"    private String title \u003d \"\";","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"    private String body \u003d \"\";","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"    public Section(String title) {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"        new Section(title, \"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    public Section(String title, String body) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"        this.body \u003d body;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"    public int hashCode() {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"        return title.hashCode() + body.hashCode();","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"    public static boolean isValidTitleBody(String title, String body) {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        return title.length() \u003c\u003d MAX_TITLE_LENGTH;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"    public String getTitle() {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        return title;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"    public String getBody() {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"        return body;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"    public void setTitle(String title) {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"    public void setBody(String body) {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"        this.body \u003d body;","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"    public String toString() {","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        return \"Section: \" + title + \" - \" + body;","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"nicholasnge":60}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":" * Represents a Person\u0027s address in DocBob.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":56,"vivegank":1}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":" * Represents a Person\u0027s email in DocBob.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":66,"vivegank":1}},{"path":"src/main/java/seedu/address/model/person/Height.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":" * Represents a Person\u0027s height in DocBob.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHeight(String)}","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"public class Height {","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"            \"Height must be a number and be in cm\";","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    public static final String UNIT \u003d \"cm\";","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\" + UNIT;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    public final String value;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"     * Constructs a {@code Height}.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * @param height A valid height.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    public Height(String height) {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        requireNonNull(height);","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        checkArgument(isValidHeight(height), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        value \u003d height;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"     * Returns true if a given string is a valid weight.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    public static boolean isValidHeight(String test) {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        return value;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"                || (other instanceof Height // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"                \u0026\u0026 value.equals(((Height) other).value)); // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"vivegank":52}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":" * Represents a Person\u0027s name in DocBob.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":58,"vivegank":1}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"nicholasnge":3,"-":28}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.MedicalRecord;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":" * Represents a Person in DocBob.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"public class Patient implements Comparable\u003cPatient\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    //Health-related data fields","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    private final Height height;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    private final Weight weight;","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"    // Medical fields","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"    private final List\u003cMedicalRecord\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    private final List\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"    // State field","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"    private boolean isArchived;","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, Height height, Weight weight, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"        requireAllNonNull(name, phone, email, address, height, weight, tags);","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"        this.isArchived \u003d false;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, Height height, Weight weight,","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"                   Set\u003cTag\u003e tags, List\u003cAppointment\u003eappointments) {","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"        requireAllNonNull(name, phone, email, address, height, weight, tags);","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"        this.isArchived \u003d false;","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"    public Height getHeight() {","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"        return height;","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"    public Weight getWeight() {","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"        return weight;","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"nicholasnge"},"content":"    public List\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"nicholasnge"},"content":"        this.appointments.sort(Comparator.comparing(Appointment::getDate));","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"nicholasnge"},"content":"        return Collections.unmodifiableList(appointments);","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"nicholasnge"},"content":"    public List\u003cMedicalRecord\u003e getRecords() {","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"nicholasnge"},"content":"        this.records.sort(Comparator.comparing(MedicalRecord::getDate));","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"nicholasnge"},"content":"        return Collections.unmodifiableList(records);","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"    public boolean isArchived() {","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"        return isArchived;","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"    public void setArchived(boolean isArchived) {","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"nicholasnge"},"content":"    public boolean isSamePerson(Patient otherPatient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"nicholasnge"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"nicholasnge"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 otherPatient.getName().equals(getName());","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"nicholasnge"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"nicholasnge"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"nicholasnge"},"content":"        return otherPatient.getName().equals(getName())","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 otherPatient.getPhone().equals(getPhone())","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 otherPatient.getEmail().equals(getEmail())","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 otherPatient.getAddress().equals(getAddress())","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 otherPatient.getHeight().equals(getHeight())","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 otherPatient.getWeight().equals(getWeight())","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 otherPatient.getTags().equals(getTags())","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 otherPatient.getAppointments().equals(getAppointments())","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 otherPatient.getRecords().equals(getRecords())","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 (otherPatient.isArchived() \u003d\u003d isArchived());","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"vivegank"},"content":"        return Objects.hash(name, phone, email, address, height, weight, tags, appointments,","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"vivegank"},"content":"                records, isArchived);","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":181,"author":{"gitId":"vivegank"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"vivegank"},"content":"                .append(\"; Height: \")","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"vivegank"},"content":"                .append(getHeight())","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"vivegank"},"content":"                .append(\"; Weight: \")","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"vivegank"},"content":"                .append(getWeight());","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":187,"author":{"gitId":"nicholasnge"},"content":"        List\u003cAppointment\u003e appts \u003d getAppointments();","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"nicholasnge"},"content":"        if (!appts.isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"nicholasnge"},"content":"            builder.append(\"; Appts: \");","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"nicholasnge"},"content":"            appts.forEach(builder::append);","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"nicholasnge"},"content":"        List\u003cMedicalRecord\u003e mrecs \u003d getRecords();","lastModifiedDate":"2021-04-01"},{"lineNumber":194,"author":{"gitId":"nicholasnge"},"content":"        if (!mrecs.isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":195,"author":{"gitId":"nicholasnge"},"content":"            builder.append(\"; Mrecs: \");","lastModifiedDate":"2021-04-01"},{"lineNumber":196,"author":{"gitId":"nicholasnge"},"content":"            mrecs.forEach(builder::append);","lastModifiedDate":"2021-04-01"},{"lineNumber":197,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":198,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"nicholasnge"},"content":"     * Adds an appointment to this Patient","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":210,"author":{"gitId":"nicholasnge"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"nicholasnge"},"content":"        this.appointments.add(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"nicholasnge"},"content":"        this.appointments.sort(Comparator.comparing(Appointment::getDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":216,"author":{"gitId":"nicholasnge"},"content":"     * Adds a medical record if it is new, or replace the record if its an edited old record","lastModifiedDate":"2021-04-01"},{"lineNumber":217,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":218,"author":{"gitId":"nicholasnge"},"content":"    public void addMedicalRecord(MedicalRecord newRecord) {","lastModifiedDate":"2021-04-01"},{"lineNumber":219,"author":{"gitId":"nicholasnge"},"content":"        for (MedicalRecord oldRecord : this.records) {","lastModifiedDate":"2021-04-01"},{"lineNumber":220,"author":{"gitId":"nicholasnge"},"content":"            if (newRecord.equals(oldRecord)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":221,"author":{"gitId":"nicholasnge"},"content":"                this.records.set(this.records.indexOf(oldRecord), newRecord);","lastModifiedDate":"2021-04-01"},{"lineNumber":222,"author":{"gitId":"nicholasnge"},"content":"                return;","lastModifiedDate":"2021-04-01"},{"lineNumber":223,"author":{"gitId":"nicholasnge"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":224,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":225,"author":{"gitId":"nicholasnge"},"content":"        this.records.add(newRecord);","lastModifiedDate":"2021-04-01"},{"lineNumber":226,"author":{"gitId":"nicholasnge"},"content":"        this.records.sort(Comparator.comparing(MedicalRecord::getDate));","lastModifiedDate":"2021-04-01"},{"lineNumber":227,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"BigDoot"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"nicholasnge"},"content":"    public int compareTo(Patient p) {","lastModifiedDate":"2021-04-01"},{"lineNumber":231,"author":{"gitId":"BigDoot"},"content":"        return this.name.fullName.compareTo(p.name.fullName);","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigDoot":4,"nicholasnge":87,"-":102,"vivegank":40}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":" * Represents a Person\u0027s phone number in DocBob.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":52,"vivegank":1}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":" * @see Patient#isSamePerson(Patient)","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"public class UniquePersonList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"        Collections.sort(internalList);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"    public void setPerson(Patient target, Patient editedPatient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"        if (!target.isSamePerson(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"nicholasnge"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"     * Archives the equivalent person in the list.","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"     * The person must exist in the list.","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"    public void archive(Patient toArchive) {","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"        requireNonNull(toArchive);","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"        remove(toArchive);","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"        toArchive.setArchived(true);","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"        add(toArchive);","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"     * Unarchives the equivalent person in the list.","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"     * The person must exist in the list.","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"nicholasnge"},"content":"    public void unarchive(Patient toUnarchive) {","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"        requireNonNull(toUnarchive);","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        remove(toUnarchive);","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"        toUnarchive.setArchived(false);","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"        add(toUnarchive);","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"nicholasnge"},"content":"    public void setPersons(List\u003cPatient\u003e patients) {","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"nicholasnge"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"nicholasnge"},"content":"        if (!personsAreUnique(patients)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":121,"author":{"gitId":"nicholasnge"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"nicholasnge"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"nicholasnge"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"nicholasnge"},"content":"    private boolean personsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"nicholasnge"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"nicholasnge"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"nicholasnge"},"content":"                if (patients.get(i).isSamePerson(patients.get(j))) {","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigDoot":2,"nicholasnge":23,"-":116,"vivegank":20}},{"path":"src/main/java/seedu/address/model/person/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":" * Represents a Person\u0027s weight in DocBob.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidWeight(String)}","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"public class Weight {","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"            \"Weight must be a number and be in kg\";","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    public static final String UNIT \u003d \"kg\";","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\" + UNIT;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    public final String value;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"     * Constructs a {@code Weight}.","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * @param weight A valid weight.","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    public Weight(String weight) {","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        requireNonNull(weight);","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        checkArgument(isValidWeight(weight), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        value \u003d weight;","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"     * Returns true if a given string is a valid weight.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    public static boolean isValidWeight(String test) {","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    public String toString() {","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        return value;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"                || (other instanceof Weight // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"                \u0026\u0026 value.equals(((Weight) other).value)); // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"vivegank":52}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"    public static Patient[] getSamplePersons() {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"        return new Patient[] {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"            new Patient(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Height(\"175cm\"), new Weight(\"69kg\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"            new Patient(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Height(\"168cm\"), new Weight(\"50kg\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Height(\"170cm\"), new Weight(\"53kg\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"            new Patient(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Height(\"163cm\"), new Weight(\"63kg\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Height(\"179cm\"), new Weight(\"66kg\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"            new Patient(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Height(\"172cm\"), new Weight(\"58kg\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        for (Patient samplePatient : getSamplePersons()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"            sampleAb.addPerson(samplePatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"nicholasnge":13,"-":43,"vivegank":6}},{"path":"src/main/java/seedu/address/storage/DriveStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import java.security.GeneralSecurityException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.auth.oauth2.Credential;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.extensions.java6.auth.oauth2.AuthorizationCodeInstalledApp;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.extensions.jetty.auth.oauth2.LocalServerReceiver;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.http.javanet.NetHttpTransport;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.json.JsonFactory;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.json.jackson2.JacksonFactory;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.client.util.store.FileDataStoreFactory;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.services.drive.Drive;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.services.drive.DriveScopes;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.services.drive.model.File;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"import com.google.api.services.drive.model.FileList;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"public class DriveStorage {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"    private static final String APPLICATION_NAME \u003d \"Google Drive API Java Quickstart\";","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    private static final JsonFactory JSON_FACTORY \u003d JacksonFactory.getDefaultInstance();","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    private static final String TOKENS_DIRECTORY_PATH \u003d \"tokens\";","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"     * Global instance of the scopes required by this quickstart.","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"     * If modifying these scopes, delete your previously saved tokens/ folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    private static final List\u003cString\u003e SCOPES \u003d Collections.singletonList(DriveScopes.DRIVE_FILE);","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"    private static final String CREDENTIALS_FILE_PATH \u003d \"/credentials.json\";","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"     * Creates an authorized Credential object.","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"     * @param httpTransport The network HTTP Transport.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"     * @return An authorized Credential object.","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"     * @throws IOException If the credentials.json file cannot be found.","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"    private static Credential getCredentials(final NetHttpTransport httpTransport) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"        // Load client secrets.","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"        InputStream in \u003d DriveStorage.class.getResourceAsStream(CREDENTIALS_FILE_PATH);","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        if (in \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"            throw new FileNotFoundException(\"Resource not found: \" + CREDENTIALS_FILE_PATH);","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"        GoogleClientSecrets clientSecrets \u003d GoogleClientSecrets.load(JSON_FACTORY, new InputStreamReader(in));","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"        // Build flow and trigger user authorization request.","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"        GoogleAuthorizationCodeFlow flow \u003d new GoogleAuthorizationCodeFlow.Builder(","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"                httpTransport, JSON_FACTORY, clientSecrets, SCOPES)","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"                .setDataStoreFactory(new FileDataStoreFactory(new java.io.File(TOKENS_DIRECTORY_PATH)))","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"                .setAccessType(\"offline\")","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"                .build();","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        LocalServerReceiver receiver \u003d new LocalServerReceiver.Builder().setPort(8888).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        return new AuthorizationCodeInstalledApp(flow, receiver).authorize(\"user\");","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"     * Build a new authorized API client service","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"    public static void run() throws IOException, GeneralSecurityException {","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"        // Build a new authorized API client service.","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"        final NetHttpTransport httpTransport \u003d GoogleNetHttpTransport.newTrustedTransport();","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"        Drive service \u003d new Drive.Builder(httpTransport, JSON_FACTORY, getCredentials(httpTransport))","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"                .setApplicationName(APPLICATION_NAME)","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"                .build();","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"        // Print the names and IDs for up to 10 files.","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"        FileList result \u003d service.files().list()","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"                .setPageSize(10)","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"                .setFields(\"nextPageToken, files(id, name)\")","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"                .execute();","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"nicholasnge"},"content":"        List\u003cFile\u003e files \u003d result.getFiles();","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"nicholasnge"},"content":"        if (files \u003d\u003d null || files.isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"nicholasnge"},"content":"            System.out.println(\"No files found.\");","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"nicholasnge"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"nicholasnge"},"content":"            System.out.println(\"Files:\");","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"nicholasnge"},"content":"            for (File file : files) {","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"nicholasnge"},"content":"                System.out.printf(\"%s (%s)\\n\", file.getName(), file.getId());","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"nicholasnge"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"nicholasnge":87}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.medical.DateFormat.DATE_FORMAT_STORAGE;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"    private final String dateString;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    public JsonAdaptedAppointment(String dateString) {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"        dateString \u003d source.getDateStorage();","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"    @JsonValue","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    public String getDateString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"        return dateString;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(dateString, DATE_FORMAT_STORAGE);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"            return new Appointment(date);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"            throw new IllegalValueException(Appointment.MESSAGE_CONSTRAINTS_DATE_FORMAT);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"nicholasnge":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    private final String height;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    private final String weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"    private final boolean isArchived;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"    private final List\u003cJsonAdaptedRecord\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"                             @JsonProperty(\"height\") String height, @JsonProperty(\"weight\") String weight,","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"                             @JsonProperty(\"isArchived\") boolean isArchived,","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"                             @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments,","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"                             @JsonProperty(\"records\") List\u003cJsonAdaptedRecord\u003e records) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"        if (records !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"            this.records.addAll(records);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"        if (appointments !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"            this.appointments.addAll(appointments);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"    public JsonAdaptedPerson(Patient source) {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"        height \u003d source.getHeight().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"        weight \u003d source.getWeight().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"        isArchived \u003d source.isArchived();","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"nicholasnge"},"content":"        appointments.addAll(source.getAppointments().stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"nicholasnge"},"content":"                .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"nicholasnge"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"nicholasnge"},"content":"        records.addAll(source.getRecords().stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"nicholasnge"},"content":"                .map(JsonAdaptedRecord::new)","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"nicholasnge"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"vivegank"},"content":"        if (height \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"vivegank"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Height.class.getSimpleName()));","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"vivegank"},"content":"        if (!Height.isValidHeight(height)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"vivegank"},"content":"            throw new IllegalValueException(Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"vivegank"},"content":"        final Height modelHeight \u003d new Height(height);","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"vivegank"},"content":"        if (weight \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"vivegank"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName()));","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"vivegank"},"content":"        if (!Weight.isValidWeight(weight)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"vivegank"},"content":"            throw new IllegalValueException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"vivegank"},"content":"        final Weight modelWeight \u003d new Weight(weight);","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"nicholasnge"},"content":"        Patient patient \u003d new Patient(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"vivegank"},"content":"                modelHeight, modelWeight, modelTags);","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"nicholasnge"},"content":"        patient.setArchived(isArchived);","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"nicholasnge"},"content":"        // add the appointments","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"nicholasnge"},"content":"        for (JsonAdaptedAppointment appt : appointments) {","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"nicholasnge"},"content":"            patient.addAppointment(appt.toModelType());","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"nicholasnge"},"content":"        // add the medical records","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"nicholasnge"},"content":"        for (JsonAdaptedRecord rec : records) {","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"nicholasnge"},"content":"            patient.addMedicalRecord(rec.toModelType());","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"nicholasnge"},"content":"        return patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nicholasnge":35,"-":103,"vivegank":30}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.medical.DateFormat.DATE_FORMAT_STORAGE;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.MedicalRecord;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.Section;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"public class JsonAdaptedRecord {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"    private final String dateString;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    private final List\u003cJsonAdaptedSection\u003e sections \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"    public JsonAdaptedRecord(@JsonProperty(\"dateString\") String dateString,","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"                             @JsonProperty(\"sections\") List\u003cJsonAdaptedSection\u003e sections) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"        if (sections !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"            this.sections.addAll(sections);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    public JsonAdaptedRecord(MedicalRecord source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        dateString \u003d source.getDateStorage();","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"        sections.addAll(source.getSections().stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"                .map(JsonAdaptedSection::new)","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"    public MedicalRecord toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"        final LocalDateTime date;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"            date \u003d LocalDateTime.parse(dateString, DATE_FORMAT_STORAGE);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"            throw new IllegalValueException(Appointment.MESSAGE_CONSTRAINTS_DATE_FORMAT);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        final List\u003cSection\u003e recordSections \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        for (JsonAdaptedSection section : sections) {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"            recordSections.add(section.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"        return new MedicalRecord(date, recordSections);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"nicholasnge":64}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.Section;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"public class JsonAdaptedSection {","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"    private final String title;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"    private final String body;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"    public JsonAdaptedSection(@JsonProperty(\"title\") String title, @JsonProperty(\"body\") String body) {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"        this.body \u003d body;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    public JsonAdaptedSection(Section source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"        title \u003d source.getTitle();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"        body \u003d source.getBody();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"    public Section toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        if (!Section.isValidTitleBody(title, body)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"        return new Section(title, body);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"nicholasnge":43}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"            Patient patient \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"            if (addressBook.hasPerson(patient)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"            addressBook.addPerson(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nicholasnge":4,"-":56}},{"path":"src/main/java/seedu/address/ui/EditorWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.medical.SaveMedicalRecordCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.MedicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.Section;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":" * Controller for a help page","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"public class EditorWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    public static final String USERGUIDE_URL \u003d \"https://github.com/AY2021S2-CS2103T-W12-1/\"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"            + \"tp/blob/master/docs/UserGuide.md\";","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the full user guide here: \" + USERGUIDE_URL + \"\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"    public static final String TITLE_EMPTY_MESSAGE \u003d \"Section title cannot be empty!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    public static final String BODY_EMPTY_MESSAGE \u003d \"Section body cannot be empty!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditorWindow.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"    private static final String FXML \u003d \"EditorWindow.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    private final Patient patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"    private final MedicalRecord mrec;","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"    private final ObservableList\u003cSection\u003e sections;","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"    private Button returnButton;","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"    private Button newSectionButton;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"    private ListView\u003cSection\u003e sectionListView;","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"     * Creates a new EditorWindow.","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"     * Associated MedicalRecord is newly created if there is no valid one passed in","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"    private EditorWindow(Stage root, CommandExecutor commandExecutor, Patient patient, MedicalRecord medicalRecord) {","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"        super(FXML, root);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"        if (medicalRecord !\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"            this.mrec \u003d medicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"            root.setTitle(patient.getName().toString() + \" - \" + medicalRecord.getDateDisplay());","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"            this.mrec \u003d new MedicalRecord(LocalDateTime.now(), List.of(new Section(\"\", \"\")));","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"            root.setTitle(\"New Medical Record - \" + patient.getName().toString());","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"        this.sections \u003d FXCollections.observableArrayList(this.mrec.getSections());","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"        this.sectionListView.setItems(this.sections);","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"        this.sectionListView.setCellFactory(listView -\u003e new SectionListViewCell());","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"        if (this.mrec.getDate().isBefore(LocalDateTime.now().minusDays(1))) {","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"            newSectionButton.setDisable(true);","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"            returnButton.setDisable(true);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"            this.sectionListView.setCellFactory(listView -\u003e new SectionListDisabledViewCell());","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"nicholasnge"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"nicholasnge"},"content":"    class SectionListViewCell extends ListCell\u003cSection\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"nicholasnge"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"nicholasnge"},"content":"        protected void updateItem(Section section, boolean empty) {","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"nicholasnge"},"content":"            super.updateItem(section, empty);","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"nicholasnge"},"content":"            if (empty || section \u003d\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"nicholasnge"},"content":"                setGraphic(null);","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"                setText(null);","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"nicholasnge"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"nicholasnge"},"content":"                setGraphic(new SectionCard(section, true).getRoot());","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"nicholasnge"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"nicholasnge"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"nicholasnge"},"content":"    class SectionListDisabledViewCell extends ListCell\u003cSection\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"nicholasnge"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"nicholasnge"},"content":"        protected void updateItem(Section section, boolean empty) {","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"nicholasnge"},"content":"            super.updateItem(section, empty);","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"nicholasnge"},"content":"            if (empty || section \u003d\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"nicholasnge"},"content":"                setGraphic(null);","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"nicholasnge"},"content":"                setText(null);","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"nicholasnge"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"nicholasnge"},"content":"                setGraphic(new SectionCard(section, false).getRoot());","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"nicholasnge"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"nicholasnge"},"content":"     * Creates a new EditorWindow.","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"nicholasnge"},"content":"    public EditorWindow(CommandExecutor commandExecutor, Patient patient, MedicalRecord medicalRecord) {","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"nicholasnge"},"content":"        this(new Stage(), commandExecutor, patient, medicalRecord);","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"nicholasnge"},"content":"     * Shows the help window.","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"nicholasnge"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"nicholasnge"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"nicholasnge"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"nicholasnge"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"nicholasnge"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"nicholasnge"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"nicholasnge"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"nicholasnge"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"nicholasnge"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"nicholasnge"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"nicholasnge"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"nicholasnge"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"nicholasnge"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"nicholasnge"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"nicholasnge"},"content":"    public void show() {","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"nicholasnge"},"content":"        getRoot().show();","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"nicholasnge"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"nicholasnge"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"nicholasnge"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"nicholasnge"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"nicholasnge"},"content":"     * Hides the help window.","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"nicholasnge"},"content":"    public void hide() {","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"nicholasnge"},"content":"        getRoot().hide();","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"nicholasnge"},"content":"     * Focuses on the help window.","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"nicholasnge"},"content":"    public void focus() {","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"nicholasnge"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"nicholasnge"},"content":"     * Opens a new section","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"nicholasnge"},"content":"    private void handleNewSection() throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"nicholasnge"},"content":"        Section s \u003d new Section(\"\", \"\");","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"nicholasnge"},"content":"        this.sections.add(s);","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"nicholasnge"},"content":"     * Closes the application.","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"nicholasnge"},"content":"    private void handleExit() {","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"nicholasnge"},"content":"        this.hide();","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"nicholasnge"},"content":"     * Closes the application.","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"nicholasnge"},"content":"    private void handleReturn() throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":184,"author":{"gitId":"nicholasnge"},"content":"        // if both title and body fields are empty, we just ignore that section and","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"nicholasnge"},"content":"        // don\u0027t include it in the MedicalRecord","lastModifiedDate":"2021-04-01"},{"lineNumber":186,"author":{"gitId":"nicholasnge"},"content":"        List\u003cSection\u003e filteredSections \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"nicholasnge"},"content":"        for (int i \u003d 0; i \u003c this.sections.size(); i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"nicholasnge"},"content":"            Section section \u003d this.sections.get(i);","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"nicholasnge"},"content":"            if (section.getBody().length() !\u003d 0 || section.getTitle().length() !\u003d 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"nicholasnge"},"content":"                filteredSections.add(section);","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"nicholasnge"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":194,"author":{"gitId":"nicholasnge"},"content":"        MedicalRecord newMrec \u003d new MedicalRecord(this.mrec.getDate(), filteredSections);","lastModifiedDate":"2021-04-01"},{"lineNumber":195,"author":{"gitId":"nicholasnge"},"content":"        SaveMedicalRecordCommand saveCommand \u003d new SaveMedicalRecordCommand(this.patient, newMrec);","lastModifiedDate":"2021-04-01"},{"lineNumber":196,"author":{"gitId":"nicholasnge"},"content":"        this.commandExecutor.execute(saveCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":197,"author":{"gitId":"nicholasnge"},"content":"        this.hide();","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"nicholasnge"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2021-04-01"},{"lineNumber":202,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":203,"author":{"gitId":"nicholasnge"},"content":"    @FunctionalInterface","lastModifiedDate":"2021-04-01"},{"lineNumber":204,"author":{"gitId":"nicholasnge"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2021-04-01"},{"lineNumber":205,"author":{"gitId":"nicholasnge"},"content":"        /**","lastModifiedDate":"2021-04-01"},{"lineNumber":206,"author":{"gitId":"nicholasnge"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2021-04-01"},{"lineNumber":207,"author":{"gitId":"nicholasnge"},"content":"         *","lastModifiedDate":"2021-04-01"},{"lineNumber":208,"author":{"gitId":"nicholasnge"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2021-04-01"},{"lineNumber":209,"author":{"gitId":"nicholasnge"},"content":"         */","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"nicholasnge"},"content":"        CommandResult execute(Command command) throws CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":211,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":212,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"nicholasnge":212}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.medical.AddAppointmentCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.medical.ListAppointmentsCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.medical.OpenMedicalRecordCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"import seedu.address.logic.commands.medical.ViewPatientCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    public static final String USERGUIDE_URL \u003d \"https://github.com/AY2021S2-CS2103T-W12-1/\"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"                                                + \"tp/blob/master/docs/UserGuide.md\";","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the full user guide here: \" + USERGUIDE_URL + \"\\n\";","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    public static final String COMMANDGUIDE_MESSAGE \u003d AddCommand.MESSAGE_USAGE + \"\\n\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"                                                        + \"\\n\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"                                                        + \"\\n\\n\" + AddAppointmentCommand.MESSAGE_USAGE","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"                                                        + \"\\n\\n\" + ListAppointmentsCommand.MESSAGE_USAGE","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"                                                        + \"\\n\\n\" + OpenMedicalRecordCommand.MESSAGE_USAGE","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"                                                        + \"\\n\\n\" + ViewPatientCommand.MESSAGE_USAGE","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"                                                        + \"\\n\\n\" + HelpCommand.MESSAGE_USAGE + \"\\n\\n\";","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"        helpMessage.setText(HELP_MESSAGE + \"\\n\" + COMMANDGUIDE_MESSAGE);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BigDoot":19,"-":99}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"import seedu.address.model.medical.Appointment;","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.MedicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"    private List\u003cEditorWindow\u003e editorWindows;","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"    private ViewPatientBox viewPatientBox;","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"    private StackPane viewPatientBoxPlaceholder;","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"nicholasnge"},"content":"        editorWindows \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"nicholasnge"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeTextCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"nicholasnge"},"content":"        ViewPatientBox viewPatientBox \u003d new ViewPatientBox();","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"nicholasnge"},"content":"        viewPatientBoxPlaceholder.getChildren().add(viewPatientBox.getRoot());","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"BigDoot"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"BigDoot"},"content":"     * Displays the patientViewBox which contains information about patient","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"BigDoot"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"BigDoot"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"nicholasnge"},"content":"    public void handlePatientViewBox(Patient p) {","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"BigDoot"},"content":"        ViewPatientBox viewPatientBox \u003d new ViewPatientBox(p);","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"BigDoot"},"content":"        viewPatientBoxPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"BigDoot"},"content":"        viewPatientBoxPlaceholder.getChildren().add(viewPatientBox.getRoot());","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"BigDoot"},"content":"    /**","lastModifiedDate":"2021-04-03"},{"lineNumber":177,"author":{"gitId":"BigDoot"},"content":"     * Updates the patientViewBox to show a list of appointments","lastModifiedDate":"2021-04-03"},{"lineNumber":178,"author":{"gitId":"BigDoot"},"content":"     */","lastModifiedDate":"2021-04-03"},{"lineNumber":179,"author":{"gitId":"BigDoot"},"content":"    @FXML","lastModifiedDate":"2021-04-03"},{"lineNumber":180,"author":{"gitId":"BigDoot"},"content":"    public void handleAppointmentsList(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-04-03"},{"lineNumber":181,"author":{"gitId":"BigDoot"},"content":"        ViewPatientBox viewPatientBox \u003d new ViewPatientBox();","lastModifiedDate":"2021-04-03"},{"lineNumber":182,"author":{"gitId":"BigDoot"},"content":"        String allAppointments \u003d String.format(\"You have %d upcoming appointments: \\n\\n\", appointments.size());","lastModifiedDate":"2021-04-03"},{"lineNumber":183,"author":{"gitId":"BigDoot"},"content":"        for (Appointment appt : appointments) {","lastModifiedDate":"2021-04-03"},{"lineNumber":184,"author":{"gitId":"BigDoot"},"content":"            allAppointments +\u003d appt + \"\\n\";","lastModifiedDate":"2021-04-03"},{"lineNumber":185,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":186,"author":{"gitId":"BigDoot"},"content":"        viewPatientBox.setText(allAppointments);","lastModifiedDate":"2021-04-03"},{"lineNumber":187,"author":{"gitId":"BigDoot"},"content":"        viewPatientBoxPlaceholder.getChildren().clear();","lastModifiedDate":"2021-04-03"},{"lineNumber":188,"author":{"gitId":"BigDoot"},"content":"        viewPatientBoxPlaceholder.getChildren().add(viewPatientBox.getRoot());","lastModifiedDate":"2021-04-03"},{"lineNumber":189,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":190,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"nicholasnge"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"nicholasnge"},"content":"    public void handleEdit(Patient patient, MedicalRecord medicalRecord) {","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"nicholasnge"},"content":"        EditorWindow editorWindow \u003d new EditorWindow(this::executeCommand, patient, medicalRecord);","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"nicholasnge"},"content":"        editorWindows.add(editorWindow);","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"nicholasnge"},"content":"        if (!editorWindow.isShowing()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"nicholasnge"},"content":"            editorWindow.show();","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"nicholasnge"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"nicholasnge"},"content":"            editorWindow.focus();","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"nicholasnge"},"content":"    private CommandResult executeTextCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":231,"author":{"gitId":"nicholasnge"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":233,"author":{"gitId":"nicholasnge"},"content":"            commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2021-04-01"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2021-04-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-04-01"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2021-04-01"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":239,"author":{"gitId":"nicholasnge"},"content":"        processResult(commandResult);","lastModifiedDate":"2021-04-01"},{"lineNumber":240,"author":{"gitId":"nicholasnge"},"content":"        return commandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":241,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":242,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":243,"author":{"gitId":"nicholasnge"},"content":"    private CommandResult executeCommand(Command command) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":244,"author":{"gitId":"nicholasnge"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"nicholasnge"},"content":"            commandResult \u003d logic.execute(command);","lastModifiedDate":"2021-04-01"},{"lineNumber":247,"author":{"gitId":"nicholasnge"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":248,"author":{"gitId":"nicholasnge"},"content":"            logger.info(\"Invalid command: \" + command.toString());","lastModifiedDate":"2021-04-01"},{"lineNumber":249,"author":{"gitId":"nicholasnge"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-04-01"},{"lineNumber":250,"author":{"gitId":"nicholasnge"},"content":"            throw e;","lastModifiedDate":"2021-04-01"},{"lineNumber":251,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":252,"author":{"gitId":"nicholasnge"},"content":"        processResult(commandResult);","lastModifiedDate":"2021-04-01"},{"lineNumber":253,"author":{"gitId":"nicholasnge"},"content":"        return commandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":254,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":255,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":256,"author":{"gitId":"nicholasnge"},"content":"    private void processResult(CommandResult commandResult) {","lastModifiedDate":"2021-04-01"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"nicholasnge"},"content":"        if (commandResult.isShowEdit()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"nicholasnge"},"content":"            handleEdit(commandResult.getPatient(), commandResult.getMedicalRecord());","lastModifiedDate":"2021-04-01"},{"lineNumber":265,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"BigDoot"},"content":"        if (commandResult.isShowViewBox()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":268,"author":{"gitId":"BigDoot"},"content":"            handlePatientViewBox(commandResult.getPatient());","lastModifiedDate":"2021-03-26"},{"lineNumber":269,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":270,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":271,"author":{"gitId":"BigDoot"},"content":"        if (commandResult.showAppointments()) {","lastModifiedDate":"2021-04-03"},{"lineNumber":272,"author":{"gitId":"BigDoot"},"content":"            handleAppointmentsList(commandResult.getAppointments());","lastModifiedDate":"2021-04-03"},{"lineNumber":273,"author":{"gitId":"BigDoot"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":274,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BigDoot":34,"nicholasnge":54,"-":191}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.Appointment;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    public final Patient patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"    private FlowPane appointments;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"    public PersonCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"        patient.getTags().stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"        patient.getAppointments().stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"                .min(Comparator.comparing(Appointment::getDate))","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"                .ifPresent(appt -\u003e appointments.getChildren().add(new Label(appt.getDateDisplay())));","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 patient.equals(card.patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nicholasnge":13,"-":61}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    private ListView\u003cPatient\u003e personListView;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    public PersonListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"        personListView.setItems(patientList);","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    class PersonListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"                setGraphic(new PersonCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nicholasnge":9,"-":40}},{"path":"src/main/java/seedu/address/ui/SectionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.Section;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"public class SectionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"    private static final String FXML \u003d \"SectionListCard.fxml\";","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    public final Section section;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"    private TextField sectionTitle;","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"    private TextArea sectionBody;","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"    public SectionCard(Section newSection, boolean editable) {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        super(FXML);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"        this.section \u003d newSection;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        sectionTitle.textProperty().addListener(new ChangeListener\u003cString\u003e() {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"            @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"            public void changed(final ObservableValue\u003c? extends String\u003e observable,","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"                                final String oldValue, final String newValue) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"                section.setTitle(newValue);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"        });","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"        sectionBody.textProperty().addListener(new ChangeListener\u003cString\u003e() {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"            @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"            public void changed(final ObservableValue\u003c? extends String\u003e observable,","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"                                final String oldValue, final String newValue) {","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"                int amtContent \u003d newValue.length() / 80;","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"                int numLines \u003d newValue.length()","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"                        - newValue.replace(\"\\n\", \"\").length();","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"                sectionBody.setPrefRowCount(numLines + amtContent + 1);","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"                section.setBody(newValue);","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"        });","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"        sectionTitle.setText(newSection.getTitle());","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        sectionBody.setText(newSection.getBody());","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        if (!editable) {","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"            sectionTitle.setEditable(false);","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"            sectionBody.setEditable(false);","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"        // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"            return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"        if (!(other instanceof SectionCard)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"            return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"nicholasnge"},"content":"        // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"nicholasnge"},"content":"        SectionCard card \u003d (SectionCard) other;","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"nicholasnge"},"content":"        return sectionTitle.getText().equals(card.sectionTitle.getText())","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"nicholasnge"},"content":"                \u0026\u0026 sectionBody.getText().equals(card.sectionBody.getText());","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"nicholasnge":82}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/bob_builder_32.png\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BigDoot":1,"-":88}},{"path":"src/main/java/seedu/address/ui/ViewPatientBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-04-03"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.medical.MedicalRecord;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"public class ViewPatientBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    public static final String STARTUP_MESSAGE \u003d \"Hello Doc, to view patient info: \\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"            + \"try \u0027view INDEX\u0027\";","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    private static final String FXML \u003d \"ViewPatientBox.fxml\";","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"    public final Patient patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"    // labels","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"    private Label phoneLabel;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"    private Label addressLabel;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"    private Label emailLabel;","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    private Label heightLabel;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"    private Label weightLabel;","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"    private Label appointmentInfo;","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"    private Label medicalRecordInfo;","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"    private Label appointmentLabel;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"    private Label medicalRecordLabel;","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"    // field values","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"    private Text name;","lastModifiedDate":"2021-04-03"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"    private Label phone;","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"    private Label address;","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"    private Label email;","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"    private Label height;","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"    @FXML","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"    private Label weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"    @FXML","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"    private FlowPane ptags;","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"    private FlowPane patientBoxAppointments;","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"    private FlowPane patientBoxMedicalRecords;","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"    public ViewPatientBox(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"        super(FXML);","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"nicholasnge"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"nicholasnge"},"content":"        setLabels();","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"nicholasnge"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"nicholasnge"},"content":"        phone.setText(patient.getPhone().value);","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"nicholasnge"},"content":"        address.setText(patient.getAddress().value);","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"nicholasnge"},"content":"        email.setText(patient.getEmail().value);","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"nicholasnge"},"content":"        height.setText(patient.getHeight().value);","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"nicholasnge"},"content":"        weight.setText(patient.getWeight().value);","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"nicholasnge"},"content":"        // tags","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"nicholasnge"},"content":"        patient.getTags().stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"nicholasnge"},"content":"                .forEach(tag -\u003e ptags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"nicholasnge"},"content":"        // appointments","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"nicholasnge"},"content":"        patient.getAppointments().stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":"                .sorted(Comparator.comparing(appt -\u003e appt.getDate()))","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"nicholasnge"},"content":"                .forEach(appt -\u003e patientBoxAppointments.getChildren().add(new Label(appt.getDateDisplay())));","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"nicholasnge"},"content":"        if (patientBoxAppointments.getChildren().size() \u003d\u003d 1) {","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"nicholasnge"},"content":"            appointmentInfo.setText(String.format(\"1 scheduled appointment with %s:\", patient.getName().fullName));","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"        } else if (patientBoxAppointments.getChildren().size() !\u003d 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"nicholasnge"},"content":"            appointmentInfo.setText(String.format(\"%d scheduled appointments with %s:\",","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"nicholasnge"},"content":"                    patientBoxAppointments.getChildren().size(), patient.getName().fullName));","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"nicholasnge"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"nicholasnge"},"content":"            appointmentInfo.setText(String.format(\"No scheduled appointments with %s.\", patient.getName().fullName));","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"nicholasnge"},"content":"        // medical records","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"nicholasnge"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"nicholasnge"},"content":"        for (MedicalRecord mrec : patient.getRecords()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"nicholasnge"},"content":"            patientBoxMedicalRecords.getChildren().add(new Label(index + \". \" + mrec.getDateNoTime()));","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"nicholasnge"},"content":"            index++;","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"nicholasnge"},"content":"        if (patientBoxMedicalRecords.getChildren().size() \u003d\u003d 1) {","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"nicholasnge"},"content":"            medicalRecordInfo.setText(\"1 medical record found:\");","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"nicholasnge"},"content":"        } else if (patientBoxMedicalRecords.getChildren().size() !\u003d 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"nicholasnge"},"content":"            medicalRecordInfo.setText(String.format(\"%d medical record(s) found:\",","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"nicholasnge"},"content":"                    patientBoxMedicalRecords.getChildren().size()));","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"nicholasnge"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"nicholasnge"},"content":"            medicalRecordInfo.setText(\"No medical records found.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"nicholasnge"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"nicholasnge"},"content":"     * Constructor for when the program just initializes","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"nicholasnge"},"content":"    public ViewPatientBox() {","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"nicholasnge"},"content":"        super(FXML);","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"nicholasnge"},"content":"        this.patient \u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"BigDoot"},"content":"        name.setText(STARTUP_MESSAGE);","lastModifiedDate":"2021-04-03"},{"lineNumber":127,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"BigDoot"},"content":"    public void setText(String s) {","lastModifiedDate":"2021-04-03"},{"lineNumber":130,"author":{"gitId":"BigDoot"},"content":"        this.name.setText(s);","lastModifiedDate":"2021-04-03"},{"lineNumber":131,"author":{"gitId":"BigDoot"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":132,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":133,"author":{"gitId":"nicholasnge"},"content":"    private void setLabels() {","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"nicholasnge"},"content":"        phoneLabel.setText(\"Phone: \");","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"nicholasnge"},"content":"        addressLabel.setText(\"Address: \");","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"nicholasnge"},"content":"        emailLabel.setText(\"Email: \");","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"nicholasnge"},"content":"        heightLabel.setText(\"Height: \");","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"nicholasnge"},"content":"        weightLabel.setText(\"Weight: \");","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"nicholasnge"},"content":"        appointmentLabel.setText(\"Appointments\");","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"nicholasnge"},"content":"        medicalRecordLabel.setText(\"Medical Records\");","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"nicholasnge"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"nicholasnge"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"nicholasnge"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"nicholasnge"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"nicholasnge"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"nicholasnge"},"content":"                .map(Tag::new)","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"nicholasnge"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"nicholasnge"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"BigDoot":12,"nicholasnge":135,"vivegank":4}},{"path":"src/main/resources/UML/ViewPatientCommand.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"autonumber","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"-\u003e MainWindow ++ : executeCommand(\"view 1\")","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"MainWindow -\u003e LogicManager ++: execute(\"view 1\")","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"LogicManager -\u003e AddressBookParser ++: parseCommand(\"view 1\")","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"AddressBookParser -\u003e ViewPatientCommandParser**","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"AddressBookParser \u003c-- ViewPatientCommandParser--","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"AddressBookParser -\u003e ViewPatientCommand**","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"AddressBookParser \u003c-- ViewPatientCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"BigDoot":15}},{"path":"src/main/resources/credentials.json","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"{\"installed\":{\"client_id\":\"186790329373-iscruru802cr782rnmun7s2i1hln8bac.apps.googleusercontent.com\",\"project_id\":\"quickstart2103-1615307438241\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_secret\":\"Qn1GiIfBnUdMAKTAC-fah0y1\",\"redirect_uris\":[\"urn:ietf:wg:oauth:2.0:oob\",\"http://localhost\"]}}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"nicholasnge":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"nicholasnge"},"content":".patient_box_huge_label {","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"nicholasnge"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"nicholasnge"},"content":"    -fx-padding: 0 0 5 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"nicholasnge"},"content":".patient_box_label {","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"nicholasnge"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"nicholasnge"},"content":".patient_box_label_field {","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"nicholasnge"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"nicholasnge"},"content":"#textField, #sectionBody {","lastModifiedDate":"2021-04-01"},{"lineNumber":351,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-03-17"},{"lineNumber":352,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":353,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2021-03-17"},{"lineNumber":354,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":355,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":356,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-17"},{"lineNumber":357,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-04-01"},{"lineNumber":358,"author":{"gitId":"nicholasnge"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-04-01"},{"lineNumber":359,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":360,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":361,"author":{"gitId":"nicholasnge"},"content":"#textField, #sectionBody .content{","lastModifiedDate":"2021-04-01"},{"lineNumber":362,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-04-01"},{"lineNumber":363,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":364,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2021-04-01"},{"lineNumber":365,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":366,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-04-01"},{"lineNumber":367,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":368,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":369,"author":{"gitId":"nicholasnge"},"content":"#sectionTitle {","lastModifiedDate":"2021-04-01"},{"lineNumber":370,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-04-01"},{"lineNumber":371,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":372,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-color: #383838 #383838 #FFFFFF #383838;","lastModifiedDate":"2021-04-01"},{"lineNumber":373,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":374,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-04-01"},{"lineNumber":375,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-04-01"},{"lineNumber":376,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-04-01"},{"lineNumber":377,"author":{"gitId":"nicholasnge"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":378,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":379,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":380,"author":{"gitId":"nicholasnge"},"content":"#sectionTitle .content{","lastModifiedDate":"2021-04-01"},{"lineNumber":381,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-03-17"},{"lineNumber":382,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":383,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2021-03-17"},{"lineNumber":384,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":385,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":386,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":387,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":388,"author":{"gitId":"nicholasnge"},"content":"#filterField, #personListPanel, #personWebpage, #sectionListPanel {","lastModifiedDate":"2021-04-01"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":390,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":395,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":400,"author":{"gitId":"nicholasnge"},"content":"    -fx-padding: 3 0 0 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":401,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":410,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":411,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":412,"author":{"gitId":"nicholasnge"},"content":"#ptags {","lastModifiedDate":"2021-04-01"},{"lineNumber":413,"author":{"gitId":"nicholasnge"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-17"},{"lineNumber":414,"author":{"gitId":"nicholasnge"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":415,"author":{"gitId":"nicholasnge"},"content":"    -fx-padding: 5 0 10 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":416,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":417,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":418,"author":{"gitId":"nicholasnge"},"content":"#ptags .label {","lastModifiedDate":"2021-04-01"},{"lineNumber":419,"author":{"gitId":"nicholasnge"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":420,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-04-01"},{"lineNumber":421,"author":{"gitId":"nicholasnge"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":422,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-17"},{"lineNumber":423,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-17"},{"lineNumber":424,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2021-04-01"},{"lineNumber":425,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":426,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":427,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":428,"author":{"gitId":"nicholasnge"},"content":"#appointments {","lastModifiedDate":"2021-04-01"},{"lineNumber":429,"author":{"gitId":"nicholasnge"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-04-01"},{"lineNumber":430,"author":{"gitId":"nicholasnge"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-04-01"},{"lineNumber":431,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":432,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":433,"author":{"gitId":"nicholasnge"},"content":"#appointments .label {","lastModifiedDate":"2021-04-01"},{"lineNumber":434,"author":{"gitId":"nicholasnge"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-04-01"},{"lineNumber":435,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-color: #238a11;","lastModifiedDate":"2021-04-01"},{"lineNumber":436,"author":{"gitId":"nicholasnge"},"content":"    -fx-padding: 3 6 3 6;","lastModifiedDate":"2021-04-01"},{"lineNumber":437,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-radius: 10 0 0 10;","lastModifiedDate":"2021-04-01"},{"lineNumber":438,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-radius: 10 0 0 10;","lastModifiedDate":"2021-04-01"},{"lineNumber":439,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-04-01"},{"lineNumber":440,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":441,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":442,"author":{"gitId":"nicholasnge"},"content":"#patientBoxAppointments {","lastModifiedDate":"2021-04-01"},{"lineNumber":443,"author":{"gitId":"nicholasnge"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-04-01"},{"lineNumber":444,"author":{"gitId":"nicholasnge"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-04-01"},{"lineNumber":445,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":446,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":447,"author":{"gitId":"nicholasnge"},"content":"#patientBoxAppointments .label {","lastModifiedDate":"2021-04-01"},{"lineNumber":448,"author":{"gitId":"nicholasnge"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-04-01"},{"lineNumber":449,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-color: #238a11;","lastModifiedDate":"2021-04-01"},{"lineNumber":450,"author":{"gitId":"nicholasnge"},"content":"    -fx-padding: 3 6 3 6;","lastModifiedDate":"2021-04-01"},{"lineNumber":451,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2021-04-01"},{"lineNumber":452,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-04-01"},{"lineNumber":453,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-04-01"},{"lineNumber":454,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":455,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":456,"author":{"gitId":"nicholasnge"},"content":"#patientBoxMedicalRecords {","lastModifiedDate":"2021-04-01"},{"lineNumber":457,"author":{"gitId":"nicholasnge"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-04-01"},{"lineNumber":458,"author":{"gitId":"nicholasnge"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-04-01"},{"lineNumber":459,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":460,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":461,"author":{"gitId":"nicholasnge"},"content":"#patientBoxMedicalRecords .label {","lastModifiedDate":"2021-04-01"},{"lineNumber":462,"author":{"gitId":"nicholasnge"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-04-01"},{"lineNumber":463,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-color: #555555;","lastModifiedDate":"2021-04-01"},{"lineNumber":464,"author":{"gitId":"nicholasnge"},"content":"    -fx-padding: 3 6 3 6;","lastModifiedDate":"2021-04-01"},{"lineNumber":465,"author":{"gitId":"nicholasnge"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2021-04-01"},{"lineNumber":466,"author":{"gitId":"nicholasnge"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-04-01"},{"lineNumber":467,"author":{"gitId":"nicholasnge"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-04-01"},{"lineNumber":468,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":469,"author":{"gitId":"nicholasnge"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"nicholasnge":118,"-":351}},{"path":"src/main/resources/view/EditorWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"         title\u003d\"New Medical Record\" minWidth\u003d\"550\" minHeight\u003d\"750\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"        \u003cImage url\u003d\"@/images/bob_builder_32.png\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"                \u003cVBox VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"                    \u003cStackPane fx:id\u003d\"sectionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"                        \u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"                            \u003cListView fx:id\u003d\"sectionListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"                \u003cSplitPane styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"                           HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"                    \u003cButton fx:id\u003d\"returnButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleReturn\" text\u003d\"Save Record\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"                    \u003cButton fx:id\u003d\"newSectionButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleNewSection\"","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"                            text\u003d\"New Section\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"nicholasnge":61}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"         title\u003d\"DocBob\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        \u003cImage url\u003d\"@/images/bob_builder_32.png\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"                \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\" minWidth\u003d\"340\" prefWidth\u003d\"340\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"                    \u003cVBox fx:id\u003d\"patientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"170\" prefWidth\u003d\"170\"","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"                          VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"                            \u003cInsets top\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"                    \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"viewPatientBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"                            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"BigDoot":2,"nicholasnge":11,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"55\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                    \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"30\" maxWidth\u003d\"30\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"            \u003cFlowPane fx:id\u003d\"appointments\" alignment\u003d\"CENTER_RIGHT\"/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicholasnge":11,"-":30}},{"path":"src/main/resources/view/SectionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"\u003cVBox VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"        \u003cTextField styleClass\u003d\"stack-pane\" fx:id\u003d\"sectionTitle\"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"                     promptText\u003d\"New Section\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"        \u003cTextArea prefWidth\u003d\"150\" prefRowCount\u003d\"1\" wrapText\u003d\"true\" fx:id\u003d\"sectionBody\"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"                     promptText\u003d\"Enter text here...\"/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"nicholasnge":17}},{"path":"src/main/resources/view/SectionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"    \u003cListView fx:id\u003d\"sectionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"nicholasnge":8}},{"path":"src/main/resources/view/ViewPatientBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"\u003cVBox id\u003d\"viewPatientBox\" fx:id\u003d\"viewPatientBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"    \u003cSplitPane\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"            \u003cText fx:id\u003d\"name\" fill\u003d\"WHITE\" styleClass\u003d\"patient_box_huge_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"            \u003cFlowPane fx:id\u003d\"ptags\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"            \u003cHBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"                \u003cVBox maxWidth\u003d\"80\" minWidth\u003d\"80\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"phoneLabel\" styleClass\u003d\"patient_box_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"addressLabel\" styleClass\u003d\"patient_box_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"emailLabel\" styleClass\u003d\"patient_box_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"heightLabel\" styleClass\u003d\"patient_box_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"weightLabel\" styleClass\u003d\"patient_box_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"patient_box_label_field\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"patient_box_label_field\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"patient_box_label_field\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"height\" styleClass\u003d\"patient_box_label_field\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"weight\" styleClass\u003d\"patient_box_label_field\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"            \u003cLabel styleClass\u003d\"patient_box_label_field\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"            \u003cSplitPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"appointmentLabel\" styleClass\u003d\"patient_box_huge_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"appointmentInfo\" styleClass\u003d\"patient_box_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"            \u003cFlowPane fx:id\u003d\"patientBoxAppointments\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"            \u003cLabel styleClass\u003d\"patient_box_label_field\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"            \u003cSplitPane\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"medicalRecordLabel\" styleClass\u003d\"patient_box_huge_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"                    \u003cLabel fx:id\u003d\"medicalRecordInfo\" styleClass\u003d\"patient_box_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"            \u003cFlowPane fx:id\u003d\"patientBoxMedicalRecords\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"    \u003c/SplitPane\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"BigDoot":13,"nicholasnge":41}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    \"height\": \"169cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"69kg\"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    \"height\": \"169cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"69kg\"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":11,"vivegank":6}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    \"height\": \"169cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"69kg\"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":7,"vivegank":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    \"height\": \"169cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"69kg\",","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    \"height\": \"173cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"55kg\"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":13,"vivegank":5}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    \"height\": \"169cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"69kg\"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":7,"vivegank":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"    \"height\": \"169cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"69kg\",","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    \"height\": \"162cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"64kg\",","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    \"height\": \"182cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"72kg\",","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    \"height\": \"168cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"76kg\",","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"    \"height\": \"175cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"65kg\",","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"    \"height\": \"160cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"55kg\",","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"    \"height\": \"182cm\",","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"    \"weight\": \"59kg\",","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":46,"vivegank":14}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"  \"addressBookFilePath\" : \"docBob.json\"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BigDoot":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"  \"addressBookFilePath\" : \"docBob.json\"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BigDoot":1,"-":10}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"        assertNotNull(AppUtil.getImage(\"/images/bob_builder_32.png\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"BigDoot":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"docBob.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"                + ADDRESS_DESC_AMY + HEIGHT_DESC_AMY + WEIGHT_DESC_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"nicholasnge"},"content":"        Patient expectedPatient \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"        expectedModel.addPerson(expectedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"BigDoot":1,"nicholasnge":3,"-":157,"vivegank":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"        Patient validPatient \u003d new PersonBuilder().build();","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"        expectedModel.addPerson(validPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"        assertCommandSuccess(new AddCommand(validPatient), model,","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPatient), expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        Patient patientInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"        assertCommandFailure(new AddCommand(patientInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"nicholasnge":7,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        Patient validPatient \u003d new PersonBuilder().build();","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        CommandResult commandResult \u003d new AddCommand(validPatient).execute(modelStub);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPatient), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.personsAdded);","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        Patient validPatient \u003d new PersonBuilder().build();","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"        AddCommand addCommand \u003d new AddCommand(validPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"        Patient alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"        Patient bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"nicholasnge"},"content":"        public void addPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"nicholasnge"},"content":"        public void archivePerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"nicholasnge"},"content":"        public void unarchivePerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"nicholasnge"},"content":"        public boolean hasPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"nicholasnge"},"content":"        public void deletePerson(Patient target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"nicholasnge"},"content":"        public void setPerson(Patient target, Patient editedPatient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"nicholasnge"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPersonList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"nicholasnge"},"content":"        public void updateFilteredPersonList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"nicholasnge"},"content":"        public void sortFilteredPersonList(Comparator\u003cPatient\u003e comparator) {","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"nicholasnge"},"content":"        public void selectPatient(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"nicholasnge"},"content":"        public Patient getSelectedPatient() {","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"nicholasnge"},"content":"        private final Patient patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"nicholasnge"},"content":"        ModelStubWithPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"nicholasnge"},"content":"            requireNonNull(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":186,"author":{"gitId":"nicholasnge"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"nicholasnge"},"content":"        public boolean hasPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"nicholasnge"},"content":"            requireNonNull(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"nicholasnge"},"content":"            return this.patient.isSamePerson(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"nicholasnge"},"content":"        final ArrayList\u003cPatient\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"nicholasnge"},"content":"        public boolean hasPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":204,"author":{"gitId":"nicholasnge"},"content":"            requireNonNull(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":205,"author":{"gitId":"nicholasnge"},"content":"            return personsAdded.stream().anyMatch(patient::isSamePerson);","lastModifiedDate":"2021-04-01"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"nicholasnge"},"content":"        public void addPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"nicholasnge"},"content":"            requireNonNull(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":211,"author":{"gitId":"nicholasnge"},"content":"            personsAdded.add(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"nicholasnge":36,"-":179,"vivegank":5}},{"path":"src/test/java/seedu/address/logic/commands/ArchiveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"class ArchiveCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    private Model model;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"        Patient newBenson \u003d new PersonBuilder(BENSON).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"        Patient newFiona \u003d new PersonBuilder(FIONA).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        model.addPerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        model.addPerson(newBenson);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"        model.addPerson(newFiona);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"        patientInFilteredList.setArchived(false);","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"        Patient copy \u003d new PersonBuilder(patientInFilteredList).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(ArchiveCommand.MESSAGE_ARCHIVE_PERSON_SUCCESS, patientInFilteredList);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"        expectedModel.archivePerson(copy);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"        assertCommandSuccess(archiveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"        Patient patientToArchive \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"        patientToArchive.setArchived(false);","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"        Patient copy \u003d new PersonBuilder(patientToArchive).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(ArchiveCommand.MESSAGE_ARCHIVE_PERSON_SUCCESS, patientToArchive);","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"        expectedModel.archivePerson(copy);","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"        assertCommandSuccess(archiveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"    public void execute_archivingArchivedPerson_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"        model.archivePerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"        assertCommandFailure(archiveCommand, model, ArchiveCommand.MESSAGE_ALREADY_ARCHIVED_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"    public void equals() {","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"        ArchiveCommand archiveFirstCommand \u003d new ArchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"        ArchiveCommand archiveSecondCommand \u003d new ArchiveCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"        assertTrue(archiveFirstCommand.equals(archiveFirstCommand));","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"        ArchiveCommand archiveFirstCommandCopy \u003d new ArchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"        assertTrue(archiveFirstCommand.equals(archiveFirstCommandCopy));","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"        assertFalse(archiveFirstCommand.equals(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"        assertFalse(archiveFirstCommand.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"        assertFalse(archiveFirstCommand.equals(archiveSecondCommand));","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"nicholasnge":13,"vivegank":116}},{"path":"src/test/java/seedu/address/logic/commands/ArchiveListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ARCHIVED_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"class ArchiveListCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    private Model model;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"        Patient newBenson \u003d new PersonBuilder(BENSON).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"        Patient newFiona \u003d new PersonBuilder(FIONA).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        model.addPerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        model.addPerson(newBenson);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"        model.addPerson(newFiona);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        model.archivePerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        model.archivePerson(newBenson);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ARCHIVED_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"    public void execute_archiveListIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        assertCommandSuccess(new ArchiveListCommand(), model, ArchiveListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"    public void execute_archiveListIsFiltered_showsEverything() {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        assertCommandSuccess(new ArchiveListCommand(), model, ArchiveListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"nicholasnge":6,"vivegank":46}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"    public static final String VALID_HEIGHT_AMY \u003d \"172cm\";","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"    public static final String VALID_HEIGHT_BOB \u003d \"180cm\";","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"    public static final String VALID_WEIGHT_AMY \u003d \"58kg\";","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"    public static final String VALID_WEIGHT_BOB \u003d \"65kg\";","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"    public static final String HEIGHT_DESC_AMY \u003d \" \" + PREFIX_HEIGHT + VALID_HEIGHT_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"    public static final String HEIGHT_DESC_BOB \u003d \" \" + PREFIX_HEIGHT + VALID_HEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"    public static final String WEIGHT_DESC_AMY \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"    public static final String WEIGHT_DESC_BOB \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"    public static final String INVALID_HEIGHT_DESC \u003d \" \" + PREFIX_HEIGHT + \"1690mm\"; // \u0027cm\u0027 must follow height","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"    public static final String INVALID_WEIGHT_DESC \u003d \" \" + PREFIX_WEIGHT + \"1800g\"; // \u0027kg\u0027 must follow weight","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"                .withHeight(VALID_HEIGHT_AMY).withWeight(VALID_WEIGHT_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"                .withHeight(VALID_HEIGHT_BOB).withWeight(VALID_WEIGHT_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"nicholasnge"},"content":"            assertEquals(expectedCommandResult.getFeedbackToUser(), result.getFeedbackToUser());","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"nicholasnge"},"content":"        Patient patient \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"nicholasnge"},"content":"        final String[] splitName \u003d patient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"nicholasnge":5,"-":123,"vivegank":14}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"        Patient patientToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, patientToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        expectedModel.deletePerson(patientToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"        Patient patientToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, patientToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"        expectedModel.deletePerson(patientToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"nicholasnge":7,"-":102}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"        Patient editedPatient \u003d new PersonBuilder().build();","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"        Patient lastPatient \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        Patient editedPatient \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"        expectedModel.setPerson(lastPatient, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"        Patient editedPatient \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"nicholasnge"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"nicholasnge"},"content":"        Patient editedPatient \u003d new PersonBuilder(patientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"nicholasnge"},"content":"        Patient firstPatient \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"nicholasnge"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPatient).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"nicholasnge"},"content":"        Patient patientInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"nicholasnge"},"content":"                new EditPersonDescriptorBuilder(patientInList).build());","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"    public void execute_archivedPersonFilteredList_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"        Model newModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"        newModel.addPerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"        newModel.archivePerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"nicholasnge"},"content":"        Patient patientInList \u003d newModel.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"nicholasnge"},"content":"                new EditPersonDescriptorBuilder(patientInList).build());","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"vivegank"},"content":"        assertCommandFailure(editCommand, newModel, EditCommand.MESSAGE_ARCHIVED_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"nicholasnge":23,"-":153,"vivegank":11}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"        // different height -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_HEIGHT_BOB).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"        // different weight -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"nicholasnge":1,"-":57,"vivegank":10}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ARCHIVED_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"    public void execute_keywordsForArchivedPersons_onlyArchivedPersonsFound() {","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"        Model newModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"nicholasnge"},"content":"        Patient newBenson \u003d new PersonBuilder(BENSON).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"        Patient newCarl \u003d new PersonBuilder(CARL).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"nicholasnge"},"content":"        Patient newElle \u003d new PersonBuilder(ELLE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"nicholasnge"},"content":"        Patient newFiona \u003d new PersonBuilder(FIONA).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"        newModel.addPerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"        newModel.addPerson(newBenson);","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"        newModel.addPerson(newCarl);","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"        newModel.addPerson(newElle);","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"        newModel.addPerson(newFiona);","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"        newModel.archivePerson(newCarl);","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"        newModel.archivePerson(newElle);","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"        Model newExpectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"        newExpectedModel.addPerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        newExpectedModel.addPerson(newBenson);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"        newExpectedModel.addPerson(newCarl);","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"        newExpectedModel.addPerson(newElle);","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"        newExpectedModel.addPerson(newFiona);","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"        newExpectedModel.archivePerson(newCarl);","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"        newExpectedModel.archivePerson(newElle);","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"nicholasnge"},"content":"        newExpectedModel.updateFilteredPersonList(predicate.and(PREDICATE_SHOW_ARCHIVED_PATIENTS));","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"        assertCommandSuccess(command, newModel, expectedMessage, newExpectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"        assertEquals(Arrays.asList(newCarl, newElle), newModel.getFilteredPersonList());","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"    public void execute_keywordInEmptyList_showsEmptyList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"        expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"        assertEquals(Arrays.asList(), model.getFilteredPersonList());","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"nicholasnge":8,"-":83,"vivegank":42}},{"path":"src/test/java/seedu/address/logic/commands/UnarchiveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"class UnarchiveCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    private Model model;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"        Patient newBenson \u003d new PersonBuilder(BENSON).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"        Patient newFiona \u003d new PersonBuilder(FIONA).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        model.addPerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        model.addPerson(newBenson);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        model.addPerson(newFiona);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        patientInFilteredList.setArchived(true);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"        Patient copy \u003d new PersonBuilder(patientInFilteredList).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        UnarchiveCommand unarchiveCommand \u003d new UnarchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"        String expectedMessage \u003d String.format(UnarchiveCommand.MESSAGE_UNARCHIVE_PERSON_SUCCESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"                patientInFilteredList);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"        expectedModel.unarchivePerson(copy);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"        assertCommandSuccess(unarchiveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"        UnarchiveCommand unarchiveCommand \u003d new UnarchiveCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"        assertCommandFailure(unarchiveCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"        Patient patientToUnarchive \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"nicholasnge"},"content":"        patientToUnarchive.setArchived(true);","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"        Patient copy \u003d new PersonBuilder(patientToUnarchive).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"        UnarchiveCommand unarchiveCommand \u003d new UnarchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(UnarchiveCommand.MESSAGE_UNARCHIVE_PERSON_SUCCESS, patientToUnarchive);","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"        expectedModel.unarchivePerson(copy);","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"        assertCommandSuccess(unarchiveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"        model.archivePerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"        UnarchiveCommand archiveCommand \u003d new UnarchiveCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"    public void execute_unarchiveUnarchivedPerson_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"        UnarchiveCommand unarchiveCommand \u003d new UnarchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"        assertCommandFailure(unarchiveCommand, model, UnarchiveCommand.MESSAGE_PERSON_NOT_ARCHIVED);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"    public void equals() {","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"        UnarchiveCommand unarchiveFirstCommand \u003d new UnarchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"        UnarchiveCommand unarchiveSecondCommand \u003d new UnarchiveCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"        assertTrue(unarchiveFirstCommand.equals(unarchiveFirstCommand));","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"        UnarchiveCommand unarchiveFirstCommandCopy \u003d new UnarchiveCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"        assertTrue(unarchiveFirstCommand.equals(unarchiveFirstCommandCopy));","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"        assertFalse(unarchiveFirstCommand.equals(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"        assertFalse(unarchiveFirstCommand.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"        assertFalse(unarchiveFirstCommand.equals(unarchiveSecondCommand));","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"nicholasnge":13,"vivegank":112}},{"path":"src/test/java/seedu/address/logic/commands/medical/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null, null));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2021, 12, 12, 18, 00);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(outOfBoundIndex, dateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        assertCommandFailure(addAppointmentCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"    /*","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2021, 12, 12, 18, 00);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"        Person personWithAppointment \u003d new PersonBuilder(personInFilteredList).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"        Appointment appointment \u003d new Appointment(dateTime);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"        personWithAppointment.addAppointment(appointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, dateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"        String expectedMessage \u003d String.format(AddAppointmentCommand.MESSAGE_SUCCESS, appointment.getDateDisplay());","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personWithAppointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"        assertCommandSuccess(addAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"    public void execute_addAppointmentToArchivedPerson_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"        Model newModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"        newModel.addPerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"        newModel.archivePerson(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2021, 12, 12, 18, 00);","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, dateTime);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"        assertCommandFailure(addAppointmentCommand, newModel, AddAppointmentCommand.MESSAGE_ARCHIVED_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2021, 12, 12, 18, 00);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"        LocalDateTime otherDateTime \u003d LocalDateTime.of(2021, 11, 11, 18, 00);","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"        final AddAppointmentCommand standardCommand \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, dateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"        LocalDateTime copyDateTime \u003d LocalDateTime.of(2021, 12, 12, 18, 00);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"        AddAppointmentCommand commandWithSameValues \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, copyDateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"        assertFalse(standardCommand.equals(new AddAppointmentCommand(INDEX_SECOND_PERSON, dateTime)));","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        // different dateTime -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"        assertFalse(standardCommand.equals(new AddAppointmentCommand(INDEX_FIRST_PERSON, otherDateTime)));","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"nicholasnge":4,"vivegank":100}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HEIGHT_DESC;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHT_DESC;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        Patient expectedPatient \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"                + ADDRESS_DESC_BOB + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"                + ADDRESS_DESC_BOB + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"                + ADDRESS_DESC_BOB + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"                + ADDRESS_DESC_BOB + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"nicholasnge"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"                + ADDRESS_DESC_BOB + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"nicholasnge"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"        // multiple heights - last height accepted","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_AMY + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"        // multiple weights - last weight accepted","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"                        + HEIGHT_DESC_BOB + WEIGHT_DESC_AMY + WEIGHT_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"nicholasnge"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"nicholasnge"},"content":"        Patient expectedPatientMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"nicholasnge"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPatientMultipleTags));","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"nicholasnge"},"content":"        Patient expectedPatient \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_AMY + WEIGHT_DESC_AMY,","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"nicholasnge"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB,","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB,","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB,","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB,","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"vivegank"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"vivegank"},"content":"        // missing height prefix","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"vivegank"},"content":"                + VALID_HEIGHT_BOB + WEIGHT_DESC_BOB,","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"vivegank"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"vivegank"},"content":"        // missing weight prefix","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + VALID_WEIGHT_BOB,","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"vivegank"},"content":"                + VALID_HEIGHT_BOB + VALID_WEIGHT_BOB,","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"vivegank"},"content":"        //invalid height","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"vivegank"},"content":"                + INVALID_HEIGHT_DESC + WEIGHT_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"vivegank"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"vivegank"},"content":"        //invalid weight","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + INVALID_WEIGHT_DESC","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"vivegank"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":186,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"vivegank"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB,","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"vivegank"},"content":"                + ADDRESS_DESC_BOB + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"nicholasnge":15,"-":123,"vivegank":61}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.ArchiveListCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.UnarchiveCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.medical.AddAppointmentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"        Patient patient \u003d new PersonBuilder().build();","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(patient));","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"        assertEquals(new AddCommand(patient), command);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"    public void parseCommand_addAppointment() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"        AddAppointmentCommand command \u003d (AddAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"                AddAppointmentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" d/121220211430\");","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2021, 12, 12, 14, 30);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"        assertEquals(new AddAppointmentCommand(INDEX_FIRST_PERSON, dateTime), command);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"        Patient patient \u003d new PersonBuilder().build();","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(patient).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"    public void parseCommand_archive() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"        ArchiveCommand command \u003d (ArchiveCommand) parser.parseCommand(","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"                ArchiveCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"        assertEquals(new ArchiveCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"    public void parseCommand_unarchive() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"        UnarchiveCommand command \u003d (UnarchiveCommand) parser.parseCommand(","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"                UnarchiveCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"        assertEquals(new UnarchiveCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"    public void parseCommand_archivelist() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"        assertTrue(parser.parseCommand(ArchiveListCommand.COMMAND_WORD) instanceof ArchiveListCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"        assertTrue(parser.parseCommand(ArchiveListCommand.COMMAND_WORD + \" 3\") instanceof ArchiveListCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"nicholasnge":6,"-":97,"vivegank":31}},{"path":"src/test/java/seedu/address/logic/parser/ArchiveCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"class ArchiveCommandParserTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    private ArchiveCommandParser parser \u003d new ArchiveCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    public void parse_validArgs_returnsArchiveCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"        assertParseSuccess(parser, \"1\", new ArchiveCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ArchiveCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"vivegank":26}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HEIGHT_DESC;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHT_DESC;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"1\" + INVALID_HEIGHT_DESC, Height.MESSAGE_CONSTRAINTS); // invalid height","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"1\" + INVALID_WEIGHT_DESC, Weight.MESSAGE_CONSTRAINTS); // invalid weight","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"                + VALID_PHONE_AMY + VALID_HEIGHT_AMY + VALID_WEIGHT_AMY,","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + HEIGHT_DESC_AMY + WEIGHT_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"                .withHeight(VALID_HEIGHT_AMY).withWeight(VALID_WEIGHT_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"vivegank"},"content":"        //height","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"vivegank"},"content":"        userInput \u003d targetIndex.getOneBased() + HEIGHT_DESC_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"vivegank"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withHeight(VALID_HEIGHT_AMY).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"vivegank"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"vivegank"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"vivegank"},"content":"        //weight","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"vivegank"},"content":"        userInput \u003d targetIndex.getOneBased() + WEIGHT_DESC_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"vivegank"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withWeight(VALID_WEIGHT_AMY).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"vivegank"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"vivegank"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"vivegank"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + WEIGHT_DESC_AMY + HEIGHT_DESC_AMY","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"vivegank"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"vivegank"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withHeight(VALID_HEIGHT_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"vivegank"},"content":"                .withWeight(VALID_WEIGHT_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"vivegank"},"content":"                + PHONE_DESC_BOB + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"vivegank"},"content":"                .withAddress(VALID_ADDRESS_BOB).withHeight(VALID_HEIGHT_BOB).withWeight(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":204,"vivegank":37}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_HEIGHT \u003d \"90kg\";","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_WEIGHT \u003d \"200cm\";","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_SHORT_DATE \u003d \"130521\";","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_DDMMYYYYhhmm_DATE_1 \u003d \"10102021ab14\";","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_DDMMYYYYhhmm_DATE_2 \u003d \"101420212359\";","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_DDMMhhmm_DATE_1 \u003d \"1010ab14\";","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_DDMMhhmm_DATE_2 \u003d \"40102259\";","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_PAST_DATE \u003d \"101020201430\";","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"    private static final String VALID_HEIGHT \u003d \"184cm\";","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"    private static final String VALID_WEIGHT \u003d \"63kg\";","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"    private static final String VALID_DDMMYYYYhhmm_DATE \u003d \"101020211430\";","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"    private static final String VALID_DDMMhhmm_DATE \u003d \"10091630\";","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"vivegank"},"content":"    public void parseHeight_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseHeight((String) null));","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"vivegank"},"content":"    public void parseHeight_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"vivegank"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseHeight(INVALID_HEIGHT));","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"vivegank"},"content":"    public void parseHeight_validValueWithoutWhitespace_returnsHeight() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"vivegank"},"content":"        Height expectedHeight \u003d new Height(VALID_HEIGHT);","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"vivegank"},"content":"        assertEquals(expectedHeight, ParserUtil.parseHeight(VALID_HEIGHT));","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"vivegank"},"content":"    public void parseHeight_validValueWithWhitespace_returnsTrimmedHeight() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"vivegank"},"content":"        String heightWithWhitespace \u003d WHITESPACE + VALID_HEIGHT + WHITESPACE;","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"vivegank"},"content":"        Height expectedHeight \u003d new Height(VALID_HEIGHT);","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"vivegank"},"content":"        assertEquals(expectedHeight, ParserUtil.parseHeight(heightWithWhitespace));","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"vivegank"},"content":"    public void parseWeight_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseWeight((String) null));","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"vivegank"},"content":"    public void parseWeight_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"vivegank"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeight(INVALID_WEIGHT));","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"vivegank"},"content":"    public void parseWeight_validValueWithoutWhitespace_returnsWeight() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"vivegank"},"content":"        Weight expectedWeight \u003d new Weight(VALID_WEIGHT);","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"vivegank"},"content":"        assertEquals(expectedWeight, ParserUtil.parseWeight(VALID_WEIGHT));","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"vivegank"},"content":"    public void parseWeight_validValueWithWhitespace_returnsTrimmedWeight() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"vivegank"},"content":"        String weightWithWhitespace \u003d WHITESPACE + VALID_WEIGHT + WHITESPACE;","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"vivegank"},"content":"        Weight expectedWeight \u003d new Weight(VALID_WEIGHT);","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"vivegank"},"content":"        assertEquals(expectedWeight, ParserUtil.parseWeight(weightWithWhitespace));","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":258,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":259,"author":{"gitId":"vivegank"},"content":"    public void parseDate_invalidCharactersInddmmyyyyhhmmDate_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":260,"author":{"gitId":"vivegank"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DDMMYYYYhhmm_DATE_1));","lastModifiedDate":"2021-03-16"},{"lineNumber":261,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":262,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":263,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":264,"author":{"gitId":"vivegank"},"content":"    public void parseDate_invalidCharactersInddmmhhmmDate_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":265,"author":{"gitId":"vivegank"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DDMMhhmm_DATE_1));","lastModifiedDate":"2021-03-16"},{"lineNumber":266,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":267,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":268,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":269,"author":{"gitId":"vivegank"},"content":"    public void parseDate_invalidDateTimeInddmmyyyyhhmmDate_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":270,"author":{"gitId":"vivegank"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DDMMYYYYhhmm_DATE_2));","lastModifiedDate":"2021-03-16"},{"lineNumber":271,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":272,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":273,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":274,"author":{"gitId":"vivegank"},"content":"    public void parseDate_invalidDateTimeInddmmhhmmDate_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":275,"author":{"gitId":"vivegank"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DDMMhhmm_DATE_2));","lastModifiedDate":"2021-03-16"},{"lineNumber":276,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":277,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":278,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":279,"author":{"gitId":"vivegank"},"content":"    public void parseDate_invalidDateFormat_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":280,"author":{"gitId":"vivegank"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_SHORT_DATE));","lastModifiedDate":"2021-03-16"},{"lineNumber":281,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":282,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":283,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":284,"author":{"gitId":"vivegank"},"content":"    public void parseDate_invalidPastDate_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":285,"author":{"gitId":"vivegank"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_PAST_DATE));","lastModifiedDate":"2021-03-16"},{"lineNumber":286,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":287,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":288,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":289,"author":{"gitId":"vivegank"},"content":"    public void parseDate_validddmmyyyyhhmmDate_returnsLocalDateTime() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":290,"author":{"gitId":"vivegank"},"content":"        LocalDateTime actualDateTime \u003d ParserUtil.parseDate(VALID_DDMMYYYYhhmm_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":291,"author":{"gitId":"vivegank"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2021, 10, 10, 14, 30);","lastModifiedDate":"2021-03-16"},{"lineNumber":292,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":293,"author":{"gitId":"vivegank"},"content":"        assertEquals(expectedDateTime, actualDateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":294,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":295,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":296,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":297,"author":{"gitId":"vivegank"},"content":"    public void parseDate_validddmmhhmmDate_returnsLocalDateTime() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":298,"author":{"gitId":"vivegank"},"content":"        LocalDateTime actualDateTime \u003d ParserUtil.parseDate(VALID_DDMMhhmm_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":299,"author":{"gitId":"vivegank"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(LocalDateTime.now().getYear(), 9, 10, 16, 30);","lastModifiedDate":"2021-03-16"},{"lineNumber":300,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":301,"author":{"gitId":"vivegank"},"content":"        assertEquals(expectedDateTime, actualDateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":302,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":196,"vivegank":107}},{"path":"src/test/java/seedu/address/logic/parser/UnarchiveCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.UnarchiveCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"class UnarchiveCommandParserTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    private UnarchiveCommandParser parser \u003d new UnarchiveCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    public void parse_validArgs_returnsUnarchiveCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"        assertParseSuccess(parser, \"1\", new UnarchiveCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnarchiveCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"vivegank":26}},{"path":"src/test/java/seedu/address/logic/parser/medical/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.logic.parser.medical;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"import seedu.address.logic.commands.medical.AddAppointmentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"class AddAppointmentCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    private AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        // no index specified","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        // no date specified","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"        // no index and no date specified","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        // negative index","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"-5 d/20051800\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"        // zero index","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"0 d/20051800\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"    public void parse_dateSpecified_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" d/200520211800\";","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2021, 5, 20, 18, 0);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"        AddAppointmentCommand expectedCommand \u003d new AddAppointmentCommand(targetIndex, expectedDateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vivegank":58}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e newPatients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPatients);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"nicholasnge"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"nicholasnge"},"content":"        private final ObservableList\u003cPatient\u003e patients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"nicholasnge"},"content":"        AddressBookStub(Collection\u003cPatient\u003e patients) {","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"nicholasnge"},"content":"            this.patients.setAll(patients);","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"nicholasnge"},"content":"        public ObservableList\u003cPatient\u003e getPersonList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"nicholasnge"},"content":"            return patients;","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"nicholasnge":10,"-":92}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_MAIN_PATIENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"nicholasnge"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_MAIN_PATIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"nicholasnge":2,"-":130}},{"path":"src/test/java/seedu/address/model/medical/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"class AppointmentTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"nicholasnge":1,"vivegank":14}},{"path":"src/test/java/seedu/address/model/person/HeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"class HeightTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Height(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    public void constructor_invalidHeight_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"        String invalidHeight \u003d \"\";","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Height(invalidHeight));","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    public void isValidHeight() {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        // null height","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e Height.isValidHeight(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        // invalid height","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        assertFalse(Height.isValidHeight(\"\")); // empty string","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"        assertFalse(Height.isValidHeight(\" \")); // spaces only","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"        assertFalse(Height.isValidHeight(\"height\")); // non-numeric","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"        assertFalse(Height.isValidHeight(\"9a0cm\")); // alphabets within digits","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        assertFalse(Height.isValidHeight(\"9 3cm\")); // spaces within digits","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        assertFalse(Height.isValidHeight(\"170mm\")); // invalid unit at the back","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        // valid height","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        assertTrue(Height.isValidHeight(\"169cm\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"vivegank":38}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"public class PatientTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"        Patient patient \u003d new PersonBuilder().build();","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getTags().remove(0));","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"                .withAddress(VALID_ADDRESS_BOB).withHeight(VALID_HEIGHT_BOB).withWeight(VALID_WEIGHT_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"        Patient editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        Patient aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"nicholasnge"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"        // different height -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withHeight(VALID_HEIGHT_BOB).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"        // different weight -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withWeight(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"        // different archive states -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"        editedAlice.setArchived(true);","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"nicholasnge":7,"-":83,"vivegank":17}},{"path":"src/test/java/seedu/address/model/person/UniquePatientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"public class UniquePatientListTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"nicholasnge"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"vivegank"},"content":"    public void archive_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.archive(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"vivegank"},"content":"    public void archive_existingPerson_archivesPerson() {","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"vivegank"},"content":"        uniquePersonList.add(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"vivegank"},"content":"        uniquePersonList.archive(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"vivegank"},"content":"        assertTrue(newAlice.isArchived());","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"vivegank"},"content":"    public void unarchive_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.unarchive(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"vivegank"},"content":"    public void unarchive_existingArchivedPerson_unarchivesPerson() {","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"nicholasnge"},"content":"        Patient newAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"vivegank"},"content":"        uniquePersonList.add(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"vivegank"},"content":"        uniquePersonList.archive(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"vivegank"},"content":"        uniquePersonList.unarchive(newAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"vivegank"},"content":"        assertFalse(newAlice.isArchived());","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"nicholasnge"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPatient\u003e) null));","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e patientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"nicholasnge"},"content":"        uniquePersonList.setPersons(patientList);","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":188,"author":{"gitId":"nicholasnge"},"content":"        List\u003cPatient\u003e listWithDuplicatePatients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"nicholasnge"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePatients));","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"nicholasnge":10,"-":162,"vivegank":25}},{"path":"src/test/java/seedu/address/model/person/WeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"class WeightTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Weight(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    public void constructor_invalidWeight_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"        String invalidWeight \u003d \"\";","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Weight(invalidWeight));","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    public void isValidWeight() {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        // null weight","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        assertThrows(NullPointerException.class, () -\u003e Weight.isValidWeight(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        // invalid weight","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        assertFalse(Weight.isValidWeight(\"\")); // empty string","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"        assertFalse(Weight.isValidWeight(\" \")); // spaces only","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"        assertFalse(Weight.isValidWeight(\"weight\")); // non-numeric","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"        assertFalse(Weight.isValidWeight(\"9a0kg\")); // alphabets within digits","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        assertFalse(Weight.isValidWeight(\"9 3kg\")); // spaces within digits","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        assertFalse(Weight.isValidWeight(\"170gg\")); // invalid unit at the back","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        // valid weight","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        assertTrue(Weight.isValidWeight(\"69kg\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"vivegank":38}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_HEIGHT \u003d \"169mm\";","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    private static final String INVALID_WEIGHT \u003d \"200g\";","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"    private static final String VALID_HEIGHT \u003d BENSON.getHeight().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    private static final String VALID_WEIGHT \u003d BENSON.getWeight().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        // TODO: Add appointment and record lists","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"                        VALID_HEIGHT, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"        // TODO: Add appointment and record lists","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"        // TODO: Add appointment and record lists","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"    public void toModelType_invalidHeight_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"                INVALID_HEIGHT, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"        String expectedMessage \u003d Height.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"    public void toModelType_nullHeight_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"                null, VALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Height.class.getSimpleName());","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"    public void toModelType_invalidWeight_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, INVALID_WEIGHT, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"vivegank"},"content":"        String expectedMessage \u003d Weight.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"vivegank"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"vivegank"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"vivegank"},"content":"    public void toModelType_nullWeight_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, null, false, VALID_TAGS, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"vivegank"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName());","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"vivegank"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"vivegank"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"vivegank"},"content":"                VALID_HEIGHT, VALID_WEIGHT, false, invalidTags, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"nicholasnge":1,"-":95,"vivegank":59}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"docBob.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BigDoot":1,"-":122}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    public AddressBookBuilder withPerson(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"        addressBook.addPerson(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicholasnge":3,"-":31}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"    public EditPersonDescriptorBuilder(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        descriptor.setEmail(patient.getEmail());","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"        descriptor.setAddress(patient.getAddress());","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        descriptor.setHeight(patient.getHeight());","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"        descriptor.setWeight(patient.getWeight());","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"        descriptor.setTags(patient.getTags());","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"        descriptor.setArchived(patient.isArchived());","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"     * Sets the {@code Height} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"    public EditPersonDescriptorBuilder withHeight(String height) {","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"        descriptor.setHeight(new Height(height));","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"     * Sets the {@code Weight} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"    public EditPersonDescriptorBuilder withWeight(String weight) {","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"        descriptor.setWeight(new Weight(weight));","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"nicholasnge":10,"-":80,"vivegank":18}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import seedu.address.model.person.Weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    public static final String DEFAULT_HEIGHT \u003d \"169cm\";","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"    public static final String DEFAULT_WEIGHT \u003d \"69kg\";","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    private Height height;","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    private Weight weight;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"    private boolean isArchived;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"        height \u003d new Height(DEFAULT_HEIGHT);","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"        weight \u003d new Weight(DEFAULT_WEIGHT);","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"        isArchived \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"    public PersonBuilder(Patient patientToCopy) {","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"        address \u003d patientToCopy.getAddress();","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"        height \u003d patientToCopy.getHeight();","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"        weight \u003d patientToCopy.getWeight();","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"        isArchived \u003d patientToCopy.isArchived();","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"     * Sets the {@code Height} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"    public PersonBuilder withHeight(String height) {","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"        this.height \u003d new Height(height);","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"     * Sets the {@code Weight} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"    public PersonBuilder withWeight(String weight) {","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"        this.weight \u003d new Weight(weight);","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"     * Builds the {@code Person} using the information given.","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"nicholasnge"},"content":"    public Patient build() {","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"nicholasnge"},"content":"        Patient builtPatient \u003d new Patient(name, phone, email, address, height, weight, tags);","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"nicholasnge"},"content":"        builtPatient.setArchived(isArchived);","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"nicholasnge"},"content":"        return builtPatient;","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"nicholasnge":14,"-":87,"vivegank":29}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"    public static String getPersonDetails(Patient patient) {","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"        sb.append(PREFIX_EMAIL + patient.getEmail().value + \" \");","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"        sb.append(PREFIX_ADDRESS + patient.getAddress().value + \" \");","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"        sb.append(PREFIX_HEIGHT + patient.getHeight().value + \" \");","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"        sb.append(PREFIX_WEIGHT + patient.getWeight().value + \" \");","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"        patient.getTags().stream().forEach(","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"        descriptor.getHeight().ifPresent(height -\u003e sb.append(PREFIX_HEIGHT).append(height.value).append(\" \"));","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"        descriptor.getWeight().ifPresent(weight -\u003e sb.append(PREFIX_WEIGHT).append(weight.value).append(\" \"));","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"nicholasnge":11,"-":53,"vivegank":4}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"    public static Patient getPerson(Model model, Index index) {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicholasnge":2,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"            .withPhone(\"94351253\").withHeight(\"169cm\").withWeight(\"69kg\")","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withHeight(\"162cm\").withWeight(\"64kg\")","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"            .withHeight(\"182cm\").withWeight(\"72kg\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withHeight(\"168cm\").withWeight(\"76kg\")","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"            .withHeight(\"175cm\").withWeight(\"65kg\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"            .withHeight(\"160cm\").withWeight(\"55kg\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"            .withHeight(\"182cm\").withWeight(\"59kg\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"            .withHeight(\"163cm\").withWeight(\"69kg\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"            .withHeight(\"169cm\").withWeight(\"62kg\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"            .withHeight(VALID_HEIGHT_AMY).withWeight(VALID_WEIGHT_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"    public static final Patient BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"            .withHeight(VALID_HEIGHT_BOB).withWeight(VALID_WEIGHT_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"nicholasnge"},"content":"        for (Patient patient : getTypicalPersons()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"nicholasnge"},"content":"            ab.addPerson(patient);","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"nicholasnge"},"content":"    public static List\u003cPatient\u003e getTypicalPersons() {","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"nicholasnge":15,"-":49,"vivegank":26}}]
