[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-T13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-T13-1/tp/actions)","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Weeblingo","lastModifiedDate":"2021-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Weeblingo is a desktop app for managing flashcards, optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2021-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"while still having the benefits of a Graphical User Interface (GUI). With a nice and friendly interface,","lastModifiedDate":"2021-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"users can learn Japanese at a comfortable pace with this application.","lastModifiedDate":"2021-02-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"#### Feature List","lastModifiedDate":"2021-02-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"- start \\- shows the first flashcard (eg. [あ])","lastModifiedDate":"2021-02-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"- check \\- gives answer to previously shown flashcard (eg. [ a ])","lastModifiedDate":"2021-02-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"- next \\- only entered after show or check, goes to next flashcard (eg. [ い ])","lastModifiedDate":"2021-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"- list \\- lists out all flashcards available as a formatted String (eg. {(あ, a), (い, i), (う, u), (え, e), (お, o)})","lastModifiedDate":"2021-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"- end \\- ends current flashcard session","lastModifiedDate":"2021-02-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"- exit \\- exits the application","lastModifiedDate":"2021-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"- help \\- displays help, input command for specific help","lastModifiedDate":"2021-02-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"#### Product website","lastModifiedDate":"2021-02-14"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"The product website is now live [here](https://ay2021s2-cs2103t-t13-1.github.io/tp/).","lastModifiedDate":"2021-03-04"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"### Acknowledgements","lastModifiedDate":"2021-03-04"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"- This project makes use of [simple-json library](https://code.google.com/archive/p/json-simple/), version 1.1.1.","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"xyzhang00":8,"Cheng20010201":1,"-":15}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"mainClassName \u003d \u0027seedu.weeblingo.Main\u0027","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"    archiveName \u003d \u0027weeblingo.jar\u0027","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"xinweit"},"content":"run {","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"xinweit"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"xinweit"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"xyzhang00":2,"xinweit":4,"Cheng20010201":5,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"We are team T13-1 from [CS2103T](https://github.com/nus-cs2103-ay2021s2).","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"### Lan Yu Xuan","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"\u003cimg src\u003d\"images/jellybeano.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"[ [github](http://github.com/Jellybeano) ] [ [portfolio](team/lanyuxuan.md) ]","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"* Role: Team Lead","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"### Joel Wong Xue Rong","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Yanneko"},"content":"\u003cimg src\u003d\"images/yanneko.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"[ [github](http://github.com/Yanneko) ]","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"Yanneko"},"content":"[[portfolio](team/JWong.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Yanneko"},"content":"* Role: Developer","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"Yanneko"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"### Sun Yucheng","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"\u003cimg src\u003d\"images/cheng20010201.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"[[github](http://github.com/cheng20010201)]","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"[[portfolio](team/cheng20010201.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"* Responsibilities: Integration, Scheduling and Tracking","lastModifiedDate":"2021-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"### Teng Xin Wei","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"\u003cimg src\u003d\"images/xinweit.png\" width \u003d \"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"[[github](http://github.com/xinweit)]","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"[[portfolio](team/tengxinwei.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"* Responsibilities: Documentation + Code quality","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"### Zhang Xinyi","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"\u003cimg src\u003d\"images/xyzhang00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"[[github](https://github.com/xyzhang00)] [[portfolio](team/zhangxinyi.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":5,"xyzhang00":4,"Yanneko":6,"xinweit":5,"Cheng20010201":6,"-":30}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2021S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadow`).","lastModifiedDate":"2020-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"xyzhang00":1,"-":78}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"Weeblingo is a desktop app for managing flashcards, **optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). With a nice and friendly interface, users can learn Japanese at a comfortable pace with this application.","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Yanneko"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/weeblingo/ui/Ui.java)","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`,","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"`FlashcardListPanel`, `ScoreHistoryListPanel`, `StatusBarFooter` etc.","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"that are in the `src/main/resources/view` folder.","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/weeblingo/ui/MainWindow.java)","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-T13-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"1. `Logic` uses the `WeeblingoParser` class to parse the user command.","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"1. The command execution can affect the `Model` (e.g. adding a flashcard).","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"learn\")` API call.","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"![Interactions Inside the Logic Component for the `learn` Command](images/LearnSequenceDiagram.png)","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"* stores the Weeblingo data.","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"xinweit"},"content":"* exposes an unmodifiable `ObservableList\u003cFlashcard\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `FlashcardBook`, which `Flashcard` references. This allows `FlashcardBook` to only require one `Tag` object per unique `Tag`, instead of each `Flashcard` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/weeblingo/storage/Storage.java)","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"* can save the flashcard book data (flashcards and scores) in json format and read it back.","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"xyzhang00"},"content":"Classes used by multiple components are in the `seedu.weeblingo.commons` package.","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Jellybeano"},"content":"### Tagging Flashcards","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":"The tagging mechanism allows users to add tags to flashcards of their choice while in the _Learn Mode_","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"Jellybeano"},"content":"of the WeebLingo application. Each flashcard has a set of default tags which cannot be edited, followed by","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"Jellybeano"},"content":"any unique user added tags. ","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Jellybeano"},"content":"![Structure of the Flashcard with tags](images/FlashcardWithTagsObjectDiagram.png)","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"Jellybeano"},"content":"The following activity diagram summarizes what happens when a user adds a new command:","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"Jellybeano"},"content":"![NewTagActivityDiagram](images/NewTagActivityDiagram.png)","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Jellybeano"},"content":"The tags function ties together with the Start function of the application, as users can choose to start a quiz","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"Jellybeano"},"content":"containing flashcards that have the same tag only (to be implemented...)","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Yanneko"},"content":"### Quiz Command","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"Yanneko"},"content":"The quiz command is used to enter Quiz mode, allowing the user to start various quizzes from there.","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"Yanneko"},"content":"The following activity diagram summarizes what happens when a user enters the Quiz command:","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"Yanneko"},"content":"![QuizActivityDiagram](images/QuizActivityDiagram.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"Yanneko"},"content":"The following sequence diagram shows how the Quiz command works:","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"Yanneko"},"content":"![QuizSequenceDiagram](images/QuizSequenceDiagram.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"xinweit"},"content":"### Start Command","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"xinweit"},"content":"The start command is used to start a quiz session, enabling users to define the number and type of ","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"xinweit"},"content":"questions they want to be tested on. The activity diagram below shows the flow of events when a user","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"xinweit"},"content":"enters the start command.","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"Cheng20010201"},"content":"### \\[Proposed\\] Quiz Scoring","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"Cheng20010201"},"content":"*{To be updated}*","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"Cheng20010201"},"content":"### View Past Quiz Attempts","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"Cheng20010201"},"content":"The view quiz history mechanism allows users to view their past attempts of quizzes. Each entry of quiz history is","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"Cheng20010201"},"content":"represented in a way similar how the flashcards are represented in the Weeblingo application. ","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"Cheng20010201"},"content":"Below is the class diagram","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"Cheng20010201"},"content":"for how `Score` is represented in *Model* component.","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"Cheng20010201"},"content":"![HistoryModelDiagram](images/HistoryModelDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"Cheng20010201"},"content":"The *UI* component, which originally only handles the display of flashcards,","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"Cheng20010201"},"content":"now needs to handle the display for scoring history as well.","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"Cheng20010201"},"content":"The following sequence diagram shows how the UI switches display from flashcards to score history and vice versa.","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"Cheng20010201"},"content":"![HistoryUiSequenceDiagram](images/HistoryUiSequenceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"Cheng20010201"},"content":"##### Aspect: How to represent `Score` in the application","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"Cheng20010201"},"content":"* **Alternative 1 (current choice):** Make `Score` and `Flashcard` two separate classes.","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"Cheng20010201"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"Cheng20010201"},"content":"    * Cons: ","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"Cheng20010201"},"content":"      * May have the overhead of writing similar code. For instance, `JsonAdaptedFlashcard` and `JsonAdaptedScore`.","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"Cheng20010201"},"content":"      * Changing the UI display from flashcards to score history may be cumbersome. ","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"Cheng20010201"},"content":"* **Alternative 2:** Let `Score` have inheritance relationship with `Flashcard`.","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"Cheng20010201"},"content":"    * Pros: Changing UI display is easy.","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"Cheng20010201"},"content":"    * Cons:","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"Cheng20010201"},"content":"      * The design choice is not intuitive (`Score` does not seem to be a `Flashcard` and vice versa).","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"Cheng20010201"},"content":"      * The overhead of maintaining the inheritance is non-trivial.","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"Jellybeano"},"content":"* Young aspiring J-Culture enthusiast who wants to learn basic Japanese","lastModifiedDate":"2021-03-04"},{"lineNumber":231,"author":{"gitId":"Jellybeano"},"content":"* goes to a Japanese Culture Club so is low on time after school","lastModifiedDate":"2021-03-04"},{"lineNumber":232,"author":{"gitId":"Jellybeano"},"content":"* interested in learning the Japanese language","lastModifiedDate":"2021-03-04"},{"lineNumber":233,"author":{"gitId":"Jellybeano"},"content":"* prefers using flashcards to learn","lastModifiedDate":"2021-03-04"},{"lineNumber":234,"author":{"gitId":"Jellybeano"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2021-03-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"Jellybeano"},"content":"**Value proposition**: Ability to learn the Japanese language through flashcards in a fun and interactive manner","lastModifiedDate":"2021-03-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"| Priority | As a …​         | I want to …​                            | So that I can…​                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"Yanneko"},"content":"| -------- | ------------------ | ------------------------------------------ | ----------------------------------------------- |","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"xinweit"},"content":"| `* * *`  | new user           | view valid commands                        | learn how to use the Weeblingo               |","lastModifiedDate":"2021-04-02"},{"lineNumber":248,"author":{"gitId":"Yanneko"},"content":"| `* * *`  | user               | view a flashcard                           |                                                 |","lastModifiedDate":"2021-02-24"},{"lineNumber":249,"author":{"gitId":"xinweit"},"content":"| `* * *`  | user               | view all flashcards                        | study the flashcards before a quiz session           |","lastModifiedDate":"2021-04-02"},{"lineNumber":250,"author":{"gitId":"xinweit"},"content":"| `* * *`  | user               | see the answer to a flashcard              | check if I answered correctly                   |","lastModifiedDate":"2021-04-02"},{"lineNumber":251,"author":{"gitId":"xinweit"},"content":"| `* * *`  | user               | start a quiz session                       | assess my knowledge of the Japanese language          |","lastModifiedDate":"2021-04-02"},{"lineNumber":252,"author":{"gitId":"xinweit"},"content":"| `* * *`  | hardworking user   | start a quiz containing all flashcards     | practice all flashcards in a single quiz session     |","lastModifiedDate":"2021-04-02"},{"lineNumber":253,"author":{"gitId":"Yanneko"},"content":"| `* *`    | user               | quiz myself on a specific set of flashcards| practice a specific group of words that I may be bad at |","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"xinweit"},"content":"| `* *`    | busy user          | quiz myself on a specific number of flashcards| roughly control how long I spend on the quiz |","lastModifiedDate":"2021-04-02"},{"lineNumber":255,"author":{"gitId":"Yanneko"},"content":"| `* *`    | user               | add tags to certain flashcards             | group flashcards to test myself (e.g. specific coverage for an exam) |","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"xinweit"},"content":"| `* *`    | results-oriented user | know how well I scored on a Quiz        | see how many mistakes I made in this Quiz       |","lastModifiedDate":"2021-04-02"},{"lineNumber":257,"author":{"gitId":"xinweit"},"content":"| `* *`    | competitive user   | see the duration of a Quiz                 | gauge how fast I am at answering questions      |","lastModifiedDate":"2021-04-02"},{"lineNumber":258,"author":{"gitId":"xinweit"},"content":"| `* *`    | user               | see my past quiz attempts                  | track my progress      |","lastModifiedDate":"2021-04-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"xyzhang00"},"content":"(For all use cases below, the **System** is the `Weeblingo` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-28"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"xinweit"},"content":"**Use case : UC01 - See the list of flashcards**","lastModifiedDate":"2021-04-02"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-02-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":270,"author":{"gitId":"xinweit"},"content":"1.  User requests to enter learn mode.","lastModifiedDate":"2021-04-02"},{"lineNumber":271,"author":{"gitId":"xinweit"},"content":"2.  WeebLingo shows a list of flashcards on the screen.","lastModifiedDate":"2021-04-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":273,"author":{"gitId":"xinweit"},"content":"    Use case ends.  ","lastModifiedDate":"2021-02-24"},{"lineNumber":274,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":275,"author":{"gitId":"xinweit"},"content":"**Use case: UC02 - Take a quiz**","lastModifiedDate":"2021-04-02"},{"lineNumber":276,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":277,"author":{"gitId":"xinweit"},"content":"**MSS**","lastModifiedDate":"2021-02-24"},{"lineNumber":278,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":279,"author":{"gitId":"xinweit"},"content":"1.  User requests to enter quiz mode.","lastModifiedDate":"2021-04-02"},{"lineNumber":280,"author":{"gitId":"xinweit"},"content":"2.  WeebLingo shows a new question on the screen.","lastModifiedDate":"2021-04-02"},{"lineNumber":281,"author":{"gitId":"xinweit"},"content":"3.  User enters and checks his answer.","lastModifiedDate":"2021-04-02"},{"lineNumber":282,"author":{"gitId":"xinweit"},"content":"4.  WeebLingo shows whether user\u0027s answer is correct/wrong.","lastModifiedDate":"2021-04-02"},{"lineNumber":283,"author":{"gitId":"xinweit"},"content":"5.  User requests to see the next question.","lastModifiedDate":"2021-04-02"},{"lineNumber":284,"author":{"gitId":"xinweit"},"content":"6.  WeebLingo removes this question from the list of questions for this session.","lastModifiedDate":"2021-04-02"},{"lineNumber":285,"author":{"gitId":"xinweit"},"content":"7.  Go to step 2 again.","lastModifiedDate":"2021-04-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-02-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":289,"author":{"gitId":"xinweit"},"content":"* 2a. All questions have been shown.","lastModifiedDate":"2021-02-24"},{"lineNumber":290,"author":{"gitId":"xinweit"},"content":"    ","lastModifiedDate":"2021-02-24"},{"lineNumber":291,"author":{"gitId":"xinweit"},"content":"    * 2a1. WeebLingo informs user that the quiz is over. ","lastModifiedDate":"2021-04-02"},{"lineNumber":292,"author":{"gitId":"xinweit"},"content":"      ","lastModifiedDate":"2021-04-02"},{"lineNumber":293,"author":{"gitId":"xinweit"},"content":"      Use case ends.","lastModifiedDate":"2021-02-24"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":295,"author":{"gitId":"xinweit"},"content":"* 3a. User already got the question correct.","lastModifiedDate":"2021-04-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":297,"author":{"gitId":"xinweit"},"content":"    * 3a1. WeebLingo prompts user to proceed to the next question.","lastModifiedDate":"2021-04-02"},{"lineNumber":298,"author":{"gitId":"xinweit"},"content":"    ","lastModifiedDate":"2021-02-24"},{"lineNumber":299,"author":{"gitId":"xinweit"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2021-04-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":301,"author":{"gitId":"xinweit"},"content":"* 4a. User got the question wrong.","lastModifiedDate":"2021-04-02"},{"lineNumber":302,"author":{"gitId":"xinweit"},"content":"  ","lastModifiedDate":"2021-02-24"},{"lineNumber":303,"author":{"gitId":"xinweit"},"content":"    * 4a1a. User wants to proceed to the next question.","lastModifiedDate":"2021-04-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"xinweit"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2021-04-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"xinweit"},"content":"    * 4a1b. User wants to reattempt the same question.","lastModifiedDate":"2021-04-02"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"xinweit"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-04-02"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"xinweit"},"content":"* 4b. User got the question correct.","lastModifiedDate":"2021-04-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"xinweit"},"content":"    * 4b1. WeebLingo prompts user to proceed to the next question.","lastModifiedDate":"2021-04-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"xinweit"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2021-04-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"xinweit"},"content":"**Use case: UC03 - See my past quiz attempts history**","lastModifiedDate":"2021-04-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"xinweit"},"content":"**MSS**","lastModifiedDate":"2021-04-02"},{"lineNumber":320,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":321,"author":{"gitId":"xinweit"},"content":"1.  User requests to see the history of past attempts.","lastModifiedDate":"2021-04-02"},{"lineNumber":322,"author":{"gitId":"xinweit"},"content":"2.  WeebLingo shows the history, including relevant details of the quiz attempts.","lastModifiedDate":"2021-04-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"xinweit"},"content":"    Use case ends.","lastModifiedDate":"2021-04-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"Yanneko"},"content":"\u003c!-- Updated and maintained by [Yucheng](https://github.com/cheng20010201) --\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":330,"author":{"gitId":"Yanneko"},"content":"1.  The product should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-02-24"},{"lineNumber":331,"author":{"gitId":"Yanneko"},"content":"2.  The product should be available for download and usage after each release.","lastModifiedDate":"2021-02-24"},{"lineNumber":332,"author":{"gitId":"Cheng20010201"},"content":"3.  The product\u0027s size of the final Jar released should not exceed 100MB.","lastModifiedDate":"2021-03-26"},{"lineNumber":333,"author":{"gitId":"Yanneko"},"content":"4.  The product should be an offline application, which should work either with or without presence of internet","lastModifiedDate":"2021-02-24"},{"lineNumber":334,"author":{"gitId":"Yanneko"},"content":"    connection.","lastModifiedDate":"2021-02-24"},{"lineNumber":335,"author":{"gitId":"Yanneko"},"content":"5.  The product should allow one user to have different instances of the application running at the same time.","lastModifiedDate":"2021-02-24"},{"lineNumber":336,"author":{"gitId":"Cheng20010201"},"content":"6.  The product should be able to hold up to 2000 Japanese words without causing a delay in commands longer than 0.5 seconds.","lastModifiedDate":"2021-03-26"},{"lineNumber":337,"author":{"gitId":"Cheng20010201"},"content":"7.  The project should be open-sourced.","lastModifiedDate":"2021-03-26"},{"lineNumber":338,"author":{"gitId":"Cheng20010201"},"content":"8.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) and","lastModifiedDate":"2021-03-26"},{"lineNumber":339,"author":{"gitId":"Yanneko"},"content":"    beginner typing speed for simple Japanese text (i.e. simple words and sentences) should be able to accomplish most","lastModifiedDate":"2021-02-24"},{"lineNumber":340,"author":{"gitId":"xyzhang00"},"content":"    of the learning faster using commands than using the mouse.","lastModifiedDate":"2021-02-28"},{"lineNumber":341,"author":{"gitId":"xyzhang00"},"content":"10. A user should find interacting with the user interface easy, even if he/she is relatively new to the application.","lastModifiedDate":"2021-02-28"},{"lineNumber":342,"author":{"gitId":"xinweit"},"content":"11. Each command should be processed within 3 seconds.","lastModifiedDate":"2021-03-26"},{"lineNumber":343,"author":{"gitId":"xinweit"},"content":"12. More to be added.","lastModifiedDate":"2021-03-26"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"xyzhang00"},"content":"* **Question**: A Japanese character/word","lastModifiedDate":"2021-02-28"},{"lineNumber":349,"author":{"gitId":"xyzhang00"},"content":"* **Answer**: The reading/definition of the Japanese given in the corresponding question","lastModifiedDate":"2021-02-28"},{"lineNumber":350,"author":{"gitId":"xyzhang00"},"content":"* **Flashcard**: An object that can display a question and its answer","lastModifiedDate":"2021-02-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"Jellybeano"},"content":"### Using the  `end` command","lastModifiedDate":"2021-03-26"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"Jellybeano"},"content":"1. Ending a quiz before it is started","lastModifiedDate":"2021-03-26"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"Jellybeano"},"content":"   1. Prerequisites: No quiz has been started","lastModifiedDate":"2021-03-26"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"Jellybeano"},"content":"   1. Test case: `end` _while in the quiz_\u003cbr\u003e ","lastModifiedDate":"2021-03-26"},{"lineNumber":387,"author":{"gitId":"Jellybeano"},"content":"      Expected: The current quiz is ended and displayed flashcard disappears. ","lastModifiedDate":"2021-03-26"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"Jellybeano"},"content":"   1. Test case: `end` _while in the start menu_\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":390,"author":{"gitId":"Jellybeano"},"content":"      Expected: Nothing happens. An error message is displayed to the user telling them that no Quiz has started yet.","lastModifiedDate":"2021-03-26"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"Jellybeano"},"content":"   1. Other incorrect end commands locations to try: _while in learn mode_, _right after ending a Quiz, …​ \u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":393,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":405,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":30,"xyzhang00":9,"Yanneko":18,"xinweit":58,"Cheng20010201":37,"-":253}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"   1. Run the `seedu.weeblingo.Main` and try a few commands.","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"xyzhang00":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"   e.g. `seedu.weeblingo.commons.StringUtilTest`","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"   e.g. `seedu.weeblingo.storage.StorageManagerTest`","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"   e.g. `seedu.weeblingo.logic.LogicManagerTest`","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"Weeblingo is a desktop application for **learning Japanese, optimized for use via a Command Line Interface** (CLI) while ","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"still having the benefits of a Graphical User Interface (GUI). With a nice and friendly interface, ","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"users can learn Japanese at a comfortable pace and manage flashcards with this application.","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"* [Features](#features)","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"  * [Starting a quiz session: `start`](#starting-a-quiz-session-start)","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"  * [Checking flashcard answers: `check`](#checking-flashcard-answers-check)","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"  * [Going to next flashcard: `next`](#going-to-next-flashcard-next)","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"  * [Listing out all flashcards: `learn`](#listing-out-all-flashcards-learn)","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"  * [Ending the session: `end`](#ending-the-session-end)","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"  * [Viewing past scores: `history`](#viewing-past-scores-history)","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"  * [Exiting the application: `exit`](#exiting-the-application-exit)","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"  * [Asking for help: `help`](#asking-for-help-help)","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"## Introduction","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"### About WeebLingo","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"WeebLingo is a desktop application that helps users learn the Japanese language. It has three primary modes, ","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"which are the **learn**, **quiz** and **history** modes. The app contains flashcards that pairs a Japanese word and ","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"its corresponding English syllable for users to learn. It allows users to test themselves on their grasp of the Japanese language","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"by starting a quiz session. In addition, users can view their history of past quiz attempts and the relevant statistics.","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"### Additional information ","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"These are symbols used throughout the User Guide you might want to take note of.","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"* :information_source: : Indicates information that is likely to be helpful","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"1. Download the latest `weeblingo.jar` from [here](https/linkhere-tbc).","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your WeebLingo application.","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"1. Double-click the file to start the app. The GUI similar to the image below should appear in a few seconds. \u003cbr\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"   * **`start`** : Shows the first flashcard.","lastModifiedDate":"2021-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"   * **`check`** : Gives the answer to previously shown flashcard.","lastModifiedDate":"2021-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"   * **`next`** : Only entered after show or check, goes to next flashcard.","lastModifiedDate":"2021-02-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"xinweit"},"content":"eg. if the command specifies `n/NUMBER t/TAG`, `t/TAG n/NUMBER` is also acceptable.","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":82,"author":{"gitId":"xinweit"},"content":"eg. if you specify `n/5 n/10`, only `n/10` will be taken.","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"  e.g. if the command specifies `help あいうえお`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"xinweit"},"content":"### Starting a quiz session: `start`","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"xinweit"},"content":"Starts a quiz session.","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"xinweit"},"content":"Format: `start [n/NUMBER] [t/TAG]`","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"xinweit"},"content":"* NUMBER specifies the number of questions for the quiz session.","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"xinweit"},"content":"* TAG specifies the type of questions for the quiz session.","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"xinweit"},"content":"* NUMBER specified should be positive.","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"xinweit"},"content":"* There are currently four tags available, gojuon, hiragana, katakana and numbers.","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"xinweit"},"content":"* You can specify one or two tags.","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"xinweit"},"content":"* start n/10","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"xinweit"},"content":"* start t/katakana","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"xinweit"},"content":"* start n/5 t/gojuon t/hiragana","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"xinweit"},"content":"Before executing start command:","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"xinweit"},"content":"![before start](images/start_before.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"xinweit"},"content":"After executing start command:","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"xinweit"},"content":"![after start](images/start_after.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"### Checking flashcard answers: `check`","lastModifiedDate":"2021-02-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"Reveals the answer to the previous shown flashcard.","lastModifiedDate":"2021-02-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"Format: `check`","lastModifiedDate":"2021-02-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"### Going to next flashcard: `next`","lastModifiedDate":"2021-02-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"Goes to the next flashcard, if any.","lastModifiedDate":"2021-02-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"Format: `next`","lastModifiedDate":"2021-02-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"### Listing out all flashcards: `learn`","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"Enters Learn Mode, where all current flashcards are listed out.","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"Format: `learn`","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"### Ending the session: `end`","lastModifiedDate":"2021-02-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"Ends the current session, saving progress.","lastModifiedDate":"2021-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"Format: `end`","lastModifiedDate":"2021-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"### Viewing Past Scores: `history`","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"View scores of all past quiz attempts.","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"Cheng20010201"},"content":"Format: `history`","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"### Exiting the application: `exit`","lastModifiedDate":"2021-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Jellybeano"},"content":"Exits the application.","lastModifiedDate":"2021-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"Jellybeano"},"content":"### Asking for help: `help`","lastModifiedDate":"2021-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"Jellybeano"},"content":"Shows a message explaning how to access the help page. (to be updated)","lastModifiedDate":"2021-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":152,"author":{"gitId":"Jellybeano"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-02-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":154,"author":{"gitId":"Jellybeano"},"content":"Format: `help`","lastModifiedDate":"2021-02-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":156,"author":{"gitId":"Jellybeano"},"content":"### Adding and removing entries `[coming in v2.0]`","lastModifiedDate":"2021-02-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"xinweit"},"content":"**Q**: How do I transfer my quiz attempt scores to other computers?\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":165,"author":{"gitId":"Cheng20010201"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"Cheng20010201"},"content":"that contains the data of your previous WeebLingo home folder.","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"xinweit"},"content":"**Q**: Can I add my customized flashcards?\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":169,"author":{"gitId":"Cheng20010201"},"content":"**A**: Sorry, the current version of the application does not allow self-defined flashcards to be added. However, if you","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"Cheng20010201"},"content":"are advanced and you know how to manipulate the storage files, you can do so if you want.","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Cheng20010201"},"content":"Action | Format, Examples |","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"Cheng20010201"},"content":"-------|------------------|","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"Jellybeano"},"content":"**Start** | `start`","lastModifiedDate":"2021-02-24"},{"lineNumber":179,"author":{"gitId":"Jellybeano"},"content":"**Check** | `check`","lastModifiedDate":"2021-02-24"},{"lineNumber":180,"author":{"gitId":"Jellybeano"},"content":"**Next** | `next`","lastModifiedDate":"2021-02-24"},{"lineNumber":181,"author":{"gitId":"Jellybeano"},"content":"**Learn** | `learn`","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"Jellybeano"},"content":"**End** | `end`","lastModifiedDate":"2021-02-24"},{"lineNumber":183,"author":{"gitId":"Cheng20010201"},"content":"**History**|`history`","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"Jellybeano"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-02-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Jellybeano":42,"xinweit":35,"Cheng20010201":12,"-":96}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Jellybeano"},"content":"    content: \"Weeblingo\";","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Jellybeano":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"user -[USER_COLOR]\u003e ui : \"learn\"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"learn\")","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"logic -[LOGIC_COLOR]\u003e model : switchModeLearn()","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveFlashcardBook(flashcardBook)","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jellybeano":3,"xyzhang00":1,"-":34}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"FlashcardBook *-right-\u003e \"1\" UniqueFlashcardList","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"FlashcardBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"UniqueTagList -[hidden]down- UniqueFlashcardList","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"UniqueTagList -[hidden]down- UniqueFlashcardList","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"UniqueFlashcardList o-right-\u003e Flashcard","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"Flashcard -up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"Flashcard *--\u003e Question","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"Flashcard *--\u003e Answer","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jellybeano":8,"-":11}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"if () then ([command commits FlashcardBook])","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    :Save FlashcardBook to","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"    flashcardBookStateList;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jellybeano":3,"-":12}},{"path":"docs/diagrams/FlashcardWithTagsObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"@startuml","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"!include style.puml","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"WeeblingoBook *-right-\u003e \"1\" UniqueFlashcardList","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"WeeblingoBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"UniqueTagList -[hidden]down- UniqueFlashcardList","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"UniqueTagList -[hidden]down- UniqueFlashcardList","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"UniqueFlashcardList o-right-\u003e Flashcard","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"Flashcard -up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"Flashcard *--\u003e Question","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"Flashcard *--\u003e Answer","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"@enduml","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Jellybeano":20}},{"path":"docs/diagrams/HistoryModelDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"FlashcardBook --\u003e \"1\" UniqueScoreHistoryList","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"UniqueScoreHistoryList --\u003e \"*\" Score","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Cheng20010201":10}},{"path":"docs/diagrams/HistoryUiSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"participant \":ViewHistoryCommand\" as ViewHistoryCommand LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"[-\u003e MainWindow : executeCommand(\"history\")","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"activate MainWindow","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"MainWindow -\u003e LogicManager : execute(\"history\")","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"activate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"LogicManager -\u003e ViewHistoryCommand : execute(model)","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"activate ViewHistoryCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"ViewHistoryCommand -\u003e ModelManager : switchModeQuiz()","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"ViewHistoryCommand --\u003e LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"deactivate ViewHistoryCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"ViewHistoryCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"destroy ViewHistoryCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"LogicManager --\u003e MainWindow : commandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"MainWindow -\u003e LogicManager : isShowingHistory()","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"activate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"LogicManager -\u003e ModelManager : getMode()","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"activate ModelManager","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"deactivate ModelManager","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"LogicManager --\u003e MainWindow : isHistory","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"MainWindow -\u003e MainWindow : changePlaceHolderContent(isHistory)","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"activate MainWindow","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"ViewHistoryCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"deactivate MainWindow","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"[\u003c--MainWindow","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"deactivate MainWindow","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Cheng20010201":57}},{"path":"docs/diagrams/LearnSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"@startuml","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"!include style.puml","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"participant \":WeeblingoParser\" as WeeblingoParser LOGIC_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"participant \":LearnCommand\" as LearnCommand LOGIC_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"end box","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"end box","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"[-\u003e LogicManager : execute(\"learn\")","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"activate LogicManager","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"LogicManager -\u003e WeeblingoParser : parseCommand(\"learn\")","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"activate WeeblingoParser","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"create LearnCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"WeeblingoParser -\u003e LearnCommand :","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"activate LearnCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"LearnCommand --\u003e WeeblingoParser :","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"deactivate LearnCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"WeeblingoParser --\u003e LogicManager :","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"deactivate WeeblingoParser","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"LogicManager -\u003e LearnCommand : execute()","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"activate LearnCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"LearnCommand -\u003e Model : updateFilteredFlashcardList","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"activate Model","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"Model --\u003e LearnCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"deactivate Model","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"create CommandResult","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"LearnCommand -\u003e CommandResult","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"activate CommandResult","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"CommandResult --\u003e LearnCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"LearnCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"deactivate LearnCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"@enduml","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Jellybeano":52}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"Class WeeblingoParser","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"LogicManager --\u003e\"1\" WeeblingoParser","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"WeeblingoParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"note right of XYZCommand: XYZCommand \u003d StartCommand, \\nLearnCommand, etc","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jellybeano":4,"-":58}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"Interface ReadOnlyFlashcardBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"Class FlashcardBook","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"Class ReadOnlyFlashcardBook","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"Package Flashcard {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"Class Flashcard","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"Class Question","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"Class Answer","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"Class UniqueFlashcardList","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"FlashcardBook .up.|\u003e ReadOnlyFlashcardBook","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"ModelManager o--\u003e \"1\" FlashcardBook","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"FlashcardBook *--\u003e \"1\" UniqueFlashcardList","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"UniqueFlashcardList o--\u003e \"*\" Flashcard","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"Flashcard *--\u003e Question","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"Flashcard *--\u003e Answer","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"Flashcard *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"Question -[hidden]right-\u003e Answer","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"ModelManager -----\u003e\" ~* filtered list\" Flashcard","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jellybeano":19,"-":33}},{"path":"docs/diagrams/NewTagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"@startuml","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"start","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":":User enters tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"if () then ([Duplicate tag already exists on specified flashcard])","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    :show error message;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"else ([else])","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"    :New tag is added to UniqueTagList;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    :Changes are reflected in the UI;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"endif","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"stop","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"@enduml","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Jellybeano":15}},{"path":"docs/diagrams/QuizActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yanneko"},"content":"@startuml","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Yanneko"},"content":"start","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":":User executes Quiz command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Yanneko"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Yanneko"},"content":":Weeblingo enters Quiz mode;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Yanneko"},"content":"stop","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Yanneko"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Yanneko":10}},{"path":"docs/diagrams/QuizSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yanneko"},"content":"@startuml","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Yanneko"},"content":"!include style.puml","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Yanneko"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"participant \":WeeblingoParser\" as WeeblingoParser LOGIC_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"participant \"command:QuizCommand\" as QuizCommand LOGIC_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Yanneko"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Yanneko"},"content":"end box","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Yanneko"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"participant \":Mode\" as Mode MODEL_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"end box","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Yanneko"},"content":"[-\u003e LogicManager : execute(quiz)","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Yanneko"},"content":"activate LogicManager","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"LogicManager -\u003e WeeblingoParser : parseCommand(undo)","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Yanneko"},"content":"activate WeeblingoParser","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Yanneko"},"content":"create QuizCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"WeeblingoParser -\u003e QuizCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Yanneko"},"content":"activate QuizCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Yanneko"},"content":"QuizCommand --\u003e WeeblingoParser","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Yanneko"},"content":"deactivate QuizCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Yanneko"},"content":"WeeblingoParser --\u003e LogicManager : command","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Yanneko"},"content":"deactivate WeeblingoParser","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Yanneko"},"content":"LogicManager -\u003e QuizCommand : execute(model)","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Yanneko"},"content":"activate QuizCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Yanneko"},"content":"QuizCommand -\u003e ModelManager : getMode()","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Yanneko"},"content":"activate ModelManager","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Yanneko"},"content":"ModelManager --\u003e QuizCommand : mode","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Yanneko"},"content":"deactivate ModelManager","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Yanneko"},"content":"QuizCommand -\u003e Mode : switchModeQuiz()","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Yanneko"},"content":"activate Mode","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Yanneko"},"content":"deactivate Mode","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Yanneko"},"content":"create CommandResult","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Yanneko"},"content":"QuizCommand -\u003e CommandResult","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Yanneko"},"content":"activate CommandResult","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Yanneko"},"content":"CommandResult --\u003e QuizCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Yanneko"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Yanneko"},"content":"QuizCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Yanneko"},"content":"deactivate QuizCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Yanneko"},"content":"QuizCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Yanneko"},"content":"destroy QuizCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Yanneko"},"content":"[\u003c--LogicManager : commandResult","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Yanneko"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Yanneko"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Yanneko":60}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"package \"Storage Representation\" {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"Interface FlashcardBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"Class JsonFlashcardBookStorage","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"StorageManager o--\u003e FlashcardBookStorage","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"JsonFlashcardBookStorage .left.|\u003e FlashcardBookStorage","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"JsonFlashcardBookStorage .down.\u003e JsonSerializableFlashcardBook","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"JsonSerializableFlashcardBook .right.\u003e JsonAdaptedFlashcard","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"JsonAdaptedFlashcard .down.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"JsonSerializableFlashcardBook .down.\u003e JsonAdaptedScore","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"package \"Storage Loading\" {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    Class LocalDatabasePopulator","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    Class JsonDatabaseReader","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"  JsonDatabaseReader .down.\u003e LocalDatabasePopulator","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Cheng20010201":18,"-":17}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"Class XYZListPanel","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"Class XYZCard","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"MainWindow *-down-\u003e XYZListPanel","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"XYZListPanel -down-\u003e XYZCard","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"XYZListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"XYZCard --|\u003e UiPart","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"XYZCard ..\u003e Model","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"XYZListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Cheng20010201":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"ecp -\u003e ec ++: index, editFlashcardDescriptor","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"Jellybeano":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"title: Weeblingo","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-T13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-T13-1/tp/actions)","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T13-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-T13-1/tp/)","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"**Weeblingo is a desktop flashcard application for beginner Japanese learners.**","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"* If you are interested in using Weeblingo, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"* If you are interested about developing Weeblingo, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"* Libraries used: [JavaFX](https://openjfx.io/),","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"  [Jackson](https://github.com/FasterXML/jackson),","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"  [JUnit5](https://github.com/junit-team/junit5),","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"  [json-simple](https://code.google.com/archive/p/json-simple/)","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Cheng20010201":11,"-":12}},{"path":"docs/team/JWong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yanneko"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":2,"author":{"gitId":"Yanneko"},"content":"layout: page","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":"title: Joel Wong\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"## Project: Weeblingo","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"Yanneko"},"content":"Weeblingo is a desktop app for managing flashcards, optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"Yanneko"},"content":"while still having the benefits of a Graphical User Interface (GUI). With a nice and friendly interface,","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"Yanneko"},"content":"users can learn Japanese at a comfortable pace with this application.","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"* **New Feature**:","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"* **New Feature**:","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"Yanneko"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"Yanneko"},"content":"* **Project management**:","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"Yanneko"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"Yanneko"},"content":"* **Community**:","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"Yanneko"},"content":"* **Tools**:","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"Yanneko":21}},{"path":"docs/team/cheng20010201.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"layout: page","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"title: Sun Yucheng\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"## Project: Weeblingo","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"Weeblingo is a desktop app for managing flashcards, optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"while still having the benefits of a Graphical User Interface (GUI). With a nice and friendly interface,","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"users can learn Japanese at a comfortable pace with this application.","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"* **New Feature**:","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"* **New Feature**:","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"* **Project management**:","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"* **Community**:","lastModifiedDate":"2021-02-23"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"* **Tools**:","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"Cheng20010201":21}},{"path":"docs/team/lanyuxuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"layout: page","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"title: Lan Yu Xuan\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"## Project: WeebLingo","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"-- TO BE UPDATED LATER--","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-23"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-23"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-23"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"* **Project management**:","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-23"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    * User Guide:","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-23"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-23"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"* **Community**:","lastModifiedDate":"2021-02-23"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-23"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-23"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-23"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"* **Tools**:","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-23"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-23"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"Jellybeano":49}},{"path":"docs/team/tengxinwei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"layout: page","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"title: Teng Xin Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"xinweit"},"content":"## Project: WeebLingo","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"xinweit"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"* **Project management**:","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"    * User Guide:","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-24"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"* **Community**:","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"xinweit"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"* **Tools**:","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"xinweit":46}},{"path":"docs/team/zhangxinyi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"layout: page","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"title: Zhang Xinyi\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"## Project: Weeblingo","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"Weeblingo is a desktop app for managing flashcards, optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"while still having the benefits of a Graphical User Interface (GUI). With a nice and friendly interface,","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"users can learn Japanese at a comfortable pace with this application.","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"Given below are my contributions to the project.`to be updated`","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"* **New Feature**:","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"* **New Feature**:","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"* **Project management**:","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"* **Community**:","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"* **Tools**:","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"xyzhang00":29}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":" * Changes the remark of an existing flashcard in the address book.","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the flashcard identified \"","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"            + \"by the index number used in the last flashcard listing. \"","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"     * @param index of the flashcard in the filtered flashcard list to edit the remark","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"     * @param remark of the flashcard to be updated to","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"xyzhang00"},"content":"Create a `RemarkCommandParser` class in the `seedu.weeblingo.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"Jellybeano"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of flashcard data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the flashcard’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a flashcard.","lastModifiedDate":"2021-02-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"xyzhang00"},"content":"Create a new `Remark` in `seedu.weeblingo.model.flashcard`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"Jellybeano"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each flashcard.","lastModifiedDate":"2021-02-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"xyzhang00"},"content":"Simply add the following to [`seedu.weeblingo.ui.FlashcardCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"Jellybeano"},"content":"public PersonCard(Person flashcard, int displayedIndex) {","lastModifiedDate":"2021-02-28"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"Jellybeano"},"content":"    remark.setText(flashcard.getRemark().value);","lastModifiedDate":"2021-02-28"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"Jellybeano"},"content":"        Person flashcardToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":344,"author":{"gitId":"Jellybeano"},"content":"        Person editedFlashcard \u003d new Person(flashcardToEdit.getName(), flashcardToEdit.getPhone(), flashcardToEdit.getEmail(),","lastModifiedDate":"2021-02-28"},{"lineNumber":345,"author":{"gitId":"Jellybeano"},"content":"                flashcardToEdit.getAddress(), remark, flashcardToEdit.getTags());","lastModifiedDate":"2021-02-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"Jellybeano"},"content":"        model.setPerson(flashcardToEdit, editedFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"Jellybeano"},"content":"        return new CommandResult(generateSuccessMessage(editedFlashcard));","lastModifiedDate":"2021-02-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"Jellybeano"},"content":"     * {@code flashcardToEdit}.","lastModifiedDate":"2021-02-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"Jellybeano"},"content":"    private String generateSuccessMessage(Person flashcardToEdit) {","lastModifiedDate":"2021-02-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"Jellybeano"},"content":"        return String.format(message, flashcardToEdit);","lastModifiedDate":"2021-02-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Jellybeano":17,"xyzhang00":6,"-":371}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"The `address` field in `Person` is actually an instance of the `seedu.weeblingo.model.flashcard.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"  \"flashcards\": [ {","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Jellybeano":1,"xyzhang00":1,"-":101}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.weeblingo.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"Jellybeano"},"content":"       Person flashcardToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":156,"author":{"gitId":"Jellybeano"},"content":"       Person editedFlashcard \u003d createEditedPerson(flashcardToEdit, editFlashcardDescriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":157,"author":{"gitId":"Jellybeano"},"content":"       if (!flashcardToEdit.isSamePerson(editedFlashcard) \u0026\u0026 model.hasPerson(editedFlashcard)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Jellybeano"},"content":"       model.setPerson(flashcardToEdit, editedFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"Jellybeano"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedFlashcard));","lastModifiedDate":"2021-02-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"Jellybeano"},"content":"       flashcards.addAll(","lastModifiedDate":"2021-02-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Jellybeano":6,"xyzhang00":1,"-":243}},{"path":"src/main/java/seedu/weeblingo/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.FileUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"xyzhang00":3,"-":61}},{"path":"src/main/java/seedu/weeblingo/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"xyzhang00":1,"-":24}},{"path":"src/main/java/seedu/weeblingo/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.Config;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.Version;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.StringUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.Logic;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.LogicManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.FlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.FlashcardBookStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.JsonFlashcardBookStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.storage.LocalDatabasePopulator;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.Storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.StorageManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.ui.Ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.ui.UiManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing FlashcardBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"        FlashcardBookStorage flashcardBookStorage \u003d new JsonFlashcardBookStorage(userPrefs.getFlashcardBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"        storage \u003d new StorageManager(flashcardBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s flashcard book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"     * The data from the sample flashcard book will be used instead if {@code storage}\u0027s flashcard book is not found,","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"     * or an empty flashcard book will be used instead if errors occur when reading {@code storage}\u0027s flashcard book.","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":"        Optional\u003cReadOnlyFlashcardBook\u003e flashcardOptional;","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"xyzhang00"},"content":"        ReadOnlyFlashcardBook initialData;","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"            flashcardOptional \u003d storage.readFlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"            if (!flashcardOptional.isPresent()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"                logger.info(\"Data file not found. Will be starting with a sample FlashcardBook\");","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"xyzhang00"},"content":"            initialData \u003d flashcardOptional.orElseGet(LocalDatabasePopulator::getDatabaseOfWeeblingo);","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"            logger.info(String.format(\"Weeblingo database succesfully populated: %s\", initialData.toString()));","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"xyzhang00"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty FlashcardBook\");","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"            initialData \u003d new FlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"xyzhang00"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FlashcardBook\");","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"            initialData \u003d new FlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"xyzhang00"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FlashcardBook\");","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"xyzhang00"},"content":"        logger.info(\"Starting FlashcardBook \" + MainApp.VERSION);","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"xyzhang00"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Flashcard Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":42,"Cheng20010201":4,"-":139}},{"path":"src/main/java/seedu/weeblingo/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.core;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":1,"-":62}},{"path":"src/main/java/seedu/weeblingo/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.core;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":1,"-":78}},{"path":"src/main/java/seedu/weeblingo/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.core;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    private static final String LOG_FILE \u003d \"weeblingo.log\";","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":2,"-":110}},{"path":"src/main/java/seedu/weeblingo/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.core;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_INVALID_FLASHCARD_DISPLAYED_INDEX \u003d \"The flashcard index provided is invalid\";","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    public static final String NO_QUIZ_ERROR_MESSAGE \u003d \"The quiz hasn\u0027t started yet!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"    public static final String MESSAGE_END_IN_MENU \u003d \"Invalid \u0027end\u0027 command in menu mode\";","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    public static final String MESSAGE_NOT_IN_QUIZ_MODE \u003d \"Not in quiz mode yet.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    public static final String MESSAGE_QUIZ_ENDED \u003d \"The Quiz is over! \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"            + \"Enter \\\"end\\\" to end the quiz. \\n\";","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_TAG_NOT_IN_LEARN_MODE \u003d \"Tagging and deletion of tags \"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"            + \"can only be done in learn mode!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MULTIPLE_CHECKING_AFTER_SUCCESS \u003d \"You already got it correct, please enter \\\"next\\\" \"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"            + \"to go to the next question\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"xinweit"},"content":"    public static final String MESSAGE_QUIZ_ALREADY_ENDED \u003d \"The quiz session has already ended. \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"xinweit"},"content":"            + \"Enter \\\"end\\\" to go back to menu mode.\";;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jellybeano":3,"xyzhang00":2,"xinweit":6,"Cheng20010201":2,"-":10}},{"path":"src/main/java/seedu/weeblingo/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.core;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":1,"-":115}},{"path":"src/main/java/seedu/weeblingo/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.core.index;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xyzhang00":1,"-":53}},{"path":"src/main/java/seedu/weeblingo/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.exceptions;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":1,"-":10}},{"path":"src/main/java/seedu/weeblingo/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.exceptions;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xyzhang00":1,"-":20}},{"path":"src/main/java/seedu/weeblingo/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.MainApp;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xyzhang00":2,"-":40}},{"path":"src/main/java/seedu/weeblingo/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xyzhang00":1,"-":34}},{"path":"src/main/java/seedu/weeblingo/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.Config;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xyzhang00":3,"-":20}},{"path":"src/main/java/seedu/weeblingo/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":1,"-":82}},{"path":"src/main/java/seedu/weeblingo/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":3,"-":140}},{"path":"src/main/java/seedu/weeblingo/commons/util/RegexUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":" * A container for different regex expressions to check whether the input is valid or not.","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"public class RegexUtil {","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    // Miscellaneous regex expressions","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    // Original regex expression for AB3, for reference purposes","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    /*","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"     * The first character of the address and name must not be a whitespace,","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    public static final String REGEX_AB3_ADDRESS \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    public static final String REGEX_AB3_NAME \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    public static final String REGEX_AB3_EMAIL \u003d getAb3EmailRegex();","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    public static final String REGEX_AB3_PHONE \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public static final String REGEX_AB3_TAG \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    // Regex expressions that might be useful in project Weeblingo","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    // The first character of the string to check cannot be white space","lastModifiedDate":"2021-02-26"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    public static final String REGEX_JAP_WORD \u003d","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"            \"[(\\\\p{InHIRAGANA}|\\\\p{InKATAKANA})\"","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"            + \"|\\\\p{InCJK_Unified_Ideographs}}]\"","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"            + \"[(\\\\p{InHIRAGANA}|\\\\p{InKATAKANA})\"","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"            + \"|\\\\p{InCJK_Unified_Ideographs}}]*\";","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    public static final String REGEX_JAP_SENTENCE \u003d","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"            \"[(\\\\p{InHIRAGANA}|\\\\p{InKATAKANA})|\\\\p{InCJK_Unified_Ideographs}|\"","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"            + \"\\\\p{InCJK_Symbols_and_Punctuation}|\\\\p{Alnum}|\\\\p{Punct}]\"","lastModifiedDate":"2021-02-26"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"            + \"[(\\\\p{InHIRAGANA}|\\\\p{InKATAKANA})|\\\\p{InCJK_Unified_Ideographs}|\"","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\\\p{InCJK_Symbols_and_Punctuation}|\\\\p{Alnum}|\\\\p{Punct} ]*\";","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    public static final String REGEX_ENG_WORD \u003d \"[\\\\p{Alpha}][\\\\p{Alpha}]*\";","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    public static final String REGEX_ENG_SENTENCE \u003d \"[\\\\p{Alnum}|\\\\p{Punct}]\"","lastModifiedDate":"2021-02-26"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"            + \"[\\\\p{Alnum}|\\\\p{Punct} ]*\";","lastModifiedDate":"2021-02-26"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the regex expression for AB3 email model.","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     * @return The regex expression for AB3 email model.","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    private static String getAb3EmailRegex() {","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        // alphanumeric and special characters","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        final String localPartRegex \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        final String domainFirstCharacterRegex \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        final String domainMiddleRegex \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        final String domainLastCharacterRegex \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        return localPartRegex + \"@\"","lastModifiedDate":"2021-02-24"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"                + domainFirstCharacterRegex + domainMiddleRegex + domainLastCharacterRegex;","lastModifiedDate":"2021-02-24"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"xyzhang00":1,"Cheng20010201":51}},{"path":"src/main/java/seedu/weeblingo/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":2,"-":66}},{"path":"src/main/java/seedu/weeblingo/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.CommandResult;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"    ReadOnlyFlashcardBook getFlashcardBook();","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    /** Returns an unmodifiable view of the filtered list of flashcards */","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    ObservableList\u003cFlashcard\u003e getFilteredFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    /** Returns an unmodifiable view of the filtered list of scores */","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    ObservableList\u003cScore\u003e getFilteredScoreHistoryList();","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"    /** Returns the current question number in the Quiz */","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"    int getCurrentIndex();","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"     * Returns the user prefs\u0027 flashcard book file path.","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"    Path getFlashcardBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"xinweit"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"xinweit"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"    Model getModel();","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"     * Returns current mode Weeblingo is in","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"    int getCurrentMode();","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"xyzhang00"},"content":"     * True if cards should be shown.","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"    boolean showCards();","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"     * True if answer should be shown.","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"    boolean showAnswer();","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"    boolean isShowingHistory();","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Jellybeano":1,"xyzhang00":27,"xinweit":5,"Cheng20010201":13,"-":32}},{"path":"src/main/java/seedu/weeblingo/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.Command;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.CommandResult;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.WeeblingoParser;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Mode;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.Storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    public static final int LIST_INDEX \u003d -1;","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"    private final WeeblingoParser weeblingoParser;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"        weeblingoParser \u003d new WeeblingoParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        //logging, safe to ignore","lastModifiedDate":"2021-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2021-02-16"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"        Command command \u003d weeblingoParser.parseCommand(commandText);","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2021-02-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"            // Whenever a command is successfully executed, we will store all the content of FlashcardBook.","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"            storage.saveFlashcardBook(model.getFlashcardBook());","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"    public ReadOnlyFlashcardBook getFlashcardBook() {","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"        return model.getFlashcardBook();","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"    public ObservableList\u003cFlashcard\u003e getFilteredFlashcardList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"        return model.getFilteredFlashcardList();","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"    public ObservableList\u003cScore\u003e getFilteredScoreHistoryList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"        return model.getFilteredScoreHistory();","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"    // Gets current index of quiz if quiz started","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"xyzhang00"},"content":"    public int getCurrentIndex() {","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"xyzhang00"},"content":"        if (getCurrentMode() \u003d\u003d Mode.MODE_QUIZ_SESSION || getCurrentMode() \u003d\u003d Mode.MODE_CHECK_SUCCESS) {","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"xyzhang00"},"content":"            return model.getCurrentIndex();","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"xyzhang00"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"xyzhang00"},"content":"            return LIST_INDEX;","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"    };","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"    public Path getFlashcardBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"xyzhang00"},"content":"        return model.getFlashcardBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"xinweit"},"content":"    public Model getModel() {","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"xinweit"},"content":"        return this.model;","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"xyzhang00"},"content":"    public int getCurrentMode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"xyzhang00"},"content":"        return this.model.getCurrentMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"xyzhang00"},"content":"    public boolean showCards() {","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"xyzhang00"},"content":"        if (getCurrentMode() \u003d\u003d Mode.MODE_MENU) {","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"xyzhang00"},"content":"            return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"xyzhang00"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"xyzhang00"},"content":"            return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"xyzhang00"},"content":"    public boolean showAnswer() {","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"xyzhang00"},"content":"        if (getCurrentMode() \u003d\u003d Mode.MODE_CHECK_SUCCESS || getCurrentMode() \u003d\u003d Mode.MODE_LEARN) {","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"xyzhang00"},"content":"            return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"xyzhang00"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"xyzhang00"},"content":"            return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":"    public boolean isShowingHistory() {","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"        return getCurrentMode() \u003d\u003d Mode.MODE_HISTORY;","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xyzhang00":62,"Yanneko":2,"xinweit":4,"Cheng20010201":12,"-":58}},{"path":"src/main/java/seedu/weeblingo/logic/commands/CheckCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.Mode;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":" * Reveals answer for current quiz question","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"public class CheckCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    public static final String COMMAND_WORD \u003d \"check\";","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    public static final String CORRECT_ATTEMPT \u003d \"You answered correctly!\\n\";","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    public static final String WRONG_ATTEMPT \u003d \" is incorrect.\\n\";","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_HELPER \u003d \"Enter \\\"end\\\" to end the quiz \"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"            + \"and \\\"next\\\" to move to the next question.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": checks user answer for displayed flashcard.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"            + \"Parameters: ATTEMPT\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"            + \"Example: \" + COMMAND_WORD + \" apple\";","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    private final Answer attempt;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"     * Creates a CheckCommand to check the specified attempt","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"     * @param attempt","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"    public CheckCommand(Answer attempt) {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(attempt);","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"        this.attempt \u003d attempt;","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"            model.getCurrentFlashcard();","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"            throw new CommandException(Messages.NO_QUIZ_ERROR_MESSAGE);","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        if (model.getCurrentMode() \u003d\u003d Mode.MODE_CHECK_SUCCESS) {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"            throw new CommandException(Messages.MULTIPLE_CHECKING_AFTER_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        // Model::isCorrectAttempt() modifies the quiz statistic, FYI","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"        if (model.isCorrectAttempt(attempt)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"            model.switchModeCheckSuccess();","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"            String quizStatistics \u003d model.getQuizStatisticString() + \"\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(CORRECT_ATTEMPT + quizStatistics + MESSAGE_HELPER,","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"                    false, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"            String quizStatistics \u003d model.getQuizStatisticString() + \"\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(attempt + WRONG_ATTEMPT + quizStatistics + MESSAGE_HELPER,","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"                    false, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"xyzhang00":47,"Cheng20010201":13}},{"path":"src/main/java/seedu/weeblingo/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xyzhang00":3,"-":17}},{"path":"src/main/java/seedu/weeblingo/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xyzhang00":1,"xinweit":1,"-":70}},{"path":"src/main/java/seedu/weeblingo/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import static seedu.weeblingo.model.Mode.MODE_LEARN;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import static seedu.weeblingo.model.Model.PREDICATE_SHOW_ALL_FLASHCARDS;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Question;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Tag(s) deleted successfully!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"            + \": Deletes the requested tag(s), or all tags from the specified flashcard is no tags are provided.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"            + \"Parameters: FLASHCARD_INDEX, (optional) TAG...\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_TAG_DOES_NOT_EXIST \u003d \"The given tag does not exist.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_NO_TAGS_TO_DELETE \u003d \"There are no user tags to delete!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"    private Index index;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"     * Creates a DeleteCommand representing a user command to delete tags from a flashcard.","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"     * @param index The index of the flashcard to be deleted.","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"     * @param tags The tags to be deleted.","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"    public DeleteCommand(Index index, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        if (model.getCurrentMode() !\u003d MODE_LEARN) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"            throw new CommandException(Messages.MESSAGE_TAG_NOT_IN_LEARN_MODE);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"        List\u003cFlashcard\u003e lastShownList \u003d model.getFilteredFlashcardList();","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FLASHCARD_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"        Flashcard flashcardToDeleteTags \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"        if (flashcardToDeleteTags.getUserTags().equals(Collections.emptySet())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"            throw new CommandException(MESSAGE_NO_TAGS_TO_DELETE);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"        boolean isAllTagsExist \u003d true;","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"        for (Tag t : tags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"            isAllTagsExist \u003d isAllTagsExist \u0026\u0026 checkIfTagExists(t, flashcardToDeleteTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"        if (!isAllTagsExist) {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"            throw new CommandException(MESSAGE_TAG_DOES_NOT_EXIST);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"        Flashcard flashcardWithDeletedTags \u003d createDeletedTagFlashcard(flashcardToDeleteTags, tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"        model.setFlashcard(flashcardToDeleteTags, flashcardWithDeletedTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"        model.updateFilteredFlashcardList(PREDICATE_SHOW_ALL_FLASHCARDS);","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"     * Checks if the given tag exists in the given Flashcard\u0027s user tags","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"     * @param tag The tag to be checked.","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"     * @param flashcard The flashcard to be checked.","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"     * @return true if the tag exists, false otherwise.","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"    private boolean checkIfTagExists(Tag tag, Flashcard flashcard) {","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"        for (Tag otherTag : flashcard.getUserTags()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"            if (otherTag.equals(tag)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"     * Creates a copy of the provided flashcard, but with edited tag values.","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"     * @param flashcardToEdit The flashcard that requires editing.","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"     * @param userTagsToRemove The tags that the user wishes to remove from the flashcard.","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"     * @return A new flashcard with the tags removed.","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"    private static Flashcard createDeletedTagFlashcard(Flashcard flashcardToEdit, Set\u003cTag\u003e userTagsToRemove) {","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"        assert userTagsToRemove !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"        Question question \u003d flashcardToEdit.getQuestion();","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"        Answer answer \u003d flashcardToEdit.getAnswer();","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"        Set\u003cTag\u003e tags \u003d flashcardToEdit.getWeeblingoTags();","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"        Set\u003cTag\u003e userTags \u003d flashcardToEdit.getUserTags();","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"        if (userTagsToRemove.equals(Collections.emptySet())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"            userTags \u003d Collections.emptySet();","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"            userTags.removeAll(userTagsToRemove);","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"        return new Flashcard(question, answer, tags, userTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Jellybeano":125}},{"path":"src/main/java/seedu/weeblingo/logic/commands/EndCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.model.Mode;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":" * Ends the current quiz session and returns the user to the original start page.","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"public class EndCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"    public static final String COMMAND_WORD \u003d \"end\";","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Welcome back.\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"            + \"Enter \\\"learn\\\" or \\\"quiz\\\" for different modes.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"        int currentMode \u003d model.getCurrentMode();","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"        if (currentMode !\u003d Mode.MODE_MENU) {","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"            model.clearQuizInstance();","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"            model.switchModeMenu();","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"            return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"            throw new CommandException(Messages.MESSAGE_END_IN_MENU);","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"xinweit"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":26,"xinweit":8}},{"path":"src/main/java/seedu/weeblingo/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Weeblingo as requested ...\";","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"xyzhang00":3,"-":16}},{"path":"src/main/java/seedu/weeblingo/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xyzhang00":2,"-":19}},{"path":"src/main/java/seedu/weeblingo/logic/commands/LearnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.model.Model.PREDICATE_SHOW_ALL_FLASHCARDS;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":" * Lists all flashcards in the address book to the user.","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"public class LearnCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    public static final String COMMAND_WORD \u003d \"learn\";","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You are now in learn mode.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"            + \"Enter \\\"end\\\" to end your study or \"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"            + \"\\\"quiz\\\" to start a quiz session on the flashcards.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"        model.updateFilteredFlashcardList(PREDICATE_SHOW_ALL_FLASHCARDS);","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"        model.switchModeLearn();","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jellybeano":2,"xyzhang00":5,"xinweit":2,"Cheng20010201":3,"-":15}},{"path":"src/main/java/seedu/weeblingo/logic/commands/NextCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.model.Mode;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Yanneko"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Yanneko"},"content":" * Gets the next flashcard.","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"public class NextCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"    public static final String COMMAND_WORD \u003d \"next\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Yanneko"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is the next question.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Yanneko"},"content":"            + \"Enter \\\"end\\\" to end the quiz, \\\"check\\\" to check the answer, \"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"            + \"and \\\"next\\\" to move to the next question.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_SCORE_ADDED \u003d \"Your score has been recorded:\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Yanneko"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Yanneko"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"        int currentMode \u003d model.getCurrentMode();","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        if (model.getQuizInstance() \u003d\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"            throw new CommandException(Messages.NO_QUIZ_ERROR_MESSAGE);","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"Yanneko"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"        if (model.getNextFlashcard() \u003d\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"            if (currentMode \u003d\u003d Mode.MODE_QUIZ_SESSION_ENDED) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"                throw new CommandException(Messages.MESSAGE_QUIZ_ALREADY_ENDED);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            String quizStatistics \u003d model.getQuizStatisticString();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"            model.addScore();","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"            model.switchModeQuizSessionEnded();","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"xinweit"},"content":"            return new CommandResult(Messages.MESSAGE_QUIZ_ENDED + MESSAGE_SCORE_ADDED + quizStatistics);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"        model.switchModeQuizSession();","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Yanneko"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"xyzhang00":12,"Yanneko":21,"xinweit":7,"Cheng20010201":4}},{"path":"src/main/java/seedu/weeblingo/logic/commands/QuizCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" * Enter flashcard quiz mode.","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"public class QuizCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    public static final String COMMAND_WORD \u003d \"quiz\";","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You are now in quiz mode.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            + \"Enter \\\"start\\\" to start quiz.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"        model.updateFilteredFlashcardList(Model.PREDICATE_SHOW_ALL_FLASHCARDS);","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"        model.switchModeQuiz();","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"xyzhang00":5,"xinweit":2,"Cheng20010201":18}},{"path":"src/main/java/seedu/weeblingo/logic/commands/StartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Yanneko"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.model.Mode;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":" * Starts the quiz.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Yanneko"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Yanneko"},"content":"public class StartCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"    public static final String COMMAND_WORD \u003d \"start\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Yanneko"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is the first question.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Yanneko"},"content":"            + \"Enter \\\"end\\\" to end the quiz, \\\"check\\\" to check the answer, \"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"            + \"and \\\"next\\\" to move to the next question.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Yanneko"},"content":"    public static final String MESSAGE_TAG_NOT_FOUND \u003d \"Oops, no flashcards have that tag!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Yanneko"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": starts a new quiz with the specified number of \"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Yanneko"},"content":"            + \"questions, filtered to have only questions that have the specified tag(s). All parameters are\"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Yanneko"},"content":"            + \"optional. \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Yanneko"},"content":"            + \"Parameters: QUIZ_SIZE, TAGS\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Yanneko"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/5 t/hiragana t/gojuon\";","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Yanneko"},"content":"    public static final String MESSAGE_INVALID_NUMBER_OF_QUESTIONS \u003d \"Oops! Number of questions must \"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Yanneko"},"content":"            + \"be a positive integer!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"    private int numOfQnsForQuizSession;","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Yanneko"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"xinweit"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"Yanneko"},"content":"     * Command to start a quiz session of length specified by numberOfQuestions","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Yanneko"},"content":"     * and filtered by a specified set of Tags.","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Yanneko"},"content":"     * @param numberOfQuestions The specified length of the quiz.","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Yanneko"},"content":"     * @param tagsSet The specified tags by which to filter the questions.","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"Yanneko"},"content":"    public StartCommand(int numberOfQuestions, Set\u003cTag\u003e tagsSet) {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Yanneko"},"content":"        this.numOfQnsForQuizSession \u003d numberOfQuestions;","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Yanneko"},"content":"        this.tags \u003d tagsSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Yanneko"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"        int currentMode \u003d model.getCurrentMode();","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"        if (currentMode \u003d\u003d Mode.MODE_QUIZ) {","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Yanneko"},"content":"            model.startQuiz(numOfQnsForQuizSession, tags);","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"            model.switchModeQuizSession();","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"            return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"xinweit"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"xinweit"},"content":"            throw new CommandException(Messages.MESSAGE_NOT_IN_QUIZ_MODE);","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"xinweit"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Yanneko"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"Yanneko"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"Yanneko"},"content":"        if (other instanceof StartCommand) {","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"Yanneko"},"content":"            StartCommand otherCommand \u003d (StartCommand) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"Yanneko"},"content":"            return this.numOfQnsForQuizSession \u003d\u003d otherCommand.numOfQnsForQuizSession","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Yanneko"},"content":"                \u0026\u0026 this.tags.containsAll(otherCommand.tags)","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Yanneko"},"content":"                \u0026\u0026 otherCommand.tags.containsAll(this.tags);","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"Yanneko"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"Yanneko"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"Yanneko"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"Yanneko"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"Yanneko"},"content":"    public String toString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"Yanneko"},"content":"        return numOfQnsForQuizSession + tags.toString();","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"Yanneko"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"xyzhang00":4,"Yanneko":61,"xinweit":15}},{"path":"src/main/java/seedu/weeblingo/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import static seedu.weeblingo.model.Mode.MODE_LEARN;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import static seedu.weeblingo.model.Model.PREDICATE_SHOW_ALL_FLASHCARDS;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Question;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":" * Adds a tag to a Flashcard","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Tag added successfully!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"            + \": Tags the indicated flashcard with the requested tag(s).\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"            + \"Parameters: FLASHCARD_INDEX, TAG...\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 t/very difficult t/revise by tomorrow\";","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"Duplicate tags are not allowed.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"    private Index index;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"     * Creates a TagCommand representing a user command to add tags to a flashcard.","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"     * @param index The index of the flashcard to have tags added to.","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"     * @param tags The tags to be added.","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"    public TagCommand(Index index, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        if (model.getCurrentMode() !\u003d MODE_LEARN) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"            throw new CommandException(Messages.MESSAGE_TAG_NOT_IN_LEARN_MODE);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"        List\u003cFlashcard\u003e lastShownList \u003d model.getFilteredFlashcardList();","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FLASHCARD_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"        Flashcard flashcardToTag \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"        Flashcard taggedFlashcard \u003d createTaggedFlashcard(flashcardToTag, tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"        for (Tag t : flashcardToTag.getUserTags()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"            if (checkUserTagsForDuplicates(t)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"        model.setFlashcard(flashcardToTag, taggedFlashcard);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"        model.updateFilteredFlashcardList(PREDICATE_SHOW_ALL_FLASHCARDS);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"     * Checks if the given tag(s) already exists in the given Flashcard\u0027s user tags","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"     * @param tag The tag to be checked.","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"     * @return true if the tag(s) already exist, false otherwise.","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"    private boolean checkUserTagsForDuplicates(Tag tag) {","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"        for (Tag otherTag : tags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"            if (tag.equals(otherTag)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"     * Creates a copy of the provided flashcard, but with edited tag values.","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"     * Previous tags are kept and not overwritten.","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"     * @param flashcardToEdit The flashcard that requires editing.","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"     * @param userTagsToAdd The tags that the user wishes to add to the flashcard.","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"     * @return A new flashcard with tags added.","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"    private static Flashcard createTaggedFlashcard(Flashcard flashcardToEdit, Set\u003cTag\u003e userTagsToAdd) {","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"        assert userTagsToAdd !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"        Question question \u003d flashcardToEdit.getQuestion();","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"        Answer answer \u003d flashcardToEdit.getAnswer();","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"        Set\u003cTag\u003e tags \u003d flashcardToEdit.getWeeblingoTags();","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"        Set\u003cTag\u003e userTags \u003d flashcardToEdit.getUserTags();","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"        userTags.addAll(userTagsToAdd);","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"        return new Flashcard(question, answer, tags, userTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"Jellybeano":114}},{"path":"src/main/java/seedu/weeblingo/logic/commands/ViewHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import static seedu.weeblingo.model.Model.PREDICATE_SHOW_ALL_SCORES;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" * Lists all scoring history in the Flashcard-book to the user.","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"public class ViewHistoryCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    public static final String COMMAND_WORD \u003d \"history\";","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"These are your past quiz attempts.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            + \"Enter \\\"end\\\" to go back to main menu, or \"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"            + \"\\\"quiz\\\" to start a new quiz session, or \"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"            + \"\\\"learn\\\" to start a learn session on all flashcards.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        model.updateFilteredScoreHistory(PREDICATE_SHOW_ALL_SCORES);","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        model.switchModeHistory();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":26}},{"path":"src/main/java/seedu/weeblingo/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands.exceptions;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.Command;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"xyzhang00":2,"-":17}},{"path":"src/main/java/seedu/weeblingo/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"xyzhang00":1,"-":59}},{"path":"src/main/java/seedu/weeblingo/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"xyzhang00":1,"-":147}},{"path":"src/main/java/seedu/weeblingo/logic/parser/CheckCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.CheckCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"public class CheckCommandParser implements Parser\u003cCheckCommand\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":"     * Parses the given {@code String} of arguments in the context of CheckCommand and returns the CheckCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"     * object for execution.","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    public CheckCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CheckCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        Answer attempt \u003d ParserUtil.parseAnswer(trimmedArgs);","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"        return new CheckCommand(attempt);","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"xyzhang00":23,"Yanneko":2}},{"path":"src/main/java/seedu/weeblingo/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    public static final Prefix PREFIX_QUESTION \u003d new Prefix(\"q/\");","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    public static final Prefix PREFIX_ANSWER \u003d new Prefix(\"a/\");","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":"    public static final Prefix PREFIX_START_NUMBER \u003d new Prefix(\"n/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Jellybeano":2,"xyzhang00":1,"Yanneko":1,"-":10}},{"path":"src/main/java/seedu/weeblingo/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import static seedu.weeblingo.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"     * Parses the given {@code String} of arguments in the context of DeleteCommand.","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"     * @param args Given arguments","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"     * @return The DeleteCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"     * @throws ParseException if the given arguments do not comply with the requirements of the DeleteCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        Index index;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        Set\u003cTag\u003e tags \u003d parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).orElse(Collections.emptySet());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"        return new DeleteCommand(index, tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Jellybeano":59}},{"path":"src/main/java/seedu/weeblingo/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.Command;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"xyzhang00":3,"-":13}},{"path":"src/main/java/seedu/weeblingo/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.StringUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Question;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"     * Parses a {@code String answer} into an {@code Answer}.","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"     * @throws ParseException if the given {@code Answer} is invalid.","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"    public static Answer parseAnswer(String answer) throws ParseException {","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(answer);","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"        String trimmedAnswer \u003d answer.trim();","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        if (!Answer.isValidAnswer(trimmedAnswer)) {","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"            throw new ParseException(Answer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        return new Answer(trimmedAnswer);","lastModifiedDate":"2021-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"     * Parses a {@code String question} into an {@code question}.","lastModifiedDate":"2021-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"     * @throws ParseException if the given {@code question} is invalid.","lastModifiedDate":"2021-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"    public static Question parseQuestion(String question) throws ParseException {","lastModifiedDate":"2021-02-27"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(question);","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"        String trimmedQuestion \u003d question.trim();","lastModifiedDate":"2021-02-27"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"        if (!Question.isValidQuestion(trimmedQuestion)) {","lastModifiedDate":"2021-02-27"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"            throw new ParseException(Question.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"        return new Question(trimmedQuestion);","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Jellybeano":16,"xyzhang00":7,"-":70}},{"path":"src/main/java/seedu/weeblingo/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"xyzhang00":1,"-":38}},{"path":"src/main/java/seedu/weeblingo/logic/parser/StartCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yanneko"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_START_NUMBER;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Yanneko"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Yanneko"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.StartCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"public class StartCommandParser implements Parser\u003cStartCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Yanneko"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Yanneko"},"content":"     * Parses the given {@code String} of arguments in the context of StartCommand and returns the StartCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"     * object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Yanneko"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Yanneko"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Yanneko"},"content":"    public StartCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_START_NUMBER, PREFIX_TAG);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Yanneko"},"content":"        Optional\u003cString\u003e stringNumberOfQuestions \u003d argMultimap.getValue(PREFIX_START_NUMBER);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Yanneko"},"content":"        int numberOfQuestions;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Yanneko"},"content":"        if (stringNumberOfQuestions.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Yanneko"},"content":"            numberOfQuestions \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Yanneko"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Yanneko"},"content":"            try {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Yanneko"},"content":"                numberOfQuestions \u003d Integer.parseInt(stringNumberOfQuestions.get());","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Yanneko"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Yanneko"},"content":"                throw new ParseException(StartCommand.MESSAGE_INVALID_NUMBER_OF_QUESTIONS);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Yanneko"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Yanneko"},"content":"            if (numberOfQuestions \u003c\u003d 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Yanneko"},"content":"                throw new ParseException(StartCommand.MESSAGE_INVALID_NUMBER_OF_QUESTIONS);","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Yanneko"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Yanneko"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Yanneko"},"content":"        List\u003cString\u003e tagsList \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Yanneko"},"content":"        Set\u003cTag\u003e tagsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Yanneko"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Yanneko"},"content":"            for (String tag : tagsList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Yanneko"},"content":"                tagsSet.add(new Tag(tag));","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Yanneko"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Yanneko"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Yanneko"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Yanneko"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Yanneko"},"content":"        return new StartCommand(numberOfQuestions, tagsSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Yanneko"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Yanneko":53}},{"path":"src/main/java/seedu/weeblingo/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import static seedu.weeblingo.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.logic.commands.TagCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"     * Parses the given {@code String} of arguments in the context of TagCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"     * @param args Given arguments","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"     * @return The TagCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"     * @throws ParseException if the given arguments do not comply with the requirements of the TagCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        Index index;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        Set\u003cTag\u003e tags \u003d parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).orElse(Collections.emptySet());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"        return new TagCommand(index, tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Jellybeano":59}},{"path":"src/main/java/seedu/weeblingo/logic/parser/WeeblingoParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.CheckCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.Command;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.EndCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.LearnCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.NextCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.QuizCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.StartCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.logic.commands.TagCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.logic.commands.ViewHistoryCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"public class WeeblingoParser {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"        case EndCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"            return new EndCommand();","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"        case LearnCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"            return new LearnCommand();","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"        case QuizCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"            return new QuizCommand();","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Yanneko"},"content":"        case StartCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Yanneko"},"content":"            return new StartCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Yanneko"},"content":"        case NextCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Yanneko"},"content":"            return new NextCommand();","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"        case CheckCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"            return new CheckCommandParser().parse(arguments);","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"        case ViewHistoryCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"            return new ViewHistoryCommand();","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jellybeano":8,"xyzhang00":17,"xinweit":5,"Yanneko":6,"Cheng20010201":7,"-":45}},{"path":"src/main/java/seedu/weeblingo/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser.exceptions;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"xyzhang00":2,"-":15}},{"path":"src/main/java/seedu/weeblingo/model/FlashcardBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.UniqueFlashcardList;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.flashcard.UniqueScoreHistoryList;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":" * Wraps all data at the flashcard-book level","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":" * Duplicates are not allowed (by .isSameFlashcard comparison)","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"public class FlashcardBook implements ReadOnlyFlashcardBook {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    private final UniqueFlashcardList flashcards;","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    private final UniqueScoreHistoryList scores;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        flashcards \u003d new UniqueFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        scores \u003d new UniqueScoreHistoryList();","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    public FlashcardBook() {}","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"     * Creates an FlashcardBook using the flashcards in the {@code toBeCopied}","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"    public FlashcardBook(ReadOnlyFlashcardBook toBeCopied) {","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"     * Replaces the contents of the flashcard list with {@code flashcards}.","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"     * {@code flashcards} must not contain duplicate flashcards.","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"Yanneko"},"content":"    public void setFlashcards(List\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        this.flashcards.setFlashcards(flashcards);","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"     * Replaces the contents of the Score history list with {@code scores}.","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"     * {@code scores} must not contain duplicate attempt Scores.","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"    public void setScores(List\u003cScore\u003e scores) {","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"        this.scores.setScores(scores);","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"     * Resets the existing data of this {@code FlashcardBook} with {@code newData}.","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"    public void resetData(ReadOnlyFlashcardBook newData) {","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"        setScores(newData.getScoreHistoryList());","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Yanneko"},"content":"        setFlashcards(newData.getFlashcardList());","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"     * Returns true if a flashcard with the same identity as {@code flashcard} exists in the flashcard-book.","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"    public boolean hasFlashcard(Flashcard flashcard) {","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(flashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"        return flashcards.contains(flashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"     * Returns true if a score with the same identity as {@code score} exists in the flashcard-book.","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"    public boolean hasScore(Score score) {","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"        requireNonNull(score);","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"        return scores.contains(score);","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"     * Adds a flashcard to the flashcard-book.","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"     * The flashcard must not already exist in the flashcard-book.","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"    public void addFlashcard(Flashcard p) {","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"        flashcards.add(p);","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"     * Adds an attempt score to the flashcard-book.","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"     * The flashcard must not already exist in the flashcard-book.","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"    public void addScore(Score score) {","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"        scores.add(score);","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"     * Replaces the given flashcard {@code target} in the list with {@code editedFlashcard}.","lastModifiedDate":"2021-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"     * The flashcard identity of {@code editedFlashcard} must not be the same","lastModifiedDate":"2021-02-28"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"     * as another existing flashcard in the address book.","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"    public void setFlashcard(Flashcard target, Flashcard editedFlashcard) {","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(editedFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"        flashcards.setFlashcard(target, editedFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"xyzhang00"},"content":"     * Removes {@code key} from this {@code FlashcardBook}.","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"    public void removeFlashcard(Flashcard key) {","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"        flashcards.remove(key);","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"Flashcards: %d; Scores: %d\",","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"                flashcards.asUnmodifiableObservableList().size(),","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":"                scores.asUnmodifiableObservableList().size());","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":"    public ObservableList\u003cFlashcard\u003e getFlashcardList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"        return flashcards.asUnmodifiableObservableList();","lastModifiedDate":"2021-02-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"    public ObservableList\u003cScore\u003e getScoreHistoryList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"        return scores.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"xyzhang00"},"content":"                || (other instanceof FlashcardBook // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"xyzhang00"},"content":"                \u0026\u0026 flashcards.equals(((FlashcardBook) other).flashcards));","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"Jellybeano"},"content":"        return flashcards.hashCode();","lastModifiedDate":"2021-02-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jellybeano":22,"xyzhang00":12,"Yanneko":2,"Cheng20010201":42,"-":73}},{"path":"src/main/java/seedu/weeblingo/model/Mode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":" * Container for the current mode of WeebLingo.","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"public class Mode {","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"xinweit"},"content":"    public static final int MODE_MENU \u003d 1;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"    public static final int MODE_QUIZ \u003d 2;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"    public static final int MODE_LEARN \u003d 3;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"    public static final int MODE_QUIZ_SESSION \u003d 4;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    public static final int MODE_CHECK_SUCCESS \u003d 5;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    public static final int MODE_HISTORY \u003d 6;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"    public static final int MODE_QUIZ_SESSION_ENDED \u003d 7;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    private int currentMode;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    public Mode() {","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"        this.currentMode \u003d MODE_MENU;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    public void switchModeQuiz() {","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"        this.currentMode \u003d MODE_QUIZ;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    public void switchModeLearn() {","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"        this.currentMode \u003d MODE_LEARN;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    public void switchModeMenu() {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        this.currentMode \u003d MODE_MENU;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"xinweit"},"content":"    public void switchModeQuizSession() {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"xinweit"},"content":"        this.currentMode \u003d MODE_QUIZ_SESSION;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    public void switchModeCheckSuccess() {","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"        this.currentMode \u003d MODE_CHECK_SUCCESS;","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"    public void switchModeHistory() {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"        this.currentMode \u003d MODE_HISTORY;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"    public void switchModeQuizSessionEnded() {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"        this.currentMode \u003d MODE_QUIZ_SESSION_ENDED;","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"     * Returns the current mode of the app.","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"xinweit"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"xinweit"},"content":"     * @return an integer representing current mode of the app","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"    public int getCurrentMode() {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"        return this.currentMode;","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"Jellybeano":27,"xyzhang00":6,"xinweit":21,"Cheng20010201":4}},{"path":"src/main/java/seedu/weeblingo/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    Predicate\u003cFlashcard\u003e PREDICATE_SHOW_ALL_FLASHCARDS \u003d unused -\u003e true;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    Predicate\u003cScore\u003e PREDICATE_SHOW_ALL_SCORES \u003d unused -\u003e true;","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"     * Returns the user prefs\u0027 flashcard book file path.","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"    Path getFlashcardBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"     * Sets the user prefs\u0027 flashcard book file path.","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"    void setFlashcardBookFilePath(Path flashcardBookFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"     * Replaces flashcard book data with the data in {@code flashcardBook}.","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"    void setFlashcardBook(ReadOnlyFlashcardBook flashcardBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"    /** Returns the FlashcardBook */","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"    ReadOnlyFlashcardBook getFlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"     * Returns true if a flashcard with the same identity as {@code flashcard} exists in the flashcard book.","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"    boolean hasFlashcard(Flashcard flashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"     * Deletes the given flashcard.","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"     * The flashcard must exist in the flashcard book.","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"    void deleteFlashcard(Flashcard target);","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"     * Adds the given flashcard.","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"     * {@code flashcard} must not already exist in the flashcard book.","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"    void addFlashcard(Flashcard flashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"     * Replaces the given flashcard {@code target} with {@code editedFlashcard}.","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"     * {@code target} must exist in the flashcard book.","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"     * The flashcard identity of {@code editedFlashcard} must not be the same as","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"xyzhang00"},"content":"     * another existing flashcard in the flashcard book.","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"    void setFlashcard(Flashcard target, Flashcard editedFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"    /** Returns an unmodifiable view of the filtered flashcard list */","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"    ObservableList\u003cFlashcard\u003e getFilteredFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"    /** Returns an unmodifiable view of the filtered score history list */","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"    ObservableList\u003cScore\u003e getFilteredScoreHistory();","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"     * Updates the filter of the filtered flashcard list to filter by the given {@code predicate}.","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"    void updateFilteredFlashcardList(Predicate\u003cFlashcard\u003e predicate);","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"     * Updates the filter of the filtered score history list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"    void updateFilteredScoreHistory(Predicate\u003cScore\u003e predicate);","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"Yanneko"},"content":"    /** Generates a Quiz object and shows the first question","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"Yanneko"},"content":"     * @param numberOfQuestions The specified length of the quiz.","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"Yanneko"},"content":"     * @param tags The specified tags by which to filter the questions.","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"Yanneko"},"content":"     * */","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"Yanneko"},"content":"    void startQuiz(int numberOfQuestions, Set\u003cTag\u003e tags) throws CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"Yanneko"},"content":"    /** Shows the next question in the Quiz */","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"xyzhang00"},"content":"    Flashcard getNextFlashcard();","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"xyzhang00"},"content":"    /** Shows the current question in the Quiz */","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"xyzhang00"},"content":"    void getCurrentFlashcard();","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"xyzhang00"},"content":"    /** Returns the index of current question in the Quiz */","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"xyzhang00"},"content":"    int getCurrentIndex();","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"Yanneko"},"content":"    /** Clears the Quiz instance when the \"end\" command is called */","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"Yanneko"},"content":"    void clearQuizInstance();","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"xyzhang00"},"content":"    boolean isCorrectAttempt(Answer attempt);","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"xinweit"},"content":"    /** Returns the Mode object */","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"xinweit"},"content":"    Mode getMode();","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"xinweit"},"content":"    /** Returns the current mode of the app */","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"xinweit"},"content":"    int getCurrentMode();","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":"    /** Sets a tag */","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"    void tagFlashcard(Flashcard target, String tag);","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"xinweit"},"content":"    /** Gets the quiz instance, which is this quiz session */","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"Yanneko"},"content":"    Quiz getQuizInstance() throws CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"    void switchModeQuiz();","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":"    void switchModeLearn();","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"Cheng20010201"},"content":"    void switchModeMenu();","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"Cheng20010201"},"content":"    void switchModeQuizSession();","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":"    void switchModeCheckSuccess();","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"Cheng20010201"},"content":"    void switchModeHistory();","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"xinweit"},"content":"    void switchModeQuizSessionEnded();","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"Cheng20010201"},"content":"    /** Gets the statistics information as a string for display purposes */","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"Cheng20010201"},"content":"    String getQuizStatisticString();","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"Cheng20010201"},"content":"    /** Add a score to the FlashcardBook */","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"Cheng20010201"},"content":"    void addScore();","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Jellybeano":16,"xyzhang00":34,"Yanneko":14,"xinweit":9,"Cheng20010201":24,"-":59}},{"path":"src/main/java/seedu/weeblingo/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    private final FlashcardBook flashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    private final FilteredList\u003cFlashcard\u003e filteredFlashcards;","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    private final FilteredList\u003cScore\u003e filteredHistoryScores;","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    private final Mode mode;","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"Yanneko"},"content":"    private Quiz quizInstance;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"     * Initializes a ModelManager with the given flashcardBook and userPrefs.","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    public ModelManager(ReadOnlyFlashcardBook flashcardBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"        requireAllNonNull(flashcardBook, userPrefs);","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"        logger.fine(\"Initializing with address book: \" + flashcardBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"        this.flashcardBook \u003d new FlashcardBook(flashcardBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"        filteredFlashcards \u003d new FilteredList\u003c\u003e(this.flashcardBook.getFlashcardList());","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        filteredHistoryScores \u003d new FilteredList\u003c\u003e(this.flashcardBook.getScoreHistoryList());","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"        this.mode \u003d new Mode();","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"        this(new FlashcardBook(), new UserPrefs());","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"xyzhang00"},"content":"    public Path getFlashcardBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"        return userPrefs.getFlashcardBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"xyzhang00"},"content":"    public void setFlashcardBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"xyzhang00"},"content":"        userPrefs.setFlashcardsFilePath(addressBookFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FlashcardBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"    public void setFlashcardBook(ReadOnlyFlashcardBook flashcardBook) {","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"xyzhang00"},"content":"        this.flashcardBook.resetData(flashcardBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"xyzhang00"},"content":"    public ReadOnlyFlashcardBook getFlashcardBook() {","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"xyzhang00"},"content":"        return flashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"    public boolean hasFlashcard(Flashcard flashcard) {","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(flashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"xyzhang00"},"content":"        return flashcardBook.hasFlashcard(flashcard);","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"    public void deleteFlashcard(Flashcard target) {","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"xyzhang00"},"content":"        flashcardBook.removeFlashcard(target);","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"    public void addFlashcard(Flashcard flashcard) {","lastModifiedDate":"2021-02-28"},{"lineNumber":114,"author":{"gitId":"xyzhang00"},"content":"        flashcardBook.addFlashcard(flashcard);","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"        updateFilteredFlashcardList(PREDICATE_SHOW_ALL_FLASHCARDS);","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"    public void setFlashcard(Flashcard target, Flashcard editedFlashcard) {","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"        requireAllNonNull(target, editedFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"xyzhang00"},"content":"        flashcardBook.setFlashcard(target, editedFlashcard);","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"    public void tagFlashcard(Flashcard target, String tag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"Cheng20010201"},"content":"    public void addScore() {","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"Cheng20010201"},"content":"        flashcardBook.addScore(quizInstance.giveScore());","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"Jellybeano"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Flashcard List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"Jellybeano"},"content":"     * Returns an unmodifiable view of the list of {@code Flashcard} backed by the internal list of","lastModifiedDate":"2021-02-28"},{"lineNumber":139,"author":{"gitId":"xyzhang00"},"content":"     * {@code versionedFlashcardBook}","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"    public ObservableList\u003cFlashcard\u003e getFilteredFlashcardList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":143,"author":{"gitId":"Jellybeano"},"content":"        return filteredFlashcards;","lastModifiedDate":"2021-02-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":"    public void updateFilteredFlashcardList(Predicate\u003cFlashcard\u003e predicate) {","lastModifiedDate":"2021-02-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"Jellybeano"},"content":"        filteredFlashcards.setPredicate(predicate);","lastModifiedDate":"2021-02-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"Cheng20010201"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Score History \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"Cheng20010201"},"content":"    public ObservableList\u003cScore\u003e getFilteredScoreHistory() {","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"Cheng20010201"},"content":"        return flashcardBook.getScoreHistoryList();","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"Cheng20010201"},"content":"    public void updateFilteredScoreHistory(Predicate\u003cScore\u003e predicate) {","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"Cheng20010201"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"Cheng20010201"},"content":"        filteredHistoryScores.setPredicate(predicate);","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"xyzhang00"},"content":"        return flashcardBook.equals(other.flashcardBook)","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"Jellybeano"},"content":"                \u0026\u0026 filteredFlashcards.equals(other.filteredFlashcards);","lastModifiedDate":"2021-02-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"Yanneko"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Quiz Related \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"Yanneko"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"Yanneko"},"content":"    public void startQuiz(int numberOfQuestions, Set\u003cTag\u003e tags) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"Yanneko"},"content":"        this.quizInstance \u003d new Quiz(filteredFlashcards, numberOfQuestions, tags);","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"xinweit"},"content":"        Flashcard next \u003d quizInstance.getNextQuestion();","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"xinweit"},"content":"        updateFilteredFlashcardList(curr -\u003e curr.equals(next));","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"Yanneko"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"xyzhang00"},"content":"    public Flashcard getNextFlashcard() {","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(quizInstance);","lastModifiedDate":"2021-03-25"},{"lineNumber":195,"author":{"gitId":"xyzhang00"},"content":"        Flashcard next \u003d quizInstance.getNextQuestion();","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"xyzhang00"},"content":"        updateFilteredFlashcardList(curr -\u003e curr.equals(next));","lastModifiedDate":"2021-03-25"},{"lineNumber":197,"author":{"gitId":"xyzhang00"},"content":"        return next;","lastModifiedDate":"2021-03-25"},{"lineNumber":198,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"xyzhang00"},"content":"    public void getCurrentFlashcard() {","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(quizInstance);","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"xyzhang00"},"content":"        Flashcard current \u003d quizInstance.getCurrentQuestion();","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"xyzhang00"},"content":"        updateFilteredFlashcardList(curr -\u003e curr.equals(current));","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"xyzhang00"},"content":"    public int getCurrentIndex() {","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(quizInstance);","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"xyzhang00"},"content":"        return quizInstance.getCurrentQuizIndex();","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"Jellybeano"},"content":"     * Checks if the attempt provided matches the correct answer of the current quiz.","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"Jellybeano"},"content":"     * @param attempt The answer which the user entered.","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"Jellybeano"},"content":"     * @return True if the answer matches, false otherwise.","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"xyzhang00"},"content":"    public boolean isCorrectAttempt(Answer attempt) {","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(quizInstance);","lastModifiedDate":"2021-03-26"},{"lineNumber":220,"author":{"gitId":"xyzhang00"},"content":"        return quizInstance.isCorrectAttempt(attempt);","lastModifiedDate":"2021-03-26"},{"lineNumber":221,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":222,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"xinweit"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"xinweit"},"content":"     * Deletes this quiz instance.","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"xinweit"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"Yanneko"},"content":"    public void clearQuizInstance() {","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"Yanneko"},"content":"        quizInstance \u003d null;","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":229,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"xinweit"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"xinweit"},"content":"     * Gets this quiz instance.","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"xinweit"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"xinweit"},"content":"     * @return this quiz instance.","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"xinweit"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"xyzhang00"},"content":"    public Quiz getQuizInstance() {","lastModifiedDate":"2021-03-25"},{"lineNumber":236,"author":{"gitId":"xyzhang00"},"content":"        return quizInstance;","lastModifiedDate":"2021-03-25"},{"lineNumber":237,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":238,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"Cheng20010201"},"content":"    public String getQuizStatisticString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"Cheng20010201"},"content":"        return quizInstance.getStatisticString();","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"xinweit"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Mode Related \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":245,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":246,"author":{"gitId":"xinweit"},"content":"    public Mode getMode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"xinweit"},"content":"        return this.mode;","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":250,"author":{"gitId":"xinweit"},"content":"    public int getCurrentMode() {","lastModifiedDate":"2021-03-25"},{"lineNumber":251,"author":{"gitId":"xinweit"},"content":"        return this.mode.getCurrentMode();","lastModifiedDate":"2021-03-25"},{"lineNumber":252,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":253,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":254,"author":{"gitId":"xyzhang00"},"content":"    public void switchModeQuiz() {","lastModifiedDate":"2021-03-26"},{"lineNumber":255,"author":{"gitId":"xyzhang00"},"content":"        this.mode.switchModeQuiz();","lastModifiedDate":"2021-03-26"},{"lineNumber":256,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":257,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":258,"author":{"gitId":"xyzhang00"},"content":"    public void switchModeLearn() {","lastModifiedDate":"2021-03-26"},{"lineNumber":259,"author":{"gitId":"xyzhang00"},"content":"        this.mode.switchModeLearn();","lastModifiedDate":"2021-03-26"},{"lineNumber":260,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":261,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":262,"author":{"gitId":"xyzhang00"},"content":"    public void switchModeMenu() {","lastModifiedDate":"2021-03-26"},{"lineNumber":263,"author":{"gitId":"xyzhang00"},"content":"        this.mode.switchModeMenu();","lastModifiedDate":"2021-03-26"},{"lineNumber":264,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":265,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":266,"author":{"gitId":"Cheng20010201"},"content":"    public void switchModeHistory() {","lastModifiedDate":"2021-03-29"},{"lineNumber":267,"author":{"gitId":"Cheng20010201"},"content":"        this.mode.switchModeHistory();","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":269,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"xyzhang00"},"content":"    public void switchModeQuizSession() {","lastModifiedDate":"2021-03-26"},{"lineNumber":271,"author":{"gitId":"xyzhang00"},"content":"        this.mode.switchModeQuizSession();","lastModifiedDate":"2021-03-26"},{"lineNumber":272,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":273,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":274,"author":{"gitId":"xyzhang00"},"content":"    public void switchModeCheckSuccess() {","lastModifiedDate":"2021-03-26"},{"lineNumber":275,"author":{"gitId":"xyzhang00"},"content":"        this.mode.switchModeCheckSuccess();","lastModifiedDate":"2021-03-26"},{"lineNumber":276,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":277,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"xinweit"},"content":"    public void switchModeQuizSessionEnded() {","lastModifiedDate":"2021-03-31"},{"lineNumber":279,"author":{"gitId":"xinweit"},"content":"        this.mode.switchModeQuizSessionEnded();","lastModifiedDate":"2021-03-31"},{"lineNumber":280,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jellybeano":29,"xyzhang00":77,"Yanneko":15,"xinweit":23,"Cheng20010201":30,"-":107}},{"path":"src/main/java/seedu/weeblingo/model/Quiz.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"xinweit"},"content":"import java.time.Duration;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"xinweit"},"content":"import java.time.Instant;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Queue;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Yanneko"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.StartCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":" * Class Quiz represents a quiz session.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"public class Quiz {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Yanneko"},"content":"    public static final String QUIZ_END_MESSAGE \u003d \"The Quiz is over! \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"            + \"Enter \\\"end\\\" to end the quiz. \\n\";","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Yanneko"},"content":"    private static Queue\u003cFlashcard\u003e quizSessionQueue;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"    private Flashcard currentQuiz;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"    private int currentQuizIndex \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"xinweit"},"content":"    private Instant startTime;","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    // Support for storing the quiz attempt history","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    private int numberOfQuestionsAttempted;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    private int numberOfQuestionsCorrect;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    private Optional\u003cString\u003e optionalDurationString;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Yanneko"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Yanneko"},"content":"     * Initializes the quiz session with a queue of flashcards tagged","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Yanneko"},"content":"     * with the specified tags in randomized order. The quiz has a length of numberOfQuestions.","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Yanneko"},"content":"     * @param flashcards The list of flashcards to use.","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Yanneko"},"content":"     * @param numberOfQuestions The length to limit the quiz to.","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Yanneko"},"content":"     * @param tags The specified tags by which to filter the questions.","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Yanneko"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Yanneko"},"content":"    public Quiz(List\u003cFlashcard\u003e flashcards, int numberOfQuestions, Set\u003cTag\u003e tags) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Yanneko"},"content":"        Flashcard[] flashcardsReadFromDB \u003d flashcards.stream().toArray(Flashcard[]::new);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Yanneko"},"content":"        quizSessionQueue \u003d getRandomizedQueue(flashcardsReadFromDB, numberOfQuestions, tags);","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        initStatistics();","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"     * Checks whether the quiz session is supposed to have ended. A session has to end if there is","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     * no flashcard to display as quiz question.","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     * @return True if there is no flashcard to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Yanneko"},"content":"    public static boolean hasSessionEnded() {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"        return quizSessionQueue.isEmpty();","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"     * Gets the question number of the current question in the quiz.","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"    public int getCurrentQuizIndex() {","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"        return currentQuizIndex;","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the next flashcard question to show to the user.","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"     * @return The next flashcard in the queue, if the queue is not empty.","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"     * Returns null if the queue is empty and the session should be ended.","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"    public Flashcard getNextQuestion() {","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"        if (hasSessionEnded()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"            return null;","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"            currentQuiz \u003d quizSessionQueue.poll();","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"            currentQuizIndex++;","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"            return currentQuiz;","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"xyzhang00"},"content":"     * Gets the current flashcard question shown to the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"xyzhang00"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"     * @return The current flashcard shown.","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"xyzhang00"},"content":"    public Flashcard getCurrentQuestion() {","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"        return currentQuiz;","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"     * Checks whether the attempt is correct with respect to the current flashcard in the quiz.","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"     * @param attempt The answer to check.","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"     * @return True if the attempt is correct; false otherwise. Statistics of the quiz will be updated as well.","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"xyzhang00"},"content":"    public boolean isCorrectAttempt(Answer attempt) {","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"        numberOfQuestionsAttempted++;","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"        boolean result \u003d currentQuiz.getAnswer().equals(attempt);","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"        if (result) {","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"            numberOfQuestionsCorrect++;","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"        return result;","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"xyzhang00"},"content":"    public Queue\u003cFlashcard\u003e getQuizSessionQueue() {","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"xyzhang00"},"content":"        return quizSessionQueue;","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"Yanneko"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"Yanneko"},"content":"     * Generates randomized queue that is a subset from the given array of flashcards.","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"Yanneko"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"Yanneko"},"content":"     * @param flashcardsReadFromDB An array of flashcards, previously read from database.","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"Yanneko"},"content":"     * @param numberOfQuestions The number of questions to limit the quiz to. Is ignored if zero.","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"Yanneko"},"content":"     * @param tags Tags used to filter the array of flashcards. Can be empty.","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"Yanneko"},"content":"     * @return A queue of flashcards with randomized order.","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"Yanneko"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"Yanneko"},"content":"    private Queue\u003cFlashcard\u003e getRandomizedQueue(Flashcard[] flashcardsReadFromDB,","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"Yanneko"},"content":"            int numberOfQuestions, Set\u003cTag\u003e tags) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"Yanneko"},"content":"        List\u003cFlashcard\u003e flashcardsToProcess \u003d Arrays.asList(flashcardsReadFromDB);","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"Yanneko"},"content":"        Collections.shuffle(flashcardsToProcess);","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"Yanneko"},"content":"        Queue\u003cFlashcard\u003e randomizedQueue \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"Yanneko"},"content":"        // Filter by tags if needed","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"Yanneko"},"content":"        for (Flashcard f : flashcardsToProcess) {","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"Yanneko"},"content":"            if (f.getWeeblingoTags().containsAll(tags) || f.getUserTags().containsAll(tags)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"Yanneko"},"content":"                randomizedQueue.offer(f);","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"Yanneko"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"Yanneko"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"Yanneko"},"content":"        if (randomizedQueue.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"Yanneko"},"content":"            throw new CommandException(StartCommand.MESSAGE_TAG_NOT_FOUND);","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"Yanneko"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"Yanneko"},"content":"        // Shorten to numberOfQuestions if needed","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"Yanneko"},"content":"        if (numberOfQuestions !\u003d 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"Yanneko"},"content":"            while (numberOfQuestions \u003c randomizedQueue.size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"Yanneko"},"content":"                randomizedQueue.poll();","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"xinweit"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"Yanneko"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"xinweit"},"content":"        return randomizedQueue;","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"xinweit"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"xinweit"},"content":"     * Gets the duration of the quiz session.","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"xinweit"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"xinweit"},"content":"     * @return the duration in (hh:mm:ss) hours, minutes, seconds format","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"xinweit"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"xinweit"},"content":"    public String getQuizSessionDuration() {","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"xinweit"},"content":"        Instant endTime \u003d Instant.now();","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"xinweit"},"content":"        Duration duration \u003d Duration.between(startTime, endTime);","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"Cheng20010201"},"content":"        String result \u003d String.format(\"%d:%02d:%02d\",","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"xinweit"},"content":"                duration.toHours(),","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"xinweit"},"content":"                duration.toMinutesPart(),","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"xinweit"},"content":"                duration.toSecondsPart());","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"Cheng20010201"},"content":"        optionalDurationString \u003d Optional.of(result);","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"Cheng20010201"},"content":"        return result;","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes the state of the quiz statistics.","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"Cheng20010201"},"content":"    private void initStatistics() {","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"Cheng20010201"},"content":"        numberOfQuestionsCorrect \u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"Cheng20010201"},"content":"        numberOfQuestionsAttempted \u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"Cheng20010201"},"content":"        startTime \u003d Instant.now();","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"Cheng20010201"},"content":"        optionalDurationString \u003d Optional.empty();","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the statistics information of Quiz as a string for display purposes.","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"Cheng20010201"},"content":"     * @return The string representation of the quiz statistics.","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"Cheng20010201"},"content":"    public String getStatisticString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"Number of attempts: %d; Number of correct attempts: %d; Time spent: %s\",","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"Cheng20010201"},"content":"                numberOfQuestionsAttempted,","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"Cheng20010201"},"content":"                numberOfQuestionsCorrect, getQuizSessionDuration());","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"Cheng20010201"},"content":"     * Gives a score representing the quiz attempt.","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"Cheng20010201"},"content":"     * @return The score containing the statistic data of the quiz attempt.","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"Cheng20010201"},"content":"    public Score giveScore() {","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"Cheng20010201"},"content":"        return Score.of(numberOfQuestionsAttempted, numberOfQuestionsCorrect,","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"Cheng20010201"},"content":"                optionalDurationString.orElse(getQuizSessionDuration()));","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"xyzhang00":32,"xinweit":20,"Yanneko":51,"Cheng20010201":92}},{"path":"src/main/java/seedu/weeblingo/model/ReadOnlyFlashcardBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":" * Unmodifiable view of an flashcard book","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"public interface ReadOnlyFlashcardBook {","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    ObservableList\u003cFlashcard\u003e getFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    ObservableList\u003cScore\u003e getScoreHistoryList();","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jellybeano":1,"xyzhang00":4,"Cheng20010201":3,"-":11}},{"path":"src/main/java/seedu/weeblingo/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    Path getFlashcardBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"xyzhang00":3,"-":13}},{"path":"src/main/java/seedu/weeblingo/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    private Path flashcardsFilePath \u003d Paths.get(\"data\" , \"flashcards.json\");","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"        setFlashcardsFilePath(newUserPrefs.getFlashcardBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"    public Path getFlashcardBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"        return flashcardsFilePath;","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"    public void setFlashcardsFilePath(Path flashcardsFilePath) {","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(flashcardsFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"        this.flashcardsFilePath \u003d flashcardsFilePath;","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"                \u0026\u0026 flashcardsFilePath.equals(o.flashcardsFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":"        return Objects.hash(guiSettings, flashcardsFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"xyzhang00"},"content":"        sb.append(\"\\nLocal data file location : \" + flashcardsFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":11,"Cheng20010201":2,"-":75}},{"path":"src/main/java/seedu/weeblingo/model/exceptions/NullInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.model.exceptions;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":" * A sub-class of RuntimeException that represents exceptions thrown because of null input values.","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":" * This Exception will not be thrown if the developer\u0027s code logic is correct. During normal application","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * executions, this Exception will never be thrown.","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class NullInputException extends RuntimeException {","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public NullInputException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        super(\"The input must not be null. The application will exit\");","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    public NullInputException(String message) {","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"        super(message);","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":16}},{"path":"src/main/java/seedu/weeblingo/model/flashcard/Answer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.RegexUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":" * Represents a Flashcard\u0027s answer in the answer book.","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAnswer(String)}","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"public class Answer {","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"An answer can only be an English word for now.\";","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"     * The first character of the answer must not be a whitespace,","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public static final String VALIDATION_REGEX \u003d RegexUtil.REGEX_ENG_WORD;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"     * Constructs an {@code answer}.","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"     * @param answer A valid answer.","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    public Answer(String answer) {","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(answer);","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        checkArgument(isValidAnswer(answer), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        value \u003d answer;","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"    public static boolean isValidAnswer(String test) {","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"                || (other instanceof Answer // instanceof handles nulls","lastModifiedDate":"2021-02-27"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"                \u0026\u0026 value.equals(((Answer) other).value)); // state check","lastModifiedDate":"2021-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jellybeano":13,"xyzhang00":3,"Cheng20010201":3,"-":39}},{"path":"src/main/java/seedu/weeblingo/model/flashcard/Flashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":" * Represents a Flashcard in the answer book.","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"public class Flashcard {","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    private final Question question;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    private final Answer answer;","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    private final Set\u003cTag\u003e weeblingoTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"    private final Set\u003cTag\u003e userTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    public Flashcard(Question question, Answer answer, Set\u003cTag\u003e weeblingoTags, Set\u003cTag\u003e userTags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        requireAllNonNull(question, answer, weeblingoTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        this.question \u003d question;","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"        this.weeblingoTags.addAll(weeblingoTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"        this.userTags.addAll(userTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"    public Question getQuestion() {","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"        return question;","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"    public Answer getAnswer() {","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"        return answer;","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    public Set\u003cTag\u003e getWeeblingoTags() {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"        return Collections.unmodifiableSet(weeblingoTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"     * Returns a copy of the non-default tags set by the user.","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"    public Set\u003cTag\u003e getUserTags() {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"        return new HashSet\u003c\u003e(userTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"     * Returns true if both flashcards have the same question.","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"     * This defines a weaker notion of equality between two flashcards.","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"    public boolean isSameFlashcard(Flashcard otherFlashcard) {","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"        if (otherFlashcard \u003d\u003d this) {","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"        return otherFlashcard !\u003d null","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"                \u0026\u0026 otherFlashcard.getQuestion().equals(getQuestion());","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"        if (!(other instanceof Flashcard)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"        Flashcard otherFlashcard \u003d (Flashcard) other;","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"        return otherFlashcard.getQuestion().equals(getQuestion())","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"                \u0026\u0026 otherFlashcard.getAnswer().equals(getAnswer())","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"                \u0026\u0026 otherFlashcard.getWeeblingoTags().equals(getWeeblingoTags());","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"        return Objects.hash(question, answer, weeblingoTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"        builder.append(\"; question: \")","lastModifiedDate":"2021-02-27"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"                .append(getQuestion())","lastModifiedDate":"2021-02-27"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"                .append(\"; answer: \")","lastModifiedDate":"2021-02-27"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"                .append(getAnswer());","lastModifiedDate":"2021-02-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"        Set\u003cTag\u003e tags \u003d getWeeblingoTags();","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jellybeano":40,"xyzhang00":3,"Cheng20010201":2,"-":70}},{"path":"src/main/java/seedu/weeblingo/model/flashcard/Question.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.RegexUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":" * Represents a Flashcard\u0027s Question.","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidQuestion(String)}","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"public class Question {","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"A question can only be a japanese word for now.\";","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    public static final String VALIDATION_REGEX \u003d RegexUtil.REGEX_JAP_WORD;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    public final String value;","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"     * Constructs an {@code Question}.","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"     * @param question A valid question.","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    public Question(String question) {","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(question);","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"        checkArgument(isValidQuestion(question), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"        value \u003d question;","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     * Returns if a given string is a valid question.","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    public static boolean isValidQuestion(String test) {","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"                || (other instanceof Question // instanceof handles nulls","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"                \u0026\u0026 value.equals(((Question) other).value)); // state check","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jellybeano":14,"xyzhang00":3,"Cheng20010201":4,"-":34}},{"path":"src/main/java/seedu/weeblingo/model/flashcard/QuestionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.StringUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":" * Tests that a {@code Flashcard}\u0027s {@code Question} matches any of the keywords given.","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"public class QuestionContainsKeywordsPredicate implements Predicate\u003cFlashcard\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    public QuestionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    public boolean test(Flashcard flashcard) {","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(flashcard.getQuestion().value, keyword));","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"                || (other instanceof QuestionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"                \u0026\u0026 keywords.equals(((QuestionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jellybeano":7,"xyzhang00":2,"-":22}},{"path":"src/main/java/seedu/weeblingo/model/flashcard/UniqueFlashcardList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import java.util.List;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.exceptions.DuplicateFlashcardException;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.exceptions.FlashcardNotFoundException;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":" * A list of flashcards that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":" * A flashcard is considered unique by comparing using {@code Flashcard#isSameFlashcard(Flashcard)}.","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":" * As such, adding and updating of flashcards uses Flashcard#isSameFlashcard(Flashcard) for equality so as to ensure","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":" * that the flashcard being added or updated is unique in terms of identity in the UniqueFlashcardList.","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":" * However, the removal of a flashcard uses Flashcard#equals(Object) so as to ensure that the flashcard with exactly","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":" * the same fields will be removed.","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":" *","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":" *","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":" * @see Flashcard#isSameFlashcard(Flashcard)","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"public class UniqueFlashcardList implements Iterable\u003cFlashcard\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    private final ObservableList\u003cFlashcard\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    private final ObservableList\u003cFlashcard\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"     * Returns true if the list contains an equivalent flashcard as the given argument.","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"    public boolean contains(Flashcard toCheck) {","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        return internalList.stream().anyMatch(toCheck::isSameFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"     * Adds a flashcard to the list.","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"     * The flashcard must not already exist in the list.","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"    public void add(Flashcard toAdd) {","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"            throw new DuplicateFlashcardException();","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"     * Replaces the flashcard {@code target} in the list with {@code editedFlashcard}.","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"     * The flashcard identity of {@code editedFlashcard} must not be the same as another existing flashcard in the list.","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"    public void setFlashcard(Flashcard target, Flashcard editedFlashcard) {","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"        requireAllNonNull(target, editedFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"            throw new FlashcardNotFoundException();","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"        if (!target.isSameFlashcard(editedFlashcard) \u0026\u0026 contains(editedFlashcard)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"            throw new DuplicateFlashcardException();","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"        internalList.set(index, editedFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"     * Removes the equivalent flashcard from the list.","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"     * The flashcard must exist in the list.","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"    public void remove(Flashcard toRemove) {","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"            throw new FlashcardNotFoundException();","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"    public void setFlashcards(UniqueFlashcardList replacement) {","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-02-28"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"     * Replaces the contents of this list with {@code flashcards}.","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"     * {@code flashcards} must not contain duplicate flashcards.","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"    public void setFlashcards(List\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"        requireAllNonNull(flashcards);","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"        if (!flashcardsAreUnique(flashcards)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"            throw new DuplicateFlashcardException();","lastModifiedDate":"2021-02-28"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"        internalList.setAll(flashcards);","lastModifiedDate":"2021-02-28"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"    public ObservableList\u003cFlashcard\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-02-28"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"    public Iterator\u003cFlashcard\u003e iterator() {","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-02-28"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"                || (other instanceof UniqueFlashcardList // instanceof handles nulls","lastModifiedDate":"2021-02-28"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"                        \u0026\u0026 internalList.equals(((UniqueFlashcardList) other).internalList));","lastModifiedDate":"2021-02-28"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-28"},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-02-28"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"     * Returns true if {@code flashcards} contains only unique flashcards.","lastModifiedDate":"2021-02-28"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"    private boolean flashcardsAreUnique(List\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2021-02-28"},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":"        for (int i \u003d 0; i \u003c flashcards.size() - 1; i++) {","lastModifiedDate":"2021-02-28"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"            for (int j \u003d i + 1; j \u003c flashcards.size(); j++) {","lastModifiedDate":"2021-02-28"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":"                if (flashcards.get(i).isSameFlashcard(flashcards.get(j))) {","lastModifiedDate":"2021-02-28"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"                    return false;","lastModifiedDate":"2021-02-28"},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":"                }","lastModifiedDate":"2021-02-28"},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"            }","lastModifiedDate":"2021-02-28"},{"lineNumber":135,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":136,"author":{"gitId":"Jellybeano"},"content":"        return true;","lastModifiedDate":"2021-02-28"},{"lineNumber":137,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":138,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":134,"xyzhang00":4}},{"path":"src/main/java/seedu/weeblingo/model/flashcard/UniqueScoreHistoryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import static seedu.weeblingo.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.flashcard.exceptions.DuplicateAttemptScoreException;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.flashcard.exceptions.DuplicateFlashcardException;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"/*","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":" * A list of user quiz scores that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":" * A score is considered unique by comparing using {@code Score#isSameAttempt(Score)}.","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":" * As such, adding quiz scores uses Score#isSameAttempt(Score) for equality so as to ensure","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":" * that the new quiz score for a certain attempt being added is unique in terms of identity","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":" * in the UniqueScoreHistoryList. Users are not expected to remove entries from the scores history through the app.","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":" *","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":" *","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":" * @see Score#isSameAttempt(Score)","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"public class UniqueScoreHistoryList implements Iterable\u003cScore\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    private final ObservableList\u003cScore\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    private final ObservableList\u003cScore\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     * Returns true if the list contains an equivalent flashcard as the given argument.","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    public boolean contains(Score toCheck) {","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAttempt);","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     * Adds an attempt Score to the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"     * The Score must not already exist in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    public void add(Score toAdd) {","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"            throw new DuplicateAttemptScoreException();","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"     * Replaces the UniqueScoreHistoryList with {@code replacement}.","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"     * {@code replacement} is meant to contain unique score histories.","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"    public void setScores(UniqueScoreHistoryList replacement) {","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"     * Replaces the contents of this list with {@code scores}.","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"     * {@code scores} must not contain duplicate scores.","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"    public void setScores(List\u003cScore\u003e scores) {","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"        requireAllNonNull(scores);","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"        if (!scoresAreUnique(scores)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"            throw new DuplicateFlashcardException();","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"        internalList.setAll(scores);","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"    public ObservableList\u003cScore\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"    public Iterator\u003cScore\u003e iterator() {","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"                || (other instanceof UniqueFlashcardList // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"                \u0026\u0026 internalList.equals(((UniqueScoreHistoryList) other).internalList));","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"     * Returns true if {@code scores} contains only unique attempt Scores.","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"    private boolean scoresAreUnique(List\u003cScore\u003e scores) {","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"        for (int i \u003d 0; i \u003c scores.size() - 1; i++) {","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"            for (int j \u003d i + 1; j \u003c scores.size(); j++) {","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"                if (scores.get(i).isSameAttempt(scores.get(j))) {","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"                    return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"                }","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"        return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":111}},{"path":"src/main/java/seedu/weeblingo/model/flashcard/exceptions/DuplicateAttemptScoreException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.model.flashcard.exceptions;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":" * Signals that the operation will result in duplicate Scores (attempt scores)","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":" * (Attempt Scores are considered duplicates if they have the same creation datetime).","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class DuplicateAttemptScoreException extends RuntimeException {","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    public DuplicateAttemptScoreException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"        super(\"There are duplicate attempts\");","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":11}},{"path":"src/main/java/seedu/weeblingo/model/flashcard/exceptions/DuplicateFlashcardException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard.exceptions;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":" * Signals that the operation will result in duplicate Flashcards","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":" * (Flashcards are considered duplicates if they have the same identity).","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"public class DuplicateFlashcardException extends RuntimeException {","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"    public DuplicateFlashcardException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Jellybeano":2,"xyzhang00":1,"Cheng20010201":2,"-":6}},{"path":"src/main/java/seedu/weeblingo/model/flashcard/exceptions/FlashcardNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard.exceptions;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":" * Signals that the operation is unable to find the specified flashcard.","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"public class FlashcardNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":5,"xyzhang00":1}},{"path":"src/main/java/seedu/weeblingo/model/score/Score.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.model.score;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.MainApp;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.exceptions.NullInputException;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":" * A score object represents an attempt of the quiz session; coded in a defensive manner.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":" * It is uniquely identified by the time the attempt is finished.","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":" * How an attempt can be considered as complete, however, is not the","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":" * concern of this class, but should be the concern of application logic.","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"public class Score implements Comparable\u003cScore\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    /** Global logger object */","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    /** The date and time when the score is awarded */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    private LocalDateTime datetime;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    /** The number of questions attempted */","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    private Integer questionAttempted;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    /** The number of questions that were attempted correctly */","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    private Integer questionCorrect;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    /** The duration string spent for the specific score */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    private String durationString;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    private Score(LocalDateTime datetime, Integer questionAttempted, Integer questionCorrect, String durationString) {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        if (questionAttempted \u003d\u003d null || questionCorrect \u003d\u003d null || durationString \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"            throw new NullInputException(\"Null value supplied to Score object\");","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        if (questionAttempted \u003c 0 || questionCorrect \u003c 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            throw new NullInputException(\"Non-positive value supplied to the number of questions attempted, or \"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"                    + \"negative value supplied to number of questions attempted correctly.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        if (questionAttempted \u003c questionCorrect) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            throw new NullInputException(\"Questions attempted must be larger or equal to questions correct.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        if (durationString.equals(\"\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"            throw new NullInputException(\"Duration string cannot be empty.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        this.questionAttempted \u003d questionAttempted;","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        this.questionCorrect \u003d questionCorrect;","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        this.durationString \u003d durationString;","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"     * Static method of creating a Score object.","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"     * Quiz attempt time is properly handled within this method.","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"     * @param questionAttempted Number of questions attempted in the attempt. Must not be null or non-positive.","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"     * @param questionCorrect Number of questions attempted correctly in the attempt. Must not be null or negative.","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     * @return A score object containing necessary information including the attributes supplied and","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"     * the time when the Score object is created.","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"    public static Score of(Integer questionAttempted, Integer questionCorrect, String durationString) {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"        Score result \u003d new Score(LocalDateTime.now(), questionAttempted, questionCorrect, durationString);","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"        logger.info(String.format(\"Attempt record generated: %s.\", result.toString()));","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        return result;","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"     * Static method of creating a Score object.","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"     * Quiz attempt time is properly handled within this method.","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"     * @param datetime A LocalDatetime object equivalent to the LocalDatetime object created","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"     *                 when the quiz is initialized. Must not be null.","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"     * @param questionAttempted Number of questions attempted in the attempt. Must not be null or non-positive.","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"     * @param questionCorrect Number of questions attempted correctly in the attempt. Must not be null or negative.","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"     * @return A score object containing necessary information including the attributes supplied and","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"     * the time when the Score object is created.","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"    public static Score of(LocalDateTime datetime, Integer questionAttempted, Integer questionCorrect,","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"                           String durationString) {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"        if (datetime \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"            throw new NullInputException(\"Null value supplied to Score object\");","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"        Score result \u003d new Score(datetime, questionAttempted, questionCorrect, durationString);","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"        logger.info(String.format(\"Attempt record stored: %s.\", result.toString()));","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"        return result;","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"    private Double getCorrectRatio() {","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"        assert questionAttempted !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"        assert questionAttempted \u003e 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"        assert questionCorrect !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"        assert questionCorrect \u003e\u003d 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"        if (questionAttempted \u003d\u003d 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"            return 0.0;","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"            return questionCorrect * 1.0 / questionAttempted;","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"     * Get the correctness ratio of the Score object.","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"     * @return The String representation of the correctness ration.","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"     * Example: 3/5 -\u003e returns \"60.000%\"","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"    public String getCorrectRatioString() {","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"%.3f\", getCorrectRatio() * 100) + \"%\";","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"     * Checks whether the two attempts encapsulated by the two Score object represents the same attempt.","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"     * @param o The Score object to check whether it is the same as the current Score object or not.","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"     * @return True if both Score objects have the same LocalDateTime. If both objects are created with an","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"     * interval of \u003e\u003d 1 second, the two Score objects are considered as different Scores of attempts.","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"    public boolean isSameAttempt(Score o) {","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"            throw new NullInputException(\"Receiving Score object of Score::isSameAttempt cannot be null\");","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"        return this.datetime.equals(o.datetime);","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"     * A getter that wraps the number of questions attempted fields in a string as return value.","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"     * @return The String representation of the number of questions attempted in this Score object.","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":"    public String getNumberOfQuestionsAttempted() {","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":"        return questionAttempted.toString();","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"Cheng20010201"},"content":"     * A getter that wraps the number of questions attempted correctly fields in a string as return value.","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"     * @return The String representation of the number of questions attempted correctly in this Score object.","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"    public String getNumberOfQuestionsCorrect() {","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"        return questionCorrect.toString();","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"xinweit"},"content":"     * A getter that wraps the date and time when the score is awarded field in a string as return value.","lastModifiedDate":"2021-04-02"},{"lineNumber":142,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"xinweit"},"content":"     * @return The String representation of the the date and time when the score is awarded in this Score object.","lastModifiedDate":"2021-04-02"},{"lineNumber":144,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":"    public String getCompletedTime() {","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"Cheng20010201"},"content":"        return DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm:ss\").format(datetime).toString();","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"Cheng20010201"},"content":"     * Overriden compareTo() method of Comparable interface.","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"Cheng20010201"},"content":"     * @param o The Score object to compare to.","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"Cheng20010201"},"content":"     * @return 1 if the datetime of the current object is earlier","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"Cheng20010201"},"content":"     * than datetime of the object to compare.","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"Cheng20010201"},"content":"    public int compareTo(Score o) {","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"Cheng20010201"},"content":"        return datetime.compareTo(o.datetime);","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the string representing the time spent for the score representing an attempt.","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"Cheng20010201"},"content":"     * @return The string representation of the time spent for the score representing an attempt.","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"Cheng20010201"},"content":"    public String getTimeSpent() {","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"Cheng20010201"},"content":"        return durationString;","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"xinweit":2,"Cheng20010201":167}},{"path":"src/main/java/seedu/weeblingo/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.RegexUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" * Represents a Tag in weeblingo.","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should be alphanumeric\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    public static final String VALIDATION_REGEX \u003d RegexUtil.REGEX_AB3_TAG;","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xyzhang00":3,"Yanneko":1,"Cheng20010201":2,"-":50}},{"path":"src/main/java/seedu/weeblingo/storage/FlashcardBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.FlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":" * Represents a storage for {@link FlashcardBook}.","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"public interface FlashcardBookStorage {","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    Path getFlashcardBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"     * Returns FlashcardBook data as a {@link ReadOnlyFlashcardBook}.","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    Optional\u003cReadOnlyFlashcardBook\u003e readFlashcardBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"     * @see #getFlashcardBookFilePath()","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"    Optional\u003cReadOnlyFlashcardBook\u003e readFlashcardBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"     * Saves the given {@link ReadOnlyFlashcardBook} to the storage.","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"     * @param flashcardBook cannot be null.","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"    void saveFlashcardBook(ReadOnlyFlashcardBook flashcardBook) throws IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"     * @see #saveFlashcardBook(ReadOnlyFlashcardBook)","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"    void saveFlashcardBook(ReadOnlyFlashcardBook flashcardBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":46}},{"path":"src/main/java/seedu/weeblingo/storage/JsonAdaptedFlashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Question;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":" * Jackson-friendly version of {@link Flashcard}.","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"class JsonAdaptedFlashcard {","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Flashcard\u0027s %s field is missing!\";","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    private final String question;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    private final String answer;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    private final List\u003cJsonAdaptedTag\u003e userTagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"     * Constructs a {@code JsonAdaptedFlashcard} with the given flashcard details.","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    public JsonAdaptedFlashcard(@JsonProperty(\"question\") String question, @JsonProperty(\"answer\") String answer,","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"            @JsonProperty(\"user-tagged\") List\u003cJsonAdaptedTag\u003e userTagged) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        this.question \u003d question;","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"        if (userTagged !\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"            this.userTagged.addAll(userTagged);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"     * Converts a given {@code Flashcard} into this class for Jackson use.","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    public JsonAdaptedFlashcard(Flashcard source) {","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"        question \u003d source.getQuestion().value;","lastModifiedDate":"2021-02-27"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        answer \u003d source.getAnswer().value;","lastModifiedDate":"2021-02-27"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"        tagged.addAll(source.getWeeblingoTags().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        userTagged.addAll(source.getUserTags().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"     * Converts this Jackson-friendly adapted flashcard object into the model\u0027s {@code Flashcard} object.","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted flashcard.","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"    public Flashcard toModelType() throws IllegalValueException {","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"        final List\u003cTag\u003e flashcardTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"            flashcardTags.add(tag.toModelType());","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"        final List\u003cTag\u003e flashcardUserTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"        for (JsonAdaptedTag userTag : userTagged) {","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"            flashcardUserTags.add(userTag.toModelType());","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"        if (question \u003d\u003d null) {","lastModifiedDate":"2021-02-27"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Question.class.getSimpleName()));","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"        if (!Question.isValidQuestion(question)) {","lastModifiedDate":"2021-02-27"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"            throw new IllegalValueException(Question.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"        final Question modelquestion \u003d new Question(question);","lastModifiedDate":"2021-02-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"        if (answer \u003d\u003d null) {","lastModifiedDate":"2021-02-27"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Answer.class.getSimpleName()));","lastModifiedDate":"2021-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"        if (!Answer.isValidAnswer(answer)) {","lastModifiedDate":"2021-02-27"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"            throw new IllegalValueException(Answer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"        final Answer modelAnswer \u003d new Answer(answer);","lastModifiedDate":"2021-02-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(flashcardTags);","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"        final Set\u003cTag\u003e modelUserTags \u003d new HashSet\u003c\u003e(flashcardUserTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"        return new Flashcard(modelquestion, modelAnswer, modelTags, modelUserTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jellybeano":49,"xyzhang00":6,"-":46}},{"path":"src/main/java/seedu/weeblingo/storage/JsonAdaptedScore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":" * Jackson-friendly version of {@link Score}.","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"public class JsonAdaptedScore {","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Score\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    public static final String DATETIME_FORMAT_INCORRECT \u003d \"Incorrect datetime format. \"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"            + \"\\\"dd-MM-yyyy HH:mm:ss\\\" expected.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    public static final String NUMBER_FORMAT_INCORRECT \u003d \"Questions attempted or questions correct\"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"            + \"must be non-negative integers.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    private final String time;","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    private final String questionAttempted;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    private final String questionCorrect;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    private final String ratio;","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    private final String timeSpent;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     * Constructs a {@code JsonAdaptedScore} with the given score details.","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    public JsonAdaptedScore(@JsonProperty(\"time\") String time,","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"                                @JsonProperty(\"time_spent\") String timeSpent,","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"                                @JsonProperty(\"question_attempted\") String questionAttempted,","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"                                @JsonProperty(\"question_correct\") String questionCorrect,","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"                                @JsonProperty(\"ratio\") String ratio) {","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        this.questionAttempted \u003d questionAttempted;","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        this.questionCorrect \u003d questionCorrect;","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        this.ratio \u003d ratio;","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        this.timeSpent \u003d timeSpent;","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     * Converts a given {@code Score} into this class for Jackson use.","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"    public JsonAdaptedScore(Score score) {","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        this.time \u003d score.getCompletedTime();","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        this.questionAttempted \u003d score.getNumberOfQuestionsAttempted();","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        this.questionCorrect \u003d score.getNumberOfQuestionsCorrect();","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"        this.ratio \u003d score.getCorrectRatioString();","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"        this.timeSpent \u003d score.getTimeSpent();","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"     * Converts this Jackson-friendly adapted score object into the model\u0027s {@code Score} object.","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted flashcard.","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"    public Score toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Completed time\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"            final LocalDateTime time \u003d LocalDateTime.parse(this.time,","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm:ss\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"            if (this.questionAttempted \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"                throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Question attempted\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"            Integer questionAttempted \u003d Integer.valueOf(this.questionAttempted);","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"            if (questionCorrect \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"                throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Question correct\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"            Integer questionCorrect \u003d Integer.valueOf(this.questionCorrect);","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"            if (this.timeSpent \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"                throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Time spent\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"            String durationString \u003d this.timeSpent;","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"            return Score.of(time, questionAttempted, questionCorrect, durationString);","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"            throw new IllegalValueException(NUMBER_FORMAT_INCORRECT);","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"            throw new IllegalValueException(DATETIME_FORMAT_INCORRECT);","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":90}},{"path":"src/main/java/seedu/weeblingo/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xyzhang00":3,"-":45}},{"path":"src/main/java/seedu/weeblingo/storage/JsonDatabaseReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.parser.JSONParser;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.parser.ParseException;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.MainApp;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.storage.exceptions.DataInitializationException;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":" * Flashcards database (Json file) reader.","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"public class JsonDatabaseReader {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    private static final String DATABASE_LOCATION \u003d \"/database/JapaneseDatabase.json\";","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     * Reads the local database for flashcards as Json Array format.","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     * @return The Json Array representation of the flashcards in the local database.","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    public static JSONArray readDatabaseAsJsonArray() {","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"        JSONParser jsonParser \u003d new JSONParser();","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"        try (Scanner sc \u003d new Scanner(MainApp.class.getResourceAsStream(DATABASE_LOCATION), \"utf8\")) {","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"            StringBuilder sb \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"                sb.append(sc.nextLine());","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"            JSONObject jsonObject \u003d (JSONObject) jsonParser.parse(sb.toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"            JSONArray flashcardsJsonArr \u003d (JSONArray) jsonObject.get(\"flashcards\");","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            return flashcardsJsonArr;","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"            throw new DataInitializationException();","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"xyzhang00":1,"Cheng20010201":38}},{"path":"src/main/java/seedu/weeblingo/storage/JsonFlashcardBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.FileUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.JsonUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":" * A class to access FlashcardBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"public class JsonFlashcardBookStorage implements FlashcardBookStorage {","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonFlashcardBookStorage.class);","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    public JsonFlashcardBookStorage(Path filePath) {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"    public Path getFlashcardBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"        return filePath;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"    public Optional\u003cReadOnlyFlashcardBook\u003e readFlashcardBook() throws DataConversionException {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"        return readFlashcardBook(filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"     * Similar to {@link #readFlashcardBook()}.","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"    public Optional\u003cReadOnlyFlashcardBook\u003e readFlashcardBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"        Optional\u003cJsonSerializableFlashcardBook\u003e flashcardBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"                filePath, JsonSerializableFlashcardBook.class);","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"        if (!flashcardBook.isPresent()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"            return Optional.of(flashcardBook.get().toModelType());","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"    public void saveFlashcardBook(ReadOnlyFlashcardBook flashcardBook) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"        saveFlashcardBook(flashcardBook, filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"xyzhang00"},"content":"     * Similar to {@link #saveFlashcardBook(ReadOnlyFlashcardBook)}.","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"xyzhang00"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"    public void saveFlashcardBook(ReadOnlyFlashcardBook flashcardBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(flashcardBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableFlashcardBook(flashcardBook), filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":80}},{"path":"src/main/java/seedu/weeblingo/storage/JsonSerializableFlashcardBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.FlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":" * An Immutable FlashcardBook that is serializable to JSON format.","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"@JsonRootName(value \u003d \"flashcardbook\")","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"class JsonSerializableFlashcardBook {","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    public static final String MESSAGE_DUPLICATE_FLASHCARD \u003d \"Flashcards list contains duplicate flashcard(s).\";","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_DUPLICATE_SCORE \u003d \"Score history list contains duplicate score(s).\";","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    private final List\u003cJsonAdaptedFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    private final List\u003cJsonAdaptedScore\u003e scores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"     * Constructs a {@code JsonSerializableFlashcardBook} with the given flashcards.","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    public JsonSerializableFlashcardBook(@JsonProperty(\"flashcards\") List\u003cJsonAdaptedFlashcard\u003e flashcards,","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"                                         @JsonProperty(\"scores\") List\u003cJsonAdaptedScore\u003e scores) {","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"        this.flashcards.addAll(flashcards);","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        this.scores.addAll(scores);","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"     * Converts a given {@code ReadOnlyFlashcardBook} into this class for Jackson use.","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableFlashcardBook}.","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"    public JsonSerializableFlashcardBook(ReadOnlyFlashcardBook source) {","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"        flashcards.addAll(source.getFlashcardList().stream().map(","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"                JsonAdaptedFlashcard::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        scores.addAll(source.getScoreHistoryList().stream().map(","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"                JsonAdaptedScore::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"     * Converts this flashcard book into the model\u0027s {@code FlashcardBook} object.","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"    public FlashcardBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"        FlashcardBook flashcardBook \u003d new FlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"        for (JsonAdaptedFlashcard jsonAdaptedFlashcard : flashcards) {","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"            Flashcard flashcard \u003d jsonAdaptedFlashcard.toModelType();","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"            if (flashcardBook.hasFlashcard(flashcard)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_FLASHCARD);","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":"            flashcardBook.addFlashcard(flashcard);","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"        for (JsonAdaptedScore jsonAdaptedScore : scores) {","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"            Score score \u003d jsonAdaptedScore.toModelType();","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"            if (flashcardBook.hasScore(score)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SCORE);","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"            flashcardBook.addScore(score);","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"        return flashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":59,"Cheng20010201":18}},{"path":"src/main/java/seedu/weeblingo/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.JsonUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xyzhang00":5,"-":42}},{"path":"src/main/java/seedu/weeblingo/storage/LocalDatabasePopulator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.FlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.flashcard.Question;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":" * Reads from local database, populates the flashcards read into user\u0027s data storage.","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"public class LocalDatabasePopulator {","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the database of flashcards, as an array of flashcards.","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     * @param jsonArrayReadFromDatabase Data read from database, assumed to be in JsonArray format. Must not be null.","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     * @return An array of flashcards extracted from database.","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    public static Flashcard[] getDatabaseOfFlashcards(JSONArray jsonArrayReadFromDatabase) {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        assert jsonArrayReadFromDatabase !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        Flashcard[] flashcards \u003d new Flashcard[jsonArrayReadFromDatabase.size()];","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        for (int i \u003d 0; i \u003c jsonArrayReadFromDatabase.size(); i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"            JSONObject tempJsonCard \u003d (JSONObject) jsonArrayReadFromDatabase.get(i);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            Question question \u003d new Question((String) tempJsonCard.get(\"question\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            Answer answer \u003d new Answer((String) tempJsonCard.get(\"answer\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"            Set\u003cTag\u003e tags \u003d getTagSet((JSONArray) tempJsonCard.get(\"tagged\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"            Set\u003cTag\u003e userTags \u003d tempJsonCard.get(\"userTagged\") \u003d\u003d null ? Collections.emptySet()","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"                    : getTagSet((JSONArray) tempJsonCard.get(\"userTagged\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"            Flashcard tempCard \u003d new Flashcard(question, answer, tags, userTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"            flashcards[i] \u003d tempCard;","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"        return flashcards;","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"xinweit"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"xinweit"},"content":"     * Gets the specified number of flashcards, as an array of flashcards.","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"xinweit"},"content":"     * @return An array of flashcards of specified size extracted from database.","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"xinweit"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"xinweit"},"content":"    public static Flashcard[] getSubsetOfFlashcards(int numberOfQuestions) {","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"        return Arrays.copyOfRange(","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"                getDatabaseOfFlashcards(JsonDatabaseReader","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"                        .readDatabaseAsJsonArray()), 0, numberOfQuestions);","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     * Get the database of weeblingo. The content of storage populated by this method is read from database file.","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"     * @return The content of the Japanese database, wrapped in a ReadOnlyFlashcardBook object.","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"    public static ReadOnlyFlashcardBook getDatabaseOfWeeblingo() {","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        FlashcardBook sampleFb \u003d new FlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"        for (Flashcard sampleFlashcard : getDatabaseOfFlashcards(JsonDatabaseReader.readDatabaseAsJsonArray())) {","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"            sampleFb.addFlashcard(sampleFlashcard);","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"        return sampleFb;","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"     * @param strings The strings to be converted to a set of Tags. Will not be null.","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"        assert strings !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"                .map(Tag::new)","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"     * Returns a tag set containing the tags contained in the json flashcard object.","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"    private static Set\u003cTag\u003e getTagSet(JSONArray jsonTags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"        String[] strings \u003d new String[jsonTags.size()];","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"        for (int i \u003d 0; i \u003c jsonTags.size(); i++) {","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"            strings[i] \u003d (String) jsonTags.get(i);","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"        return getTagSet(strings);","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"Jellybeano":4,"xinweit":8,"Cheng20010201":79}},{"path":"src/main/java/seedu/weeblingo/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":" * API of the Storage component","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"public interface Storage extends FlashcardBookStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"    Path getFlashcardBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    Optional\u003cReadOnlyFlashcardBook\u003e readFlashcardBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"    void saveFlashcardBook(ReadOnlyFlashcardBook flashcardBook) throws IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":32}},{"path":"src/main/java/seedu/weeblingo/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":" * Manages storage of FlashcardBook data in local storage.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    private FlashcardBookStorage flashcardBookStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     * Creates a {@code StorageManager} with the given {@code FlashcardBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    public StorageManager(FlashcardBookStorage flashcardBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        super();","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"        this.flashcardBookStorage \u003d flashcardBookStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FlashcardBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"    public Path getFlashcardBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"        return flashcardBookStorage.getFlashcardBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"    public Optional\u003cReadOnlyFlashcardBook\u003e readFlashcardBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"        return readFlashcardBook(flashcardBookStorage.getFlashcardBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"    public Optional\u003cReadOnlyFlashcardBook\u003e readFlashcardBook(Path filePath)","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"        return flashcardBookStorage.readFlashcardBook(filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"xyzhang00"},"content":"    public void saveFlashcardBook(ReadOnlyFlashcardBook flashcardBook) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"        saveFlashcardBook(flashcardBook, flashcardBookStorage.getFlashcardBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"    public void saveFlashcardBook(ReadOnlyFlashcardBook flashcardBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":"        flashcardBookStorage.saveFlashcardBook(flashcardBook, filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":80}},{"path":"src/main/java/seedu/weeblingo/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":" * Represents a storage for {@link seedu.weeblingo.model.UserPrefs}.","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"     * Saves the given {@link seedu.weeblingo.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xyzhang00":6,"-":30}},{"path":"src/main/java/seedu/weeblingo/storage/exceptions/DataInitializationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.storage.exceptions;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":" * A subclass of RuntimeException which represents errors reading from built-in databases.","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":" * If this Exception is thrown, it means that the data file that is within the Jar file is","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * corrupted. Users are recommend to re-download and re-install the software.","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class DataInitializationException extends RuntimeException {","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public DataInitializationException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        super(\"Cannot read from built-in data files. Please re-install the application.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":12}},{"path":"src/main/java/seedu/weeblingo/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.CommandResult;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"         * @see seedu.weeblingo.logic.Logic#execute(String)","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"xyzhang00":5,"-":80}},{"path":"src/main/java/seedu/weeblingo/ui/FlashcardCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":" * An UI component that displays information of a {@code Flashcard}.","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"public class FlashcardCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    private static final String FXML \u003d \"FlashcardListCard.fxml\";","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on FlashcardBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"    public final Flashcard flashcard;","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    private final String image \u003d this.getClass().getResource(\"/images/cat_mascot.png\").toExternalForm();","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"    private Label answer;","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"    private Label question;","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"     * Creates a {@code PersonCode} with the given {@code Flashcard} and index to display.","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"    public FlashcardCard(Flashcard flashcard, int displayedIndex, boolean showAnswer) {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"        this.flashcard \u003d flashcard;","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"        id.setText(\"Question: \" + displayedIndex + \". \");","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"        setQuestion(flashcard.getQuestion().value);","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"        showImage();","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"        setAnswer(showAnswer ? \"Answer: \" + flashcard.getAnswer().value : \"Answer: \");","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        flashcard.getWeeblingoTags().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"        flashcard.getUserTags().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"                    Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"                    label.setStyle(\"-fx-background-color: #777c85\");","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"                    tags.getChildren().add(label);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"                });","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"        if (!(other instanceof FlashcardCard)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"        FlashcardCard card \u003d (FlashcardCard) other;","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"                \u0026\u0026 flashcard.equals(card.flashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"    private void setQuestion(String toSet) {","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"xyzhang00"},"content":"        question.setText(toSet);","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"xyzhang00"},"content":"    private void setAnswer(String toSet) {","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"xyzhang00"},"content":"        answer.setText(toSet);","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"xyzhang00"},"content":"    private void showImage() {","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"xyzhang00"},"content":"        cardPane.setStyle(\"-fx-background-image: url(\u0027\" + image + \"\u0027); \"","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"                + \"-fx-background-position: center center; \"","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"xyzhang00"},"content":"                + \"-fx-background-repeat: stretch;\");","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jellybeano":19,"xyzhang00":25,"Cheng20010201":4,"-":48}},{"path":"src/main/java/seedu/weeblingo/ui/FlashcardListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":" * Panel containing the list of flashcards.","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"public class FlashcardListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    private static final int LIST_INDEX \u003d -1;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    // supposed to indicate not during a quiz session but i cannot think of names alr haha lol woof bark","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    private static final String FXML \u003d \"FlashcardListPanel.fxml\";","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FlashcardListPanel.class);","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    @FXML","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    private ListView\u003cFlashcard\u003e flashcardListView;","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"     * Creates a {@code FlashcardListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    public FlashcardListPanel(ObservableList\u003cFlashcard\u003e flashcardList) {","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"        super(FXML);","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        flashcardListView.setItems(flashcardList);","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"        flashcardListView.setCellFactory(listView -\u003e new FlashcardListViewCell(LIST_INDEX, true));","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"    public void updateCard(int currIndex, boolean showAnswer) {","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"        flashcardListView.setCellFactory(listView -\u003e new FlashcardListViewCell(currIndex, showAnswer));","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Flashcard} using a {@code FlashcardCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"    class FlashcardListViewCell extends ListCell\u003cFlashcard\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"        private int currIndex;","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"        private boolean showAnswer;","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"        public FlashcardListViewCell(int currIndex, boolean showAnswer) {","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"            this.currIndex \u003d currIndex;","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"            this.showAnswer \u003d showAnswer;","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"        protected void updateItem(Flashcard flashcard, boolean empty) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"            super.updateItem(flashcard, empty);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"            if (empty || flashcard \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"                setGraphic(new FlashcardCard(flashcard, currIndex \u003d\u003d LIST_INDEX ? getIndex() + 1 : currIndex,","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"                        showAnswer).getRoot());","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":27,"xyzhang00":23,"Cheng20010201":16}},{"path":"src/main/java/seedu/weeblingo/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-t13-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xyzhang00":3,"-":99}},{"path":"src/main/java/seedu/weeblingo/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.Logic;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.CommandResult;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    private final ImageView teacherImage \u003d new ImageView(","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/teacher.png\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"    private FlashcardListPanel flashcardListPanel;","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    private ScoreHistoryListPanel scoreHistoryListPanel;","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    private StackPane flashcardListPanelPlaceholder; // todo: refactor it into a general container","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":119,"author":{"gitId":"xinweit"},"content":"        // display menu mode at the launch of app","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"xinweit"},"content":"        flashcardListPanel \u003d new FlashcardListPanel(logic.getFilteredFlashcardList());","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"        scoreHistoryListPanel \u003d new ScoreHistoryListPanel(logic.getFilteredScoreHistoryList());","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"xinweit"},"content":"        flashcardListPanelPlaceholder.getChildren().add(flashcardListPanel.getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"xinweit"},"content":"        // don\u0027t show flashcard panel at the start","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"xyzhang00"},"content":"        flashcardListPanelPlaceholder.setVisible(false);","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"xyzhang00"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getFlashcardBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"Jellybeano"},"content":"    public FlashcardListPanel getFlashcardListPanel() {","lastModifiedDate":"2021-02-28"},{"lineNumber":180,"author":{"gitId":"Jellybeano"},"content":"        return flashcardListPanel;","lastModifiedDate":"2021-02-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"xyzhang00"},"content":"     * @see seedu.weeblingo.logic.Logic#execute(String)","lastModifiedDate":"2021-03-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":194,"author":{"gitId":"xyzhang00"},"content":"            int currentMode \u003d logic.getCurrentMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"xinweit"},"content":"            logger.info(String.format(\"Current mode is %s\", currentMode));","lastModifiedDate":"2021-03-26"},{"lineNumber":196,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":197,"author":{"gitId":"Cheng20010201"},"content":"            changePlaceHolderContent(logic.isShowingHistory());","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"xyzhang00"},"content":"            flashcardListPanelPlaceholder.setVisible(logic.showCards());","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"xyzhang00"},"content":"            flashcardListPanel.updateCard(logic.getCurrentIndex(), logic.showAnswer());","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":218,"author":{"gitId":"Cheng20010201"},"content":"    private void changePlaceHolderContent(boolean isShowingHistory) {","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"Cheng20010201"},"content":"        int index \u003d -1;","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"Cheng20010201"},"content":"        if (isShowingHistory) {","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"Cheng20010201"},"content":"            index \u003d flashcardListPanelPlaceholder.getChildren().indexOf(flashcardListPanel.getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"Cheng20010201"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2021-03-26"},{"lineNumber":223,"author":{"gitId":"Cheng20010201"},"content":"                flashcardListPanelPlaceholder.getChildren().set(index, scoreHistoryListPanel.getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"Cheng20010201"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"Cheng20010201"},"content":"            index \u003d flashcardListPanelPlaceholder.getChildren().indexOf(scoreHistoryListPanel.getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"Cheng20010201"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"Cheng20010201"},"content":"                flashcardListPanelPlaceholder.getChildren().set(index, flashcardListPanel.getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":231,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":232,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":233,"author":{"gitId":"xinweit"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":234,"author":{"gitId":"xinweit"},"content":"     * Displays greetings message in resultDisplay.","lastModifiedDate":"2021-03-10"},{"lineNumber":235,"author":{"gitId":"xinweit"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":236,"author":{"gitId":"xinweit"},"content":"    public void displayGreetings() {","lastModifiedDate":"2021-03-06"},{"lineNumber":237,"author":{"gitId":"xinweit"},"content":"        resultDisplay.greetUser();","lastModifiedDate":"2021-03-06"},{"lineNumber":238,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":239,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Jellybeano":7,"xyzhang00":15,"xinweit":16,"Cheng20010201":21,"-":181}},{"path":"src/main/java/seedu/weeblingo/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"     * Greets the user.","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    public void greetUser() {","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"        resultDisplay.setText(\"Hi! Welcome to WeebLingo, your personal Japanese tutor. Type \u0027learn\u0027 or \u0027quiz\u0027 \\n\"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"                + \"to enter learn or quiz mode.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xyzhang00":1,"xinweit":8,"-":27}},{"path":"src/main/java/seedu/weeblingo/ui/ScoreCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" * An UI component that displays information of a {@code Score}.","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"public class ScoreCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    private static final String FXML \u003d \"ScoreCard.fxml\"; // TODO: it is very primitive now","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    public final Score score;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on FlashcardBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    private Label id;","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    private Label completedTime;","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    private Label numOfQuestionsAttempted;","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    private Label numOfQuestionsCorrect;","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    private Label correctRatio;","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    private Label timeSpent;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     * Creates a {@code ScoreCard} with the given {@code Score} and index to display.","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"    public ScoreCard(Score score, int displayedIndex) {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"        super(FXML);","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        this.score \u003d score;","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        id.setText(\"History ID: \" + displayedIndex + \"\\n\");","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        completedTime.setText(\"Completed time: \" + score.getCompletedTime());","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        numOfQuestionsAttempted.setText(\"Number of attempts: \" + score.getNumberOfQuestionsAttempted());","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        numOfQuestionsCorrect.setText(\"Number of correct attempts: \"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"                + score.getNumberOfQuestionsCorrect());","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        correctRatio.setText(\"Correct ratio: \" + score.getCorrectRatioString());","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        timeSpent.setText(\"Time spent: \" + score.getTimeSpent());","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"            return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        if (!(other instanceof FlashcardCard)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"            return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"        // state check","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"        ScoreCard card \u003d (ScoreCard) other;","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"                \u0026\u0026 score.equals(card.score);","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":70}},{"path":"src/main/java/seedu/weeblingo/ui/ScoreHistoryListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"public class ScoreHistoryListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    private static final String FXML \u003d \"ScoreHistoryListPanel.fxml\"; // placeholder, todo: beautify UI design","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FlashcardListPanel.class);","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    private ListView\u003cScore\u003e scoreHistoryListView;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     * Creates a {@code FlashcardListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    public ScoreHistoryListPanel(ObservableList\u003cScore\u003e scores) {","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        super(FXML);","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        scoreHistoryListView.setItems(scores);","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        scoreHistoryListView.setCellFactory(listView -\u003e new ScoreHistoryListPanel.ScoreListViewCell());","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Flashcard} using a {@code Score}.","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    class ScoreListViewCell extends ListCell\u003cScore\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        protected void updateItem(Score score, boolean empty) {","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            super.updateItem(score, empty);","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"            if (empty || score \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"                setText(null);","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"            } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"                setGraphic(new ScoreCard(score, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":44}},{"path":"src/main/java/seedu/weeblingo/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":1,"-":27}},{"path":"src/main/java/seedu/weeblingo/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xyzhang00":1,"-":12}},{"path":"src/main/java/seedu/weeblingo/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.MainApp;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.util.StringUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.Logic;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/weeblingo.png\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"xinweit"},"content":"            mainWindow.displayGreetings(); //Greet user at app startup","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Jellybeano":1,"xyzhang00":5,"xinweit":3,"-":82}},{"path":"src/main/java/seedu/weeblingo/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.MainApp;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xyzhang00":2,"-":86}},{"path":"src/main/resources/database/JapaneseDatabase.json","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yanneko"},"content":"{","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"Yanneko"},"content":"  \"flashcards\" : [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"あ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"a\",","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"い\",","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"i\",","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"う\",","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"u\",","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"え\",","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"e\",","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"お\",","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"o\",","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"か\",","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ka\",","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"き\",","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ki\",","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"く\",","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ku\",","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"け\",","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ke\",","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"こ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ko\",","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"さ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"sa\",","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"し\",","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"shi\",","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"す\",","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"su\",","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"せ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"se\",","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"そ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"so\",","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"た\",","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ta\",","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ち\",","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"chi\",","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"つ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"tsu\",","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"て\",","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"te\",","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"と\",","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"to\",","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"な\",","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"na\",","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"に\",","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ni\",","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぬ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"nu\",","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ね\",","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ne\",","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"の\",","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"no\",","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"は\",","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ha\",","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ひ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"hi\",","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ふ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"fu\",","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"へ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"he\",","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ほ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":120,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ho\",","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":123,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ま\",","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ma\",","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":126,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"み\",","lastModifiedDate":"2021-03-07"},{"lineNumber":128,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"mi\",","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"む\",","lastModifiedDate":"2021-03-07"},{"lineNumber":132,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"mu\",","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":134,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":135,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"め\",","lastModifiedDate":"2021-03-07"},{"lineNumber":136,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"me\",","lastModifiedDate":"2021-03-07"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":138,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"も\",","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"mo\",","lastModifiedDate":"2021-03-07"},{"lineNumber":141,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":142,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":143,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"や\",","lastModifiedDate":"2021-03-07"},{"lineNumber":144,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ya\",","lastModifiedDate":"2021-03-07"},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":146,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":147,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ゆ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":148,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"yu\",","lastModifiedDate":"2021-03-07"},{"lineNumber":149,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":150,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":151,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"よ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":152,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"yo\",","lastModifiedDate":"2021-03-07"},{"lineNumber":153,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":154,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":155,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ら\",","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ra\",","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":158,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"り\",","lastModifiedDate":"2021-03-07"},{"lineNumber":160,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ri\",","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":162,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"る\",","lastModifiedDate":"2021-03-07"},{"lineNumber":164,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ru\",","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":166,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":167,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"れ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":168,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"re\",","lastModifiedDate":"2021-03-07"},{"lineNumber":169,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":170,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":171,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ろ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":172,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ro\",","lastModifiedDate":"2021-03-07"},{"lineNumber":173,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":174,"author":{"gitId":"Yanneko"},"content":"  },{","lastModifiedDate":"2021-03-07"},{"lineNumber":175,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"わ\",","lastModifiedDate":"2021-03-07"},{"lineNumber":176,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"wa\",","lastModifiedDate":"2021-03-07"},{"lineNumber":177,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":178,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":179,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"を\",","lastModifiedDate":"2021-03-07"},{"lineNumber":180,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"wo\",","lastModifiedDate":"2021-03-07"},{"lineNumber":181,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":182,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-07"},{"lineNumber":183,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ん\",","lastModifiedDate":"2021-03-07"},{"lineNumber":184,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"n\",","lastModifiedDate":"2021-03-07"},{"lineNumber":185,"author":{"gitId":"Cheng20010201"},"content":"    \"tagged\" : [\"hiragana\", \"gojuon\"]","lastModifiedDate":"2021-03-21"},{"lineNumber":186,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"が\",","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ga\",","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぎ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"gi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぐ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"gu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"げ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ge\",","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ご\",","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"go\",","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ざ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"za\",","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"じ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ji\",","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ず\",","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"zu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぜ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ze\",","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぞ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"zo\",","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"だ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"da\",","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぢ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"di\",","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":234,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"づ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":236,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"du\",","lastModifiedDate":"2021-03-28"},{"lineNumber":237,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"で\",","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"de\",","lastModifiedDate":"2021-03-28"},{"lineNumber":241,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":242,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":243,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ど\",","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"do\",","lastModifiedDate":"2021-03-28"},{"lineNumber":245,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":246,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":247,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ば\",","lastModifiedDate":"2021-03-28"},{"lineNumber":248,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ba\",","lastModifiedDate":"2021-03-28"},{"lineNumber":249,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":250,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":251,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"び\",","lastModifiedDate":"2021-03-28"},{"lineNumber":252,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"bi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":254,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぶ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"bu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"べ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":260,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"be\",","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":262,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":263,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぼ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":264,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"bo\",","lastModifiedDate":"2021-03-28"},{"lineNumber":265,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":266,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":267,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぱ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":268,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"pa\",","lastModifiedDate":"2021-03-28"},{"lineNumber":269,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":270,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":271,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぴ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":272,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"pi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":273,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":274,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":275,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぷ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":276,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"pu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":277,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":278,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":279,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぺ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":280,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"pe\",","lastModifiedDate":"2021-03-28"},{"lineNumber":281,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":282,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":283,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ぽ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":284,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"po\",","lastModifiedDate":"2021-03-28"},{"lineNumber":285,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"hiragana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":286,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":287,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ア\",","lastModifiedDate":"2021-03-28"},{"lineNumber":288,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"a\",","lastModifiedDate":"2021-03-28"},{"lineNumber":289,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":290,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":291,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"イ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":292,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"i\",","lastModifiedDate":"2021-03-28"},{"lineNumber":293,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":294,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":295,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ウ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":296,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"u\",","lastModifiedDate":"2021-03-28"},{"lineNumber":297,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":298,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":299,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"エ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":300,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"e\",","lastModifiedDate":"2021-03-28"},{"lineNumber":301,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":302,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":303,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"オ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":304,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"o\",","lastModifiedDate":"2021-03-28"},{"lineNumber":305,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":306,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":307,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"カ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":308,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ka\",","lastModifiedDate":"2021-03-28"},{"lineNumber":309,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":310,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":311,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"キ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":312,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ki\",","lastModifiedDate":"2021-03-28"},{"lineNumber":313,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":314,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":315,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ク\",","lastModifiedDate":"2021-03-28"},{"lineNumber":316,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ku\",","lastModifiedDate":"2021-03-28"},{"lineNumber":317,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":318,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":319,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ケ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":320,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ke\",","lastModifiedDate":"2021-03-28"},{"lineNumber":321,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":322,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":323,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"コ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":324,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ko\",","lastModifiedDate":"2021-03-28"},{"lineNumber":325,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":326,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":327,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"サ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":328,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"sa\",","lastModifiedDate":"2021-03-28"},{"lineNumber":329,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":330,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":331,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"シ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":332,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"shi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":333,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":334,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":335,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ス\",","lastModifiedDate":"2021-03-28"},{"lineNumber":336,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"su\",","lastModifiedDate":"2021-03-28"},{"lineNumber":337,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":338,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":339,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"セ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":340,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"se\",","lastModifiedDate":"2021-03-28"},{"lineNumber":341,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":342,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":343,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ソ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":344,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"so\",","lastModifiedDate":"2021-03-28"},{"lineNumber":345,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":346,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":347,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"タ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":348,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ta\",","lastModifiedDate":"2021-03-28"},{"lineNumber":349,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":350,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":351,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"チ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":352,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"chi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":353,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":354,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":355,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ツ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":356,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"tsu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":357,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":358,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":359,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"テ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":360,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"te\",","lastModifiedDate":"2021-03-28"},{"lineNumber":361,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":362,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":363,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ト\",","lastModifiedDate":"2021-03-28"},{"lineNumber":364,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"to\",","lastModifiedDate":"2021-03-28"},{"lineNumber":365,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":366,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":367,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ナ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":368,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"na\",","lastModifiedDate":"2021-03-28"},{"lineNumber":369,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":370,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":371,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ニ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":372,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ni\",","lastModifiedDate":"2021-03-28"},{"lineNumber":373,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":374,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":375,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ヌ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":376,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"nu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":377,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":378,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":379,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ネ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":380,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ne\",","lastModifiedDate":"2021-03-28"},{"lineNumber":381,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":382,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":383,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ノ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":384,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"no\",","lastModifiedDate":"2021-03-28"},{"lineNumber":385,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":386,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":387,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ハ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":388,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ha\",","lastModifiedDate":"2021-03-28"},{"lineNumber":389,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":390,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":391,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ヒ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":392,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"hi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":393,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":394,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":395,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"フ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":396,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"fu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":397,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":398,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":399,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ヘ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":400,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"he\",","lastModifiedDate":"2021-03-28"},{"lineNumber":401,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":402,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":403,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ホ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":404,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ho\",","lastModifiedDate":"2021-03-28"},{"lineNumber":405,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":406,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":407,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"マ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":408,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ma\",","lastModifiedDate":"2021-03-28"},{"lineNumber":409,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":410,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":411,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ミ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":412,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"mi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":413,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":414,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":415,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ム\",","lastModifiedDate":"2021-03-28"},{"lineNumber":416,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"mu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":417,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":418,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":419,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"メ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":420,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"me\",","lastModifiedDate":"2021-03-28"},{"lineNumber":421,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":422,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":423,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"モ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":424,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"mo\",","lastModifiedDate":"2021-03-28"},{"lineNumber":425,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":426,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":427,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ヤ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":428,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ya\",","lastModifiedDate":"2021-03-28"},{"lineNumber":429,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":430,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":431,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ユ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":432,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"yu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":433,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":434,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":435,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ヨ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":436,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"yo\",","lastModifiedDate":"2021-03-28"},{"lineNumber":437,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":438,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":439,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ラ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":440,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ra\",","lastModifiedDate":"2021-03-28"},{"lineNumber":441,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":442,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":443,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"リ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":444,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ri\",","lastModifiedDate":"2021-03-28"},{"lineNumber":445,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":446,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":447,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ル\",","lastModifiedDate":"2021-03-28"},{"lineNumber":448,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ru\",","lastModifiedDate":"2021-03-28"},{"lineNumber":449,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":450,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":451,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"レ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":452,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"re\",","lastModifiedDate":"2021-03-28"},{"lineNumber":453,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":454,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":455,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ロ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":456,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ro\",","lastModifiedDate":"2021-03-28"},{"lineNumber":457,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":458,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":459,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ワ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":460,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"wa\",","lastModifiedDate":"2021-03-28"},{"lineNumber":461,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":462,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":463,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ヲ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":464,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"wo\",","lastModifiedDate":"2021-03-28"},{"lineNumber":465,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":466,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":467,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ン\",","lastModifiedDate":"2021-03-28"},{"lineNumber":468,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"n\",","lastModifiedDate":"2021-03-28"},{"lineNumber":469,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"gojuon\", \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":470,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":471,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ガ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":472,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ga\",","lastModifiedDate":"2021-03-28"},{"lineNumber":473,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":474,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":475,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ギ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":476,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"gi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":477,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":478,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":479,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"グ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":480,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"gu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":481,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":482,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":483,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ゲ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":484,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ge\",","lastModifiedDate":"2021-03-28"},{"lineNumber":485,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":486,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":487,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ゴ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":488,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"go\",","lastModifiedDate":"2021-03-28"},{"lineNumber":489,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":490,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":491,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ザ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":492,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"za\",","lastModifiedDate":"2021-03-28"},{"lineNumber":493,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":494,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":495,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ジ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":496,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ji\",","lastModifiedDate":"2021-03-28"},{"lineNumber":497,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":498,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":499,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ズ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":500,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"zu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":501,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":502,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":503,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ゼ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":504,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ze\",","lastModifiedDate":"2021-03-28"},{"lineNumber":505,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":506,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":507,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ゾ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":508,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"zo\",","lastModifiedDate":"2021-03-28"},{"lineNumber":509,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":510,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":511,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ダ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":512,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"da\",","lastModifiedDate":"2021-03-28"},{"lineNumber":513,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":514,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":515,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ヂ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":516,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"di\",","lastModifiedDate":"2021-03-28"},{"lineNumber":517,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":518,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":519,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ヅ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":520,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"du\",","lastModifiedDate":"2021-03-28"},{"lineNumber":521,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":522,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":523,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"デ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":524,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"de\",","lastModifiedDate":"2021-03-28"},{"lineNumber":525,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":526,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":527,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ド\",","lastModifiedDate":"2021-03-28"},{"lineNumber":528,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"do\",","lastModifiedDate":"2021-03-28"},{"lineNumber":529,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":530,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":531,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"バ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":532,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ba\",","lastModifiedDate":"2021-03-28"},{"lineNumber":533,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":534,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":535,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ビ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":536,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"bi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":537,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":538,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":539,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ブ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":540,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"bu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":541,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":542,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":543,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ベ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":544,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"be\",","lastModifiedDate":"2021-03-28"},{"lineNumber":545,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":546,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":547,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ボ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":548,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"bo\",","lastModifiedDate":"2021-03-28"},{"lineNumber":549,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":550,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":551,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"パ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":552,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"pa\",","lastModifiedDate":"2021-03-28"},{"lineNumber":553,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":554,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":555,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ピ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":556,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"pi\",","lastModifiedDate":"2021-03-28"},{"lineNumber":557,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":558,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":559,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"プ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":560,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"pu\",","lastModifiedDate":"2021-03-28"},{"lineNumber":561,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":562,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":563,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ペ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":564,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"pe\",","lastModifiedDate":"2021-03-28"},{"lineNumber":565,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":566,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":567,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ポ\",","lastModifiedDate":"2021-03-28"},{"lineNumber":568,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"po\",","lastModifiedDate":"2021-03-28"},{"lineNumber":569,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"katakana\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":570,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":571,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"零|れい\",","lastModifiedDate":"2021-03-28"},{"lineNumber":572,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"zero\",","lastModifiedDate":"2021-03-28"},{"lineNumber":573,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":574,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":575,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"一|いち\",","lastModifiedDate":"2021-03-28"},{"lineNumber":576,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"one\",","lastModifiedDate":"2021-03-28"},{"lineNumber":577,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":578,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":579,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"ニ|に\",","lastModifiedDate":"2021-03-28"},{"lineNumber":580,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"two\",","lastModifiedDate":"2021-03-28"},{"lineNumber":581,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":582,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":583,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"三|さん\",","lastModifiedDate":"2021-03-28"},{"lineNumber":584,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"three\",","lastModifiedDate":"2021-03-28"},{"lineNumber":585,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":586,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":587,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"四|よん\",","lastModifiedDate":"2021-03-28"},{"lineNumber":588,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"four\",","lastModifiedDate":"2021-03-28"},{"lineNumber":589,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":590,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":591,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"五|ご\",","lastModifiedDate":"2021-03-28"},{"lineNumber":592,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"five\",","lastModifiedDate":"2021-03-28"},{"lineNumber":593,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":594,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":595,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"六|ろく\",","lastModifiedDate":"2021-03-28"},{"lineNumber":596,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"six\",","lastModifiedDate":"2021-03-28"},{"lineNumber":597,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":598,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":599,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"七|なな\",","lastModifiedDate":"2021-03-28"},{"lineNumber":600,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"seven\",","lastModifiedDate":"2021-03-28"},{"lineNumber":601,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":602,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":603,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"八|はち\",","lastModifiedDate":"2021-03-28"},{"lineNumber":604,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"eight\",","lastModifiedDate":"2021-03-28"},{"lineNumber":605,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":606,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":607,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"九|きゅう\",","lastModifiedDate":"2021-03-28"},{"lineNumber":608,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"nine\",","lastModifiedDate":"2021-03-28"},{"lineNumber":609,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":610,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":611,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"十|じゅう\",","lastModifiedDate":"2021-03-28"},{"lineNumber":612,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"ten\",","lastModifiedDate":"2021-03-28"},{"lineNumber":613,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":614,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":615,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"百|ひゃく\",","lastModifiedDate":"2021-03-28"},{"lineNumber":616,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"hundred\",","lastModifiedDate":"2021-03-28"},{"lineNumber":617,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":618,"author":{"gitId":"Yanneko"},"content":"  }, {","lastModifiedDate":"2021-03-28"},{"lineNumber":619,"author":{"gitId":"Yanneko"},"content":"    \"question\" : \"千|せん\",","lastModifiedDate":"2021-03-28"},{"lineNumber":620,"author":{"gitId":"Yanneko"},"content":"    \"answer\" : \"thousand\",","lastModifiedDate":"2021-03-28"},{"lineNumber":621,"author":{"gitId":"Yanneko"},"content":"    \"tagged\" : [ \"numbers\" ]","lastModifiedDate":"2021-03-28"},{"lineNumber":622,"author":{"gitId":"Yanneko"},"content":"  }]","lastModifiedDate":"2021-03-07"},{"lineNumber":623,"author":{"gitId":"Yanneko"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"Yanneko":577,"Cheng20010201":46}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: derive(#d9edff, 20%);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: derive(#d9edff, 20%);","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: #d9edff;","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: #e3f5ff;","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"    -fx-border-color: #3396ff;","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"    -fx-border-width: 10;","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"Jellybeano"},"content":"     -fx-background-color: derive(#d9edff, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"Jellybeano"},"content":"     -fx-background-color: derive(#80d2ff, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"     -fx-border-color: derive(white, 10%);","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: derive(#c7ecff, 30%);","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"Jellybeano"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"Jellybeano"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: derive(white, 50%);","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: derive(#c7ecff, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"Jellybeano"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: derive(#abe7ff, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: derive(#4eb7fc, 50%);","lastModifiedDate":"2021-03-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"Jellybeano"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"Jellybeano"},"content":"    -fx-background-color: transparent, #d9edff, transparent, #d9edff;","lastModifiedDate":"2021-03-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Jellybeano":21,"-":332}},{"path":"src/main/resources/view/FlashcardListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"        \u003cLabel fx:id\u003d\"question\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$question\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"                  \u003cInsets left\u003d\"25.0\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"               \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"      \u003cLabel fx:id\u003d\"answer\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$answer\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"               \u003cInsets left\u003d\"35.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jellybeano":15,"-":29}},{"path":"src/main/resources/view/FlashcardListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"  \u003cListView fx:id\u003d\"flashcardListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jellybeano":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"         title\u003d\"WeebLingo\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    \u003cImage url\u003d\"@/images/weeblingo.png\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        \u003cVBox fx:id\u003d\"flashcardList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"          \u003cStackPane fx:id\u003d\"flashcardListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Jellybeano":4,"-":56}},{"path":"src/main/resources/view/ScoreCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"            \u003cLabel fx:id\u003d\"completedTime\" text\u003d\"\\$Nah\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"            \u003cLabel fx:id\u003d\"timeSpent\" text\u003d\"\\$Nah\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"            \u003cLabel fx:id\u003d\"numOfQuestionsAttempted\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$Nah\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"            \u003cLabel fx:id\u003d\"numOfQuestionsCorrect\" text\u003d\"\\$Nah\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"            \u003cLabel fx:id\u003d\"correctRatio\" text\u003d\"\\$Nah\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":36}},{"path":"src/main/resources/view/ScoreHistoryListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"    \u003cListView fx:id\u003d\"scoreHistoryListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Cheng20010201":8}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"  \"flashcardsFilePath\" : \"database/flashcards.json\"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xyzhang00":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"  \"flashcardsFilePath\" : \"database/flashcards.json\"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xyzhang00":1,"-":10}},{"path":"src/test/java/seedu/weeblingo/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"xyzhang00":1,"-":57}},{"path":"src/test/java/seedu/weeblingo/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.core;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"xyzhang00":1,"-":26}},{"path":"src/test/java/seedu/weeblingo/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.core;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":2,"-":133}},{"path":"src/test/java/seedu/weeblingo/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.core.index;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xyzhang00":2,"-":58}},{"path":"src/test/java/seedu/weeblingo/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"        assertNotNull(AppUtil.getImage(\"/images/weeblingo.png\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Jellybeano":1,"xyzhang00":2,"-":33}},{"path":"src/test/java/seedu/weeblingo/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"xyzhang00":3,"-":105}},{"path":"src/test/java/seedu/weeblingo/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.Config;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xyzhang00":4,"-":112}},{"path":"src/test/java/seedu/weeblingo/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":2,"-":21}},{"path":"src/test/java/seedu/weeblingo/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.testutil.SerializableTestClass;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.testutil.TestUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":3,"-":42}},{"path":"src/test/java/seedu/weeblingo/commons/util/RegexUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" * Automated testing for seedu.weeblingo.commons.util.RegexUtil.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"public class RegexUtilTest {","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    // Regex to be used during testing","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    private static final String regex \u003d RegexUtil.REGEX_JAP_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    // -------------------------------- REGEX_JAP_WORD --------------------------------","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * Valid Jap words: only contains hiragana, katakana, and kanji","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    public void regexJapWordValid() {","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        // normal hiragana","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"あ\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"が\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"っ\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"ぴ\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"きゅ\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        // normal katakana","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"ア\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"ザ\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"ア\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"ッ\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"キュ\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        // normal kanji","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"留学生\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"私\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"金魚\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"天気\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"        // simple combinations","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"散りぬるを\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"ツネナラムウヰノオクヤマ\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"浅き夢見じ酔ひもせず\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"     * Invalid Jap words: contains space, punctuation， latin and numeric characters","lastModifiedDate":"2021-02-24"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-02-24"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    public void regexJapWordInvalid() {","lastModifiedDate":"2021-02-24"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"        // empty string / strings without content","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\" \".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"        // strings with trailing white spaces","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\" 天気\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"天気 \".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        // strings containing punctuations","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"天気。\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"天気、\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"、天気\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"        // strings containing numeric values","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"123天気\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"天123気weather\".matches(regex));","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"123.123天気\".matches(regex));","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"        // strings containing German/Latin characters","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"latin天気\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"天気latin\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"天気Ä\".matches(regex));","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"weather\".matches(regex));","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"        // strings containing miscellaneous non-sense characters","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"\u0026*()(\u0026**天気\".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"天気^\u0026(^\u0026\u0026(^ \".matches(regex));","lastModifiedDate":"2021-02-24"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"    // ---------------- Tests for REGEX_JAP_SENTENCE --------------------------------------","lastModifiedDate":"2021-02-26"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"    /*","lastModifiedDate":"2021-02-26"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"     * Valid Jap sentences: only contains hiragana, katakana, kanji, english letters, numbers punctuations and symbols.","lastModifiedDate":"2021-02-26"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-02-26"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"    public void regexJapSentenceValid() {","lastModifiedDate":"2021-02-26"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"        String regex \u003d RegexUtil.REGEX_JAP_SENTENCE;","lastModifiedDate":"2021-02-26"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"猫になりたい。\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"私は ただ、勉強したくないだけです。\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"CS2103Tははははは\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"収入は1000.25円。\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"12345あいうえお\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"ジンボはリンゴを食べる。\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"。。。\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"    // ---------------- Tests for REGEX_JAP_SENTENCE --------------------------------------","lastModifiedDate":"2021-02-26"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"    /*","lastModifiedDate":"2021-02-26"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"     * Invalid Jap sentences: empty sentences, contain non-english \u0026 non-japanese \u0026 non-chinese characters","lastModifiedDate":"2021-02-26"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-02-26"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"    public void regexJapSentenceInvalid() {","lastModifiedDate":"2021-02-26"},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"        String regex \u003d RegexUtil.REGEX_JAP_SENTENCE;","lastModifiedDate":"2021-02-26"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"  \".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\" 収入は1000.25円。\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"Glück\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"Adiós\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"아니요\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":"    // ---------------- Tests for REGEX_ENG_WORD --------------------------------------","lastModifiedDate":"2021-02-26"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"    /*","lastModifiedDate":"2021-02-26"},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":"     * Both valid and invalid cases tests are here.","lastModifiedDate":"2021-02-26"},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-02-26"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"    public void regexEngWord() {","lastModifiedDate":"2021-02-26"},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"        String regex \u003d RegexUtil.REGEX_ENG_WORD;","lastModifiedDate":"2021-02-26"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"a\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"A\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"Yes\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\" \".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":130,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"No.\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":131,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"1word\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":132,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"two words\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"Adiós\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"아니요\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"    // ---------------- Tests for REGEX_ENG_SENTENCE --------------------------------------","lastModifiedDate":"2021-02-26"},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"    /*","lastModifiedDate":"2021-02-26"},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":"     * Both valid and invalid cases tests are here.","lastModifiedDate":"2021-02-26"},{"lineNumber":140,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":141,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-02-26"},{"lineNumber":142,"author":{"gitId":"Cheng20010201"},"content":"    public void regexEngSentence() {","lastModifiedDate":"2021-02-26"},{"lineNumber":143,"author":{"gitId":"Cheng20010201"},"content":"        String regex \u003d RegexUtil.REGEX_ENG_SENTENCE;","lastModifiedDate":"2021-02-26"},{"lineNumber":144,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"a\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":146,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"A\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":147,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"Yes\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":148,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"True.\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":149,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"Haha means happiness.\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":150,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"1 means one.\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":151,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"......\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":152,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"I ate dinner.\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":153,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"We all agreed; it was a magnificent evening.\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":154,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(\"Oh, how I\u0027d love to go!\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":155,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":156,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":157,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\" \".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":158,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"这不对！\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":159,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"Adiós\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":160,"author":{"gitId":"Cheng20010201"},"content":"        assertFalse(\"아니요\".matches(regex));","lastModifiedDate":"2021-02-26"},{"lineNumber":161,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":162,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"xyzhang00":1,"Cheng20010201":161}},{"path":"src/test/java/seedu/weeblingo/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.commons.util;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"xyzhang00":2,"-":141}},{"path":"src/test/java/seedu/weeblingo/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.CommandResult;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.LearnCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.JsonFlashcardBookStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.storage.StorageManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"        JsonFlashcardBookStorage flashcardBookStorage \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"                new JsonFlashcardBookStorage(temporaryFolder.resolve(\"flashcards.json\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"        StorageManager storage \u003d new StorageManager(flashcardBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"xinweit"},"content":"        String learnCommand \u003d LearnCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"xinweit"},"content":"        assertCommandSuccess(learnCommand, LearnCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"    //@Test","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"    //public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"    //    // Setup LogicManager with JsonFlashcardBookIoExceptionThrowingStub","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"    //    JsonFlashcardBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"    //            new JsonFlashcardBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"    //    JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"    //            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"    //    StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"    //    logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"    //    // Execute add command","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"    //    String addCommand \u003d AddCommand.COMMAND_WORD + QUESTION_DESC_A","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"    //            + ANSWER_DESC_A;","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"    //    Flashcard expectedFlashcard \u003d new FlashcardBuilder(AMY).withTags().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"    //    ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"    //    expectedModel.addFlashcard(expectedFlashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"    //    String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"    //    assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"    //}","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"    public void getFilteredFlashcardList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredFlashcardList().remove(0));","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"xyzhang00"},"content":"        Model expectedModel \u003d new ModelManager(model.getFlashcardBook(), new UserPrefs());","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"xyzhang00"},"content":"    private static class JsonFlashcardBookIoExceptionThrowingStub extends JsonFlashcardBookStorage {","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"xyzhang00"},"content":"        private JsonFlashcardBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"xyzhang00"},"content":"        public void saveFlashcardBook(ReadOnlyFlashcardBook flashcardBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jellybeano":18,"xyzhang00":24,"xinweit":2,"-":104}},{"path":"src/test/java/seedu/weeblingo/logic/commands/CheckCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.Mode;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.Quiz;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.testutil.FlashcardBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"xinweit"},"content":"public class CheckCommandTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"    public void execute_check_success() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"        Answer attempt \u003d new FlashcardBuilder().build().getAnswer();","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"        ModelStubCheckSuccessful modelStub \u003d new ModelStubCheckSuccessful();","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        CommandResult commandResult \u003d new CheckCommand(attempt).execute(modelStub);","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(CheckCommand.CORRECT_ATTEMPT + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"                + CheckCommand.MESSAGE_HELPER, commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"    public void execute_check_failure() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        Answer attempt \u003d new FlashcardBuilder().build().getAnswer();","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"        ModelStubCheckFailure modelStub \u003d new ModelStubCheckFailure();","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        CommandResult commandResult \u003d new CheckCommand(attempt).execute(modelStub);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(attempt + CheckCommand.WRONG_ATTEMPT + \"\\n\" + CheckCommand.MESSAGE_HELPER,","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"        public Path getFlashcardBookFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"        public void setFlashcardBookFilePath(Path flashcardBookFilePath) {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"        public void addFlashcard(Flashcard flashcard) {","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"        public void setFlashcardBook(ReadOnlyFlashcardBook newData) {","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"        public ReadOnlyFlashcardBook getFlashcardBook() {","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"        public boolean hasFlashcard(Flashcard flashcard) {","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"        public void deleteFlashcard(Flashcard target) {","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"        public void setFlashcard(Flashcard target, Flashcard editedFlashcard) {","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"        public ObservableList\u003cFlashcard\u003e getFilteredFlashcardList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"        public void updateFilteredFlashcardList(Predicate\u003cFlashcard\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"Yanneko"},"content":"        public void startQuiz(int numberOfQuestions, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"        public Flashcard getNextFlashcard() {","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":"        public void getCurrentFlashcard() {","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"        public int getCurrentIndex() {","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"Jellybeano"},"content":"        public void clearQuizInstance() {","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"Jellybeano"},"content":"        public boolean isCorrectAttempt(Answer attempt) {","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"Jellybeano"},"content":"        public Mode getMode() {","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"Jellybeano"},"content":"        public int getCurrentMode() {","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"Yanneko"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"Yanneko"},"content":"        public void tagFlashcard(Flashcard target, String tag) {","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"Yanneko"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"Yanneko"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"Cheng20010201"},"content":"        public ObservableList\u003cScore\u003e getFilteredScoreHistory() {","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"Cheng20010201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"Cheng20010201"},"content":"        public void updateFilteredScoreHistory(Predicate\u003cScore\u003e s) {","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"Cheng20010201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"Jellybeano"},"content":"        public Quiz getQuizInstance() {","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeQuiz() {","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeLearn() {","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeMenu() {","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeQuizSession() {","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeCheckSuccess() {","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"Cheng20010201"},"content":"        public void switchModeHistory() {","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"Cheng20010201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"xinweit"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"xinweit"},"content":"        public void switchModeQuizSessionEnded() {","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"xinweit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"xinweit"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"Cheng20010201"},"content":"        public void addScore() {","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"Cheng20010201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"Cheng20010201"},"content":"        public String getQuizStatisticString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"Cheng20010201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"Jellybeano"},"content":"     * A Model stub that always checks and returns a correct answer.","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"Jellybeano"},"content":"    private class ModelStubCheckSuccessful extends ModelStub {","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"Jellybeano"},"content":"        public void getCurrentFlashcard() {","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":234,"author":{"gitId":"Jellybeano"},"content":"        public boolean isCorrectAttempt(Answer attempt) {","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"Jellybeano"},"content":"            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":236,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":237,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeCheckSuccess() {","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":241,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":242,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"Cheng20010201"},"content":"        public String getQuizStatisticString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"Cheng20010201"},"content":"            return \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"Cheng20010201"},"content":"        public int getCurrentMode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"Cheng20010201"},"content":"            return Mode.MODE_QUIZ;","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":254,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"Jellybeano"},"content":"     * A Model stub that always checks and returns a wrong answer.","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"Jellybeano"},"content":"    private class ModelStubCheckFailure extends ModelStub {","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":260,"author":{"gitId":"Jellybeano"},"content":"        public void getCurrentFlashcard() {","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":262,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":263,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":264,"author":{"gitId":"Jellybeano"},"content":"        public boolean isCorrectAttempt(Answer attempt) {","lastModifiedDate":"2021-03-28"},{"lineNumber":265,"author":{"gitId":"Jellybeano"},"content":"            return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":266,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":267,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":268,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":269,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeCheckSuccess() {","lastModifiedDate":"2021-03-28"},{"lineNumber":270,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":271,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":272,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":273,"author":{"gitId":"Cheng20010201"},"content":"        public String getQuizStatisticString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"Cheng20010201"},"content":"            return \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":278,"author":{"gitId":"Cheng20010201"},"content":"        public int getCurrentMode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":279,"author":{"gitId":"Cheng20010201"},"content":"            return Mode.MODE_QUIZ;","lastModifiedDate":"2021-03-30"},{"lineNumber":280,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"xinweit"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":282,"author":{"gitId":"xinweit"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Jellybeano":208,"xinweit":17,"Yanneko":9,"Cheng20010201":48}},{"path":"src/test/java/seedu/weeblingo/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"                false, false)));","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\", false, false)));","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"        assertFalse(commandResult.equals(new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"                \"feedback\", true, false)));","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        assertFalse(commandResult.equals(new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"                \"feedback\", false, true)));","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"                \"feedback\", true, false).hashCode());","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"                \"feedback\", false, true).hashCode());","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Jellybeano":6,"xyzhang00":6,"-":47}},{"path":"src/test/java/seedu/weeblingo/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_START_NUMBER;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.FlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.QuestionContainsKeywordsPredicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    public static final String VALID_QUESTION_A \u003d \"あ\";","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    public static final String VALID_QUESTION_B \u003d \"い\";","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    public static final String VALID_ANSWER_A \u003d \"a\";","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    public static final String VALID_ANSWER_B \u003d \"i\";","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_INTEGER_MIN \u003d \"1\";","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_INTEGER_MIDDLE \u003d \"10\";","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_INTEGER_MAX \u003d String.valueOf(Integer.MAX_VALUE);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Yanneko"},"content":"    public static final String INVALID_START_INTEGER_MAX \u003d \"0\";","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Yanneko"},"content":"    public static final String INVALID_START_INTEGER_MIDDLE \u003d \"-10\";","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Yanneko"},"content":"    public static final String INVALID_START_INTEGER_MIN \u003d String.valueOf(Integer.MIN_VALUE);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_TAG_HIRAGANA \u003d \"hiragana\";","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_TAG_GOJUON \u003d \"gojuon\";","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Yanneko"},"content":"    public static final String INVALID_START_TAG \u003d \"!@#$%\";","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Yanneko"},"content":"    public static final int VALID_START_INTEGER_GENERIC \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Yanneko"},"content":"    public static final Set\u003cTag\u003e VALID_START_TAGS_SET_GENERIC \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_INTEGER_MIN_DESC \u003d \" \" + PREFIX_START_NUMBER + VALID_START_INTEGER_MIN;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_INTEGER_MIDDLE_DESC \u003d \" \" + PREFIX_START_NUMBER + VALID_START_INTEGER_MIDDLE;","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_INTEGER_MAX_DESC \u003d \" \" + PREFIX_START_NUMBER + VALID_START_INTEGER_MAX;","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Yanneko"},"content":"    public static final String INVALID_START_INTEGER_MAX_DESC \u003d \" \" + PREFIX_START_NUMBER + INVALID_START_INTEGER_MAX;","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Yanneko"},"content":"    public static final String INVALID_START_INTEGER_MIDDLE_DESC \u003d \" \" + PREFIX_START_NUMBER","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Yanneko"},"content":"            + INVALID_START_INTEGER_MIDDLE;","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Yanneko"},"content":"    public static final String INVALID_START_INTEGER_MIN_DESC \u003d \" \" + PREFIX_START_NUMBER + INVALID_START_INTEGER_MIN;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_TAG_HIRAGANA_DESC \u003d \" \" + PREFIX_TAG + VALID_START_TAG_HIRAGANA;","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_TAG_GOJUON_DESC \u003d \" \" + PREFIX_TAG + VALID_START_TAG_GOJUON;","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Yanneko"},"content":"    public static final String VALID_START_TAG_COMBINATION_DESC \u003d \" \" + VALID_START_TAG_GOJUON_DESC + \" \"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Yanneko"},"content":"            + VALID_START_TAG_HIRAGANA_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Yanneko"},"content":"    public static final String INVALID_START_TAG_DESC \u003d \" \" + PREFIX_TAG + INVALID_START_TAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"    public static final String QUESTION_DESC_A \u003d \" \" + PREFIX_QUESTION + VALID_QUESTION_A;","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"    public static final String QUESTION_DESC_B \u003d \" \" + PREFIX_QUESTION + VALID_QUESTION_B;","lastModifiedDate":"2021-02-27"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"    public static final String ANSWER_DESC_A \u003d \" \" + PREFIX_ANSWER + VALID_ANSWER_A;","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"    public static final String ANSWER_DESC_B \u003d \" \" + PREFIX_ANSWER + VALID_ANSWER_B;","lastModifiedDate":"2021-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"    public static final String INVALID_QUESTION_DESC \u003d \" \" + PREFIX_QUESTION + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-02-27"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"    public static final String INVALID_ANSWER_DESC \u003d \" \" + PREFIX_ANSWER; // empty string not allowed for answeres","lastModifiedDate":"2021-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"     * - the answer book, filtered flashcard list and selected flashcard in {@code actualModel} remain unchanged","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"xyzhang00"},"content":"        FlashcardBook expectedFlashcardBook \u003d new FlashcardBook(actualModel.getFlashcardBook());","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"        List\u003cFlashcard\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredFlashcardList());","lastModifiedDate":"2021-02-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":116,"author":{"gitId":"xyzhang00"},"content":"        assertEquals(expectedFlashcardBook, actualModel.getFlashcardBook());","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredFlashcardList());","lastModifiedDate":"2021-02-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"     * Updates {@code model}\u0027s filtered list to show only the flashcard at the given {@code targetIndex} in the","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"xyzhang00"},"content":"     * {@code model}\u0027s flashcard book.","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"    public static void showFlashcardAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-02-28"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredFlashcardList().size());","lastModifiedDate":"2021-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"        Flashcard flashcard \u003d model.getFilteredFlashcardList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":"        final String[] splitName \u003d flashcard.getQuestion().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-02-28"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"        model.updateFilteredFlashcardList(new QuestionContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-02-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"        assertEquals(1, model.getFilteredFlashcardList().size());","lastModifiedDate":"2021-02-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Jellybeano":20,"xyzhang00":14,"Yanneko":29,"-":70}},{"path":"src/test/java/seedu/weeblingo/logic/commands/EndCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.EndCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"public class EndCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    public void execute_end_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"xinweit"},"content":"        model.getMode().switchModeLearn();","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"                MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"        assertCommandSuccess(new EndCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Jellybeano":15,"xyzhang00":6,"xinweit":1}},{"path":"src/test/java/seedu/weeblingo/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import org.junit.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"                MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Jellybeano":8,"xyzhang00":6,"-":7}},{"path":"src/test/java/seedu/weeblingo/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import org.junit.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    public void execute_help_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"                SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Jellybeano":8,"xyzhang00":6,"-":7}},{"path":"src/test/java/seedu/weeblingo/logic/commands/LearnCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.LearnCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"public class LearnCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    public void execute_learn_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"                MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"        assertCommandSuccess(new LearnCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Jellybeano":16,"xyzhang00":6}},{"path":"src/test/java/seedu/weeblingo/logic/commands/NextCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"//import static seedu.weeblingo.logic.commands.NextCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"//import java.util.HashSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Yanneko"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.Mode;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.model.ModelManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.Quiz;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.testutil.FlashcardBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.testutil.QuizBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"xinweit"},"content":"public class NextCommandTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"xinweit"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"xinweit"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Yanneko"},"content":"    //@Test","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Yanneko"},"content":"    //public void execute_next_success() throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Yanneko"},"content":"    //    model.startQuiz(0, new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Yanneko"},"content":"    //    model.getMode().switchModeQuizSession();","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Yanneko"},"content":"    //    CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Yanneko"},"content":"    //            MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Yanneko"},"content":"    //    ModelStubNextSuccessful modelStub \u003d new ModelStubNextSuccessful();","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Yanneko"},"content":"    //    CommandResult commandResult \u003d new NextCommand().execute(modelStub);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Yanneko"},"content":"    //    assertEquals(NextCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Yanneko"},"content":"    //}","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"        public Path getFlashcardBookFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"        public void setFlashcardBookFilePath(Path flashcardBookFilePath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"        public void addFlashcard(Flashcard flashcard) {","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"        public void setFlashcardBook(ReadOnlyFlashcardBook newData) {","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"        public ReadOnlyFlashcardBook getFlashcardBook() {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"        public boolean hasFlashcard(Flashcard flashcard) {","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"        public void deleteFlashcard(Flashcard target) {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"        public void setFlashcard(Flashcard target, Flashcard editedFlashcard) {","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"        public ObservableList\u003cFlashcard\u003e getFilteredFlashcardList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"        public ObservableList\u003cScore\u003e getFilteredScoreHistory() {","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"        public void updateFilteredFlashcardList(Predicate\u003cFlashcard\u003e predicate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"        public void updateFilteredScoreHistory(Predicate\u003cScore\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"Yanneko"},"content":"        public void startQuiz(int numberOfQuestions, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"        public Flashcard getNextFlashcard() {","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"Jellybeano"},"content":"        public void getCurrentFlashcard() {","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"xinweit"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"        public int getCurrentIndex() {","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":"        public void clearQuizInstance() {","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"Jellybeano"},"content":"        public boolean isCorrectAttempt(Answer attempt) {","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"Jellybeano"},"content":"        public Mode getMode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"Jellybeano"},"content":"        public int getCurrentMode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"Yanneko"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"Jellybeano"},"content":"        public void tagFlashcard(Flashcard target, String tag) {","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"Yanneko"},"content":"        public Quiz getQuizInstance() throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeQuiz() {","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeLearn() {","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeMenu() {","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeQuizSession() {","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeCheckSuccess() {","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeHistory() {","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"Jellybeano"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"xinweit"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"xinweit"},"content":"        public void switchModeQuizSessionEnded() {","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"xinweit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"xinweit"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"Cheng20010201"},"content":"        public void addScore() {","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"Cheng20010201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"Cheng20010201"},"content":"        public String getQuizStatisticString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"Cheng20010201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"Jellybeano"},"content":"     * A Model stub that always successfully goes to the next question in the Quiz.","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"Jellybeano"},"content":"    private class ModelStubNextSuccessful extends ModelStub {","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"Yanneko"},"content":"        public Quiz getQuizInstance() throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"Jellybeano"},"content":"            return new QuizBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"Jellybeano"},"content":"        public Flashcard getNextFlashcard() {","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"Jellybeano"},"content":"            return new FlashcardBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"Jellybeano"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"Jellybeano"},"content":"        public void switchModeQuizSession() {","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"Jellybeano"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"xinweit"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"xinweit"},"content":"        public void switchModeQuizSessionEnded() {","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"xinweit"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"xinweit"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Jellybeano":194,"xinweit":20,"Yanneko":21,"Cheng20010201":10}},{"path":"src/test/java/seedu/weeblingo/logic/commands/QuizCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.QuizCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"public class QuizCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    public void execute_quiz_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"                MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"        assertCommandSuccess(new QuizCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Jellybeano":15,"xyzhang00":6}},{"path":"src/test/java/seedu/weeblingo/logic/commands/StartCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xinweit"},"content":"package seedu.weeblingo.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":"//import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_INTEGER_GENERIC;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"//import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_TAGS_SET_GENERIC;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Yanneko"},"content":"//import static seedu.weeblingo.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"//import static seedu.weeblingo.logic.commands.StartCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Yanneko"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"xinweit"},"content":"import seedu.weeblingo.model.ModelManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"xinweit"},"content":"public class StartCommandTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"xinweit"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"xinweit"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"xinweit"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Yanneko"},"content":"    //@Test","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Yanneko"},"content":"    //public void execute_start_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"    //    model.getMode().switchModeQuiz();","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Yanneko"},"content":"    //    CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Yanneko"},"content":"    //            MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Yanneko"},"content":"    //    assertCommandSuccess(new StartCommand(VALID_START_INTEGER_GENERIC, VALID_START_TAGS_SET_GENERIC),","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"    //            model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Yanneko"},"content":"    //}","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"xinweit"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"xinweit":11,"Yanneko":14}},{"path":"src/test/java/seedu/weeblingo/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"xyzhang00":1,"-":149}},{"path":"src/test/java/seedu/weeblingo/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.commands.Command;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"xyzhang00":3,"-":35}},{"path":"src/test/java/seedu/weeblingo/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.TypicalIndexes.INDEX_FIRST_FLASHCARD;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    private static final String INVALID_ANSWER \u003d \" \";","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    private static final String INVALID_QUESTION \u003d \"how do you spell elephant?\";","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    private static final String VALID_ANSWER \u003d \"a\";","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    private static final String VALID_QUESTION \u003d \"あ\";","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        assertEquals(INDEX_FIRST_FLASHCARD, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        assertEquals(INDEX_FIRST_FLASHCARD, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"    public void parseAnswer_null_throwsNullPointerException() {","lastModifiedDate":"2021-02-27"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAnswer((String) null));","lastModifiedDate":"2021-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"    public void parseAnswer_invalidValue_throwsParseException() {","lastModifiedDate":"2021-02-27"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAnswer(INVALID_ANSWER));","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"    public void parseAnswer_validValueWithoutWhitespace_returnsanswer() throws Exception {","lastModifiedDate":"2021-02-27"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"        Answer expectedAnswer \u003d new Answer(VALID_ANSWER);","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"        assertEquals(expectedAnswer, ParserUtil.parseAnswer(VALID_ANSWER));","lastModifiedDate":"2021-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"    public void parseAnswer_validValueWithWhitespace_returnsTrimmedanswer() throws Exception {","lastModifiedDate":"2021-02-27"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"        String answerWithWhitespace \u003d WHITESPACE + VALID_ANSWER + WHITESPACE;","lastModifiedDate":"2021-02-27"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"        Answer expectedanswer \u003d new Answer(VALID_ANSWER);","lastModifiedDate":"2021-02-27"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"        assertEquals(expectedanswer, ParserUtil.parseAnswer(answerWithWhitespace));","lastModifiedDate":"2021-02-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"    public void parseQuestion_null_throwsNullPointerException() {","lastModifiedDate":"2021-02-27"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseQuestion((String) null));","lastModifiedDate":"2021-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"    public void parseQuestion_invalidValue_throwsParseException() {","lastModifiedDate":"2021-02-27"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseQuestion(INVALID_QUESTION));","lastModifiedDate":"2021-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"    //    public void parseQuestion_validValueWithoutWhitespace_returnsquestion() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"    //        Question expectedquestion \u003d new Question(VALID_QUESTION);","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"    //        assertEquals(expectedquestion, ParserUtil.parseQuestion(VALID_QUESTION));","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"    //    public void parseQuestion_validValueWithWhitespace_returnsTrimmedquestion() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"    //        String questionWithWhitespace \u003d WHITESPACE + VALID_QUESTION + WHITESPACE;","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"    //        Question expectedquestion \u003d new Question(VALID_QUESTION);","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"    //        assertEquals(expectedquestion, ParserUtil.parseQuestion(questionWithWhitespace));","lastModifiedDate":"2021-02-28"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Jellybeano":33,"xyzhang00":7,"-":103}},{"path":"src/test/java/seedu/weeblingo/logic/parser/StartCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yanneko"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Yanneko"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.INVALID_START_INTEGER_MAX_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.INVALID_START_INTEGER_MIDDLE_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.INVALID_START_INTEGER_MIN_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.INVALID_START_TAG_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_INTEGER_GENERIC;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_INTEGER_MAX;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_INTEGER_MAX_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_INTEGER_MIDDLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_INTEGER_MIDDLE_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_INTEGER_MIN;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_INTEGER_MIN_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_TAGS_SET_GENERIC;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_TAG_COMBINATION_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_TAG_GOJUON;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_TAG_GOJUON_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_TAG_HIRAGANA;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_START_TAG_HIRAGANA_DESC;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Yanneko"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Yanneko"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Yanneko"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.StartCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Yanneko"},"content":"public class StartCommandParserTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Yanneko"},"content":"    private static final StartCommand STARTCOMMAND_GENERIC \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Yanneko"},"content":"        new StartCommand(VALID_START_INTEGER_GENERIC, VALID_START_TAGS_SET_GENERIC);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Yanneko"},"content":"    private static final StartCommand STARTCOMMAND_VALID_INTEGER_MIN \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Yanneko"},"content":"        new StartCommand(Integer.parseInt(VALID_START_INTEGER_MIN), VALID_START_TAGS_SET_GENERIC);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Yanneko"},"content":"    private static final StartCommand STARTCOMMAND_VALID_INTEGER_MIDDLE \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Yanneko"},"content":"        new StartCommand(Integer.parseInt(VALID_START_INTEGER_MIDDLE), VALID_START_TAGS_SET_GENERIC);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Yanneko"},"content":"    private static final StartCommand STARTCOMMAND_VALID_INTEGER_MAX \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Yanneko"},"content":"        new StartCommand(Integer.parseInt(VALID_START_INTEGER_MAX), VALID_START_TAGS_SET_GENERIC);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Yanneko"},"content":"    private static final StartCommand STARTCOMMAND_VALID_TAG_HIRAGANA \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Yanneko"},"content":"        new StartCommand(VALID_START_INTEGER_GENERIC, new HashSet\u003c\u003e(List.of(new Tag(VALID_START_TAG_HIRAGANA))));","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Yanneko"},"content":"    private static final StartCommand STARTCOMMAND_VALID_TAG_GOJUON \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Yanneko"},"content":"        new StartCommand(VALID_START_INTEGER_GENERIC, new HashSet\u003c\u003e(List.of(new Tag(VALID_START_TAG_GOJUON))));","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Yanneko"},"content":"    private static final StartCommand STARTCOMMAND_VALID_TAG_COMBINATION \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Yanneko"},"content":"        new StartCommand(VALID_START_INTEGER_GENERIC,","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Yanneko"},"content":"            new HashSet\u003c\u003e(List.of(new Tag(VALID_START_TAG_GOJUON), new Tag(VALID_START_TAG_HIRAGANA))));","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Yanneko"},"content":"    private final StartCommandParser parser \u003d new StartCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Yanneko"},"content":"    public void parse_emptyArgument_success() throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Yanneko"},"content":"        assertEquals(parser.parse(\"\"), STARTCOMMAND_GENERIC);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Yanneko"},"content":"    public void parse_validIntegerMin_success() throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Yanneko"},"content":"        assertEquals(parser.parse(VALID_START_INTEGER_MIN_DESC), STARTCOMMAND_VALID_INTEGER_MIN);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"Yanneko"},"content":"    public void parse_validIntegerMiddle_success() throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"Yanneko"},"content":"        assertEquals(parser.parse(VALID_START_INTEGER_MIDDLE_DESC), STARTCOMMAND_VALID_INTEGER_MIDDLE);","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"Yanneko"},"content":"    public void parse_validIntegerMax_success() throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"Yanneko"},"content":"        assertEquals(parser.parse(VALID_START_INTEGER_MAX_DESC), STARTCOMMAND_VALID_INTEGER_MAX);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"Yanneko"},"content":"    public void parse_validTagHiragana_success() throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"Yanneko"},"content":"        assertEquals(parser.parse(VALID_START_TAG_HIRAGANA_DESC), STARTCOMMAND_VALID_TAG_HIRAGANA);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"Yanneko"},"content":"    public void parse_validTagGojuon_success() throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"Yanneko"},"content":"        assertEquals(parser.parse(VALID_START_TAG_GOJUON_DESC), STARTCOMMAND_VALID_TAG_GOJUON);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"Yanneko"},"content":"    public void parse_validTagCombination_success() throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"Yanneko"},"content":"        assertEquals(parser.parse(VALID_START_TAG_COMBINATION_DESC), STARTCOMMAND_VALID_TAG_COMBINATION);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"Yanneko"},"content":"    public void parse_invalidIntegerMax_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"Yanneko"},"content":"        assertThrows(ParseException.class, StartCommand.MESSAGE_INVALID_NUMBER_OF_QUESTIONS, () -\u003e parser.parse(","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"Yanneko"},"content":"                INVALID_START_INTEGER_MAX_DESC));","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"Yanneko"},"content":"    public void parse_invalidIntegerMiddle_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"Yanneko"},"content":"        assertThrows(ParseException.class, StartCommand.MESSAGE_INVALID_NUMBER_OF_QUESTIONS, () -\u003e parser.parse(","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"Yanneko"},"content":"                INVALID_START_INTEGER_MIDDLE_DESC));","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"Yanneko"},"content":"    public void parse_invalidIntegerMin_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"Yanneko"},"content":"        assertThrows(ParseException.class, StartCommand.MESSAGE_INVALID_NUMBER_OF_QUESTIONS, () -\u003e parser.parse(","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"Yanneko"},"content":"                INVALID_START_INTEGER_MIN_DESC));","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"Yanneko"},"content":"    public void parse_invalidTag_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"Yanneko"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"Yanneko"},"content":"            Tag.MESSAGE_CONSTRAINTS, () -\u003e parser.parse(INVALID_START_TAG_DESC));","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"Yanneko"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Yanneko":110}},{"path":"src/test/java/seedu/weeblingo/logic/parser/WeeblingoParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.EndCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.LearnCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.QuizCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.StartCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"public class WeeblingoParserTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    private final WeeblingoParser parser \u003d new WeeblingoParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Yanneko"},"content":"    public void parseCommand_end() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Yanneko"},"content":"        assertTrue(parser.parseCommand(EndCommand.COMMAND_WORD) instanceof EndCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Yanneko"},"content":"        assertTrue(parser.parseCommand(EndCommand.COMMAND_WORD + \" 3\") instanceof EndCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"xinweit"},"content":"    public void parseCommand_learn() throws Exception {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"xinweit"},"content":"        assertTrue(parser.parseCommand(LearnCommand.COMMAND_WORD) instanceof LearnCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"xinweit"},"content":"        assertTrue(parser.parseCommand(LearnCommand.COMMAND_WORD + \" 3\") instanceof LearnCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Yanneko"},"content":"    public void parseCommand_quiz() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Yanneko"},"content":"        assertTrue(parser.parseCommand(QuizCommand.COMMAND_WORD) instanceof QuizCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Yanneko"},"content":"        assertTrue(parser.parseCommand(QuizCommand.COMMAND_WORD + \" 3\") instanceof QuizCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Yanneko"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Yanneko"},"content":"    public void parseCommand_start() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Yanneko"},"content":"        assertTrue(parser.parseCommand(StartCommand.COMMAND_WORD) instanceof StartCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Yanneko"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Yanneko"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"            -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Jellybeano":2,"xyzhang00":7,"Yanneko":22,"xinweit":3,"-":34}},{"path":"src/test/java/seedu/weeblingo/model/FlashcardBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.score.Score;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"public class FlashcardBookTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    private final FlashcardBook flashcardBook \u003d new FlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        assertEquals(Collections.emptyList(), flashcardBook.getFlashcardList());","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        assertThrows(NullPointerException.class, () -\u003e flashcardBook.resetData(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    //    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"    //        FlashcardBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"    //        flashcardBook.resetData(newData);","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    //        assertEquals(newData, flashcardBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"    //    public void resetData_withDuplicateFlashcards_throwsDuplicateFlashcardException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"    //        // Two flashcards with the same identity fields","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"    //        Flashcard editedAlice \u003d new FlashcardBuilder(ALICE).withAnswer(VALID_ANSWER_B)","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"    //        .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"    //                .build();","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"    //        List\u003cFlashcard\u003e newFlashcards \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"    //        FlashcardBookStub newData \u003d new FlashcardBookStub(newFlashcards);","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"    //        assertThrows(DuplicateFlashcardException.class, () -\u003e flashcardBook.resetData(newData));","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    public void hasFlashcard_nullFlashcard_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"        assertThrows(NullPointerException.class, () -\u003e flashcardBook.hasFlashcard(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"    //    public void hasFlashcard_flashcardNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"    //        assertFalse(flashcardBook.hasFlashcard(ALICE));","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"    //    public void hasFlashcard_flashcardInAddressBook_returnsTrue() {","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"    //        flashcardBook.addFlashcard(ALICE);","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"    //        assertTrue(flashcardBook.hasFlashcard(ALICE));","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"    //    public void hasFlashcard_flashcardWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"    //        flashcardBook.addFlashcard(ALICE);","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"    //        Flashcard editedAlice \u003d new FlashcardBuilder(ALICE).withAnswer(VALID_ANSWER_B)","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"    //        .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"    //                .build();","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"    //        assertTrue(flashcardBook.hasFlashcard(editedAlice));","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"    public void getFlashcardList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e flashcardBook.getFlashcardList().remove(0));","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"     * A stub ReadOnlyFlashcardBook whose flashcards list can violate interface constraints.","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"    private static class FlashcardBookStub implements ReadOnlyFlashcardBook {","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"        private final ObservableList\u003cFlashcard\u003e flashcards \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"        private final ObservableList\u003cScore\u003e scores \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"        FlashcardBookStub(Collection\u003cFlashcard\u003e flashcards, Collection\u003cScore\u003e scores) {","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"            this.flashcards.setAll(flashcards);","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"            this.scores.setAll(scores);","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"        public ObservableList\u003cFlashcard\u003e getFlashcardList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"            return flashcards;","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"        public ObservableList\u003cScore\u003e getScoreHistoryList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"            return scores;","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Jellybeano":33,"xyzhang00":21,"Cheng20010201":9,"-":39}},{"path":"src/test/java/seedu/weeblingo/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"        assertEquals(new FlashcardBook(), new FlashcardBook(modelManager.getFlashcardBook()));","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"        userPrefs.setFlashcardsFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"        userPrefs.setFlashcardsFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setFlashcardBookFilePath(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"        modelManager.setFlashcardBookFilePath(path);","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"        assertEquals(path, modelManager.getFlashcardBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"    public void hasFlashcard_nullFlashcard_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFlashcard(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"    //    public void hasFlashcard_flashcardNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"    //        assertFalse(modelManager.hasFlashcard(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"    //    public void hasFlashcard_flashcardInAddressBook_returnsTrue() {","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"    //        modelManager.addFlashcard(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"    //        assertTrue(modelManager.hasFlashcard(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"    public void getFilteredFlashcardList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"            -\u003e modelManager.getFilteredFlashcardList().remove(0));","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"    //    public void equals() {","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"xyzhang00"},"content":"    //        FlashcardBook addressBook \u003d new FlashcardBookBuilder().withFlashcard(ALICE).withFlashcard(BENSON).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"    //        FlashcardBook differentAddressBook \u003d new FlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"    //        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"    //        // same values -\u003e returns true","lastModifiedDate":"2021-02-28"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"    //        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-02-28"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"    //        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"    //        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2021-02-28"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"    //        // same object -\u003e returns true","lastModifiedDate":"2021-02-28"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"    //        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2021-02-28"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"    //        // null -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"    //        assertFalse(modelManager.equals(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"    //        // different types -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"    //        assertFalse(modelManager.equals(5));","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"    //        // different addressBook -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"    //        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2021-02-28"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"    //        // different filteredList -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"    //        String[] keywords \u003d ALICE.getQuestion().value.split(\"\\\\s+\");","lastModifiedDate":"2021-02-28"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"    //        modelManager.updateFilteredFlashcardList(new QuestionContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"    //        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"    //        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2021-02-28"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"    //        modelManager.updateFilteredFlashcardList(PREDICATE_SHOW_ALL_FLASHCARDS);","lastModifiedDate":"2021-02-28"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"    //","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"    //        // different userPrefs -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"    //        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-02-28"},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"    //        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"    //        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2021-02-28"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":50,"xyzhang00":11,"-":64}},{"path":"src/test/java/seedu/weeblingo/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    public void setFlashcardBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setFlashcardsFilePath(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"xyzhang00":4,"-":17}},{"path":"src/test/java/seedu/weeblingo/model/flashcard/AnswerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"public class AnswerTest {","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Answer(null));","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"//    public void constructor_invalidAnswer_throwsIllegalArgumentException() {","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"//        String invalidAnswer \u003d \"\";","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Answer(invalidAnswer));","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"//    public void isValidAnswer() {","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"//        // null answer","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Answer.isValidAnswer(null));","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"//        // invalid answers","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(Answer.isValidAnswer(\"\")); // empty string","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(Answer.isValidAnswer(\" \")); // spaces only","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"//        // valid answers","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"//        assertTrue(Answer.isValidAnswer(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"//        assertTrue(Answer.isValidAnswer(\"-\")); // one character","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"//        assertTrue(Answer.isValidAnswer(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long answer","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"Jellybeano":29,"xyzhang00":1}},{"path":"src/test/java/seedu/weeblingo/model/flashcard/FlashcardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"public class FlashcardTest {","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"    //commented out for now","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"//        Flashcard flashcard \u003d new FlashcardBuilder().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e flashcard.getTags().remove(0));","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"//    public void isSameFlashcard() {","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"//        assertTrue(ALICE.isSameFlashcard(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.isSameFlashcard(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"//        Flashcard editedAlice \u003d new FlashcardBuilder(ALICE).withPhone(VALID_PHONE_BOB).withQuestion(VALID_QUESTION_B)","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"//                .withAnswer(VALID_ANSWER_B).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"//        assertTrue(ALICE.isSameFlashcard(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"//        editedAlice \u003d new FlashcardBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.isSameFlashcard(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"//        Flashcard editedBob \u003d new FlashcardBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(BOB.isSameFlashcard(editedBob));","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"//        editedBob \u003d new FlashcardBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(BOB.isSameFlashcard(editedBob));","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"//    public void equals() {","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"//        Flashcard aliceCopy \u003d new FlashcardBuilder(ALICE).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"//        // different flashcard -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"//        Flashcard editedAlice \u003d new FlashcardBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"//        editedAlice \u003d new FlashcardBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"//        editedAlice \u003d new FlashcardBuilder(ALICE).withQuestion(VALID_QUESTION_B).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"//        editedAlice \u003d new FlashcardBuilder(ALICE).withAnswer(VALID_ANSWER_B).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"//","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"//        editedAlice \u003d new FlashcardBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":76,"xyzhang00":1}},{"path":"src/test/java/seedu/weeblingo/model/flashcard/QuestionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"public class QuestionTest {","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Question(null));","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    public void constructor_invalidquestion_throwsIllegalArgumentException() {","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"        String invalidquestion \u003d \"\";","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Question(invalidquestion));","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    public void isValidQuestion() {","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"        // null question","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e Question.isValidQuestion(null));","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"        // blank question","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"        assertFalse(Question.isValidQuestion(\"\")); // empty string","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"        assertFalse(Question.isValidQuestion(\" \")); // spaces only","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        //        // missing parts","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"@example.com\")); // missing local part","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@\")); // missing domain name","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"        //","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"        //        // invalid parts","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"        //        assertFalse(Question.isValidQuestion(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        //","lastModifiedDate":"2021-02-27"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"        //        // valid question","lastModifiedDate":"2021-02-27"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"        //        assertTrue(Question.isValidQuestion(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2021-02-27"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        //        assertTrue(Question.isValidQuestion(\"a@bc\")); // minimal","lastModifiedDate":"2021-02-27"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"        //        assertTrue(Question.isValidQuestion(\"test@localhost\")); // alphabets only","lastModifiedDate":"2021-02-27"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        //        assertTrue(Question.isValidQuestion(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"        //        //above is special characters local part","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        //        assertTrue(Question.isValidQuestion(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2021-02-27"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"        //        assertTrue(Question.isValidQuestion(\"a1+be!@example1.com\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"        //        //above is mixture of alphanumeric and special characters","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"        //        assertTrue(Question.isValidQuestion(\"peter_jack@very-very-very-long-example.com\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"        //        //above is long domain name","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"        //        assertTrue(Question.isValidQuestion(\"if.you.dream.it_you.can.do.it@example.com\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"        //        //above is long local part","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"Jellybeano":62,"xyzhang00":2}},{"path":"src/test/java/seedu/weeblingo/model/flashcard/UniqueFlashcardListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import java.util.List;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"public class UniqueFlashcardListTest {","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"    private final UniqueFlashcardList uniqueFlashcardList \u003d new UniqueFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    public void contains_nullFlashcard_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFlashcardList.contains(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    //    public void contains_flashcardNotInList_returnsFalse() {","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    //        assertFalse(uniqueFlashcardList.contains(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"    //    public void contains_flashcardInList_returnsTrue() {","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    //        assertTrue(uniqueFlashcardList.contains(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    //    public void contains_flashcardWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    //        Flashcard editedAlice \u003d new FlashcardBuilder(ALICE)","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    //        .withAnswer(VALID_ANSWER_B).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    //                .build();","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"    //        assertTrue(uniqueFlashcardList.contains(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"    public void add_nullFlashcard_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFlashcardList.add(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"    //    public void add_duplicateFlashcard_throwsDuplicateFlashcardException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"    //        assertThrows(DuplicateFlashcardException.class, () -\u003e uniqueFlashcardList.add(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcard_nullTargetFlashcard_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"    //        assertThrows(NullPointerException.class, () -\u003e uniqueFlashcardList.setFlashcard(null, ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcard_nullEditedFlashcard_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"    //        assertThrows(NullPointerException.class, () -\u003e uniqueFlashcardList.setFlashcard(ALICE, null));","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcard_targetFlashcardNotInList_throwsFlashcardNotFoundException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"    //        assertThrows(FlashcardNotFoundException.class, () -\u003e uniqueFlashcardList.setFlashcard(ALICE, ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcard_editedFlashcardIsSameFlashcard_success() {","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.setFlashcard(ALICE, ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"    //        UniqueFlashcardList expectedUniqueFlashcardList \u003d new UniqueFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"    //        expectedUniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"    //        assertEquals(expectedUniqueFlashcardList, uniqueFlashcardList);","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcard_editedFlashcardHasSameIdentity_success() {","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"    //        Flashcard editedAlice \u003d new FlashcardBuilder(ALICE)","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"    //        .withAnswer(VALID_ANSWER_B).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"    //                .build();","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.setFlashcard(ALICE, editedAlice);","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"    //        UniqueFlashcardList expectedUniqueFlashcardList \u003d new UniqueFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"    //        expectedUniqueFlashcardList.add(editedAlice);","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"    //        assertEquals(expectedUniqueFlashcardList, uniqueFlashcardList);","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcard_editedFlashcardHasDifferentIdentity_success() {","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.setFlashcard(ALICE, BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"    //        UniqueFlashcardList expectedUniqueFlashcardList \u003d new UniqueFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"    //        expectedUniqueFlashcardList.add(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"    //        assertEquals(expectedUniqueFlashcardList, uniqueFlashcardList);","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcard_editedFlashcardHasNonUniqueIdentity_throwsDuplicateFlashcardException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"    //        assertThrows(DuplicateFlashcardException.class, () -\u003e uniqueFlashcardList.setFlashcard(ALICE, BOB));","lastModifiedDate":"2021-02-28"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"    public void remove_nullFlashcard_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFlashcardList.remove(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"    //    public void remove_flashcardDoesNotExist_throwsFlashcardNotFoundException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"    //        assertThrows(FlashcardNotFoundException.class, () -\u003e uniqueFlashcardList.remove(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"    //    public void remove_existingFlashcard_removesFlashcard() {","lastModifiedDate":"2021-02-28"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.remove(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"    //        UniqueFlashcardList expectedUniqueFlashcardList \u003d new UniqueFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"    //        assertEquals(expectedUniqueFlashcardList, uniqueFlashcardList);","lastModifiedDate":"2021-02-28"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"    public void setFlashcards_nullUniqueFlashcardList_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFlashcardList.setFlashcards((UniqueFlashcardList) null));","lastModifiedDate":"2021-02-28"},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcards_uniqueFlashcardList_replacesOwnListWithProvidedUniqueFlashcardList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":"    //        UniqueFlashcardList expectedUniqueFlashcardList \u003d new UniqueFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"    //        expectedUniqueFlashcardList.add(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.setFlashcards(expectedUniqueFlashcardList);","lastModifiedDate":"2021-02-28"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"    //        assertEquals(expectedUniqueFlashcardList, uniqueFlashcardList);","lastModifiedDate":"2021-02-28"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"    public void setFlashcards_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":135,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFlashcardList.setFlashcards((List\u003cFlashcard\u003e) null));","lastModifiedDate":"2021-02-28"},{"lineNumber":136,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":137,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":138,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":139,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcards_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":140,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":141,"author":{"gitId":"Jellybeano"},"content":"    //        List\u003cFlashcard\u003e flashcardList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"    //        uniqueFlashcardList.setFlashcards(flashcardList);","lastModifiedDate":"2021-02-28"},{"lineNumber":143,"author":{"gitId":"Jellybeano"},"content":"    //        UniqueFlashcardList expectedUniqueFlashcardList \u003d new UniqueFlashcardList();","lastModifiedDate":"2021-02-28"},{"lineNumber":144,"author":{"gitId":"Jellybeano"},"content":"    //        expectedUniqueFlashcardList.add(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":145,"author":{"gitId":"Jellybeano"},"content":"    //        assertEquals(expectedUniqueFlashcardList, uniqueFlashcardList);","lastModifiedDate":"2021-02-28"},{"lineNumber":146,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":148,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":149,"author":{"gitId":"Jellybeano"},"content":"    //    public void setFlashcards_listWithDuplicateFlashcards_throwsDuplicateFlashcardException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":150,"author":{"gitId":"Jellybeano"},"content":"    //        List\u003cFlashcard\u003e listWithDuplicateFlashcards \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":151,"author":{"gitId":"Jellybeano"},"content":"    //        assertThrows(DuplicateFlashcardException.class, () -\u003e uniqueFlashcardList","lastModifiedDate":"2021-02-28"},{"lineNumber":152,"author":{"gitId":"Jellybeano"},"content":"    //        .setFlashcards(listWithDuplicateFlashcards));","lastModifiedDate":"2021-02-28"},{"lineNumber":153,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":154,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":155,"author":{"gitId":"Jellybeano"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":156,"author":{"gitId":"Jellybeano"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":157,"author":{"gitId":"Jellybeano"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-02-28"},{"lineNumber":158,"author":{"gitId":"Jellybeano"},"content":"            -\u003e uniqueFlashcardList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-02-28"},{"lineNumber":159,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":160,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":158,"xyzhang00":2}},{"path":"src/test/java/seedu/weeblingo/model/score/ScoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.model.score;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.Assert.assertFalse;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"public class ScoreTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    public void of_null_throwsRuntimeException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score.of(null, 1, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score.of(1, null, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score.of(null, null, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    public void of_invalidValue_throwsRuntimeException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"                .of(0, 1, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"                .of(-1, 1, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"                .of(-100000, 1, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"                .of(1, -1, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"                .of(1, -10000, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    public void of_qusetionAttemptedSmallerThanQuestionCorrect_throwsRuntimeException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score.of(1, 2, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(RuntimeException.class, () -\u003e Score.of(100, 200, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"    public void of() {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        assertDoesNotThrow(() -\u003e Score.of(1, 1, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        assertDoesNotThrow(() -\u003e Score.of(1, 0, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"        assertDoesNotThrow(() -\u003e Score.of(1000, 1000, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"        assertDoesNotThrow(() -\u003e Score.of(0, 0, \"0:03:04\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"    public void getCorrectRationString() {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"        Score test \u003d Score.of(1, 1, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(\"100.000%\", test.getCorrectRatioString());","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"        test \u003d Score.of(10, 9, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(\"90.000%\", test.getCorrectRatioString());","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        test \u003d Score.of(3, 2, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(\"66.667%\", test.getCorrectRatioString());","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"    public void compareTo_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(NullPointerException.class, () -\u003e Score.of(1, 1,","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"                \"0:03:04\").compareTo(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"    public void compareTo() {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"            Score t1 \u003d Score.of(1, 1, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"            TimeUnit.SECONDS.sleep(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"            Score t2 \u003d Score.of(1, 1, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"            assertEquals(-1, t1.compareTo(t2));","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"            assertEquals(1, t2.compareTo(t1));","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"            ArrayList\u003cScore\u003e scores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"            scores.add(t1);","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"            scores.add(t2);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"            Collections.sort(scores);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"            assertEquals(t1, scores.get(0));","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"            assertEquals(t2, scores.get(1));","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"            assertTrue(false); // the test fails","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"    public void isSameAttempt_createImmediatelyAfter_returnsTrue() {","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"        Score s1 \u003d Score.of(10, 10, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(s1.isSameAttempt(s1));","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"    public void isSameAttempt_createWithDurationOneSecond_returnsFalse() {","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"            Score s1 \u003d Score.of(10, 10, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"            TimeUnit.SECONDS.sleep(1);","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"            Score s2 \u003d Score.of(10, 10, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"            assertFalse(s1.isSameAttempt(s2));","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"            // to show symmetry","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"            assertFalse(s2.isSameAttempt(s1));","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"            assertTrue(false); // the test fails","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"    public void getNumberOfQuestionsAttempted() {","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"        Score s \u003d Score.of(10, 10, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(\"10\", s.getNumberOfQuestionsAttempted());","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"    public void getNumberOfQuestionsCorrect() {","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":"        Score s \u003d Score.of(10, 8, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(\"8\", s.getNumberOfQuestionsCorrect());","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"    public void getCompletedTime() {","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"        Score s \u003d Score.of(10, 10, \"0:03:04\");","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"        assertDoesNotThrow(() -\u003e LocalDateTime.parse((String) s.getCompletedTime(),","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm:ss\")));","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Cheng20010201":128}},{"path":"src/test/java/seedu/weeblingo/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.model.tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"xyzhang00":2,"-":24}},{"path":"src/test/java/seedu/weeblingo/storage/JsonAdaptedFlashcardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.TypicalFlashcards.BENSON;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"public class JsonAdaptedFlashcardTest {","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    private static final String INVALID_ANSWER \u003d \" \";","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    private static final String INVALID_QUESTION \u003d \"how do you spell elephant?\";","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    private static final String VALID_QUESTION \u003d BENSON.getQuestion().toString();","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    private static final String VALID_ANSWER \u003d BENSON.getAnswer().toString();","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getWeeblingoTags().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"//    public void toModelType_validFlashcardDetails_returnsFlashcard() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"//        JsonAdaptedFlashcard flashcard \u003d new JsonAdaptedFlashcard(BENSON);","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"//        assertEquals(BENSON, flashcard.toModelType());","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"//    public void toModelType_invalidQuestion_throwsIllegalValueException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"//        JsonAdaptedFlashcard flashcard \u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"//                new JsonAdaptedFlashcard(INVALID_QUESTION, VALID_ANSWER, VALID_TAGS);","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"//        String expectedMessage \u003d Question.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, flashcard::toModelType);","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"//    public void toModelType_nullQuestion_throwsIllegalValueException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"//        JsonAdaptedFlashcard flashcard \u003d new JsonAdaptedFlashcard(null, VALID_ANSWER, VALID_TAGS);","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Question.class.getSimpleName());","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, flashcard::toModelType);","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"//    public void toModelType_invalidAnswer_throwsIllegalValueException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"//        JsonAdaptedFlashcard flashcard \u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"//                new JsonAdaptedFlashcard(VALID_QUESTION, INVALID_ANSWER, VALID_TAGS);","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"//        String expectedMessage \u003d Answer.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, flashcard::toModelType);","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"//    public void toModelType_nullAnswer_throwsIllegalValueException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"//        JsonAdaptedFlashcard flashcard \u003d new JsonAdaptedFlashcard(VALID_QUESTION, null, VALID_TAGS);","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Answer.class.getSimpleName());","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, flashcard::toModelType);","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"//    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"//        JsonAdaptedFlashcard flashcard \u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"//                new JsonAdaptedFlashcard(VALID_QUESTION, VALID_ANSWER, invalidTags);","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"//        assertThrows(IllegalValueException.class, flashcard::toModelType);","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"//    }","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jellybeano":45,"xyzhang00":2,"-":18}},{"path":"src/test/java/seedu/weeblingo/storage/JsonFlashcardBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"// import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.FlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"public class JsonFlashcardBookStorageTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"            \"src\", \"test\", \"data\", \"JsonFlashcardBookStorageTest\");","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    @TempDir","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    public void readFlashcardBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"        assertThrows(NullPointerException.class, () -\u003e readFlashcardBook(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    private java.util.Optional\u003cReadOnlyFlashcardBook\u003e readFlashcardBook(String filePath) throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"        return new JsonFlashcardBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"                .readFlashcardBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"                : null;","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"        assertFalse(readFlashcardBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"    //    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"    //    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"    //        assertThrows(DataConversionException.class, () -\u003e readFlashcardBook(\"notJsonFormatBook.json\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"    //    }","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"    //","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"    //    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"    //    public void readFlashcardBook_invalidFlashcardBook_throwDataConversionException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"    //        assertThrows(DataConversionException.class, () -\u003e readFlashcardBook(\"invalidFlashcardBook.json\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"    //    }","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"    //    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"    //    public void readFlashcardBook_invalidAndValidFlashcardBook_throwDataConversionException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"    //        assertThrows(DataConversionException.class, () -\u003e readFlashcardBook(","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"    //                \"invalidAndValidFlashcardBook.json\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"    //    }","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"    //    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"    //    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"    //        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"    //        FlashcardBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":"    //        JsonFlashcardBookStorage jsonAddressBookStorage \u003d new JsonFlashcardBookStorage(filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"    //","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"    //        // Save in new file and read back","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"xyzhang00"},"content":"    //        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"    //        ReadOnlyFlashcardBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"xyzhang00"},"content":"    //        assertEquals(original, new FlashcardBook(readBack));","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"    //","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"    //        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"    //        original.addFlashcard(HOON);","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"    //        original.removeFlashcard(ALICE);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"    //        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"    //        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":"    //        assertEquals(original, new FlashcardBook(readBack));","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"xyzhang00"},"content":"    //","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"xyzhang00"},"content":"    //        // Save and read without specifying file path","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"    //        original.addFlashcard(IDA);","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"    //        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"    //        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"xyzhang00"},"content":"    //        assertEquals(original, new FlashcardBook(readBack));","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"xyzhang00"},"content":"    //","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"xyzhang00"},"content":"    //    }","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"xyzhang00"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"xyzhang00"},"content":"    public void saveFlashcardBook_nullFlashcardBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFlashcardBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"xyzhang00"},"content":"     * Saves {@code flashcardBook} at the specified {@code filePath}.","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"xyzhang00"},"content":"    private void saveFlashcardBook(ReadOnlyFlashcardBook flashcardBook, String filePath) {","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"xyzhang00"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"xyzhang00"},"content":"            new JsonFlashcardBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"xyzhang00"},"content":"                    .saveFlashcardBook(flashcardBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"xyzhang00"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"xyzhang00"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"xyzhang00"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"xyzhang00"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"xyzhang00"},"content":"    public void saveFlashcardBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"xyzhang00"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFlashcardBook(new FlashcardBook(), null));","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":108}},{"path":"src/test/java/seedu/weeblingo/storage/JsonSerializableFlashcardBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"public class JsonSerializableFlashcardBookTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"            \"src\", \"test\", \"data\", \"JsonSerializableFlashcardBookTest\");","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    private static final Path TYPICAL_FLASHCARDS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalFlashcardsAddressBook.json\");","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    private static final Path INVALID_FLASHCARD_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidFlashcardAddressBook.json\");","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    private static final Path DUPLICATE_FLASHCARD_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateFlashcardAddressBook.json\");","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    //    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"    //    public void toModelType_typicalFlashcardsFile_success() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_FLASHCARDS_FILE,","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    //        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    //        AddressBook typicalFlashcardsAddressBook \u003d TypicalFlashcards.getTypicalAddressBook();","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    //        assertEquals(addressBookFromFile, typicalFlashcardsAddressBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    //    }","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    //    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"    //    public void toModelType_invalidFlashcardFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_FLASHCARD_FILE,","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    //        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"    //    }","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"    //    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"    //    public void toModelType_duplicateFlashcards_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_FLASHCARD_FILE,","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    //        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_FLASHCARD,","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"    //                dataFromFile::toModelType);","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"    //    }","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":23,"Cheng20010201":15}},{"path":"src/test/java/seedu/weeblingo/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"    //    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"    //    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"    //        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"    //        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"    //        assertEquals(expected, actual);","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"    //    }","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"        userPrefs.setFlashcardsFilePath(Paths.get(\"database/flashcards.json\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xyzhang00":12,"-":110}},{"path":"src/test/java/seedu/weeblingo/storage/LocalDatabasePopulatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.ReadOnlyFlashcardBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"public class LocalDatabasePopulatorTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    /** Integration testing */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    public void getDatabaseOfWeeblingo() {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        Flashcard[] flashcards \u003d LocalDatabasePopulator","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"                .getDatabaseOfFlashcards(JsonDatabaseReader.readDatabaseAsJsonArray());","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        ReadOnlyFlashcardBook book \u003d LocalDatabasePopulator.getDatabaseOfWeeblingo();","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"        for (int i \u003d 0; i \u003c flashcards.length; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"            assertEquals(book.getFlashcardList().get(i), flashcards[i]);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    public void getDatabaseOfFlashcards() {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        JSONArray jsonArrayReadFromDatabase \u003d JsonDatabaseReaderStub.readDatabaseAsJsonArray();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        Flashcard[] flashcards \u003d LocalDatabasePopulator.getDatabaseOfFlashcards(jsonArrayReadFromDatabase);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(flashcards[0].getQuestion().toString(), \"ふ\");","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(flashcards[0].getAnswer().toString(), \"fu\");","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        assertTrue(flashcards[0].getWeeblingoTags().contains(new TagStub(\"hiragana\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"        assertTrue(flashcards[0].getWeeblingoTags().contains(new TagStub(\"gojuon\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(flashcards[1].getQuestion().toString(), \"ひ\");","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(flashcards[1].getAnswer().toString(), \"hi\");","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"        assertTrue(flashcards[1].getWeeblingoTags().isEmpty());","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"    public void getDatabaseOfFlashcards_empty_pass() {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        JSONArray jsonArrayReadFromDatabase \u003d new JSONArray();","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        Flashcard[] flashcards \u003d LocalDatabasePopulator.getDatabaseOfFlashcards(jsonArrayReadFromDatabase);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        assertTrue(flashcards.length \u003d\u003d 0);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    public void getDatabaseOfFlashcards_null_assertionError() {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"        assertThrows(AssertionError.class, () -\u003e LocalDatabasePopulator","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"                .getDatabaseOfFlashcards(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"    public void getTagSet_zeroWord_emptySet() {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"        Set\u003cTag\u003e compare \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(compare, LocalDatabasePopulator.getTagSet());","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"    public void getTagSet_oneWord_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"        Set\u003cTag\u003e compare \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"lol\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(compare, LocalDatabasePopulator.getTagSet(\"lol\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"    public void getTagSet_manyWordsWithRandomOrdering_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"        Set\u003cTag\u003e compare \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"a\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"b\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"c\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"d\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"e\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"f\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"g\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"h\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"i\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"j\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"k\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"l\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"m\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"n\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"o\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"p\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"q\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"r\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"s\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"t\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"u\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"v\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"w\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"x\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"y\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"z\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(compare, LocalDatabasePopulator","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"                .getTagSet(\"a\", \"b\", \"b\", \"b\", \"b\", \"c\", \"c\",","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"                \"d\", \"f\", \"f\", \"e\", \"i\", \"h\", \"j\", \"k\", \"n\", \"m\", \"l\",","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"                \"o\", \"q\", \"q\", \"p\", \"r\", \"s\", \"t\", \"x\", \"y\", \"z\", \"u\",","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"                \"v\", \"w\", \"u\", \"g\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"    public void getTagSet_duplicateWords_singleOneSurvived() {","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"        Set\u003cTag\u003e compare \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"        compare.add(new TagStub(\"lol\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(compare, LocalDatabasePopulator.getTagSet(\"lol\", \"lol\", \"lol\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":" * Stub class for JsonDatabaseReader","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"class JsonDatabaseReaderStub extends JsonDatabaseReader {","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"     * Stub method for class JsonDatabaseReader","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"    public static JSONArray readDatabaseAsJsonArray() {","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"        JSONArray jsonArray \u003d new JSONArray();","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":"        JSONObject jo1 \u003d new JSONObject();","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":"        jo1.put(\"question\", \"ふ\");","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"        jo1.put(\"answer\", \"fu\");","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"Cheng20010201"},"content":"        JSONArray tagArr1 \u003d new JSONArray();","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"Cheng20010201"},"content":"        tagArr1.add(\"gojuon\");","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"Cheng20010201"},"content":"        tagArr1.add(\"hiragana\");","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":"        jo1.put(\"tagged\", tagArr1);","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":"        JSONObject jo2 \u003d new JSONObject();","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"        jo2.put(\"question\", \"ひ\");","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"        jo2.put(\"answer\", \"hi\");","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"        jo2.put(\"tagged\", new JSONArray());","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"Cheng20010201"},"content":"        jsonArray.add(jo1);","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"Cheng20010201"},"content":"        jsonArray.add(jo2);","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"Cheng20010201"},"content":"        return jsonArray;","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"Cheng20010201"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"Cheng20010201"},"content":" * Stub class for Tag","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"Cheng20010201"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"Cheng20010201"},"content":"class TagStub extends Tag {","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"Cheng20010201"},"content":"    public TagStub(String tagName) {","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"Cheng20010201"},"content":"        super(tagName);","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"Cheng20010201"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"Cheng20010201"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Jellybeano":3,"Cheng20010201":150}},{"path":"src/test/java/seedu/weeblingo/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.GuiSettings;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"        JsonFlashcardBookStorage flashcardBookStorage \u003d new JsonFlashcardBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"        storageManager \u003d new StorageManager(flashcardBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    //    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"    //    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    //        /*","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    //         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"    //         * {@link JsonFlashcardBookStorage} class.","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"    //         * More extensive testing of UserPref saving/reading is done in {@link JsonFlashcardBookStorageTest}","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"    //         * class.","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"    //         */","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"    //        FlashcardBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"    //        storageManager.saveAddressBook(original);","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"    //        ReadOnlyFlashcardBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"    //        assertEquals(original, new FlashcardBook(retrieved));","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"    //    }","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"    public void getFlashcardBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"        assertNotNull(storageManager.getFlashcardBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jellybeano":7,"xyzhang00":13,"-":46}},{"path":"src/test/java/seedu/weeblingo/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"xyzhang00":1,"-":33}},{"path":"src/test/java/seedu/weeblingo/testutil/FlashcardBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.FlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" * A utility class to help with building Flashcard Book objects.","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":" *     {@code FlashcardBook ab \u003d new FlashcardBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"public class FlashcardBookBuilder {","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    private FlashcardBook flashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"    public FlashcardBookBuilder() {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"        flashcardBook \u003d new FlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    public FlashcardBookBuilder(FlashcardBook flashcardBook) {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"        this.flashcardBook \u003d flashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     * Adds a new {@code Flashcard} to the {@code FlashcardBook} that we are building.","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    public FlashcardBookBuilder withFlashcard(Flashcard flashcard) {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        flashcardBook.addFlashcard(flashcard);","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"        return this;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"    public FlashcardBook build() {","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"        return flashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"xyzhang00":34}},{"path":"src/test/java/seedu/weeblingo/testutil/FlashcardBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import java.util.Set;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Answer;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Question;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.tag.Tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import seedu.weeblingo.storage.LocalDatabasePopulator;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":" * A utility class to help with building Flashcard objects.","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"public class FlashcardBuilder {","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    public static final String DEFAULT_QUESTION \u003d \"あ\";","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    public static final String DEFAULT_ANSWER \u003d \"a\";","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    private Question question;","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    private Answer answer;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    private Set\u003cTag\u003e userTags;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"     * Creates a {@code FlashcardBuilder} with the default details.","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"    public FlashcardBuilder() {","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"        question \u003d new Question(DEFAULT_QUESTION);","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"        answer \u003d new Answer(DEFAULT_ANSWER);","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        userTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"     * Initializes the FlashcardBuilder with the data of {@code flashcardToCopy}.","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"    public FlashcardBuilder(Flashcard flashcardToCopy) {","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"        question \u003d flashcardToCopy.getQuestion();","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        answer \u003d flashcardToCopy.getAnswer();","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"        tags \u003d new HashSet\u003c\u003e(flashcardToCopy.getWeeblingoTags());","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Flashcard} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"    public FlashcardBuilder withTags(String ... tags) {","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        this.tags \u003d LocalDatabasePopulator.getTagSet(tags);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"        return this;","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"     * Sets the {@code answer} of the {@code Flashcard} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"    public FlashcardBuilder withAnswer(String answer) {","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"        this.answer \u003d new Answer(answer);","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        return this;","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"     * Sets the {@code question} of the {@code Flashcard} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"    public FlashcardBuilder withQuestion(String question) {","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"        this.question \u003d new Question(question);","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"        return this;","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"    public Flashcard build() {","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"        return new Flashcard(question, answer, tags, userTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":64,"xyzhang00":5,"Cheng20010201":2}},{"path":"src/test/java/seedu/weeblingo/testutil/FlashcardUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":" * A utility class for Flashcard.","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"public class FlashcardUtil {","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"     * Returns the part of command string for the given {@code flashcard}\u0027s details.","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    public static String getFlashcardDetails(Flashcard flashcard) {","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"        sb.append(PREFIX_QUESTION + flashcard.getQuestion().value + \" \");","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"        sb.append(PREFIX_ANSWER + flashcard.getAnswer().value + \" \");","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"        flashcard.getWeeblingoTags().stream().forEach(","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"        );","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"        return sb.toString();","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"Jellybeano":22,"xyzhang00":5}},{"path":"src/test/java/seedu/weeblingo/testutil/QuizBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package seedu.weeblingo.testutil;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Yanneko"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Yanneko"},"content":"import seedu.weeblingo.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import seedu.weeblingo.model.Quiz;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":" * A utility class to help with building Quiz objects.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"public class QuizBuilder {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    private Quiz quiz;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Yanneko"},"content":"    public QuizBuilder() throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Yanneko"},"content":"        quiz \u003d new Quiz(new ArrayList\u003c\u003e(), 0, new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    public Quiz build() {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"        return this.quiz;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Jellybeano":19,"Yanneko":4}},{"path":"src/test/java/seedu/weeblingo/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xyzhang00":1,"-":71}},{"path":"src/test/java/seedu/weeblingo/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"     * Returns the middle index of the flashcard in the {@code model}\u0027s flashcard list.","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        return Index.fromOneBased(model.getFilteredFlashcardList().size() / 2);","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"     * Returns the last index of the flashcard in the {@code model}\u0027s flashcard list.","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        return Index.fromOneBased(model.getFilteredFlashcardList().size());","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"     * Returns the flashcard in the {@code model}\u0027s flashcard list at {@code index}.","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"    public static Flashcard getFlashcard(Model model, Index index) {","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"        return model.getFilteredFlashcardList().get(index.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jellybeano":7,"xyzhang00":4,"-":44}},{"path":"src/test/java/seedu/weeblingo/testutil/TypicalFlashcards.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_ANSWER_A;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_ANSWER_B;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_QUESTION_A;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_QUESTION_B;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.FlashcardBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.model.flashcard.Flashcard;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":" * A utility class containing a list of {@code Flashcard} objects to be used in tests.","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"public class TypicalFlashcards {","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard ALICE \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"            .withAnswer(\"123, Jurong West Ave 6, #08-111\").withQuestion(\"alice@example.com\")","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard BENSON \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"            .withAnswer(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(\"johnd@example.com\")","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard CARL \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(\"heinz@example.com\").withAnswer(\"wall street\").build();","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard DANIEL \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(\"cornelia@example.com\").withAnswer(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard ELLE \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(\"werner@example.com\").withAnswer(\"michegan ave\").build();","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard FIONA \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(\"lydia@example.com\").withAnswer(\"little tokyo\").build();","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard GEORGE \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(\"anna@example.com\").withAnswer(\"4th street\").build();","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard HOON \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(\"stefan@example.com\").withAnswer(\"little india\").build();","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard IDA \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(\"hans@example.com\").withAnswer(\"chicago ave\").build();","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"    // Manually added - Flashcard\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard AMY \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(VALID_QUESTION_A).withAnswer(VALID_ANSWER_A).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    public static final Flashcard BOB \u003d new FlashcardBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"            .withQuestion(VALID_QUESTION_B).withAnswer(VALID_ANSWER_B).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"    private TypicalFlashcards() {} // prevents instantiation","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"     * Returns an {@code FlashcardBook} with all the typical flashcards.","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"    public static FlashcardBook getTypicalFlashcardBook() {","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"        FlashcardBook ab \u003d new FlashcardBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"        for (Flashcard flashcard : getTypicalFlashcards()) {","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"            ab.addFlashcard(flashcard);","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"    public static List\u003cFlashcard\u003e getTypicalFlashcards() {","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Jellybeano":30,"xyzhang00":12,"-":29}},{"path":"src/test/java/seedu/weeblingo/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    public static final Index INDEX_FIRST_FLASHCARD \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    public static final Index INDEX_SECOND_FLASHCARD \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"    public static final Index INDEX_THIRD_FLASHCARD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Jellybeano":3,"xyzhang00":2,"-":7}},{"path":"src/test/java/seedu/weeblingo/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"xyzhang00":1,"-":34}},{"path":"src/test/java/seedu/weeblingo/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package seedu.weeblingo.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import static seedu.weeblingo.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import seedu.weeblingo.MainApp;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"xyzhang00":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"\u003c?import seedu.weeblingo.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"xyzhang00":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"\u003c?import seedu.weeblingo.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"\u003cfx:root type\u003d\"seedu.weeblingo.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"xyzhang00":2,"-":5}}]
