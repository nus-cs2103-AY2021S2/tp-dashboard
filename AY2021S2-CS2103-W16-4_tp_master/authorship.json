[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yanlingkuek"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-W16-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-W16-4/tp/actions)","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"This is a sample project for Managers of Tuition Centres","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"- To allocate students and tutors to a specific class","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"- Manage students, classes and tutors all in one platform","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"The project simulates an ongoing software project for a desktop application (called EZManage) used for","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"managing students, tutors and classes.","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"- It is written in OOP fashion. It provides a reasonably well-written code base bigger (around 6 KLoC) than what students usually write in beginner-level SE modules,","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"  without being overwhelmingly big.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"- It comes with a reasonable level of user and developer documentation.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"It is named as EzManage as it allows tuition centres managers to easily manage","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"students, tutors and classes all in one single web application.","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"For the detailed documentation of this project, see the [EZManage product website](https://ay2021s2-cs2103-w16-4.github.io/tp/).","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"This project is a part of the se-education.org initiative. If you would like to contribute code to this project, see se-education.org for more info.","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"## Feature List","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"* Add Student","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"* Add Tutor","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"* Add Session","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"* List Persons","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"* List Students","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"* List Tutors","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"* List Sessions","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"* View Student","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"* View Tutor","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"* View Session","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"* Edit Student","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"* Edit Tutor","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"* Edit Session","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"* Delete Student","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"* Delete Tutor","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"* Delete Session","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"* Clear Contacts","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"* Assign Student(s) to Session","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"* Assign tutor to Session","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"* Help","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"* Exit","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"yanlingkuek":22,"-":4,"Bennyphoe":19}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"run {","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yanlingkuek":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"### Kuek Yan Ling","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"\u003cimg src\u003d\"images/yanlingkuek.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"[[github](https://github.com/yanlingkuek)]","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"[[portfolio](team/yanlingkuek.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"- Role: Developer","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"- Responsibilities: Deliverables and Deadlines","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"### Phoe Chuan Yi, Benny","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"\u003cimg src\u003d\"images/bennyphoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"[[github](http://github.com/Bennyphoe)]","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"[[portfolio](team/benny.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"- Role: Developer","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"- Responsibilities: Documentation, Scheduling \u0026 Tracking","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":"### Guo Jingxue","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"\u003cimg src\u003d\"images/jingxueguo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"[[github](http://github.com/jingxueguo)]","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"jingxueguo"},"content":"[[portfolio](team/jingxue.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"jingxueguo"},"content":"- Role: Developer","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"jingxueguo"},"content":"- Responsibilities: Code Quality","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"### Chanell Ng","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"\u003cimg src\u003d\"images/chanellng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"[[github](http://github.com/chanellNg)]","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"[[portfolio](team/chanellNg.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"jingxueguo"},"content":"- Role: Team Lead, Git expert","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"- Responsibilities: UI","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"### Carissa Ying","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"\u003cimg src\u003d\"images/car155.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"[[github](https://github.com/car155)]","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"[[portfolio](team/carissaying.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"* Responsibilities: Integration, Testing","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"jingxueguo":11,"car155":5,"yanlingkuek":7,"chanellNg":4,"-":31,"Bennyphoe":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"car155"},"content":"### Add session feature","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"car155"},"content":"#### Current Implementation","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"yanlingkuek"},"content":"The add session feature is facilitated by `SessionList`. It is stored internally in `AddressBook` as `sessions`. It implements the following relevant operations:","lastModifiedDate":"2021-04-02"},{"lineNumber":141,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"car155"},"content":"* `SessionList#add(Session toAdd)` — Adds the given session to the current list of sessions","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"car155"},"content":"This operation is exposed in the `Model` interface as `Model#addSession(Session session)`.","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"car155"},"content":"Given below is an example usage scenario and how the add session mechanism behaves at each step.","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"car155"},"content":"Step 1: The user executes `add_session d/Saturday …` command to add a new session. The `LogicManager` calls `AddressBookParser#parseCommand(String userInput)`. ","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"car155"},"content":"Step 2: The `parseCommand` method passes the user input to `AddSessionCommandParser#parse(String args)` which returns an `AddSessionCommand` object.","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"car155"},"content":"Step 3: The `LogicManager` then executes the `AddSessionCommand` which calls the `Model#addSession(Session session)` method.","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"car155"},"content":"Step 4: The `Model` adds the new session to `sessions` in `AddressBook` and returns a `CommandResult`.","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"car155"},"content":"Step 5: The `CommandResult` is then displayed on the UI.","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"car155"},"content":"The sequence for the example scenerio can be found below:","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"car155"},"content":"![AddSessionSequenceDiagram](images/AddSessionSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"car155"},"content":"### Unassign person feature","lastModifiedDate":"2021-04-02"},{"lineNumber":163,"author":{"gitId":"car155"},"content":"The unassign feature utilises defensive programming to ensure that the `tutor` and `students` attributes of the session correspond with those persons\u0027 `sessions` attribute.","lastModifiedDate":"2021-04-02"},{"lineNumber":164,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":165,"author":{"gitId":"car155"},"content":"Given below is an example usage scenario and how the unassign command behaves at each step.","lastModifiedDate":"2021-04-02"},{"lineNumber":166,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":167,"author":{"gitId":"car155"},"content":"Step 1: The user executes `unassign s/1 c/1` command to unassign student `s/1` from session `c/1`. The `LogicManager` calls `AddressBookParser#parseCommand(String userInput)`. ","lastModifiedDate":"2021-04-02"},{"lineNumber":168,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":169,"author":{"gitId":"car155"},"content":"Step 2: The `parseCommand` method passes the user input to `UnassignCommandParser#parse(String args)` which returns an `UnassignCommand` object.","lastModifiedDate":"2021-04-02"},{"lineNumber":170,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":171,"author":{"gitId":"car155"},"content":"Step 3: The `LogicManager` then executes the `UnassignCommand`.","lastModifiedDate":"2021-04-02"},{"lineNumber":172,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":173,"author":{"gitId":"car155"},"content":"Step 4: The `UnassignCommand` calls the `Person#removeSession(SessionID session)` to remove the session from the student `s/1`\u0027s list, and `Session#unassignStudent(PersonId student)` to remove the student from the session `c/1`\u0027s list.","lastModifiedDate":"2021-04-02"},{"lineNumber":174,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":175,"author":{"gitId":"car155"},"content":"Step 5: A `CommandResult` object is returned and displayed on the UI.","lastModifiedDate":"2021-04-02"},{"lineNumber":176,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":177,"author":{"gitId":"car155"},"content":"The sequence for the example scenerio can be found below:","lastModifiedDate":"2021-04-02"},{"lineNumber":178,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":179,"author":{"gitId":"car155"},"content":"![UnassignSequenceDiagram](images/UnassignSequenceDiagram.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":180,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":181,"author":{"gitId":"yanlingkuek"},"content":"### Delete person feature","lastModifiedDate":"2021-04-02"},{"lineNumber":182,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":183,"author":{"gitId":"yanlingkuek"},"content":"#### Current Implementation","lastModifiedDate":"2021-04-02"},{"lineNumber":184,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":185,"author":{"gitId":"yanlingkuek"},"content":"The delete person feature is facilitated by `UniquePersonList`. It is stored internally in `AddressBook` as `persons`. It implements the following relevant operations:","lastModifiedDate":"2021-04-02"},{"lineNumber":186,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":187,"author":{"gitId":"yanlingkuek"},"content":"* `UniquePersonList#remove(Person toRemove)` - Removes the given person (student or tutor) from the current list of persons","lastModifiedDate":"2021-04-02"},{"lineNumber":188,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":189,"author":{"gitId":"yanlingkuek"},"content":"This operation is exposed in the `Model` interface as `Model#deletePerson(Person target)`.","lastModifiedDate":"2021-04-02"},{"lineNumber":190,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":191,"author":{"gitId":"yanlingkuek"},"content":"Given below is an example usage scenario and how the delete person mechanism behaves at each step.","lastModifiedDate":"2021-04-02"},{"lineNumber":192,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":193,"author":{"gitId":"yanlingkuek"},"content":"Step 1: The user launches the application for the first time. The `AddressBook` will contain a `UniquePersonList`.","lastModifiedDate":"2021-04-02"},{"lineNumber":194,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":195,"author":{"gitId":"yanlingkuek"},"content":"\u003cimg src\u003d\"images/DeletePersonObjectDiagram1.png\" alt\u003d\"DeletePersonObjectDiagram1\" width\u003d\"400\"/\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":196,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":197,"author":{"gitId":"yanlingkuek"},"content":"Step 2: The user executes `delete_person s/3` command to remove the specified person. The `LogicManager` calls `AddressBookParser#parseCommand(String userInput)`. ","lastModifiedDate":"2021-04-02"},{"lineNumber":198,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":199,"author":{"gitId":"yanlingkuek"},"content":"Step 3: The `parseCommand` method passes the user input to `DeletePersonCommandParser#parse(String args)` which returns a `DeletePersonCommand` object.","lastModifiedDate":"2021-04-02"},{"lineNumber":200,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":201,"author":{"gitId":"yanlingkuek"},"content":"Step 4: The `LogicManager` then executes the `DeletePersonCommand` which calls the `Model#deletePerson(Person target)` method.","lastModifiedDate":"2021-04-02"},{"lineNumber":202,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":203,"author":{"gitId":"yanlingkuek"},"content":"Step 5: The `Model` calls `AddressBook#removePerson(Person key)`.","lastModifiedDate":"2021-04-02"},{"lineNumber":204,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":205,"author":{"gitId":"yanlingkuek"},"content":"Step 6: The `Model` removes the specified person from `persons` in `AddressBook` and returns a `commandResult`.","lastModifiedDate":"2021-04-02"},{"lineNumber":206,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":207,"author":{"gitId":"yanlingkuek"},"content":"\u003cimg src\u003d\"images/DeletePersonObjectDiagram2.png\" alt\u003d\"DeletePersonObjectDiagram2\" width\u003d\"400\"/\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":208,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":209,"author":{"gitId":"yanlingkuek"},"content":"Step 7: The `commandResult` is then displayed on the UI.","lastModifiedDate":"2021-04-02"},{"lineNumber":210,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":211,"author":{"gitId":"yanlingkuek"},"content":"The sequence for the example scenerio can be found below:","lastModifiedDate":"2021-04-02"},{"lineNumber":212,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":213,"author":{"gitId":"yanlingkuek"},"content":"![DeletePersonSequenceDiagram](images/DeletePersonSequenceDiagram.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":214,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"car155"},"content":"Step 3. The user executes `add_person n/David …​` to add a new person. The `add_person` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"car155"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add_person n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-03-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"car155"},"content":"* has a need to manage a significant number of student contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":318,"author":{"gitId":"car155"},"content":"* has a need to allocate classes and teachers in a tuition center","lastModifiedDate":"2021-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":322,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"car155"},"content":"**Value proposition**: manage contacts and allocations faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"| Priority | As a …​                                | I want to …​                    | So that I can…​                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"car155"},"content":"| -------- | --------------------------------------| ------------------------------ | -------------------------------------------------------- |","lastModifiedDate":"2021-03-02"},{"lineNumber":333,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | add a new tutor                |                                                          |","lastModifiedDate":"2021-03-02"},{"lineNumber":334,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | add a new student              |                                                          |","lastModifiedDate":"2021-03-02"},{"lineNumber":335,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | add a new class slot with a specified subject and time frame | so that I am able to allocate students and tutors correctly     |","lastModifiedDate":"2021-03-02"},{"lineNumber":336,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | delete a student               | remove students that are no longer enrolled in the tuition center               |","lastModifiedDate":"2021-03-02"},{"lineNumber":337,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | delete a tutor                 | remove tutors that are no longer working for the tuition center               |","lastModifiedDate":"2021-03-02"},{"lineNumber":338,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | view the full list of tutors   |                                                          |","lastModifiedDate":"2021-03-02"},{"lineNumber":339,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | view the full list of students |                                                          |","lastModifiedDate":"2021-03-02"},{"lineNumber":340,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | view the full list of classes  |                                                          |","lastModifiedDate":"2021-03-02"},{"lineNumber":341,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | view a specific tutor\u0027s details      |                                                    |","lastModifiedDate":"2021-03-02"},{"lineNumber":342,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | view a specific student\u0027s details    |                                                    |","lastModifiedDate":"2021-03-02"},{"lineNumber":343,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | allocate a tutor to a specific class    |                                                 |","lastModifiedDate":"2021-03-02"},{"lineNumber":344,"author":{"gitId":"car155"},"content":"| `* * *`  | manager                               | allocate a student to a specific class  |                                                 |","lastModifiedDate":"2021-03-02"},{"lineNumber":345,"author":{"gitId":"car155"},"content":"| `* * `   | manager                               | delete a class                 | remove classes that are no longer available              |","lastModifiedDate":"2021-03-02"},{"lineNumber":346,"author":{"gitId":"car155"},"content":"| `* * `   | manager                               | edit tutor information         | ensure tutor information are up to date                  |","lastModifiedDate":"2021-03-02"},{"lineNumber":347,"author":{"gitId":"car155"},"content":"| `* * `   | manager                               | edit student information       | ensure student information are up to date                |","lastModifiedDate":"2021-03-02"},{"lineNumber":348,"author":{"gitId":"car155"},"content":"| `* * `   | manager                               | manage of class enrollment size  | be aware of how many more students should be allocated to this class |","lastModifiedDate":"2021-03-02"},{"lineNumber":349,"author":{"gitId":"car155"},"content":"| `* * `   | manager                               | filter out suitable tutors by available timings and subjects    | allocate a suitable tutor to a class |","lastModifiedDate":"2021-03-02"},{"lineNumber":350,"author":{"gitId":"car155"},"content":"| `* `     | manager                               | update and check the status of students’ bills  |                                         |","lastModifiedDate":"2021-03-02"},{"lineNumber":351,"author":{"gitId":"car155"},"content":"| `* `     | manager                               | update and check the status of payments owed to tutors |                                  |","lastModifiedDate":"2021-03-02"},{"lineNumber":352,"author":{"gitId":"car155"},"content":"| `* `     | manager                               | get notified when students’ bills are due |                                               |","lastModifiedDate":"2021-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":362,"author":{"gitId":"jingxueguo"},"content":"**Use case: Add a person**","lastModifiedDate":"2021-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"jingxueguo"},"content":"1. User requests to add a tutor or student in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":367,"author":{"gitId":"jingxueguo"},"content":"2. AddressBook adds the Person","lastModifiedDate":"2021-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":369,"author":{"gitId":"jingxueguo"},"content":"    Use case ends","lastModifiedDate":"2021-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-04-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":373,"author":{"gitId":"jingxueguo"},"content":"* 1a. The given tutor/student information is already exist in the list","lastModifiedDate":"2021-04-02"},{"lineNumber":374,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":375,"author":{"gitId":"jingxueguo"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2021-04-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-04-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":379,"author":{"gitId":"jingxueguo"},"content":"**Use case: Add a class**","lastModifiedDate":"2021-03-02"},{"lineNumber":380,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":381,"author":{"gitId":"jingxueguo"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":382,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":383,"author":{"gitId":"jingxueguo"},"content":"1. User requests to add a class to the database","lastModifiedDate":"2021-03-02"},{"lineNumber":384,"author":{"gitId":"jingxueguo"},"content":"2. AddressBook adds the class","lastModifiedDate":"2021-03-02"},{"lineNumber":385,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":386,"author":{"gitId":"jingxueguo"},"content":"   Use case ends","lastModifiedDate":"2021-03-02"},{"lineNumber":387,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":388,"author":{"gitId":"yanlingkuek"},"content":"**Use case: Delete a student**","lastModifiedDate":"2021-03-02"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"yanlingkuek"},"content":"1.  User requests to delete a specific student in the list of persons","lastModifiedDate":"2021-03-02"},{"lineNumber":394,"author":{"gitId":"yanlingkuek"},"content":"2.  AddressBook deletes the student","lastModifiedDate":"2021-03-02"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"yanlingkuek"},"content":"* 1a. The given ID is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"yanlingkuek"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"car155"},"content":"**Use case: View an individual person**","lastModifiedDate":"2021-03-31"},{"lineNumber":407,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":408,"author":{"gitId":"chanellNg"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":410,"author":{"gitId":"car155"},"content":"1.  User requests to view a specific tutor/student in the list according to person ID","lastModifiedDate":"2021-03-31"},{"lineNumber":411,"author":{"gitId":"car155"},"content":"2.  AddressBook shows the person\u0027s details and the classes assigned to the person","lastModifiedDate":"2021-03-31"},{"lineNumber":412,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":413,"author":{"gitId":"chanellNg"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":414,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":415,"author":{"gitId":"chanellNg"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":416,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":417,"author":{"gitId":"car155"},"content":"* 1a. The given index is in the wrong format.","lastModifiedDate":"2021-03-31"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"car155"},"content":"    * 1a1. AddressBook shows an error message and show the proper usage of the command.","lastModifiedDate":"2021-03-31"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"car155"},"content":"* 1b. The given index cannot be found in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":424,"author":{"gitId":"jingxueguo"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2021-04-02"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":426,"author":{"gitId":"car155"},"content":"      Use case ends.","lastModifiedDate":"2021-03-31"},{"lineNumber":427,"author":{"gitId":"car155"},"content":"    ","lastModifiedDate":"2021-03-31"},{"lineNumber":428,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2021-03-31"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":431,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"Bennyphoe"},"content":"4.  Application should be scalable in the sense of adding more entities in the future","lastModifiedDate":"2021-03-02"},{"lineNumber":437,"author":{"gitId":"Bennyphoe"},"content":"5.  Reliability, application should not crash and handles exception properly ","lastModifiedDate":"2021-03-02"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"yanlingkuek"},"content":"   1. Double-click the jar file \u003cbr\u003e Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2021-04-02"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"yanlingkuek"},"content":"1. Deleting a person","lastModifiedDate":"2021-04-02"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"yanlingkuek"},"content":"   1. Prerequisites: Know a valid person ID.","lastModifiedDate":"2021-04-02"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"yanlingkuek"},"content":"   1. Test case: `delete s/1`\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":480,"author":{"gitId":"yanlingkuek"},"content":"      Assumption: `s/1` is a valid person ID. \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":481,"author":{"gitId":"yanlingkuek"},"content":"      Expected: Person with the ID `s/1` is deleted from the person list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-04-02"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"yanlingkuek"},"content":"   1. Test case: `delete t/0`\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":484,"author":{"gitId":"yanlingkuek"},"content":"      Assumption: `t/0` is an invalid person ID. \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"yanlingkuek"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is an invalid person ID)\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":488,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"jingxueguo"},"content":"### Viewing a person","lastModifiedDate":"2021-04-02"},{"lineNumber":493,"author":{"gitId":"jingxueguo"},"content":"1. Viewing a person","lastModifiedDate":"2021-04-02"},{"lineNumber":494,"author":{"gitId":"jingxueguo"},"content":"    1. Prerequisites: there is at least 1 person in the list, ","lastModifiedDate":"2021-04-02"},{"lineNumber":495,"author":{"gitId":"jingxueguo"},"content":"       and his/her personID is known to the tester.","lastModifiedDate":"2021-04-02"},{"lineNumber":496,"author":{"gitId":"jingxueguo"},"content":"    1. Test case: `view_person s/1` \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":497,"author":{"gitId":"jingxueguo"},"content":"        Assumption: `s/1` is a valid personID \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":498,"author":{"gitId":"jingxueguo"},"content":"       Expected: details of person with personID `s/1` is displayed on the left pane, ","lastModifiedDate":"2021-04-02"},{"lineNumber":499,"author":{"gitId":"jingxueguo"},"content":"       and his/her associated sessions are displayed on the right","lastModifiedDate":"2021-04-02"},{"lineNumber":500,"author":{"gitId":"jingxueguo"},"content":"       ","lastModifiedDate":"2021-04-02"},{"lineNumber":501,"author":{"gitId":"jingxueguo"},"content":"    1. Test case: `view_person s/0` \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":502,"author":{"gitId":"jingxueguo"},"content":"        Assumption: `s/0` is an invalid personID since personID starts from 1 \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":503,"author":{"gitId":"jingxueguo"},"content":"       Expected: Error message is shown, no person/session is displayed","lastModifiedDate":"2021-04-02"},{"lineNumber":504,"author":{"gitId":"jingxueguo"},"content":"       ","lastModifiedDate":"2021-04-02"},{"lineNumber":505,"author":{"gitId":"jingxueguo"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2021-04-02"},{"lineNumber":506,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":507,"author":{"gitId":"jingxueguo"},"content":"### Viewing a session","lastModifiedDate":"2021-04-02"},{"lineNumber":508,"author":{"gitId":"jingxueguo"},"content":"1. Viewing a session","lastModifiedDate":"2021-04-02"},{"lineNumber":509,"author":{"gitId":"jingxueguo"},"content":"    1. Prerequisites: there is at least 1 session in the list,","lastModifiedDate":"2021-04-02"},{"lineNumber":510,"author":{"gitId":"jingxueguo"},"content":"       and the sessionID is known to the tester.","lastModifiedDate":"2021-04-02"},{"lineNumber":511,"author":{"gitId":"jingxueguo"},"content":"    1. Test case: `view_session c/1` \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":512,"author":{"gitId":"jingxueguo"},"content":"       Assumption: `c/1` is a valid sessionID \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":513,"author":{"gitId":"jingxueguo"},"content":"       Expected: details of the session with sessionID `c/1` is displayed on the left pane,","lastModifiedDate":"2021-04-02"},{"lineNumber":514,"author":{"gitId":"jingxueguo"},"content":"       and the students in the session are displayed on the right","lastModifiedDate":"2021-04-02"},{"lineNumber":515,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":516,"author":{"gitId":"jingxueguo"},"content":"    1. Test case: `view_session c/0` \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":517,"author":{"gitId":"jingxueguo"},"content":"       Assumption: `c/0` is an invalid sessionID since sessionID starts from 1 \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":518,"author":{"gitId":"jingxueguo"},"content":"       Expected: Error message is shown, no person/session is displayed","lastModifiedDate":"2021-04-02"},{"lineNumber":519,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":520,"author":{"gitId":"jingxueguo"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2021-04-02"},{"lineNumber":521,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":522,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jingxueguo":48,"car155":80,"yanlingkuek":49,"chanellNg":7,"-":342,"Bennyphoe":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"EzManage is a **desktop app for managing students, tutors and classes, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). It is named as EzManage as it allows tuition centres managers to easily manage students, tutors and classes all in one single web application.","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"1. Download the latest `ezmanage.jar` from [here](https://github.com/AY2021S2-CS2103-W16-4/tp/releases).","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your EzManage.","lastModifiedDate":"2021-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"1. Double-click the file to start the app. An example of the GUI is shown below. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"   * **`list persons`** : Lists all students and tutors.","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"   * **`add_person`**`tp/student n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a student named `John Doe` to the Contact List.","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"   * **`delete_person`**`t/3` : Deletes the tutor with the ID `t/3` from the Contact list.","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"   * **`assign`** : `assign s/3 t/2 c/1` Assigns student(s) or tutor to a specific class.","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"  e.g. in `add_person n/NAME`, `NAME` is a parameter which can be used as `add_person n/John Doe`.","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"  e.g `n/NAME [tag/TAG]` can be used as `n/John Doe tag/friend` or as `n/John Doe`.","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"  e.g. `[tag/TAG]…​` can be used as ` ` (i.e. 0 times), `tag/friend`, `tag/friend tag/family` etc.","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"jingxueguo"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"yanlingkuek"},"content":"### Adding a tutor: `add_person`","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"Adds a tutor to the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"Format: `add_person pt/tutor n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [tag/TAG]…​`","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"* `add_person pt/tutor n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"* `add_person pt/tutor n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 tag/criminal`","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"yanlingkuek"},"content":"### Adding a student: `add_person`","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"Adds a student to the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"Format: `add_person pt/student n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [tag/TAG]…​`","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"* `add_person pt/student n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"* `add_person pt/student n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 tag/criminal`","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"yanlingkuek"},"content":"### Adding a session: `add_session`","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"chanellNg"},"content":"Adds a session to the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"chanellNg"},"content":"Format: `add_session d/DAY t/TIMESLOT s/SUBJECT [tag/TAG] …","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"chanellNg"},"content":"`","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"chanellNg"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"chanellNg"},"content":"A session can have any number of tags (including 0)","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"chanellNg"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"chanellNg"},"content":"* A new session will have a unique session ID assigned after creation. ","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"chanellNg"},"content":"* DAY should match the format of a valid day in the week.","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"chanellNg"},"content":"* TIMESLOT should be in the format `HH:MM to HH:MM` and the end time should only be after the start time.","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"chanellNg"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":"* `add_session d/Saturday ts/13:00 to 15:00 s/Math tag/Hard`","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"chanellNg"},"content":"Format: `list persons`","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"jingxueguo"},"content":"### Listing all students : `list`","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"jingxueguo"},"content":"Shows a list of all students in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"jingxueguo"},"content":"Format: `list students`","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"jingxueguo"},"content":"### Listing all tutors : `list`","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"jingxueguo"},"content":"Shows a list of all tutors in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"jingxueguo"},"content":"Format: `list tutors`","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"chanellNg"},"content":"### Listing all sessions : `list`","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"chanellNg"},"content":"Format: `list sessions`","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"chanellNg"},"content":"Shows a list of all sessions in the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"jingxueguo"},"content":"### Viewing a tutor : `view_person`","lastModifiedDate":"2021-04-04"},{"lineNumber":148,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"chanellNg"},"content":"Views an existing tutor\u0027s details.","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":151,"author":{"gitId":"jingxueguo"},"content":"Format: `view_person t/ID`","lastModifiedDate":"2021-04-04"},{"lineNumber":152,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"chanellNg"},"content":"* Views the tutor with the specified tutor ID.","lastModifiedDate":"2021-03-02"},{"lineNumber":154,"author":{"gitId":"jingxueguo"},"content":"* Tutor’s information such as name, contact number, address etc will be displayed on the left panel","lastModifiedDate":"2021-04-04"},{"lineNumber":155,"author":{"gitId":"jingxueguo"},"content":"* Sessions assigned to the tutor will be displayed on the right panel","lastModifiedDate":"2021-04-04"},{"lineNumber":156,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":157,"author":{"gitId":"chanellNg"},"content":"Example:","lastModifiedDate":"2021-03-02"},{"lineNumber":158,"author":{"gitId":"jingxueguo"},"content":"* `view_person t/1` views the details of the tutor with tutor ID 1.","lastModifiedDate":"2021-04-04"},{"lineNumber":159,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":160,"author":{"gitId":"jingxueguo"},"content":"### Viewing a student : `view_person`","lastModifiedDate":"2021-04-04"},{"lineNumber":161,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"chanellNg"},"content":"Views an existing student\u0027s details.","lastModifiedDate":"2021-03-02"},{"lineNumber":163,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":164,"author":{"gitId":"jingxueguo"},"content":"Format: `view_person s/ID`","lastModifiedDate":"2021-04-04"},{"lineNumber":165,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":166,"author":{"gitId":"chanellNg"},"content":"* Views the student with the specified student ID.","lastModifiedDate":"2021-03-02"},{"lineNumber":167,"author":{"gitId":"jingxueguo"},"content":"* Student’s information such as name, contact number, address etc will be displayed on the left panel","lastModifiedDate":"2021-04-04"},{"lineNumber":168,"author":{"gitId":"jingxueguo"},"content":"* Sessions assigned to the student will be displayed on the right panel","lastModifiedDate":"2021-04-04"},{"lineNumber":169,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"chanellNg"},"content":"Example:","lastModifiedDate":"2021-03-02"},{"lineNumber":171,"author":{"gitId":"jingxueguo"},"content":"* `view_person s/1` views the details of the student with student ID 1.","lastModifiedDate":"2021-04-04"},{"lineNumber":172,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":173,"author":{"gitId":"yanlingkuek"},"content":"### Viewing a session : `view_session`","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":175,"author":{"gitId":"chanellNg"},"content":"Views an existing session\u0027s details.","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":177,"author":{"gitId":"chanellNg"},"content":"Format: `view_session c/ID`","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":179,"author":{"gitId":"chanellNg"},"content":"* Views the specified session with the specified session ID.","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"chanellNg"},"content":"* Left Panel will show the session\u0027s information such as the session ID, day","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"chanellNg"},"content":"  time slot, subject, tags and assigned tutor (if any).","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"chanellNg"},"content":"* Right Panel will show the specifed session\u0027s list of assigned students (if any).","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":184,"author":{"gitId":"chanellNg"},"content":"Example:","lastModifiedDate":"2021-03-02"},{"lineNumber":185,"author":{"gitId":"chanellNg"},"content":"* `view_session c/1` views the details of the session with session ID c/1 on the Left Panel","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"chanellNg"},"content":"and views the list of assigned students (e.g. students s/1, s/2) on the Right Panel.","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":188,"author":{"gitId":"yanlingkuek"},"content":"### Editing a student : `edit_person`","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"yanlingkuek"},"content":"Edits an existing student in the address book.","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"yanlingkuek"},"content":"Format: `edit_person s/ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [tag/TAG]…​`","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":194,"author":{"gitId":"yanlingkuek"},"content":"* Edits the student at the specified student ID (in the format `s/ID`). The student ID can be found from the displayed student list. ","lastModifiedDate":"2021-04-01"},{"lineNumber":195,"author":{"gitId":"yanlingkuek"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-04-01"},{"lineNumber":196,"author":{"gitId":"yanlingkuek"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-01"},{"lineNumber":197,"author":{"gitId":"yanlingkuek"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-04-01"},{"lineNumber":198,"author":{"gitId":"yanlingkuek"},"content":"* You can remove all the person’s tags by typing `tag/` without","lastModifiedDate":"2021-04-01"},{"lineNumber":199,"author":{"gitId":"yanlingkuek"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":201,"author":{"gitId":"yanlingkuek"},"content":"Examples:","lastModifiedDate":"2021-04-01"},{"lineNumber":202,"author":{"gitId":"yanlingkuek"},"content":"*  `edit_person s/1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the student with the ID of `s/1` to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-04-01"},{"lineNumber":203,"author":{"gitId":"yanlingkuek"},"content":"*  `edit_person s/2 n/Betsy Crower tag/` Edits the name of the student with the ID of `s/2` to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-04-01"},{"lineNumber":204,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":205,"author":{"gitId":"yanlingkuek"},"content":"### Editing a tutor : `edit_person`","lastModifiedDate":"2021-04-01"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"yanlingkuek"},"content":"Edits an existing tutor in the address book.","lastModifiedDate":"2021-04-01"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"yanlingkuek"},"content":"Format: `edit_person t/ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [tag/TAG]…​`","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"yanlingkuek"},"content":"* Edits the tutor at the specified tutor ID (in the format `s/ID`). The tutor ID can be found from the displayed tutor list. ","lastModifiedDate":"2021-04-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"yanlingkuek"},"content":"* You can remove all the person’s tags by typing `tag/` without","lastModifiedDate":"2021-04-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"yanlingkuek"},"content":"*  `edit_person t/1 p/88888888 e/sarahwong@example.com` Edits the phone number and email address of the tutor with the ID of `t/1` to be `88888888` and `sarahwong@example.com` respectively.","lastModifiedDate":"2021-04-01"},{"lineNumber":220,"author":{"gitId":"yanlingkuek"},"content":"*  `edit_person t/2 n/Oliver Tan tag/` Edits the name of the tutor with the ID of `t/2` to be `Oliver Tan` and clears all existing tags.","lastModifiedDate":"2021-04-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"yanlingkuek"},"content":"### Editing a session : `edit_session`","lastModifiedDate":"2021-04-01"},{"lineNumber":223,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"chanellNg"},"content":"Edits an existing session in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"chanellNg"},"content":"Format: `edit_session c/ID [d/DAY] [ts/TIMESLOT] [s/SUBJECT] [tag/TAG]…​`","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"chanellNg"},"content":"* Edits the session with the specified session ID. The session ID can be found from the displayed session list. ","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"chanellNg"},"content":"* The session ID has to be a valid session ID i.e. the session has to exist in the Address Book.","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"chanellNg"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"chanellNg"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"chanellNg"},"content":"* DAY should match the format of a valid day in the week.","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"chanellNg"},"content":"* TIMESLOT should be in the format `HH:MM to HH:MM` and the end time should only be after the start time.","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"chanellNg"},"content":"* When editing tags, the existing tags of the session will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"chanellNg"},"content":"* A user can *ONLY* edit a session’s day and time slot if the session does not have any assigned tutor and assigned students, to avoid potential timeslot clashes when session is edited.","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"chanellNg"},"content":"* Unassign students/tutor should be called before editing any session’s timeslot or day.","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"chanellNg"},"content":"*  `edit_session c/1 d/Monday s/Biology` Edits the day and subject of the session c/1 to be `Monday` and `Biology` respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"chanellNg"},"content":"*  `edit_session c/2 ts/12:00 to 13:00 tag/haha` Edits the timeslot and tag of the session c/2 to be `12:00 to 13:00` and `haha` respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2021-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"yanlingkuek"},"content":"### Deleting a student : `delete_person`","lastModifiedDate":"2021-04-01"},{"lineNumber":261,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":262,"author":{"gitId":"chanellNg"},"content":"Deletes the specified student from the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":263,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":264,"author":{"gitId":"chanellNg"},"content":"Format: `delete_person s/ID`","lastModifiedDate":"2021-03-15"},{"lineNumber":265,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":266,"author":{"gitId":"chanellNg"},"content":"* Deletes the student with the specified `s/ID`.","lastModifiedDate":"2021-03-15"},{"lineNumber":267,"author":{"gitId":"chanellNg"},"content":"* The s/ID refers to the student ID shown in the displayed person list.","lastModifiedDate":"2021-03-15"},{"lineNumber":268,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":269,"author":{"gitId":"chanellNg"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":270,"author":{"gitId":"yanlingkuek"},"content":"* `delete_person s/2` deletes the student with student ID s/2 in the address book.","lastModifiedDate":"2021-03-16"},{"lineNumber":271,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":272,"author":{"gitId":"yanlingkuek"},"content":"### Deleting a tutor : `delete_person`","lastModifiedDate":"2021-04-01"},{"lineNumber":273,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":274,"author":{"gitId":"chanellNg"},"content":"Deletes the specified tutor from the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":276,"author":{"gitId":"chanellNg"},"content":"Format: `delete_person t/ID`","lastModifiedDate":"2021-03-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":278,"author":{"gitId":"chanellNg"},"content":"* Deletes the tutor with the specified `t/ID`.","lastModifiedDate":"2021-03-15"},{"lineNumber":279,"author":{"gitId":"chanellNg"},"content":"* The t/ID refers to the tutor ID shown in the displayed person list.","lastModifiedDate":"2021-03-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":281,"author":{"gitId":"chanellNg"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":282,"author":{"gitId":"yanlingkuek"},"content":"* `delete_person t/1` deletes the tutor with tutor ID t/1 in the address book.","lastModifiedDate":"2021-03-16"},{"lineNumber":283,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":284,"author":{"gitId":"yanlingkuek"},"content":"### Deleting a session : `delete_session`","lastModifiedDate":"2021-04-01"},{"lineNumber":285,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":286,"author":{"gitId":"chanellNg"},"content":"Deletes the specified session from the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"chanellNg"},"content":"Format: `delete_session c/ID`","lastModifiedDate":"2021-03-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"chanellNg"},"content":"* Deletes the session with the specified `c/ID`.","lastModifiedDate":"2021-03-15"},{"lineNumber":291,"author":{"gitId":"chanellNg"},"content":"* The c/ID refers to the session ID shown in the displayed session list.","lastModifiedDate":"2021-03-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"yanlingkuek"},"content":"* `delete_session c/2` deletes the session with session ID c/2 in the address book.","lastModifiedDate":"2021-03-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"Bennyphoe"},"content":"### Assigning student(s)/tutor to session:`assign`","lastModifiedDate":"2021-04-01"},{"lineNumber":297,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":298,"author":{"gitId":"Bennyphoe"},"content":"Assigns a student or multiple student and/or a tutor to a specific class","lastModifiedDate":"2021-04-01"},{"lineNumber":299,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":300,"author":{"gitId":"Bennyphoe"},"content":"3 Formats : ","lastModifiedDate":"2021-04-01"},{"lineNumber":301,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":302,"author":{"gitId":"Bennyphoe"},"content":"1) `assign [s/ID]…​ [c/ID]`","lastModifiedDate":"2021-04-01"},{"lineNumber":303,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":304,"author":{"gitId":"Bennyphoe"},"content":"    * This assigns a student of `s/ID` or multiple students to a class of `c/ID`","lastModifiedDate":"2021-04-01"},{"lineNumber":305,"author":{"gitId":"Bennyphoe"},"content":"    ","lastModifiedDate":"2021-04-01"},{"lineNumber":306,"author":{"gitId":"Bennyphoe"},"content":"    * Example : `assign s/2 s/1 c/1` This assigns students of `s/2` and `s/1` to class `c/1`","lastModifiedDate":"2021-04-01"},{"lineNumber":307,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":308,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":309,"author":{"gitId":"Bennyphoe"},"content":"2) `assign [t/ID] [c/ID]`","lastModifiedDate":"2021-04-01"},{"lineNumber":310,"author":{"gitId":"Bennyphoe"},"content":"    * This assign a tutor of `t/ID` to a class of `c/ID`","lastModifiedDate":"2021-04-01"},{"lineNumber":311,"author":{"gitId":"Bennyphoe"},"content":"    * Example:  `assign t/1 c/1` This assign a tutor of `t/1` to class of `c/1`","lastModifiedDate":"2021-04-01"},{"lineNumber":312,"author":{"gitId":"Bennyphoe"},"content":"    ","lastModifiedDate":"2021-04-01"},{"lineNumber":313,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":314,"author":{"gitId":"Bennyphoe"},"content":"3) `assign [s/ID]…​ [t/ID] [c/ID]`","lastModifiedDate":"2021-04-01"},{"lineNumber":315,"author":{"gitId":"Bennyphoe"},"content":"    * This assigns a student of `s/ID` or multiple students and a tutor of `t/ID` to a class of `c/ID` ","lastModifiedDate":"2021-04-01"},{"lineNumber":316,"author":{"gitId":"Bennyphoe"},"content":"    ","lastModifiedDate":"2021-04-01"},{"lineNumber":317,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":318,"author":{"gitId":"Bennyphoe"},"content":"A class must always be provided, either student or tutor can be optional.","lastModifiedDate":"2021-04-01"},{"lineNumber":319,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":320,"author":{"gitId":"car155"},"content":"### Unassigning people from a session : `assign`","lastModifiedDate":"2021-03-30"},{"lineNumber":321,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":322,"author":{"gitId":"car155"},"content":"Unassigns the specified people from a session.","lastModifiedDate":"2021-03-30"},{"lineNumber":323,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":324,"author":{"gitId":"car155"},"content":"Format: `unassign [s/ID]… [t/ID] c/ID`","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":326,"author":{"gitId":"car155"},"content":"* Unassigns students with the specified `s/ID` from the session with the specified `c/ID`","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"car155"},"content":"* Unassigns the tutor with the specified `t/ID` from the session with the specified `c/ID`","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"car155"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-30"},{"lineNumber":329,"author":{"gitId":"car155"},"content":"* Any number of students can be unassigned at the same time (including 0)","lastModifiedDate":"2021-03-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":331,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":332,"author":{"gitId":"car155"},"content":"* `unassign s/1 c/1` unassigns the student with student ID s/1 from the session with session ID c/1.","lastModifiedDate":"2021-03-30"},{"lineNumber":333,"author":{"gitId":"car155"},"content":"* `unassign c/1 t/1` unassigns the tutor with tutor ID t/1 from the session with session ID c/1.","lastModifiedDate":"2021-03-30"},{"lineNumber":334,"author":{"gitId":"car155"},"content":"* `unassign s/1 s/2 t/1 c/1` unassigns students with student IDs s/1 and s/2, and the tutor with tutor ID t/1 from the session with session ID c/1.","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":336,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"yanlingkuek"},"content":"Clears all entries from the list of students, tutors and classes.","lastModifiedDate":"2021-03-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"yanlingkuek"},"content":"EzManage data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-03-04"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":354,"author":{"gitId":"yanlingkuek"},"content":"EzManage data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-03-04"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":356,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":357,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"yanlingkuek"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous EzManage home folder.","lastModifiedDate":"2021-04-01"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"yanlingkuek"},"content":"**Add** | For Person:`add_person tp/ROLE n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [tag/TAG]…​` \u003cbr\u003e e.g., `add_person tp/student n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665`\u003cbr\u003e\u003cbr\u003e For Session: `add_session d/DAY ts/TIMESLOT s/SUBJECT [tag/TAG]…​` \u003cbr\u003e e.g. `add_session d/Saturday ts/13:00 to 15:00 s/Math` ","lastModifiedDate":"2021-04-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"car155"},"content":"**Delete** | For Student: \u003cbr\u003e `delete_person s/ID`\u003cbr\u003e e.g., `delete_person s/22` \u003cbr\u003e\u003cbr\u003e For Tutor: \u003cbr\u003e `delete_person t/ID`\u003cbr\u003e e.g., `delete_person t/8`\u003cbr\u003e\u003cbr\u003e For Session:\u003cbr\u003e`delete_session c/ID` \u003cbr\u003e e.g., `delete_session c/9`","lastModifiedDate":"2021-04-02"},{"lineNumber":380,"author":{"gitId":"car155"},"content":"**Edit** | For Student: \u003cbr\u003e `edit_person s/ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [tag/TAG]…​` \u003cbr\u003e e.g., `edit_person s/2 n/Betsy Crower tag/` \u003cbr\u003e\u003cbr\u003e For Tutor: \u003cbr\u003e `edit_person t/ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [tag/TAG]…​` \u003cbr\u003e e.g., `edit_person t/1 p/88888888 e/sarahwong@example.com` \u003cbr\u003e\u003cbr\u003e For Session: \u003cbr\u003e `edit_session c/ID [d/DAY] [ts/TIMESLOT] [s/SUBJECT] [tag/TAG]…​`\u003cbr\u003e e.g.,`edit_session c/1 d/Monday s/Biology` \u003cbr\u003e e.g. `edit_session c/2 d/Saturday ts/13:00 to 15:00 tag/Hard` ","lastModifiedDate":"2021-04-02"},{"lineNumber":381,"author":{"gitId":"car155"},"content":"**Assign** | `assign [s/ID]… [t/ID] c/ID`\u003cbr\u003e e.g., `assign s/1 s/2 t/1 c/1`","lastModifiedDate":"2021-03-30"},{"lineNumber":382,"author":{"gitId":"car155"},"content":"**Unassign** | `unassign [s/ID]… [t/ID] c/ID`\u003cbr\u003e e.g., `unassign s/1 s/2 t/1 c/1`","lastModifiedDate":"2021-03-30"},{"lineNumber":383,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"car155"},"content":"**List** | For All Persons: \u003cbr\u003e`list persons` \u003cbr\u003e\u003cbr\u003e For All Students: \u003cbr\u003e`list students` \u003cbr\u003e\u003cbr\u003e For All Tutors: \u003cbr\u003e`list tutors` \u003cbr\u003e\u003cbr\u003e For All Sessions: \u003cbr\u003e`list sessions`","lastModifiedDate":"2021-04-02"},{"lineNumber":385,"author":{"gitId":"jingxueguo"},"content":"**View** | For Student: \u003cbr\u003e`view_person s/ID`\u003cbr\u003e e.g. `view_person s/1` \u003cbr\u003e \u003cbr\u003e For Tutor: \u003cbr\u003e `view_person t/ID`\u003cbr\u003e e.g. `view_person t/1` \u003cbr\u003e \u003cbr\u003e  For Session: \u003cbr\u003e `view_session c/ID` \u003cbr\u003e e.g., `view_session c/5`","lastModifiedDate":"2021-04-04"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jingxueguo":25,"car155":19,"yanlingkuek":45,"chanellNg":110,"-":162,"Bennyphoe":25}},{"path":"docs/diagrams/AddSessionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"!include Style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"box Logic LOGIC_COLOR_T2","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"participant \":AddSessionCommandParser\" as AddSessionCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"participant \"command:AddSessionCommand\" as command LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"[-\u003e LogicManager : execute(\"add_session d/…\")","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"activate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add_session d/…\")","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"create AddSessionCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"AddressBookParser -\u003e AddSessionCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"AddressBookParser -\u003e AddSessionCommandParser : parse(\"d/Saturday …\")","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"activate AddSessionCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"create command","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"AddSessionCommandParser -\u003e command","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"AddSessionCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"deactivate AddSessionCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"AddSessionCommandParser -[hidden]-\u003e]","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"destroy AddSessionCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"LogicManager -\u003e command : execute()","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"activate command","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"command -\u003e Model : addSession(session)","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"activate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"deactivate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"command --\u003e LogicManager : commandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"deactivate command","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"LogicManager --\u003e[ : commandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"@enduml","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"car155":54}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"LogicManager --\u003e\"1\" AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBookParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"note right of XYZCommand: XYZCommand \u003d AddPersonCommand, \\nFindCommand, etc","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"car155":1,"-":61}},{"path":"docs/diagrams/UnassignSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"@startuml","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"!include Style.puml","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"box Logic LOGIC_COLOR_T2","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"participant \":UnassignCommandParser\" as UnassignCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"participant \"command:UnassignCommand\" as command LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"end box","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"participant \"s/1:Person\" as s1 MODEL_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"participant \"c/1:Session\" as c1 MODEL_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"end box","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"[-\u003e LogicManager : execute(\"unassign s/1 c/1\")","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"activate LogicManager","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"unassign s/1 c/1\")","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"activate AddressBookParser","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"create UnassignCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"AddressBookParser -\u003e UnassignCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"AddressBookParser -\u003e UnassignCommandParser : parse(\"s/1 c/1\")","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"activate UnassignCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"create command","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"UnassignCommandParser -\u003e command","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"UnassignCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"deactivate UnassignCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"UnassignCommandParser -[hidden]-\u003e]","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"destroy UnassignCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"LogicManager -\u003e command : execute()","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"activate command","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"command -\u003e s1 : removeSession(c/1)","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"activate s1","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"deactivate s1","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"command -\u003e c1 : unassignStudent(s/1)","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"activate c1","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"deactivate c1","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"command --\u003e LogicManager : commandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"deactivate command","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"LogicManager --\u003e[ : commandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"@enduml","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"car155":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"title: EzManage","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-W16-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-W16-4/tp/actions)","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-W16-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103-W16-4/tp)","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"**EzManage is a desktop application for managing students, tutors and classes by managers of tuition centres.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"* If you are interested in using EzManage, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"* If you are interested about developing EzManage, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yanlingkuek":6,"-":13}},{"path":"docs/team/yanlingkuek.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"title: Kuek Yan Ling\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yanlingkuek":1,"-":3}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.storage.JsonSessionStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"        AddressBookStorage sessionStorage \u003d new JsonSessionStorage(userPrefs.getSessionFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"        storage \u003d new StorageManager(addressBookStorage, sessionStorage, userPrefsStorage);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"Bennyphoe"},"content":"        Optional\u003cReadOnlyAddressBook\u003e sessionOptional;","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"Bennyphoe"},"content":"            sessionOptional \u003d storage.readSession();","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"            ReadOnlyAddressBook personData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"Bennyphoe"},"content":"            ReadOnlyAddressBook sessionData \u003d sessionOptional.orElseGet(SampleDataUtil::getSampleSessions);","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"Bennyphoe"},"content":"            personData.setSessions(sessionData.getSessions());","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"Bennyphoe"},"content":"            initialData \u003d personData;","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":181,"Bennyphoe":9}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person ID provided is invalid\";","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_INVALID_SESSION_DISPLAYED_INDEX \u003d \"The session ID provided is invalid\";","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_CANNOT_EDIT \u003d \"Please unassign ALL students and tutor before editing the session\"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"                                                    + \"\u0027s day OR timeslot.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yanlingkuek":1,"chanellNg":3,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"    public ObservableList\u003cSession\u003e getFilteredSessionList();","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":50,"Bennyphoe":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.AddSessionCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.DeleteSessionCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.EditSessionCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"            if (command instanceof ExitCommand) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"                storage.saveSessions(model.getAddressBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"                storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"            } else if (command instanceof AddSessionCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"                    || command instanceof DeleteSessionCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"                    || command instanceof EditSessionCommand) {","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"                storage.saveSessions(model.getAddressBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"                storage.saveSessions(model.getAddressBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":83,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"Bennyphoe"},"content":"     * returns a list of Sessions","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"Bennyphoe"},"content":"     * @return ObservableList of Session","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"Bennyphoe"},"content":"    public ObservableList\u003cSession\u003e getFilteredSessionList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"        return model.getFilteredSessionList();","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chanellNg":11,"-":81,"Bennyphoe":13}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_TYPE;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public static final String COMMAND_WORD \u003d \"add_person\";","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"            + PREFIX_PERSON_TYPE + \"PERSON_TYPE \"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"            + PREFIX_PERSON_TYPE + \"student \"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"            if (toAdd instanceof Student) {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"                Student.setStudentCount(String.valueOf(Integer.parseInt(Student.getStudentCount()) - 1));","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"yanlingkuek"},"content":"                Tutor.setTutorCount(String.valueOf(Integer.parseInt(Tutor.getTutorCount()) - 1));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"yanlingkuek"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"car155"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"car155"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"car155":6,"yanlingkuek":7,"-":61,"Bennyphoe":3}},{"path":"src/main/java/seedu/address/logic/commands/AddSessionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"car155"},"content":" * Adds a session to the address book.","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"public class AddSessionCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    public static final String COMMAND_WORD \u003d \"add_session\";","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a tuition session to the manager. \"","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"            + PREFIX_DAY + \"DAY \"","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"            + PREFIX_TIMESLOT + \"TIMESLOT \"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"            + PREFIX_SUBJECT + \"SUBJECT \"","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"            + PREFIX_DAY + \"Wednesday \"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"            + PREFIX_TIMESLOT + \"12:30 to 14:30 \"","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"            + PREFIX_SUBJECT + \"Piano \"","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"            + PREFIX_TAG + \"music\";","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New session added: %1$s\";","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"    private final Session toAdd;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"     * Creates an AddSessionCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    public AddSessionCommand(Session session) {","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        requireNonNull(session);","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"        toAdd \u003d session;","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        model.addSession(toAdd);","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"                || (other instanceof AddSessionCommand // instanceof handles nulls","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"                \u0026\u0026 toAdd.equals(((AddSessionCommand) other).toAdd));","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"car155":55}},{"path":"src/main/java/seedu/address/logic/commands/AssignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTOR_ID;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"public class AssignCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assigns student(s) and/or tutor to a class \\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"            + \"Parameters: \" + \"(assign student ONLY, tutor Only or Both) \"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"            + PREFIX_STUDENT_ID + \"StudentId \"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"            + PREFIX_TUTOR_ID + \"TutorId \"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"            + PREFIX_CLASS_ID + \"ClassId \\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"            + PREFIX_STUDENT_ID + \"3 \"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"            + PREFIX_TUTOR_ID + \"2 \"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"            + PREFIX_CLASS_ID + \"1 \";","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New assignment added: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_TIMESLOT_CLASH \u003d \"Timeslot clash! Cannot assign: %1$s to %2$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_ALREADY_ASSIGNED \u003d \"%1$s is already assigned to %2$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_SESSION_HAS_TUTOR \u003d \"Cannot assign! %1$s already has tutor %2$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"    private final Assignment assignment;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"     * Creates an AddSessionCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"    public AssignCommand(Assignment assignment) {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"    private boolean isAssignedTo(Person person, Session sessionToCheck) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"        for (SessionId sessionId : person.getSessions()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"            if (sessionId.equals(sessionToCheck.getClassId())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"    private boolean hasClashes(Model model, Person person, Session sessionToCheck) {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"        for (SessionId sessionId : person.getSessions()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"            List\u003cSession\u003e lastShownSessionsList \u003d model.getUnfilteredSessionList();","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"            Session currentSession \u003d lastShownSessionsList.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"                    .filter(x-\u003e x.getClassId().equals(sessionId)).findAny().get();","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"car155"},"content":"            if (currentSession.isClashingWith(sessionToCheck)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"car155"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"car155"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"car155"},"content":"    private void checkStudentSession(Model model, Person student, Session session) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"car155"},"content":"        assert(student.isStudent());","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"car155"},"content":"        if (isAssignedTo(student, session)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"car155"},"content":"            throw new CommandException(String.format(MESSAGE_ALREADY_ASSIGNED,","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"car155"},"content":"                    student.getPersonId(), session.getClassId()));","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"        if (hasClashes(model, student, session)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"car155"},"content":"            throw new CommandException(String.format(MESSAGE_TIMESLOT_CLASH,","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"car155"},"content":"                    student.getPersonId(), session.getClassId()));","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"car155"},"content":"    private void checkTutorSession(Model model, Person tutor, Session session) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"car155"},"content":"        assert(tutor.isTutor());","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"car155"},"content":"        if (session.getTutor().equals(tutor.getPersonId())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"car155"},"content":"            throw new CommandException(String.format(MESSAGE_ALREADY_ASSIGNED,","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"car155"},"content":"                    tutor.getPersonId(), session.getClassId()));","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"car155"},"content":"        if (session.hasTutor()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"car155"},"content":"            throw new CommandException(String.format(MESSAGE_SESSION_HAS_TUTOR,","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"car155"},"content":"                    session.getClassId(), session.getTutor()));","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"car155"},"content":"        if (hasClashes(model, tutor, session)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"car155"},"content":"            throw new CommandException(String.format(MESSAGE_TIMESLOT_CLASH,","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"car155"},"content":"                    tutor.getPersonId(), session.getClassId()));","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"car155"},"content":"    private Set\u003cPerson\u003e getStudents(Model model, Set\u003cPersonId\u003e studentIds, Session session) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"        List\u003cPerson\u003e lastShownPersonsList \u003d model.getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"car155"},"content":"        Set\u003cPerson\u003e studentsToAssign \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"car155"},"content":"        for (PersonId studentId : studentIds) {","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"car155"},"content":"            Optional\u003cPerson\u003e studentToAssign \u003d lastShownPersonsList.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"car155"},"content":"                    .filter(x-\u003e x.getPersonId().equals(studentId)).findAny();","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"car155"},"content":"            if (studentToAssign.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"car155"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"car155"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"car155"},"content":"            Person student \u003d studentToAssign.get();","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"car155"},"content":"            try {","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"car155"},"content":"                checkStudentSession(model, student, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"car155"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"car155"},"content":"                throw new CommandException(e.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"car155"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"car155"},"content":"            studentsToAssign.add(student);","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"car155"},"content":"        return studentsToAssign;","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"car155"},"content":"    private Person getTutor(Model model, PersonId tutorId, Session session) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":"        List\u003cPerson\u003e lastShownPersonsList \u003d model.getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"car155"},"content":"        Optional\u003cPerson\u003e tutorToAssign \u003d lastShownPersonsList.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"car155"},"content":"                .filter(x-\u003e x.getPersonId().equals(tutorId)).findAny();","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"car155"},"content":"        if (tutorToAssign.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"car155"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"car155"},"content":"        Person tutor \u003d tutorToAssign.get();","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"car155"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"car155"},"content":"            checkTutorSession(model, tutor, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"car155"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"car155"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"car155"},"content":"        return tutor;","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"car155"},"content":"    private void assignStudents(Set\u003cPerson\u003e students, Session session) {","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"car155"},"content":"        for (Person student : students) {","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"car155"},"content":"            assert(student.isStudent());","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"car155"},"content":"            student.addSession(session.getClassId());","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"car155"},"content":"            session.assignStudent(student.getPersonId());","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"car155"},"content":"    private void assignTutor(Person tutor, Session session) {","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"car155"},"content":"        assert(tutor.isTutor());","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"car155"},"content":"        tutor.addSession(session.getClassId());","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"car155"},"content":"        session.assignTutor(tutor.getPersonId());","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"car155"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"Bennyphoe"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"car155"},"content":"        Set\u003cPersonId\u003e studentIds \u003d this.assignment.getStudentIds();","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"car155"},"content":"        PersonId tutorId \u003d this.assignment.getTutorId();","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"car155"},"content":"        SessionId sessionId \u003d this.assignment.getSessionId();","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"chanellNg"},"content":"        List\u003cSession\u003e lastShownSessionsList \u003d model.getUnfilteredSessionList();","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"car155"},"content":"        Optional\u003cSession\u003e sessionToAssign \u003d lastShownSessionsList.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"car155"},"content":"                .filter(x-\u003e x.getClassId().equals(sessionId)).findAny();","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"car155"},"content":"        if (sessionToAssign.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"car155"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"car155"},"content":"        Session session \u003d sessionToAssign.get();","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"car155"},"content":"        Set\u003cPerson\u003e students \u003d getStudents(model, studentIds, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"car155"},"content":"        if (tutorId !\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"car155"},"content":"            Person tutor \u003d getTutor(model, tutorId, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"car155"},"content":"            assignTutor(tutor, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"car155"},"content":"        assignStudents(students, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"Bennyphoe"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, assignment));","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"Bennyphoe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"Bennyphoe"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"Bennyphoe"},"content":"                || (other instanceof AssignCommand // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"Bennyphoe"},"content":"                \u0026\u0026 assignment.equals(((AssignCommand) other).assignment));","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"car155":131,"chanellNg":4,"Bennyphoe":47}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_USAGE \u003d \"Delete command should either be delete_person or delete_session!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chanellNg":2,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanlingkuek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID_STUDENT;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":" * Deletes a person identified using the person ID from the address book.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"    public static final String COMMAND_WORD \u003d \"delete_person\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"            + \": Deletes the person identified by the person ID shown in the displayed person list.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"            + \"Parameters: PERSON_ID (must be a valid ID)\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_PERSON_ID_STUDENT + \"1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"    private final PersonId targetPersonId;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"    public DeletePersonCommand(PersonId targetPersonId) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"        this.targetPersonId \u003d targetPersonId;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"    public PersonId getTargetPersonId() {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"        return targetPersonId;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"        Optional\u003cPerson\u003e personToDelete \u003d lastShownList.stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"yanlingkuek"},"content":"                .filter(x-\u003e x.getPersonId().equals(targetPersonId)).findAny();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"        if (personToDelete.isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"            model.deletePerson(personToDelete.get());","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete.get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"                \u0026\u0026 targetPersonId.equals(((DeletePersonCommand) other).targetPersonId)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"yanlingkuek":60,"chanellNg":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteSessionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"public class DeleteSessionCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    public static final String COMMAND_WORD \u003d \"delete_session\";","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"            + \": Deletes the session identified by the session ID shown in the displayed session list.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"            + \"Parameters: C/ID (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"            + \"Example: \" + COMMAND_WORD + \" c/1\";","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_DELETE_SESSION_SUCCESS \u003d \"Deleted Session: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    private final SessionId targetClassId;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    public DeleteSessionCommand(SessionId targetClassId) {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"        this.targetClassId \u003d targetClassId;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"    public SessionId getTargetClassId() {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        return targetClassId;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"        List\u003cSession\u003e lastShownList \u003d model.getUnfilteredSessionList();","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"        Optional\u003cSession\u003e sessionToDelete \u003d lastShownList.stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"                .filter(x-\u003e x.getClassId().equals(targetClassId)).findAny();","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        if (sessionToDelete.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"            model.deleteSession(sessionToDelete.get());","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_SESSION_SUCCESS, sessionToDelete.get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"                || (other instanceof DeleteSessionCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 targetClassId.equals(((DeleteSessionCommand) other).getTargetClassId())); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"chanellNg":59}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"    public static final String MESSAGE_USAGE \u003d \"Edit command should either be edit_person or edit_session!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"yanlingkuek"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"yanlingkuek"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"yanlingkuek"},"content":"        PersonType originalType \u003d personToEdit.getPersonType();","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"yanlingkuek"},"content":"        PersonId originalId \u003d personToEdit.getPersonId();","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"yanlingkuek"},"content":"        if (originalType.equals(new PersonType(\"student\"))) {","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"yanlingkuek"},"content":"            return new Student(originalId, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"yanlingkuek"},"content":"        } else if (originalType.equals(new PersonType(\"tutor\"))) {","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"yanlingkuek"},"content":"            return new Tutor(originalId, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"yanlingkuek"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"yanlingkuek"},"content":"            throw new CommandException(\"Person\u0027s original type should be student or tutor\");","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"Bennyphoe"},"content":"        private PersonType personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"yanlingkuek"},"content":"        private PersonId personId;","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"Bennyphoe"},"content":"            setPersonType(toCopy.personType);","lastModifiedDate":"2021-03-01"},{"lineNumber":144,"author":{"gitId":"yanlingkuek"},"content":"            setPersonId(toCopy.personId);","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"Bennyphoe"},"content":"        public PersonType getPersonType() {","lastModifiedDate":"2021-03-01"},{"lineNumber":187,"author":{"gitId":"Bennyphoe"},"content":"            return personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":188,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":189,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":190,"author":{"gitId":"Bennyphoe"},"content":"        public void setPersonType(PersonType personType) {","lastModifiedDate":"2021-03-01"},{"lineNumber":191,"author":{"gitId":"Bennyphoe"},"content":"            this.personType \u003d personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":192,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":193,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":194,"author":{"gitId":"yanlingkuek"},"content":"        public PersonId getPersonId() {","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"yanlingkuek"},"content":"            return personId;","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"yanlingkuek"},"content":"        public void setPersonId(PersonId personId) {","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"yanlingkuek"},"content":"            this.personId \u003d personId;","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getPersonType().equals(e.getPersonType())","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getPersonId().equals(e.getPersonId());","lastModifiedDate":"2021-03-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yanlingkuek":28,"chanellNg":1,"-":203,"Bennyphoe":11}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanlingkuek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID_STUDENT;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID_TUTOR;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":" * Edits the details of an existing person (student or tutor) in the address book.","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"    public static final String COMMAND_WORD \u003d \"edit_person\";","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"            + \"by the person\u0027s ID used. \"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"yanlingkuek"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"yanlingkuek"},"content":"            + \"Parameters: student or tutor ID (must be in the format of \" + PREFIX_PERSON_ID_STUDENT + \"ID \"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"            + \"or \" + PREFIX_PERSON_ID_TUTOR + \"ID) \"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"            + PREFIX_PERSON_ID_STUDENT + \"2 \"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yanlingkuek"},"content":"    private final PersonId personId;","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yanlingkuek"},"content":"    private final EditPersonPersonDescriptor editPersonPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"     * @param personId of the person in the person list to edit","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"     * @param editPersonPersonDescriptor details to edit the person with","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonCommand(PersonId personId, EditPersonPersonDescriptor editPersonPersonDescriptor) {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"        requireNonNull(personId);","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"        requireNonNull(editPersonPersonDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"        this.editPersonPersonDescriptor \u003d new EditPersonPersonDescriptor(editPersonPersonDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yanlingkuek"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yanlingkuek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"yanlingkuek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"yanlingkuek"},"content":"        Optional\u003cPerson\u003e personToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"                .filter(x-\u003e x.getPersonId().equals(personId)).findAny();","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"yanlingkuek"},"content":"        if (!personToEdit.isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"yanlingkuek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"yanlingkuek"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit.get(), editPersonPersonDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"yanlingkuek"},"content":"        if (!personToEdit.get().isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"yanlingkuek"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"yanlingkuek"},"content":"        model.setPerson(personToEdit.get(), editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"yanlingkuek"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"yanlingkuek"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"yanlingkuek"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"yanlingkuek"},"content":"     * edited with {@code editPersonPersonDescriptor}.","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"yanlingkuek"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonPersonDescriptor editPersonPersonDescriptor)","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"yanlingkuek"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"yanlingkuek"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"yanlingkuek"},"content":"        PersonType originalType \u003d personToEdit.getPersonType();","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"yanlingkuek"},"content":"        PersonId originalId \u003d personToEdit.getPersonId();","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"yanlingkuek"},"content":"        Name updatedName \u003d editPersonPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"yanlingkuek"},"content":"        Phone updatedPhone \u003d editPersonPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"yanlingkuek"},"content":"        Email updatedEmail \u003d editPersonPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"yanlingkuek"},"content":"        Address updatedAddress \u003d editPersonPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"yanlingkuek"},"content":"        List\u003cSessionId\u003e originalSessions \u003d personToEdit.getSessions();","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"yanlingkuek"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"yanlingkuek"},"content":"        if (originalType.equals(new PersonType(\"student\"))) {","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"yanlingkuek"},"content":"            return new Student(originalId, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"yanlingkuek"},"content":"                    originalSessions);","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"yanlingkuek"},"content":"        } else if (originalType.equals(new PersonType(\"tutor\"))) {","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"yanlingkuek"},"content":"            return new Tutor(originalId, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"yanlingkuek"},"content":"                    originalSessions);","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"yanlingkuek"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"yanlingkuek"},"content":"            throw new CommandException(\"Person\u0027s original type should be student or tutor\");","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"yanlingkuek"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"yanlingkuek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"yanlingkuek"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"yanlingkuek"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"yanlingkuek"},"content":"            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"yanlingkuek"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"yanlingkuek"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"yanlingkuek"},"content":"            return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"yanlingkuek"},"content":"        // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"yanlingkuek"},"content":"        return personId.equals(e.personId)","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"yanlingkuek"},"content":"                \u0026\u0026 editPersonPersonDescriptor.equals(e.editPersonPersonDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"yanlingkuek"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"yanlingkuek"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"yanlingkuek"},"content":"    public static class EditPersonPersonDescriptor {","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"yanlingkuek"},"content":"        private Name name;","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"yanlingkuek"},"content":"        private Phone phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"yanlingkuek"},"content":"        private Email email;","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"yanlingkuek"},"content":"        private Address address;","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"yanlingkuek"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"yanlingkuek"},"content":"        private PersonType personType;","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"yanlingkuek"},"content":"        private PersonId personId;","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"yanlingkuek"},"content":"        private List\u003cSessionId\u003e sessions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"yanlingkuek"},"content":"        public EditPersonPersonDescriptor() {}","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"yanlingkuek"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"yanlingkuek"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"yanlingkuek"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"yanlingkuek"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"yanlingkuek"},"content":"        public EditPersonPersonDescriptor(EditPersonPersonDescriptor toCopy) {","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"yanlingkuek"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"yanlingkuek"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"yanlingkuek"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"yanlingkuek"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"yanlingkuek"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"yanlingkuek"},"content":"            setPersonType(toCopy.personType);","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"yanlingkuek"},"content":"            setPersonId(toCopy.personId);","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"yanlingkuek"},"content":"            setSessions(toCopy.sessions);","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"yanlingkuek"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"yanlingkuek"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"yanlingkuek"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"yanlingkuek"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"yanlingkuek"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"yanlingkuek"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"yanlingkuek"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"yanlingkuek"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"yanlingkuek"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"yanlingkuek"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"yanlingkuek"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"yanlingkuek"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"yanlingkuek"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"yanlingkuek"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"yanlingkuek"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"yanlingkuek"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"yanlingkuek"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"yanlingkuek"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"yanlingkuek"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"yanlingkuek"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"yanlingkuek"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"yanlingkuek"},"content":"        public Optional\u003cPersonType\u003e getPersonType() {","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"yanlingkuek"},"content":"            return Optional.ofNullable(personType);","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"yanlingkuek"},"content":"        public void setPersonType(PersonType personType) {","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"yanlingkuek"},"content":"            this.personType \u003d personType;","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"yanlingkuek"},"content":"        public Optional\u003cPersonId\u003e getPersonId() {","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"yanlingkuek"},"content":"            return Optional.ofNullable(personId);","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"yanlingkuek"},"content":"        public void setPersonId(PersonId personId) {","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"yanlingkuek"},"content":"            this.personId \u003d personId;","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"yanlingkuek"},"content":"        public Optional\u003cList\u003cSessionId\u003e\u003e getSessions() {","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"yanlingkuek"},"content":"            return Optional.ofNullable(sessions);","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"yanlingkuek"},"content":"        public void setSessions(List\u003cSessionId\u003e sessions) {","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"yanlingkuek"},"content":"            this.sessions.addAll(sessions);","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"yanlingkuek"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"yanlingkuek"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-28"},{"lineNumber":241,"author":{"gitId":"yanlingkuek"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-28"},{"lineNumber":242,"author":{"gitId":"yanlingkuek"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":243,"author":{"gitId":"yanlingkuek"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"yanlingkuek"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-28"},{"lineNumber":245,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":246,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":247,"author":{"gitId":"yanlingkuek"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":248,"author":{"gitId":"yanlingkuek"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-28"},{"lineNumber":249,"author":{"gitId":"yanlingkuek"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-28"},{"lineNumber":250,"author":{"gitId":"yanlingkuek"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-28"},{"lineNumber":251,"author":{"gitId":"yanlingkuek"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":252,"author":{"gitId":"yanlingkuek"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"yanlingkuek"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-28"},{"lineNumber":254,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"yanlingkuek"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"yanlingkuek"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"yanlingkuek"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"yanlingkuek"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-28"},{"lineNumber":260,"author":{"gitId":"yanlingkuek"},"content":"                return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"yanlingkuek"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":262,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":263,"author":{"gitId":"yanlingkuek"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":264,"author":{"gitId":"yanlingkuek"},"content":"            if (!(other instanceof EditPersonPersonDescriptor)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":265,"author":{"gitId":"yanlingkuek"},"content":"                return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":266,"author":{"gitId":"yanlingkuek"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":267,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":268,"author":{"gitId":"yanlingkuek"},"content":"            // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":269,"author":{"gitId":"yanlingkuek"},"content":"            EditPersonPersonDescriptor e \u003d (EditPersonPersonDescriptor) other;","lastModifiedDate":"2021-03-28"},{"lineNumber":270,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":271,"author":{"gitId":"yanlingkuek"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-28"},{"lineNumber":272,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-03-28"},{"lineNumber":273,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-03-28"},{"lineNumber":274,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-03-28"},{"lineNumber":275,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-28"},{"lineNumber":276,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getPersonType().equals(e.getPersonType())","lastModifiedDate":"2021-03-28"},{"lineNumber":277,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getPersonId().equals(e.getPersonId())","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"yanlingkuek"},"content":"                    \u0026\u0026 getSessions().equals(e.getSessions());","lastModifiedDate":"2021-03-31"},{"lineNumber":279,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":280,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":281,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yanlingkuek":280,"chanellNg":1}},{"path":"src/main/java/seedu/address/logic/commands/EditSessionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SESSIONS;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Day;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Subject;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Timeslot;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"public class EditSessionCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    * Edits the details of an existing person in the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"    */","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"    public static final String COMMAND_WORD \u003d \"edit_session\";","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the session identified \"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"            + \"by the session ID which can be found in the displayed session list.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"            + \"Parameters: c/ID (must be a valid session ID) \"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"            + \"[\" + PREFIX_DAY + \"DAY] \"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"            + \"[\" + PREFIX_SUBJECT + \"SUBJECT] \"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"            + \"[\" + PREFIX_TIMESLOT + \"TIMESLOT] \"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"            + \"Example: \" + COMMAND_WORD + \" c/1 \"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"            + PREFIX_DAY + \"MONDAY \"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"            + PREFIX_SUBJECT + \"Biology\";","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_EDIT_SESSION_SUCCESS \u003d \"Edited Session: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"    private final SessionId sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"    private final EditSessionDescriptor editSessionDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"     * @param sessionId            of the session in the filtered session list to edit","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"     * @param editSessionDescriptor details to edit the session with","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"    public EditSessionCommand(SessionId sessionId, EditSessionDescriptor editSessionDescriptor) {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(sessionId);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(editSessionDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"        this.editSessionDescriptor \u003d new EditSessionDescriptor(editSessionDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"        List\u003cSession\u003e lastShownList \u003d model.getUnfilteredSessionList();","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        Optional\u003cSession\u003e optSessionToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"                .filter(x-\u003e x.getClassId().equals(sessionId)).findAny();","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"        boolean hasDayOrTime \u003d this.editSessionDescriptor.hasDay() || this.editSessionDescriptor.hasTimeslot();","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"        boolean emptySession \u003d emptySession(optSessionToEdit);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"        if ((!emptySession) \u0026\u0026 hasDayOrTime) {","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"            throw new CommandException(Messages.MESSAGE_CANNOT_EDIT);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"        } else if (optSessionToEdit.isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"            Session sessionToEdit \u003d optSessionToEdit.get();","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"            Session editedSession \u003d createEditedSession(sessionToEdit, editSessionDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"            model.setSession(sessionToEdit, editedSession);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"            model.updateFilteredSessionList(PREDICATE_SHOW_ALL_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_SESSION_SUCCESS, editedSession));","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"     * Checks if session to be edited has existing tutor assigned or students assigned.","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"     * Only checks if session day or timeslot is to be edited.","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"    private static boolean emptySession(Optional\u003cSession\u003e sessionToEdit) {","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"        if (!sessionToEdit.isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":"            return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"        } else if (sessionToEdit.get().emptyTutor()","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 sessionToEdit.get().emptyStudentList()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"            return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"            return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"chanellNg"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"chanellNg"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"chanellNg"},"content":"    private static Session createEditedSession(Session sessionToEdit, EditSessionDescriptor editSessionDescriptor) {","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"chanellNg"},"content":"        assert sessionToEdit !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"chanellNg"},"content":"        SessionId sessionId \u003d sessionToEdit.getClassId();","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"chanellNg"},"content":"        Day updatedDay \u003d editSessionDescriptor.getDay().orElse(sessionToEdit.getDay());","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"chanellNg"},"content":"        Subject updatedSubject \u003d editSessionDescriptor.getSubject().orElse(sessionToEdit.getSubject());","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"chanellNg"},"content":"        Timeslot updatedTimeSlot \u003d editSessionDescriptor.getTimeSlot().orElse(sessionToEdit.getTimeslot());","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"chanellNg"},"content":"        Set\u003cTag\u003e updatedTags \u003d editSessionDescriptor.getTags().orElse(sessionToEdit.getTags());","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"chanellNg"},"content":"        Session newSession \u003d new Session(sessionId, updatedDay, updatedTimeSlot, updatedSubject, updatedTags);","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"chanellNg"},"content":"        newSession.setStudents(sessionToEdit.getStudents());","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"chanellNg"},"content":"        newSession.setTutor(sessionToEdit.getTutor());","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":"        return newSession;","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"chanellNg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"chanellNg"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"chanellNg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"chanellNg"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"chanellNg"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"chanellNg"},"content":"        if (!(other instanceof EditSessionCommand)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"chanellNg"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"chanellNg"},"content":"        // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand e \u003d (EditSessionCommand) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"chanellNg"},"content":"        return sessionId.equals(e.sessionId)","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 editSessionDescriptor.equals(e.editSessionDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"chanellNg"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"chanellNg"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"chanellNg"},"content":"    public static class EditSessionDescriptor {","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"chanellNg"},"content":"        private Day day;","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"chanellNg"},"content":"        private Subject subject;","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"chanellNg"},"content":"        private Timeslot timeslot;","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"chanellNg"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"chanellNg"},"content":"        private SessionId sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"chanellNg"},"content":"        public EditSessionDescriptor() {}","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"chanellNg"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"chanellNg"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"chanellNg"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"chanellNg"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"chanellNg"},"content":"        public EditSessionDescriptor(EditSessionDescriptor toCopy) {","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"chanellNg"},"content":"            setDay(toCopy.day);","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"chanellNg"},"content":"            setSubject(toCopy.subject);","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"chanellNg"},"content":"            setTimeSlot(toCopy.timeslot);","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"chanellNg"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"chanellNg"},"content":"            setSessionId(toCopy.sessionId);","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"chanellNg"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"chanellNg"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"chanellNg"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"chanellNg"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"chanellNg"},"content":"            return CollectionUtil.isAnyNonNull(day, subject, timeslot, tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"chanellNg"},"content":"        public void setDay(Day day) {","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"chanellNg"},"content":"            this.day \u003d day;","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"chanellNg"},"content":"        public Optional\u003cDay\u003e getDay() {","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"chanellNg"},"content":"            return Optional.ofNullable(day);","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"chanellNg"},"content":"        public boolean hasDay() {","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"chanellNg"},"content":"            return Optional.ofNullable(day).isPresent();","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"chanellNg"},"content":"        public void setSubject(Subject subject) {","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"chanellNg"},"content":"            this.subject \u003d subject;","lastModifiedDate":"2021-03-23"},{"lineNumber":187,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":189,"author":{"gitId":"chanellNg"},"content":"        public Optional\u003cSubject\u003e getSubject() {","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"chanellNg"},"content":"            return Optional.ofNullable(subject);","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"chanellNg"},"content":"        public void setTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2021-03-23"},{"lineNumber":194,"author":{"gitId":"chanellNg"},"content":"            this.timeslot \u003d timeslot;","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":196,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":197,"author":{"gitId":"chanellNg"},"content":"        public Optional\u003cTimeslot\u003e getTimeSlot() {","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"chanellNg"},"content":"            return Optional.ofNullable(timeslot);","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":201,"author":{"gitId":"chanellNg"},"content":"        public boolean hasTimeslot() {","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"chanellNg"},"content":"            return Optional.ofNullable(timeslot).isPresent();","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":205,"author":{"gitId":"chanellNg"},"content":"        public void setSessionId(SessionId sessionId) {","lastModifiedDate":"2021-03-23"},{"lineNumber":206,"author":{"gitId":"chanellNg"},"content":"            this.sessionId \u003d sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"chanellNg"},"content":"        public Optional\u003cSessionId\u003e getSessionId() {","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"chanellNg"},"content":"            return Optional.ofNullable(sessionId);","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"chanellNg"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"chanellNg"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"chanellNg"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"chanellNg"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"chanellNg"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"chanellNg"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"chanellNg"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"chanellNg"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-23"},{"lineNumber":223,"author":{"gitId":"chanellNg"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"chanellNg"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"chanellNg"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"chanellNg"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-23"},{"lineNumber":227,"author":{"gitId":"chanellNg"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"chanellNg"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"chanellNg"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"chanellNg"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"chanellNg"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"chanellNg"},"content":"                return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"chanellNg"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"chanellNg"},"content":"            if (!(other instanceof EditSessionDescriptor)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"chanellNg"},"content":"                return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":242,"author":{"gitId":"chanellNg"},"content":"            // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"chanellNg"},"content":"            EditSessionDescriptor e \u003d (EditSessionDescriptor) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":244,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"chanellNg"},"content":"            return getDay().equals(e.getDay())","lastModifiedDate":"2021-03-23"},{"lineNumber":246,"author":{"gitId":"chanellNg"},"content":"                    \u0026\u0026 getSubject().equals(e.getSubject())","lastModifiedDate":"2021-03-23"},{"lineNumber":247,"author":{"gitId":"chanellNg"},"content":"                    \u0026\u0026 getTimeSlot().equals(e.getTimeSlot())","lastModifiedDate":"2021-03-23"},{"lineNumber":248,"author":{"gitId":"chanellNg"},"content":"                    \u0026\u0026 getSessionId().equals(e.getSessionId())","lastModifiedDate":"2021-03-23"},{"lineNumber":249,"author":{"gitId":"chanellNg"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-23"},{"lineNumber":250,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":251,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":252,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"chanellNg":252}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.PERSON_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.SESSION_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.STUDENT_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.TUTOR_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"            + \": Lists all persons, students, tutors or sessions.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"            + \"Parameters: persons OR students OR tutors OR sessions \\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"            + \"Example: \" + COMMAND_WORD + \" persons \\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"            + \"Example: \" + COMMAND_WORD + \" tutors\";","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    public static final String MESSAGE_SUCCESS_PERSONS \u003d \"Listed all persons\";","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    public static final String MESSAGE_SUCCESS_SESSIONS \u003d \"Listed all sessions\";","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_SUCCESS_STUDENTS \u003d \"Listed all students\";","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_SUCCESS_TUTORS \u003d \"Listed all tutors\";","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_EMPTY_PERSON_LIST \u003d \"The list of persons is empty!\";","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_EMPTY_SESSION_LIST \u003d \"The list of sessions is empty!\";","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_EMPTY_STUDENT_LIST \u003d \"The list of students is empty!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_EMPTY_TUTOR_LIST \u003d \"The list of tutors is empty!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"    private final Predicate\u003cPerson\u003e personPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"    private final Predicate\u003cSession\u003e sessionPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"    private final String listCommandType;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"     * Creates a ListCommand with a specific list type.","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"     * @param personPredicate updates the filteredPersonList","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"     * @param sessionPredicate updates the filteredSessionList","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"     * @param listCommandType type of list to be shown","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"    public ListCommand(Predicate\u003cPerson\u003e personPredicate, Predicate\u003cSession\u003e sessionPredicate,","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"                       String listCommandType) {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        this.personPredicate \u003d personPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"        this.sessionPredicate \u003d sessionPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"        this.listCommandType \u003d listCommandType;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"        model.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"        model.updateFilteredSessionList(sessionPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"        switch (listCommandType) {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"        case PERSON_TYPE_LIST:","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"            if (model.emptyPersonList()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"                return new CommandResult(MESSAGE_EMPTY_PERSON_LIST);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"                return new CommandResult(MESSAGE_SUCCESS_PERSONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        case STUDENT_TYPE_LIST:","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"            if (model.emptyPersonList()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"                return new CommandResult(MESSAGE_EMPTY_STUDENT_LIST);","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"                return new CommandResult(MESSAGE_SUCCESS_STUDENTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"        case TUTOR_TYPE_LIST:","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"            if (model.emptyPersonList()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"                return new CommandResult(MESSAGE_EMPTY_TUTOR_LIST);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"                return new CommandResult(MESSAGE_SUCCESS_TUTORS);","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"        case SESSION_TYPE_LIST:","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"            if (model.emptySessionList()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"                return new CommandResult(MESSAGE_EMPTY_SESSION_LIST);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"                return new CommandResult(MESSAGE_SUCCESS_SESSIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"        default:","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"            throw new CommandException(MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chanellNg":69,"-":20,"Bennyphoe":6}},{"path":"src/main/java/seedu/address/logic/commands/UnassignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTOR_ID;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"import seedu.address.model.assignment.Unassignment;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"public class UnassignCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    public static final String COMMAND_WORD \u003d \"unassign\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Unassigns student(s) and/or tutor from a class \\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"            + \"Parameters: \" + \"(assign student ONLY, tutor Only or Both) \"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"            + PREFIX_STUDENT_ID + \"StudentId \"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"            + PREFIX_TUTOR_ID + \"TutorId \"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"            + PREFIX_CLASS_ID + \"ClassId \\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"            + PREFIX_STUDENT_ID + \"3 \"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"            + PREFIX_TUTOR_ID + \"2 \"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"            + PREFIX_CLASS_ID + \"1 \";","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Unassigned: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_NOT_ASSIGNED \u003d \"%1$s is not assigned to %2$s. Cannot unassign\";","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_NO_TUTOR \u003d \"Cannot unassign %1$s from %2$s. %2$s currently has no tutor.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_DIFFERENT_TUTOR \u003d \"Cannot unassign %1$s from %2$s. Current tutor is %3$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"    private final Unassignment unassignment;","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"     * Creates an AddSessionCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"    public UnassignCommand(Unassignment unassignment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"        requireNonNull(unassignment);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"        this.unassignment \u003d unassignment;","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"    private boolean isAssignedTo(Person person, Session sessionToCheck) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"        for (SessionId sessionId : person.getSessions()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"            if (sessionId.equals(sessionToCheck.getClassId())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"    private void checkTutorSession(Person tutor, Session session) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"        assert(tutor.isTutor());","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"        if (!session.hasTutor()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"            throw new CommandException(String.format(MESSAGE_NO_TUTOR,","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"                    tutor.getPersonId(), session.getClassId()));","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"car155"},"content":"        if (!session.getTutor().equals(tutor.getPersonId())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"car155"},"content":"            throw new CommandException(String.format(MESSAGE_DIFFERENT_TUTOR,","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"car155"},"content":"                    tutor.getPersonId(), session.getClassId(), session.getTutor()));","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"car155"},"content":"    private Set\u003cPerson\u003e getStudents(Model model, Set\u003cPersonId\u003e studentIds, Session session) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"car155"},"content":"        Set\u003cPerson\u003e studentsToUnassign \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"        List\u003cPerson\u003e lastShownPersonsList \u003d model.getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"car155"},"content":"        for (PersonId studentId : studentIds) {","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"car155"},"content":"            Optional\u003cPerson\u003e studentToAssign \u003d lastShownPersonsList.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"car155"},"content":"                    .filter(x-\u003e x.getPersonId().equals(studentId)).findAny();","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"car155"},"content":"            if (studentToAssign.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"car155"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"car155"},"content":"            Person student \u003d studentToAssign.get();","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"car155"},"content":"            if (!isAssignedTo(student, session)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"car155"},"content":"                throw new CommandException(String.format(MESSAGE_NOT_ASSIGNED, studentId, session.getClassId()));","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"car155"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"car155"},"content":"            studentsToUnassign.add(student);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"car155"},"content":"        return studentsToUnassign;","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"car155"},"content":"    private Person getTutor(Model model, PersonId tutorId, Session session) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"        List\u003cPerson\u003e lastShownPersonsList \u003d model.getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"car155"},"content":"        Optional\u003cPerson\u003e tutorToAssign \u003d lastShownPersonsList.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"car155"},"content":"                .filter(x-\u003e x.getPersonId().equals(tutorId)).findAny();","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"car155"},"content":"        if (tutorToAssign.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"car155"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"car155"},"content":"        Person tutor \u003d tutorToAssign.get();","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"car155"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"car155"},"content":"            checkTutorSession(tutor, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"car155"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"car155"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"car155"},"content":"        return tutor;","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"car155"},"content":"    private void unassignStudents(Set\u003cPerson\u003e students, Session session) {","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"car155"},"content":"        for (Person student : students) {","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"car155"},"content":"            assert(student.isStudent());","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"car155"},"content":"            student.removeSession(session.getClassId());","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"car155"},"content":"            session.unassignStudent(student.getPersonId());","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"car155"},"content":"    private void unassignTutor(Person tutor, Session session) {","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"car155"},"content":"        assert(tutor.isTutor());","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"car155"},"content":"        tutor.removeSession(session.getClassId());","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"car155"},"content":"        session.unassignTutor();","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"car155"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"car155"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"car155"},"content":"        Set\u003cPersonId\u003e studentIds \u003d this.unassignment.getStudentIds();","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"car155"},"content":"        PersonId tutorId \u003d this.unassignment.getTutorId();","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"car155"},"content":"        SessionId sessionId \u003d this.unassignment.getSessionId();","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"chanellNg"},"content":"        List\u003cSession\u003e lastShownSessionsList \u003d model.getUnfilteredSessionList();","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"car155"},"content":"        Optional\u003cSession\u003e sessionToAssign \u003d lastShownSessionsList.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"car155"},"content":"                .filter(x-\u003e x.getClassId().equals(sessionId)).findAny();","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"car155"},"content":"        if (sessionToAssign.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"car155"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"car155"},"content":"        Session session \u003d sessionToAssign.get();","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"car155"},"content":"        Set\u003cPerson\u003e students \u003d getStudents(model, studentIds, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"car155"},"content":"        if (tutorId !\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"car155"},"content":"            Person tutor \u003d getTutor(model, tutorId, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"car155"},"content":"            unassignTutor(tutor, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"car155"},"content":"        unassignStudents(students, session);","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"car155"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, unassignment));","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"car155"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"car155"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"car155"},"content":"                || (other instanceof UnassignCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"car155"},"content":"                \u0026\u0026 unassignment.equals(((UnassignCommand) other).unassignment));","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"car155":147,"chanellNg":3}},{"path":"src/main/java/seedu/address/logic/commands/ViewPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.model.person.PersonIdPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionStudentPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"public class ViewPersonCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"    public static final String COMMAND_WORD \u003d \"view_person\";","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"            + \": View a specific person by personID.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"            + \"Parameters: PERSON_ID\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"            + \"Example: \" + COMMAND_WORD + \" s/1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displayed the relevant person.\\n\"","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"                                                + \"Left Panel shows the student/tutor information.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"                                                + \"Right Panel shows all the sessions the student/tutor currently has.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    private final PersonIdPredicate predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"    public ViewPersonCommand(PersonIdPredicate predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"        Optional\u003cPerson\u003e personToView \u003d lastShownList.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"                .filter(x-\u003e x.getPersonId().equals(predicate.getPersonId())).findAny();","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"        if (personToView.isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"            List\u003cSessionId\u003e sessionList \u003d personToView.get().getSessions();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"            SessionStudentPredicate sessionStudentPredicate \u003d new SessionStudentPredicate(sessionList);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"jingxueguo"},"content":"            model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"            model.updateFilteredSessionList(sessionStudentPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"jingxueguo"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"jingxueguo"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"jingxueguo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"jingxueguo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"jingxueguo"},"content":"                || (other instanceof ViewPersonCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"jingxueguo"},"content":"                \u0026\u0026 predicate.equals(((ViewPersonCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"jingxueguo"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"jingxueguo":32,"chanellNg":26}},{"path":"src/main/java/seedu/address/logic/commands/ViewSessionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.person.StudentSessionPredicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionIdPredicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"public class ViewSessionCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    public static final String COMMAND_WORD \u003d \"view_session\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"            + \": View individual session with the given session ID.\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"            + \"Parameters: SESSION ID\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"            + \"Example: \" + COMMAND_WORD + \" c/ID\";","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displayed the relevant session.\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"                                                + \"Left Panel shows the session information.\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"                                                + \"Right Panel shows all the students in the session.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    private final SessionIdPredicate sessionPredicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"    public ViewSessionCommand(SessionIdPredicate sessionPredicate) {","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        this.sessionPredicate \u003d sessionPredicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"        model.updateFilteredSessionList(sessionPredicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"        List\u003cSession\u003e lastShownList \u003d model.getUnfilteredSessionList();","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"        Optional\u003cSession\u003e sessionToView \u003d lastShownList.stream()","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"                .filter(x-\u003e x.getClassId().equals(sessionPredicate.getSessionId())).findAny();","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        if (sessionToView.isPresent()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"            List\u003cPersonId\u003e studentList \u003d sessionToView.get().getStudents();","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"            StudentSessionPredicate studentSessionPredicate \u003d new StudentSessionPredicate(studentList);","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"            model.updateFilteredPersonList(studentSessionPredicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"                || (other instanceof ViewSessionCommand // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 sessionPredicate.equals(((ViewSessionCommand) other).sessionPredicate)); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"chanellNg":60}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"chanellNg":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_TYPE;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"car155"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PERSON_TYPE, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PERSON_TYPE, PREFIX_NAME,","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"                PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"        PersonType personType \u003d ParserUtil.parsePersonType(argMultimap.getValue(PREFIX_PERSON_TYPE).get());","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"        Person person \u003d returnPersonBasedOnType(personType.toString(), name, phone, email, address, tagList);","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"    private Person returnPersonBasedOnType(String personType, Name name, Phone phone, Email email,","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"                                           Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"        if (personType.equals(\"student\")) {","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"            return new Student(name, phone, email, address, tags);","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"        } else {","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"            return new Tutor(name, phone, email, address, tags);","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"car155":8,"-":47,"Bennyphoe":18}},{"path":"src/main/java/seedu/address/logic/parser/AddSessionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.AddSessionCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Day;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Subject;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Timeslot;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"car155"},"content":" * Parses input arguments and creates a new AddSessionCommand object","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"public class AddSessionCommandParser implements Parser\u003cAddSessionCommand\u003e {","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"     * Parses the given {@code String} of arguments in the context of the AddSessionCommand","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"     * and returns an AddSessionCommand object for execution.","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"    public AddSessionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DAY, PREFIX_TIMESLOT, PREFIX_SUBJECT, PREFIX_TAG);","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DAY, PREFIX_TIMESLOT, PREFIX_SUBJECT)","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSessionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        Day day \u003d ParserUtil.parseDay(argMultimap.getValue(PREFIX_DAY).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        Timeslot timeslot \u003d ParserUtil.parseTimeslot(argMultimap.getValue(PREFIX_TIMESLOT).get());","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        Subject subject \u003d ParserUtil.parseSubject(argMultimap.getValue(PREFIX_SUBJECT).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        Session session \u003d new Session(day, timeslot, subject, tagList);","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"        return new AddSessionCommand(session);","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"car155":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.AddSessionCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.DeleteSessionCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.EditSessionCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.UnassignCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.ViewPersonCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.ViewSessionCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"        case AddSessionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"            return new AddSessionCommandParser().parse(arguments);","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"        case EditSessionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"            return new EditSessionCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"        case DeleteSessionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"            return new DeleteSessionCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"Bennyphoe"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"        case ViewPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"jingxueguo"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"        case ViewSessionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"            return new ViewSessionCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":101,"author":{"gitId":"Bennyphoe"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"Bennyphoe"},"content":"            return new AssignCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":104,"author":{"gitId":"car155"},"content":"        case UnassignCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"car155"},"content":"            return new UnassignCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jingxueguo":1,"car155":11,"chanellNg":14,"yanlingkuek":8,"-":75,"Bennyphoe":3}},{"path":"src/main/java/seedu/address/logic/parser/AssignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTOR_ID;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"car155"},"content":" * Parses input arguments and creates a new AssignCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"public class AssignCommandParser implements Parser\u003cAssignCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    public AssignCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_ID, PREFIX_TUTOR_ID,","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"                PREFIX_CLASS_ID);","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"        //No class given","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        if (!argMultimap.getValue(PREFIX_CLASS_ID).isPresent() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        //No people given","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        if (!argMultimap.getValue(PREFIX_STUDENT_ID).isPresent()","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_TUTOR_ID).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        SessionId sessionId \u003d ParserUtil.parseSessionId(PREFIX_CLASS_ID + argMultimap.getValue(PREFIX_CLASS_ID).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        Set\u003cPersonId\u003e studentIds \u003d ParserUtil.parseStudentIds(argMultimap.getAllValues(PREFIX_STUDENT_ID));","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        PersonId tutorId \u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"        if (argMultimap.getValue(PREFIX_TUTOR_ID).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"            tutorId \u003d ParserUtil.parseTutorId(argMultimap.getValue(PREFIX_TUTOR_ID).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        Assignment assignment \u003d new Assignment(studentIds, tutorId, sessionId);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        return new AssignCommand(assignment);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"car155":20,"Bennyphoe":27}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    public static final Prefix PREFIX_PERSON_TYPE \u003d new Prefix(\"pt/\");","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"    public static final Prefix PREFIX_SESSION_ID \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"    public static final Prefix PREFIX_PERSON_ID_STUDENT \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"    public static final Prefix PREFIX_PERSON_ID_TUTOR \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    public static final Prefix PREFIX_DAY \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-04"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    public static final Prefix PREFIX_TIMESLOT \u003d new Prefix(\"ts/\");","lastModifiedDate":"2021-03-04"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    public static final Prefix PREFIX_SUBJECT \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-04"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    public static final Prefix PREFIX_STUDENT_ID \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"    public static final Prefix PREFIX_TUTOR_ID \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    public static final Prefix PREFIX_CLASS_ID \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"car155":3,"chanellNg":1,"yanlingkuek":3,"-":13,"Bennyphoe":4}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chanellNg":3,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanlingkuek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"            PersonId personId \u003d ParserUtil.parsePersonId(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"            return new DeletePersonCommand(personId);","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"yanlingkuek":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteSessionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.DeleteSessionCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"public class DeleteSessionCommandParser implements Parser\u003cDeleteSessionCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteSessionCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"     * and returns a DeleteSessionCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    public DeleteSessionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"            SessionId targetClassId \u003d ParserUtil.parseSessionId(args);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"            return new DeleteSessionCommand(targetClassId);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteSessionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"chanellNg":26}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yanlingkuek":1,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanlingkuek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"        PersonId personId;","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"            personId \u003d ParserUtil.parsePersonId(argMultimap.getPreamble());","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"                    EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor editPersonPersonDescriptor \u003d new EditPersonPersonDescriptor();","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"            editPersonPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"            editPersonPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"            editPersonPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"            editPersonPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonPersonDescriptor::setTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"        if (!editPersonPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yanlingkuek"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"        return new EditPersonCommand(personId, editPersonPersonDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yanlingkuek"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"yanlingkuek"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"yanlingkuek"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yanlingkuek":83}},{"path":"src/main/java/seedu/address/logic/parser/EditSessionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.EditSessionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":" * Parses input arguments and creates a new EditSessionCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"public class EditSessionCommandParser implements Parser\u003cEditSessionCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"     * Parses the given {@code String} of arguments in the context of the EditSessionCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"     * and returns an EditSessionCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"    public EditSessionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DAY, PREFIX_TIMESLOT, PREFIX_SUBJECT, PREFIX_TAG);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        SessionId sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"            sessionId \u003d ParserUtil.parseSessionId(argMultimap.getPreamble());","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"                    EditSessionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand.EditSessionDescriptor editSessionDescriptor \u003d new EditSessionCommand.EditSessionDescriptor();","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"        if (argMultimap.getValue(PREFIX_DAY).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"            editSessionDescriptor.setDay(ParserUtil.parseDay(argMultimap.getValue(PREFIX_DAY).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"        if (argMultimap.getValue(PREFIX_TIMESLOT).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"            editSessionDescriptor.setTimeSlot(ParserUtil.parseTimeslot(argMultimap.getValue(PREFIX_TIMESLOT).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"        if (argMultimap.getValue(PREFIX_SUBJECT).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"            editSessionDescriptor.setSubject(ParserUtil.parseSubject(argMultimap.getValue(PREFIX_SUBJECT).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editSessionDescriptor::setTags);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"        if (!editSessionDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"            throw new ParseException(EditSessionCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"        return new EditSessionCommand(sessionId, editSessionDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"chanellNg":81}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.PERSON_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.SESSION_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.STUDENT_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.TUTOR_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SESSIONS;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TUTORS;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"        String listType \u003d ParserUtil.parseListType(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        switch(listType) {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"        case PERSON_TYPE_LIST:","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"            return new ListCommand(PREDICATE_SHOW_ALL_PERSONS, PREDICATE_SHOW_ALL_SESSIONS, \"persons\");","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"        case STUDENT_TYPE_LIST:","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"            return new ListCommand(PREDICATE_SHOW_ALL_STUDENTS, PREDICATE_SHOW_ALL_SESSIONS, \"students\");","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        case TUTOR_TYPE_LIST:","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"            return new ListCommand(PREDICATE_SHOW_ALL_TUTORS, PREDICATE_SHOW_ALL_SESSIONS, \"tutors\");","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        case SESSION_TYPE_LIST:","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"            return new ListCommand(PREDICATE_SHOW_ALL_PERSONS, PREDICATE_SHOW_ALL_SESSIONS, \"sessions\");","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"        default:","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"chanellNg":31,"Bennyphoe":12}},{"path":"src/main/java/seedu/address/logic/parser/ListType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"public class ListType {","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"    public static final String PERSON_TYPE_LIST \u003d \"persons\";","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"    public static final String SESSION_TYPE_LIST \u003d \"sessions\";","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"    public static final String STUDENT_TYPE_LIST \u003d \"students\";","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"    public static final String TUTOR_TYPE_LIST \u003d \"tutors\";","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chanellNg":8}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTOR_ID;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.PERSON_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.SESSION_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.STUDENT_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.ListType.TUTOR_TYPE_LIST;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Day;","lastModifiedDate":"2021-03-04"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Subject;","lastModifiedDate":"2021-03-04"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Timeslot;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-04"},{"lineNumber":114,"author":{"gitId":"car155"},"content":"     * Parses a {@code String day} into an {@code Day}.","lastModifiedDate":"2021-03-04"},{"lineNumber":115,"author":{"gitId":"car155"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-04"},{"lineNumber":116,"author":{"gitId":"car155"},"content":"     *","lastModifiedDate":"2021-03-04"},{"lineNumber":117,"author":{"gitId":"car155"},"content":"     * @throws ParseException if the given {@code day} is invalid.","lastModifiedDate":"2021-03-04"},{"lineNumber":118,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-04"},{"lineNumber":119,"author":{"gitId":"car155"},"content":"    public static Day parseDay(String day) throws ParseException {","lastModifiedDate":"2021-03-04"},{"lineNumber":120,"author":{"gitId":"car155"},"content":"        requireNonNull(day);","lastModifiedDate":"2021-03-04"},{"lineNumber":121,"author":{"gitId":"car155"},"content":"        String trimmedDay \u003d day.trim();","lastModifiedDate":"2021-03-04"},{"lineNumber":122,"author":{"gitId":"car155"},"content":"        if (!Day.isValidDay(trimmedDay)) {","lastModifiedDate":"2021-03-04"},{"lineNumber":123,"author":{"gitId":"car155"},"content":"            throw new ParseException(Day.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-04"},{"lineNumber":124,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-04"},{"lineNumber":125,"author":{"gitId":"car155"},"content":"        return new Day(trimmedDay);","lastModifiedDate":"2021-03-04"},{"lineNumber":126,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":127,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":128,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-04"},{"lineNumber":129,"author":{"gitId":"car155"},"content":"     * Parses a {@code String subject} into an {@code Subject}.","lastModifiedDate":"2021-03-04"},{"lineNumber":130,"author":{"gitId":"car155"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-04"},{"lineNumber":131,"author":{"gitId":"car155"},"content":"     *","lastModifiedDate":"2021-03-04"},{"lineNumber":132,"author":{"gitId":"car155"},"content":"     * @throws ParseException if the given {@code subject} is invalid.","lastModifiedDate":"2021-03-04"},{"lineNumber":133,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-04"},{"lineNumber":134,"author":{"gitId":"car155"},"content":"    public static Subject parseSubject(String subject) throws ParseException {","lastModifiedDate":"2021-03-04"},{"lineNumber":135,"author":{"gitId":"car155"},"content":"        requireNonNull(subject);","lastModifiedDate":"2021-03-04"},{"lineNumber":136,"author":{"gitId":"car155"},"content":"        String trimmedSubject \u003d subject.trim();","lastModifiedDate":"2021-03-04"},{"lineNumber":137,"author":{"gitId":"car155"},"content":"        if (!Subject.isValidSubject(trimmedSubject)) {","lastModifiedDate":"2021-03-04"},{"lineNumber":138,"author":{"gitId":"car155"},"content":"            throw new ParseException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-04"},{"lineNumber":139,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-04"},{"lineNumber":140,"author":{"gitId":"car155"},"content":"        return new Subject(trimmedSubject);","lastModifiedDate":"2021-03-04"},{"lineNumber":141,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":142,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":143,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":144,"author":{"gitId":"car155"},"content":"     * Parses a {@code String time} into an {@code LocalTime}.","lastModifiedDate":"2021-03-05"},{"lineNumber":145,"author":{"gitId":"car155"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-05"},{"lineNumber":146,"author":{"gitId":"car155"},"content":"     *","lastModifiedDate":"2021-03-05"},{"lineNumber":147,"author":{"gitId":"car155"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2021-03-05"},{"lineNumber":148,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":149,"author":{"gitId":"car155"},"content":"    public static Timeslot parseTimeslot(String timeslot) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":150,"author":{"gitId":"car155"},"content":"        requireNonNull(timeslot);","lastModifiedDate":"2021-03-06"},{"lineNumber":151,"author":{"gitId":"car155"},"content":"        String trimmedTimeslot \u003d timeslot.trim();","lastModifiedDate":"2021-03-06"},{"lineNumber":152,"author":{"gitId":"car155"},"content":"        if (!Timeslot.isValidTimeslot(trimmedTimeslot)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":153,"author":{"gitId":"car155"},"content":"            throw new ParseException(Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":154,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":155,"author":{"gitId":"car155"},"content":"        return new Timeslot(timeslot);","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":157,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":174,"author":{"gitId":"Bennyphoe"},"content":"     Parses a {@code String type} into a {@code PersonType}.","lastModifiedDate":"2021-03-01"},{"lineNumber":175,"author":{"gitId":"Bennyphoe"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-01"},{"lineNumber":176,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":177,"author":{"gitId":"Bennyphoe"},"content":"     * @throws ParseException if the given {@code type} is invalid.","lastModifiedDate":"2021-03-01"},{"lineNumber":178,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":179,"author":{"gitId":"Bennyphoe"},"content":"    public static PersonType parsePersonType(String type) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":180,"author":{"gitId":"Bennyphoe"},"content":"        requireNonNull(type);","lastModifiedDate":"2021-03-01"},{"lineNumber":181,"author":{"gitId":"Bennyphoe"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2021-03-01"},{"lineNumber":182,"author":{"gitId":"Bennyphoe"},"content":"        if (!PersonType.isValidPersonType(type)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":183,"author":{"gitId":"Bennyphoe"},"content":"            throw new ParseException(PersonType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":184,"author":{"gitId":"Bennyphoe"},"content":"        } else {","lastModifiedDate":"2021-03-01"},{"lineNumber":185,"author":{"gitId":"Bennyphoe"},"content":"            return new PersonType(type);","lastModifiedDate":"2021-03-01"},{"lineNumber":186,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":187,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":188,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":189,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"yanlingkuek"},"content":"     Parses a {@code String id} into a {@code PersonId}.","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"yanlingkuek"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"yanlingkuek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"yanlingkuek"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"yanlingkuek"},"content":"    public static PersonId parsePersonId(String id) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"yanlingkuek"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"yanlingkuek"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"yanlingkuek"},"content":"        if (!PersonId.isValidPersonId(trimmedId)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"Bennyphoe"},"content":"            throw new ParseException(PersonId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"yanlingkuek"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"yanlingkuek"},"content":"            return new PersonId(trimmedId);","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":216,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":217,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":218,"author":{"gitId":"chanellNg"},"content":"     * Parses a {@code String session ID} into a {@code session ID }.","lastModifiedDate":"2021-03-15"},{"lineNumber":219,"author":{"gitId":"chanellNg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":220,"author":{"gitId":"chanellNg"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":221,"author":{"gitId":"car155"},"content":"     * @throws ParseException if the given {@code session ID} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":223,"author":{"gitId":"chanellNg"},"content":"    public static SessionId parseSessionId(String sessionId) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":224,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(sessionId);","lastModifiedDate":"2021-03-15"},{"lineNumber":225,"author":{"gitId":"chanellNg"},"content":"        String trimmedSessionId \u003d sessionId.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":226,"author":{"gitId":"chanellNg"},"content":"        if (!SessionId.isValidSessionId(trimmedSessionId)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"chanellNg"},"content":"            throw new ParseException(Session.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":228,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":229,"author":{"gitId":"chanellNg"},"content":"        return new SessionId(trimmedSessionId);","lastModifiedDate":"2021-03-15"},{"lineNumber":230,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":231,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"chanellNg"},"content":"     * Parses a {@code String list type}","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"chanellNg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"chanellNg"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"chanellNg"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"chanellNg"},"content":"    public static String parseListType(String listType) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(listType);","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"chanellNg"},"content":"        String trimmedListType \u003d listType.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"chanellNg"},"content":"        if (trimmedListType.equals(PERSON_TYPE_LIST) || trimmedListType.equals(SESSION_TYPE_LIST)","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"chanellNg"},"content":"                || trimmedListType.equals(STUDENT_TYPE_LIST) || trimmedListType.equals(TUTOR_TYPE_LIST)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"chanellNg"},"content":"            return trimmedListType;","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"chanellNg"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"yanlingkuek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"car155"},"content":"     * Parses a {@code Collection\u003cString\u003e person IDs} into a {@code List\u003cPersonId\u003e }.","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"car155"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"car155"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"car155"},"content":"     * @throws ParseException if the given {@code person IDs} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"car155"},"content":"    public static Set\u003cPersonId\u003e parseStudentIds(Collection\u003cString\u003e studentIds) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"car155"},"content":"        requireNonNull(studentIds);","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"car155"},"content":"        final Set\u003cPersonId\u003e studentIdsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"car155"},"content":"        for (String studentId : studentIds) {","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"car155"},"content":"            studentIdsSet.add(parsePersonId(PREFIX_STUDENT_ID + studentId));","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"car155"},"content":"        return studentIdsSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":265,"author":{"gitId":"car155"},"content":"     * Parses a {@code String tutor ID} into a {@code person ID }.","lastModifiedDate":"2021-03-29"},{"lineNumber":266,"author":{"gitId":"car155"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":267,"author":{"gitId":"car155"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"car155"},"content":"     * @throws ParseException if the given {@code tutor ID} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":269,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"car155"},"content":"    public static PersonId parseTutorId(String tutorId) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":271,"author":{"gitId":"car155"},"content":"        requireNonNull(tutorId);","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"car155"},"content":"        String trimmedTutorId \u003d tutorId.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"car155"},"content":"        return parsePersonId(PREFIX_TUTOR_ID + tutorId);","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"car155":73,"yanlingkuek":18,"chanellNg":42,"-":124,"Bennyphoe":18}},{"path":"src/main/java/seedu/address/logic/parser/UnassignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTOR_ID;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.UnassignCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"import seedu.address.model.assignment.Unassignment;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"car155"},"content":" * Parses input arguments and creates a new AssignCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"public class UnassignCommandParser implements Parser\u003cUnassignCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    public UnassignCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_ID, PREFIX_TUTOR_ID,","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"                PREFIX_CLASS_ID);","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"        //No class given","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        if (!argMultimap.getValue(PREFIX_CLASS_ID).isPresent() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnassignCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        //No people given","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        if (!argMultimap.getValue(PREFIX_STUDENT_ID).isPresent()","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_TUTOR_ID).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnassignCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        SessionId sessionId \u003d ParserUtil.parseSessionId(PREFIX_CLASS_ID + argMultimap.getValue(PREFIX_CLASS_ID).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        Set\u003cPersonId\u003e studentIds \u003d ParserUtil.parseStudentIds(argMultimap.getAllValues(PREFIX_STUDENT_ID));","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        PersonId tutorId \u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        if (argMultimap.getValue(PREFIX_TUTOR_ID).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"            tutorId \u003d ParserUtil.parseTutorId(argMultimap.getValue(PREFIX_TUTOR_ID).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        Unassignment unassignment \u003d new Unassignment(studentIds, tutorId, sessionId);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        return new UnassignCommand(unassignment);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"car155":47}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.logic.commands.ViewPersonCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.model.person.PersonIdPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"public class ViewCommandParser implements Parser\u003cViewPersonCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"    public ViewPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"        String trimmedArgs \u003d args.trim().toLowerCase();","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"        if (PersonId.isValidPersonId(trimmedArgs)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"            return new ViewPersonCommand(new PersonIdPredicate(new PersonId(trimmedArgs)));","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"jingxueguo"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"jingxueguo":35,"chanellNg":1}},{"path":"src/main/java/seedu/address/logic/parser/ViewSessionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.ViewSessionCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionIdPredicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":" * Parses the given {@code String} of arguments in the context of the ViewSessionCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":" * and returns a ViewSessionCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":" * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"public class ViewSessionCommandParser implements Parser\u003cViewSessionCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"     * Parses input arguments and creates a new ViewSessionCommand object","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    public ViewSessionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"            SessionId targetClassId \u003d ParserUtil.parseSessionId(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"            return new ViewSessionCommand(new SessionIdPredicate(targetClassId));","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewSessionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"chanellNg":31}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.SessionList;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    private SessionList sessions;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    public AddressBook() {","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        sessions \u003d new SessionList();","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"        setSessions(newData.getSessions());","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"Bennyphoe"},"content":"     * gets the person of specified Id and returns the person","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"Bennyphoe"},"content":"     * @param personId","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"Bennyphoe"},"content":"     * @return","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"Bennyphoe"},"content":"    public Person getPerson(PersonId personId) {","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"Bennyphoe"},"content":"        for (Iterator\u003cPerson\u003e it \u003d persons.getInternalList().iterator(); it.hasNext();) {","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"Bennyphoe"},"content":"            Person person \u003d it.next();","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"Bennyphoe"},"content":"            if (person.getPersonId().getPersonId().equals(personId.getPersonId())) {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"Bennyphoe"},"content":"                return person;","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"Bennyphoe"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"Bennyphoe"},"content":"        return null;","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"     * gets the session of specified sessionId and returns the session","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"     * @param sessionId","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"     * @return","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"Bennyphoe"},"content":"    public Session getSession(SessionId sessionId) {","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"Bennyphoe"},"content":"        for (Iterator\u003cSession\u003e it \u003d sessions.getInternalList().iterator(); it.hasNext();) {","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"Bennyphoe"},"content":"            Session session \u003d it.next();","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"Bennyphoe"},"content":"            if (session.getClassId().equals(sessionId)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"Bennyphoe"},"content":"                return session;","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"Bennyphoe"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"Bennyphoe"},"content":"        return null;","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":148,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"chanellNg"},"content":"     * Returns true if a session with the same identity as {@code session} exists in the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"chanellNg"},"content":"    public boolean hasSession(Session session) {","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(session);","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"chanellNg"},"content":"        return sessions.contains(session);","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"car155"},"content":"     * Adds a session to the address book.","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"car155"},"content":"     * The session must not already exist in the address book.","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":160,"author":{"gitId":"car155"},"content":"    public void addSession(Session s) {","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"car155"},"content":"        sessions.add(s);","lastModifiedDate":"2021-03-07"},{"lineNumber":162,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":164,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"chanellNg"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"chanellNg"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"chanellNg"},"content":"    public void removeSession(Session key) {","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"chanellNg"},"content":"        sessions.remove(key);","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"chanellNg"},"content":"     * Replaces the given session {@code target} in the list with {@code editedSession}.","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"chanellNg"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"chanellNg"},"content":"    public void setSession(Session target, Session editedSession) {","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(editedSession);","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"chanellNg"},"content":"        sessions.setSession(target, editedSession);","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":183,"author":{"gitId":"car155"},"content":"    public ObservableList\u003cSession\u003e getSessionList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":184,"author":{"gitId":"car155"},"content":"        return sessions.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-07"},{"lineNumber":185,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":186,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"Bennyphoe"},"content":"    public SessionList getSessions() {","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"Bennyphoe"},"content":"        return sessions;","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"Bennyphoe"},"content":"    public void setSessions(SessionList sessions) {","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"Bennyphoe"},"content":"        this.sessions \u003d sessions;","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"car155":18,"chanellNg":26,"-":119,"Bennyphoe":42}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.person.PersonTypePredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"    Predicate\u003cSession\u003e PREDICATE_SHOW_ALL_SESSIONS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    /** {@code Predicate} that evaluate to true when person type is student */","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d new PersonTypePredicate(new PersonType(\"student\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    /** {@code Predicate} that evaluate to true when person type is tutor*/","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_TUTORS \u003d new PersonTypePredicate(new PersonType(\"tutor\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"car155"},"content":"    void addSession(Session session);","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"     * Deletes the given session.","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"     * The session must exist in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":"    void deleteSession(Session session);","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"chanellNg"},"content":"     * Replaces the given session {@code target} with {@code editedSession}.","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"chanellNg"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"chanellNg"},"content":"    void setSession(Session target, Session editedSession);","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"chanellNg"},"content":"     * Returns an unmodifiable view of the list of {@code Session} backed by the internal list of","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"chanellNg"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"chanellNg"},"content":"    public ObservableList\u003cSession\u003e getFilteredSessionList();","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"chanellNg"},"content":"    public void updateFilteredSessionList(Predicate\u003cSession\u003e predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":"    public boolean emptyPersonList();","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"chanellNg"},"content":"    public boolean emptySessionList();","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"chanellNg"},"content":"    public ObservableList\u003cSession\u003e getUnfilteredSessionList();","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"chanellNg"},"content":"    public ObservableList\u003cPerson\u003e getUnfilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"car155":3,"chanellNg":32,"-":87,"Bennyphoe":3}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    private final FilteredList\u003cSession\u003e filteredSessions;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"    private final FilteredList\u003cPerson\u003e unfilteredPersons;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    private final FilteredList\u003cSession\u003e unfilteredSessions;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        filteredSessions \u003d new FilteredList\u003c\u003e(this.addressBook.getSessionList());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        unfilteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        unfilteredSessions \u003d new FilteredList\u003c\u003e(this.addressBook.getSessionList());","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"car155"},"content":"    public void addSession(Session session) {","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"car155"},"content":"        requireNonNull(session);","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"car155"},"content":"        addressBook.addSession(session);","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":128,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"chanellNg"},"content":"    public void deleteSession(Session target) {","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"chanellNg"},"content":"        addressBook.removeSession(target);","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"chanellNg"},"content":"    public void setSession(Session target, Session editedSession) {","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"chanellNg"},"content":"        requireAllNonNull(target, editedSession);","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"chanellNg"},"content":"        addressBook.setSession(target, editedSession);","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"car155"},"content":"    public void assignStudent(Person student, Session session) {","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"car155"},"content":"        assert(student.isStudent());","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"chanellNg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Session List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"chanellNg"},"content":"     * Returns an unmodifiable view of the list of {@code Session} backed by the internal list of","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"chanellNg"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"chanellNg"},"content":"    public ObservableList\u003cSession\u003e getFilteredSessionList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"chanellNg"},"content":"        return filteredSessions;","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"chanellNg"},"content":"    public ObservableList\u003cSession\u003e getUnfilteredSessionList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"chanellNg"},"content":"        return unfilteredSessions;","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"chanellNg"},"content":"    public void updateFilteredSessionList(Predicate\u003cSession\u003e predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"chanellNg"},"content":"        filteredSessions.setPredicate(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"chanellNg"},"content":"    public boolean emptySessionList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"chanellNg"},"content":"        return filteredSessions.size() \u003d\u003d 0;","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":182,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"chanellNg"},"content":"    public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"chanellNg"},"content":"        return unfilteredPersons;","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":194,"author":{"gitId":"chanellNg"},"content":"    public boolean emptyPersonList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"chanellNg"},"content":"        return filteredPersons.size() \u003d\u003d 0;","lastModifiedDate":"2021-03-23"},{"lineNumber":196,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":197,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"car155":9,"chanellNg":50,"-":151,"Bennyphoe":7}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.SessionList;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"     * Returns an unmodifiable view of the sessions list.","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    ObservableList\u003cSession\u003e getSessionList();","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    void setSessions(SessionList sessions);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    SessionList getSessions();","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"car155":5,"-":17,"Bennyphoe":3}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"    private Path sessionFilePath \u003d Paths.get(\"data\", \"session.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"    public Path getSessionFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"        return sessionFilePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"    public void setSessionFilePath(Path sessionFilePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"        this.sessionFilePath \u003d sessionFilePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":87,"Bennyphoe":9}},{"path":"src/main/java/seedu/address/model/assignment/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"car155"},"content":" * Represents an Assignment of a person to a class.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"public class Assignment {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    private Set\u003cPersonId\u003e studentIds;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"    private PersonId tutorId;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"    private SessionId sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"     * Public Constructor for An Assignment between student/tutors and sessions","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"     * @param studentIds","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"     * @param tutorId","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"     * @param sessionId","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    public Assignment(Set\u003cPersonId\u003e studentIds, PersonId tutorId, SessionId sessionId) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"        requireAllNonNull(sessionId);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        this.studentIds \u003d studentIds;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"        this.tutorId \u003d tutorId;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"    public Set\u003cPersonId\u003e getStudentIds() {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        return studentIds;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"    public PersonId getTutorId() {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"        return tutorId;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"    public SessionId getSessionId() {","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"        return sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"    public String toString() {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        builder.append(\"StudentId: \")","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"                .append(getStudentIds())","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"                .append(\"; TutorId: \")","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"                .append(getTutorId())","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"                .append(\"; SessionId: \")","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"                .append(getSessionId())","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"                .append(\";\");","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"car155":16,"Bennyphoe":39}},{"path":"src/main/java/seedu/address/model/assignment/Unassignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"car155"},"content":" * Represents an Unassignment of a person to a class.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"public class Unassignment {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    private Set\u003cPersonId\u003e studentIds;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    private PersonId tutorId;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    private SessionId sessionId;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"     * Public Constructor for An Unassignment between student/tutors and sessions","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"     * @param studentIds","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"     * @param tutorId","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"     * @param sessionId","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    public Unassignment(Set\u003cPersonId\u003e studentIds, PersonId tutorId, SessionId sessionId) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"        requireAllNonNull(sessionId);","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        this.studentIds \u003d studentIds;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        this.tutorId \u003d tutorId;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"    public Set\u003cPersonId\u003e getStudentIds() {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        return studentIds;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"    public PersonId getTutorId() {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        return tutorId;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    public SessionId getSessionId() {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        return sessionId;","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        builder.append(\"StudentId: \")","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"                .append(getStudentIds())","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"                .append(\"; TutorId: \")","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"                .append(getTutorId())","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"                .append(\"; SessionId: \")","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"                .append(getSessionId())","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"                .append(\";\");","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"car155":55}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"    private PersonType personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"    private PersonId personId;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"    private List\u003cSessionId\u003e sessions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"    public PersonType getPersonType() {","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"        return personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"    public PersonId getPersonId() {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"        return personId;","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"    public void setPersonType(PersonType personType) {","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"    public void setPersonId(PersonId personId) {","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"    public List\u003cSessionId\u003e getSessions() {","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"        return sessions;","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"yanlingkuek"},"content":"    public void setSessions(List\u003cSessionId\u003e sessions) {","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"yanlingkuek"},"content":"        this.sessions \u003d sessions;","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"car155"},"content":"    public boolean isStudent() {","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"car155"},"content":"        return this.personType.isStudent();","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"car155"},"content":"    public boolean isTutor() {","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"car155"},"content":"        return this.personType.isTutor();","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"     * Adds a session to the list of sessions that this person is assigned to","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"     * @param session","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"Bennyphoe"},"content":"    public void addSession(SessionId session) {","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"Bennyphoe"},"content":"        this.sessions.add(session);","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"car155"},"content":"     * Removes a session to the list of sessions that this person is assigned to","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"car155"},"content":"     * @param session","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"car155"},"content":"    public void removeSession(SessionId session) {","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"car155"},"content":"        this.sessions.remove(session);","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"car155":16,"yanlingkuek":14,"-":122,"Bennyphoe":24}},{"path":"src/main/java/seedu/address/model/person/PersonId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yanlingkuek"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"yanlingkuek"},"content":"public class PersonId {","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"            \"PersonId should only be s/[ID] or t/[ID], and cannot be blank.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"    /*","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"     * The first character must be s or t, followed by /,","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"     * and followed by numbers with at least 1 digit.","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"    public static final String VALIDATION_REGEX \u003d \"[st][/]\\\\d{1,}\";","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"    public final String personId;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"     * Constructs a {@code PersonId}.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"     * @param id A valid ID.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"    public PersonId(String id) {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"        personId \u003d id;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"    public String getPersonId() {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"        return personId;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"     * Checks if Person ID is in the correct format.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"     * @param test Person ID to be checked.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"     * @return True if Person ID is in the correct format.","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"    public static boolean isValidPersonId(String test) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"        if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"yanlingkuek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"yanlingkuek"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"        return personId;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"                || (other instanceof PersonId // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"                \u0026\u0026 this.getPersonId().equals(((PersonId) other).getPersonId())); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"        return personId.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"yanlingkuek":61}},{"path":"src/main/java/seedu/address/model/person/PersonIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"public class PersonIdPredicate extends PersonPredicate {","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"    private final PersonId personId;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    public PersonIdPredicate(PersonId personId) {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"        return person.getPersonId().equals(this.personId);","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"                || (other instanceof PersonIdPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"                \u0026\u0026 personId.equals(((PersonIdPredicate) other).personId)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"    public PersonId getPersonId() {","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"        return this.personId;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"jingxueguo":26}},{"path":"src/main/java/seedu/address/model/person/PersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"public abstract class PersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"    public abstract boolean test(Person person);","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"jingxueguo":12}},{"path":"src/main/java/seedu/address/model/person/PersonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"public class PersonType {","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"            \"PersonType should only be student or tutor, and it should not be blank\";","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"    /*","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    public final String personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"     * @param type A valid name.","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    public PersonType(String type) {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"        requireNonNull(type);","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"        checkArgument(isValidPersonType(type), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"        personType \u003d type;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    public static boolean isValidPersonType(String test) {","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"        if (test.matches(VALIDATION_REGEX) \u0026\u0026 (test.equals(\"student\") || test.equals(\"tutor\"))) {","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"            return true;","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"        } else {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"            return false;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"    public boolean isStudent() {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        return this.personType.equals(\"student\");","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"    public boolean isTutor() {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        return this.personType.equals(\"tutor\");","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"    public String toString() {","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"        return personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"                || (other instanceof PersonType // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"                \u0026\u0026 personType.equals(((PersonType) other).personType)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"        return personType.hashCode();","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"car155":7,"yanlingkuek":1,"Bennyphoe":56}},{"path":"src/main/java/seedu/address/model/person/PersonTypePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"public class PersonTypePredicate extends PersonPredicate {","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"    private final PersonType personType;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    public PersonTypePredicate(PersonType personType) {","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"        return person.getPersonType().equals(this.personType);","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"                || (other instanceof PersonTypePredicate // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"                \u0026\u0026 personType.equals(((PersonTypePredicate) other).personType)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"    public PersonType getPersonType() {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"        return this.personType;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"jingxueguo":25}},{"path":"src/main/java/seedu/address/model/person/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"public class Student extends Person {","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"    private static int studentCount \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"     * @param personId","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"     * @param name","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"     * @param phone","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"     * @param email","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"     * @param address","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"     * @param tags","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"     * @param sessions","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"    public Student(PersonId personId, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"                   List\u003cSessionId\u003e sessions) {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonType(new PersonType(\"student\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonId(personId);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"        this.setSessions(sessions);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"     * @param personId","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"     * @param name","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"     * @param phone","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"     * @param email","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"     * @param address","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"     * @param tags","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"    public Student(PersonId personId, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"        this.setPersonType(new PersonType(\"student\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonId(personId);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"     * @param name","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"     * @param phone","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"     * @param email","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"     * @param address","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"     * @param tags","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"    public Student(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonType(new PersonType(\"student\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"        studentCount++;","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonId(new PersonId(\"s/\" + studentCount));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"    public static void setStudentCount(String storedStudentCount) {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"        studentCount \u003d Integer.valueOf(storedStudentCount);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"    public static String getStudentCount() {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"        return String.valueOf(studentCount);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"yanlingkuek":51,"Bennyphoe":22}},{"path":"src/main/java/seedu/address/model/person/StudentSessionPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"public class StudentSessionPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"    private final List\u003cPersonId\u003e studentList;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"    public StudentSessionPredicate(List\u003cPersonId\u003e studentList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"        return studentList.contains(person.getPersonId());","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"                || (other instanceof StudentSessionPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 studentList.equals(((StudentSessionPredicate) other).studentList)); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"chanellNg":24}},{"path":"src/main/java/seedu/address/model/person/Tutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"public class Tutor extends Person {","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"    private static int tutorCount \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"     * @param personId","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"     * @param name","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"     * @param phone","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"     * @param email","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"     * @param address","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"     * @param tags","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"     * @param sessions","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"    public Tutor(PersonId personId, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"                 List\u003cSessionId\u003e sessions) {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonType(new PersonType(\"tutor\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonId(personId);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"        this.setSessions(sessions);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"     * @param personId","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"     * @param name","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"     * @param phone","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"     * @param email","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"     * @param address","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"     * @param tags","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"    public Tutor(PersonId personId, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"        this.setPersonType(new PersonType(\"tutor\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonId(personId);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"     * @param name","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"     * @param phone","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"     * @param email","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"     * @param address","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"     * @param tags","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"    public Tutor(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonType(new PersonType(\"tutor\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"        tutorCount++;","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"yanlingkuek"},"content":"        this.setPersonId(new PersonId(\"t/\" + tutorCount));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"    public static void setTutorCount(String storedTutorCount) {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"        tutorCount \u003d Integer.valueOf(storedTutorCount);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"    public static String getTutorCount() {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"        return String.valueOf(tutorCount);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"yanlingkuek":52,"Bennyphoe":20}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"chanellNg"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"chanellNg"},"content":"        return \"list of students\";","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"Bennyphoe"},"content":"    public ObservableList\u003cPerson\u003e getInternalList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"Bennyphoe"},"content":"        return internalList;","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chanellNg":5,"-":137,"Bennyphoe":4}},{"path":"src/main/java/seedu/address/model/person/exceptions/SessionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":" * Signals that the operation is unable to find the specified session.","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"public class SessionNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"chanellNg":7}},{"path":"src/main/java/seedu/address/model/session/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-04"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" * Represents a Session\u0027s day in the address book.","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDay(String)}","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"public class Day {","lastModifiedDate":"2021-03-04"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Days can only be of one of the following values:\\n\"","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"            + \"Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday\\n\"","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"            + \"(not case sensitive)\";","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    private enum DayValue {","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"        MONDAY,","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"        TUESDAY,","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        WEDNESDAY,","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"        THURSDAY,","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"        FRIDAY,","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"        SATURDAY,","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"        SUNDAY","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    private DayValue day;","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"     * Constructs an {@code Day}.","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"     * @param day A valid day.","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"    public Day(String day) {","lastModifiedDate":"2021-03-04"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"        requireNonNull(day);","lastModifiedDate":"2021-03-04"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        checkArgument(isValidDay(day), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-04"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        this.day \u003d DayValue.valueOf(day.toUpperCase());","lastModifiedDate":"2021-03-04"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"     * Returns if a given string is a valid day.","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"    public static boolean isValidDay(String test) {","lastModifiedDate":"2021-03-04"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        String upperCaseTest \u003d test.toUpperCase();","lastModifiedDate":"2021-03-04"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        for (DayValue d : DayValue.values()) {","lastModifiedDate":"2021-03-04"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"            if (d.name().equals(upperCaseTest)) {","lastModifiedDate":"2021-03-04"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"                return true;","lastModifiedDate":"2021-03-04"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"            }","lastModifiedDate":"2021-03-04"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-04"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"        return false;","lastModifiedDate":"2021-03-04"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-04"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"    public String toString() {","lastModifiedDate":"2021-03-04"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"        return this.day.name();","lastModifiedDate":"2021-03-04"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"                || (other instanceof Day // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"                \u0026\u0026 day.equals(((Day) other).day)); // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-04"}],"authorContributionMap":{"car155":64}},{"path":"src/main/java/seedu/address/model/session/Session.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"car155"},"content":" * Represents a Session in the address book.","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"car155"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"public class Session {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"            \"Session ID should only be c/[session ID], and it should not be blank\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    private static int sessionCount \u003d 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"    private final SessionId classId;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    private final Day day;","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    private final Timeslot timeslot;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"    private final Subject subject;","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-04"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    private PersonId tutor \u003d new PersonId(\"\");","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"    private final List\u003cPersonId\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"    public Session(Day day, Timeslot timeslot, Subject subject, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        sessionCount++;","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        requireAllNonNull(day, timeslot, subject);","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"        this.classId \u003d new SessionId(sessionCount);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-03-04"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-04"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"     * @param classId","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"     * @param day","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"     * @param timeslot","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"     * @param subject","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"     * @param tags","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"    public Session(SessionId classId, Day day, Timeslot timeslot, Subject subject, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"        this.classId \u003d classId;","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"    public static void setSessionCount(String storedSessionCount) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"        sessionCount \u003d Integer.valueOf(storedSessionCount);","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"    public static String getSessionCount() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"        return String.valueOf(sessionCount);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"    public SessionId getClassId() {","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"        return classId;","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"car155"},"content":"    public Day getDay() {","lastModifiedDate":"2021-03-04"},{"lineNumber":73,"author":{"gitId":"car155"},"content":"        return day;","lastModifiedDate":"2021-03-04"},{"lineNumber":74,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":75,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":76,"author":{"gitId":"car155"},"content":"    public Timeslot getTimeslot() {","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"car155"},"content":"        return timeslot;","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":79,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":80,"author":{"gitId":"car155"},"content":"    public Subject getSubject() {","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"car155"},"content":"        return subject;","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"Bennyphoe"},"content":"    public PersonId getTutor() {","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"car155"},"content":"        return tutor;","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"    public List\u003cPersonId\u003e getStudents() {","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"car155"},"content":"        return students;","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"    public boolean emptyStudentList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"        return this.students.size() \u003d\u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":"    public boolean emptyTutor() {","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"        return this.tutor.equals(new PersonId(\"\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"car155"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-04"},{"lineNumber":101,"author":{"gitId":"car155"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-04"},{"lineNumber":102,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"car155"},"content":"     * Adds a student to the session","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"car155"},"content":"     * @param student The student to be added","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"Bennyphoe"},"content":"    public void assignStudent(PersonId student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"car155"},"content":"        requireAllNonNull(student);","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"car155"},"content":"        this.students.add(student);","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"    public void assignTutor(PersonId tutor) {","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"        this.tutor \u003d tutor;","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"car155"},"content":"     * Removes a student from the session","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"car155"},"content":"     * @param student The student to be removed","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"car155"},"content":"    public void unassignStudent(PersonId student) {","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"car155"},"content":"        requireAllNonNull(student);","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"car155"},"content":"        this.students.remove(student);","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"car155"},"content":"    public void unassignTutor() {","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"car155"},"content":"        this.tutor \u003d new PersonId(\"\");","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"chanellNg"},"content":"     * Returns true if both sessions have the same ID.","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"chanellNg"},"content":"     * This defines a weaker notion of equality between two sessions.","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"chanellNg"},"content":"    public boolean isSameSession(Session otherSession) {","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"chanellNg"},"content":"        if (otherSession \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"chanellNg"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"chanellNg"},"content":"        return otherSession !\u003d null","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 otherSession.getClassId().equals(getClassId());","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"car155"},"content":"    public boolean hasTutor() {","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"car155"},"content":"        return !this.tutor.equals(new PersonId(\"\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"Bennyphoe"},"content":"    public void setTutor(PersonId tutor) {","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"Bennyphoe"},"content":"        this.tutor \u003d tutor;","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"chanellNg"},"content":"    public void setStudents(List\u003cPersonId\u003e students) {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"chanellNg"},"content":"        for (PersonId student :students) {","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"chanellNg"},"content":"            this.students.add(student);","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"car155"},"content":"    private boolean isTutor(PersonId person) {","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"car155"},"content":"        return this.tutor.equals(person.getPersonId());","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"car155"},"content":"    private boolean checkEnrollement(PersonId person) {","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"car155"},"content":"        for (PersonId personId : this.students) {","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"car155"},"content":"            if (personId.equals(person.getPersonId())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"car155"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"car155"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"car155"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"car155"},"content":"     * Checks if current session clashes with another given session","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"car155"},"content":"     * @param other The session to compare","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"car155"},"content":"     * @return true if clashing, false otherwise","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"car155"},"content":"    public boolean isClashingWith(Session other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"car155"},"content":"        boolean sameDay \u003d this.day.equals(other.day);","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"car155"},"content":"        boolean timeslotClashing \u003d this.timeslot.isClashingWith(other.timeslot);","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"car155"},"content":"        return sameDay \u0026\u0026 timeslotClashing;","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"chanellNg"},"content":"     * Returns true if both sessions have the same session ID and data fields.","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"chanellNg"},"content":"     * This defines a stronger notion of equality between two sessions.","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"chanellNg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"chanellNg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"chanellNg"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"chanellNg"},"content":"        if (!(other instanceof Session)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"chanellNg"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"chanellNg"},"content":"        Session otherSession \u003d (Session) other;","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"chanellNg"},"content":"        return otherSession.getClassId().equals(getClassId())","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 otherSession.getDay().equals(getDay())","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 otherSession.getTimeslot().equals(getTimeslot())","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 otherSession.getSubject().equals(getSubject())","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 otherSession.getTags().equals(getTags())","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 otherSession.getTutor().equals(getTutor())","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 otherSession.getStudents().equals(getStudents());","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":205,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":206,"author":{"gitId":"car155"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":207,"author":{"gitId":"car155"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-03"},{"lineNumber":208,"author":{"gitId":"chanellNg"},"content":"        builder.append(\" Session ID: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":209,"author":{"gitId":"chanellNg"},"content":"                .append(this.getClassId())","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"car155"},"content":"                .append(\"; Subject: \")","lastModifiedDate":"2021-03-03"},{"lineNumber":211,"author":{"gitId":"car155"},"content":"                .append(this.getSubject())","lastModifiedDate":"2021-03-03"},{"lineNumber":212,"author":{"gitId":"car155"},"content":"                .append(\"; Day: \")","lastModifiedDate":"2021-03-03"},{"lineNumber":213,"author":{"gitId":"car155"},"content":"                .append(this.getDay())","lastModifiedDate":"2021-03-03"},{"lineNumber":214,"author":{"gitId":"car155"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2021-03-03"},{"lineNumber":215,"author":{"gitId":"chanellNg"},"content":"                .append(this.getTimeslot().toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":217,"author":{"gitId":"car155"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-04"},{"lineNumber":218,"author":{"gitId":"car155"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-04"},{"lineNumber":219,"author":{"gitId":"car155"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-04"},{"lineNumber":220,"author":{"gitId":"car155"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-04"},{"lineNumber":221,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-04"},{"lineNumber":222,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":223,"author":{"gitId":"car155"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-03"},{"lineNumber":224,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":225,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"car155":125,"chanellNg":69,"Bennyphoe":31}},{"path":"src/main/java/seedu/address/model/session/SessionId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.exceptions.InvalidSessionIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"public class SessionId {","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"            \"Session ID should only be c/[session ID], and it should not be blank\";","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    public static final String VALIDATION_REGEX \u003d \"[c][/]\\\\d{1,}\";","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"    private final String sessionId;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"     * Constructs a {@code SessionId} from {Integer id}.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"     * @param id A valid ID.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    public SessionId(Integer id) {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"        if (id \u003c\u003d 0) {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"            throw new InvalidSessionIdException();","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"        sessionId \u003d \"c/\" + id;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"     * Constructs a {@code SessionId} from {String id}.","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"     * @param id A valid ID.","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    public SessionId(String id) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"        sessionId \u003d id;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"    public String getSessionId() {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"        return sessionId;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"    public static SessionId fromOneBased(Integer sessionId) {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        return new SessionId(sessionId);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"     * Creates a new {@code SessionId}.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"    public static SessionId fromOneBased(int sessionId) {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"        return new SessionId(sessionId);","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"     * Returns true if a given string is a valid session ID.","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"    public static boolean isValidSessionId(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"        return sessionId;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"                || (other instanceof SessionId // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 sessionId.equals(((SessionId) other).getSessionId())); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"        return sessionId.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"chanellNg":77}},{"path":"src/main/java/seedu/address/model/session/SessionIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"public class SessionIdPredicate implements Predicate\u003cSession\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"    private final SessionId sessionId;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"    public SessionIdPredicate(SessionId sessionId) {","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    public SessionId getSessionId() {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"        return sessionId;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"    public boolean test(Session other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"        return other.getClassId().equals(sessionId);","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"                || (other instanceof Session // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 sessionId.equals(((Session) other).getClassId())); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"chanellNg":27}},{"path":"src/main/java/seedu/address/model/session/SessionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.person.exceptions.SessionNotFoundException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":" * A list of sessions that does not allow nulls.","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"car155"},"content":" *","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"car155"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"public class SessionList {","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    private final ObservableList\u003cSession\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    private final ObservableList\u003cSession\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"     * Adds a session to the list.","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    public void add(Session toAdd) {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"     * Replaces the session {@code target} in the list with {@code editedSession}.","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"    public void setSession(Session target, Session editedSession) {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"        requireAllNonNull(target, editedSession);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"            throw new SessionNotFoundException();","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"        internalList.set(index, editedSession);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"     * Removes the equivalent session from the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"     * The session must exist in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"    public void remove(Session toRemove) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"            throw new SessionNotFoundException();","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"     * Returns true if the list contains an equivalent session as the given argument.","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"    public boolean contains(Session toCheck) {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"        return internalList.stream().anyMatch(toCheck::isSameSession);","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"car155"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"    public ObservableList\u003cSession\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"car155"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"    public ObservableList\u003cSession\u003e getInternalList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"Bennyphoe"},"content":"        return internalList;","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"    public Iterator\u003cSession\u003e iterator() {","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"car155":32,"chanellNg":36,"Bennyphoe":11}},{"path":"src/main/java/seedu/address/model/session/SessionStudentPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"public class SessionStudentPredicate implements Predicate\u003cSession\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"    private final List\u003cSessionId\u003e sessionIdList;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"    public SessionStudentPredicate(List\u003cSessionId\u003e sessionIdList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"        this.sessionIdList \u003d sessionIdList;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"    public boolean test(Session session) {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"        return sessionIdList.contains(session.getClassId());","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"                || (other instanceof SessionStudentPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"                \u0026\u0026 sessionIdList.equals(((SessionStudentPredicate) other).sessionIdList)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chanellNg":24}},{"path":"src/main/java/seedu/address/model/session/Subject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-04"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" * Represents a Subject in the address book.","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSubject(String)}","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"public class Subject {","lastModifiedDate":"2021-03-04"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"            \"Subjects should only contain alphanumeric characters, spaces, and dashes, and it should not be blank.\\n\"","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"            + \"Different words should be seperated by only a single space \u0027 \u0027 or dash \u0027-\u0027\";","lastModifiedDate":"2021-03-04"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    /*","lastModifiedDate":"2021-03-04"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-04"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-04"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9]+([ -][a-zA-Z0-9]+)*$\";","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public final String subject;","lastModifiedDate":"2021-03-04"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-04"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"     * Constructs a {@code Subject}.","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"     *","lastModifiedDate":"2021-03-04"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"     * @param subject A valid Subject.","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-04"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    public Subject(String subject) {","lastModifiedDate":"2021-03-04"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        requireNonNull(subject);","lastModifiedDate":"2021-03-04"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        checkArgument(isValidSubject(subject), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-04"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        this.subject \u003d subject.toUpperCase();","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-04"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"     * Returns true if a given string is a valid Subject.","lastModifiedDate":"2021-03-04"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-04"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    public static boolean isValidSubject(String test) {","lastModifiedDate":"2021-03-04"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-04"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-04"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"    public String toString() {","lastModifiedDate":"2021-03-04"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        return subject;","lastModifiedDate":"2021-03-04"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"car155":47}},{"path":"src/main/java/seedu/address/model/session/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"car155"},"content":" * Wrapper class for LocalTime.","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"car155"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"public class Time {","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    public static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Time must be in the format: \" + TIME_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(2[0-3]|[01][0-9]):([0-5][0-9])$\"; // 24-hour HH:mm format","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    private LocalTime time;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"     * Constructs an {@code Time}.","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"     * @param time A valid time.","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    public Time(String time) {","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        this.time \u003d LocalTime.parse(time, getFormatter());","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"     * Returns if a given string is a valid time.","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    public static DateTimeFormatter getFormatter() {","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        return DateTimeFormatter.ofPattern(TIME_FORMAT);","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"    public boolean isSame(Time other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"        return this.time.equals(other.time);","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"    public boolean isBefore(Time other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"        return this.time.isBefore(other.time);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"    public boolean isAfter(Time other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"        return this.time.isAfter(other.time);","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"    public String toString() {","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"        return this.time.toString();","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"car155":57}},{"path":"src/main/java/seedu/address/model/session/Timeslot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"car155"},"content":" * Represents a Session\u0027s timeslot in the address book.","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"car155"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTimeslot(String)}","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"car155"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"public class Timeslot {","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    public static final String INFIX \u003d \"to\";","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Timeslots must not be null and must be in the format:\\n \"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"            + Time.TIME_FORMAT + \" (start time) \" + INFIX + \" \" + Time.TIME_FORMAT + \" (end time) \"","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"            + \"and adhere to the following constraint:\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"            + \"the ending time should be strictly after the starting time.\";","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    private Time start;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"    private Time end;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"     * Constructs an {@code Timeslot}.","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"     * @param timeslot A valid timeslot.","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"    public Timeslot(String timeslot) {","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        requireNonNull(timeslot);","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        checkArgument(isValidTimeslot(timeslot), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        String[] splitTimeslot \u003d timeslot.split(INFIX);","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"        this.start \u003d new Time(splitTimeslot[0].trim());","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        this.end \u003d new Time(splitTimeslot[1].trim());","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"     * Returns if a given string is a valid timeslot.","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"    public static boolean isValidTimeslot(String timeslot) {","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        String[] splitTimeslot \u003d timeslot.split(\"\\\\s+\");","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"        if (splitTimeslot.length !\u003d 3) { //wrong number of inputs","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"            return false;","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        } else if (!splitTimeslot[1].trim().equals(INFIX)) { //wrong infix","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"            return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        } else if (!Time.isValidTime(splitTimeslot[0].trim())) { //wrong format for start time","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"            return false;","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        } else if (!Time.isValidTime(splitTimeslot[2].trim())) { //wrong format for end time","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"            return false;","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"        } else {","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"car155"},"content":"            Time start \u003d new Time(splitTimeslot[0].trim());","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"            Time end \u003d new Time(splitTimeslot[2].trim());","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"            return start.isBefore(end);","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"car155"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"car155"},"content":"     * Checks if current timeslot clashes with another given timeslot","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"car155"},"content":"     * @param other The timeslot to compare with","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"car155"},"content":"     * @return true if clashing, false otherwise","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"car155"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"    public boolean isClashingWith(Timeslot other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"        boolean isBefore \u003d this.end.isBefore(other.start) || this.end.isSame(other.start);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"        boolean isAfter \u003d this.start.isAfter(other.end) || this.start.isSame(other.end);","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"car155"},"content":"        return !isBefore \u0026\u0026 !isAfter;","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"car155"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"car155"},"content":"    public String toString() {","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"        return this.start.toString() + \" to \" + this.end.toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"    public Time getStart() {","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"        return start;","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"Bennyphoe"},"content":"    public void setStart(Time start) {","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"    public Time getEnd() {","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"        return end;","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"Bennyphoe"},"content":"    public void setEnd(Time end) {","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"Bennyphoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"car155":67,"Bennyphoe":17}},{"path":"src/main/java/seedu/address/model/session/exceptions/InvalidSessionIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.model.session.exceptions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":" * Signals that the operation will result in invalid SessionId","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":" * (SessionIds are considered invalid if they are less than or equal to zero.)","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"public class InvalidSessionIdException extends RuntimeException {","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"    public InvalidSessionIdException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"        super(\"Operation would result in invalid session Id.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"chanellNg":12}},{"path":"src/main/java/seedu/address/model/session/exceptions/SessionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.model.session.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"public class SessionNotFoundException extends Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"    public SessionNotFoundException(String message) {","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"        super(message);","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Bennyphoe":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Day;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Subject;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Timeslot;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"        Student.setStudentCount(\"4\");","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"        Tutor.setTutorCount(\"2\");","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        Person[] personList \u003d new Person[] {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"            new Student(new PersonId(\"s/1\"), new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"            new Student(new PersonId(\"s/2\"), new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"            new Student(new PersonId(\"s/3\"), new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"            new Student(new PersonId(\"s/4\"), new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"yanlingkuek"},"content":"                new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"            new Tutor(new PersonId(\"t/1\"), new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"            new Tutor(new PersonId(\"t/2\"), new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"                new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"        return personList;","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"    public static ReadOnlyAddressBook getSampleSessions() {","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"        AddressBook sampleSession \u003d new AddressBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"        Session testSessionOne \u003d new Session(new SessionId(\"c/1\"),","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"                new Day(\"WEDNESDAY\"), new Timeslot(\"12:30 to 13:00\"),","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"                new Subject(\"Piano\"), getTagSet(\"Morning\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"        sampleSession.addSession(testSessionOne);","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"        Session.setSessionCount(\"1\");","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"        return sampleSession;","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"Bennyphoe"},"content":"    public static List\u003cSessionId\u003e getSessionIds(String... strings) {","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"Bennyphoe"},"content":"        return Arrays.stream(strings).map(SessionId::new).collect(Collectors.toList());","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yanlingkuek":10,"chanellNg":17,"-":53,"Bennyphoe":10}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"    private final String personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"    private final String personId;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"    private final List\u003cJsonAdaptedSessionId\u003e sessions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"personType\") String personType,","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"            @JsonProperty(\"personId\") String personId, @JsonProperty(\"sessions\") List\u003cJsonAdaptedSessionId\u003e sessions) {","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"        if (sessions !\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"            this.sessions.addAll(sessions);","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"        personType \u003d source.getPersonType().toString();","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"        personId \u003d source.getPersonId().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"        sessions.addAll(source.getSessions().stream().map(JsonAdaptedSessionId::new)","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"Bennyphoe"},"content":"        final List\u003cSessionId\u003e sessionsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"Bennyphoe"},"content":"        for (JsonAdaptedSessionId session : sessions) {","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"Bennyphoe"},"content":"            sessionsList.add(session.toModelType());","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"Bennyphoe"},"content":"        if (personType \u003d\u003d null) {","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"Bennyphoe"},"content":"                    PersonType.class.getSimpleName()));","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"Bennyphoe"},"content":"        if (!PersonType.isValidPersonType(personType)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(PersonType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"Bennyphoe"},"content":"        final PersonType modelPersonType \u003d new PersonType(personType);","lastModifiedDate":"2021-03-01"},{"lineNumber":135,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"yanlingkuek"},"content":"        if (personId \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"yanlingkuek"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"yanlingkuek"},"content":"                    PersonId.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"yanlingkuek"},"content":"        if (!PersonId.isValidPersonId(personId)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"yanlingkuek"},"content":"            throw new IllegalValueException(PersonId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"yanlingkuek"},"content":"        final PersonId modelPersonId \u003d new PersonId(personId);","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"Bennyphoe"},"content":"        if (modelPersonType.toString().equals(\"student\")) {","lastModifiedDate":"2021-03-01"},{"lineNumber":149,"author":{"gitId":"Bennyphoe"},"content":"            Student student \u003d new Student(modelPersonId, modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"Bennyphoe"},"content":"            student.getSessions().addAll(sessionsList);","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"Bennyphoe"},"content":"            return student;","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"Bennyphoe"},"content":"        } else {","lastModifiedDate":"2021-03-01"},{"lineNumber":153,"author":{"gitId":"Bennyphoe"},"content":"            Tutor tutor \u003d new Tutor(modelPersonId, modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"Bennyphoe"},"content":"            tutor.getSessions().addAll(sessionsList);","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"Bennyphoe"},"content":"            return tutor;","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yanlingkuek":16,"-":107,"Bennyphoe":36}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPersonId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"public class JsonAdaptedPersonId {","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    private final String personId;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    public JsonAdaptedPersonId(String sessionId) {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"        this.personId \u003d sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    public JsonAdaptedPersonId(PersonId source) {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"        personId \u003d source.getPersonId();","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    public JsonAdaptedPersonId() {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"        personId \u003d \"\";","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"    @JsonValue","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    public String getPersonId() {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"        return personId;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"    public PersonId toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"        if (personId.equals(\"\")) {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"            return new PersonId(\"\");","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"        if (!PersonId.isValidPersonId(personId)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"        return new PersonId(personId);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Bennyphoe":50}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSession.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Day;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Subject;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Timeslot;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":" * Jackson-friendly version of {@link Session}.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"class JsonAdaptedSession {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Session\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    private final String classId;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    private final String day;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"    private final String timeslot;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"    private final String subject;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"    private JsonAdaptedPersonId tutor;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"    private final List\u003cJsonAdaptedPersonId\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"    public JsonAdaptedSession(@JsonProperty(\"classId\") String classId, @JsonProperty(\"day\") String day,","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"                             @JsonProperty(\"timeslot\") String timeslot, @JsonProperty(\"subject\") String subject,","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"                              @JsonProperty(\"tutor\") JsonAdaptedPersonId tutor,","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"                              @JsonProperty(\"students\") List\u003cJsonAdaptedPersonId\u003e students) {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"        this.classId \u003d classId;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"        if (tutor !\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"            this.tutor \u003d tutor;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"        if (students !\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"            this.students.addAll(students);","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"    public JsonAdaptedSession(Session source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"        classId \u003d source.getClassId().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"        day \u003d source.getDay().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"        timeslot \u003d source.getTimeslot().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"        subject \u003d source.getSubject().subject;","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"        tutor \u003d new JsonAdaptedPersonId(source.getTutor());","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"        students.addAll(source.getStudents().stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"                .map(JsonAdaptedPersonId::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Session} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted session.","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"Bennyphoe"},"content":"    public Session toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"Bennyphoe"},"content":"        final List\u003cTag\u003e sessionTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"Bennyphoe"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"Bennyphoe"},"content":"            sessionTags.add(tag.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"Bennyphoe"},"content":"        PersonId tutor \u003d this.tutor.toModelType();","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cPersonId\u003e studentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"Bennyphoe"},"content":"        for (JsonAdaptedPersonId student : students) {","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"            studentList.add(student.toModelType());","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"Bennyphoe"},"content":"        if (classId \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"class Id\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"        final SessionId modelClassId \u003d new SessionId(classId);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"Bennyphoe"},"content":"        if (day \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Day.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"Bennyphoe"},"content":"        if (!Day.isValidDay(day)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(Day.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"Bennyphoe"},"content":"        final Day modelDay \u003d new Day(day);","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"Bennyphoe"},"content":"        if (timeslot \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"Bennyphoe"},"content":"                    Timeslot.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"Bennyphoe"},"content":"        if (!Timeslot.isValidTimeslot(timeslot)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"Bennyphoe"},"content":"        final Timeslot modelTimeslot \u003d new Timeslot(timeslot);","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"Bennyphoe"},"content":"        if (subject \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Subject.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"        if (!Subject.isValidSubject(subject)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"Bennyphoe"},"content":"        final Subject modelSubject \u003d new Subject(subject);","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"Bennyphoe"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(sessionTags);","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"Bennyphoe"},"content":"        Session newSession \u003d new Session(modelClassId, modelDay, modelTimeslot, modelSubject, modelTags);","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"Bennyphoe"},"content":"        newSession.setTutor(tutor);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"Bennyphoe"},"content":"        newSession.getStudents().addAll(studentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"Bennyphoe"},"content":"        return newSession;","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"chanellNg":19,"Bennyphoe":107}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSessionId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"public class JsonAdaptedSessionId {","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    private final String sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    public JsonAdaptedSessionId(String sessionId) {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    public JsonAdaptedSessionId(SessionId source) {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"        sessionId \u003d source.getSessionId();","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    @JsonValue","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    public String getSessionId() {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"        return sessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"    public SessionId toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"        if (!SessionId.isValidSessionId(sessionId)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"        return new SessionId(sessionId);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Bennyphoe":44}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"    private final String studentCounter;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"    private final String tutorCounter;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"                                       @JsonProperty(\"studentCounter\") String studentCounter,","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"                                       @JsonProperty(\"tutorCounter\") String tutorCounter) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"        Student.setStudentCount(studentCounter);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"        this.studentCounter \u003d studentCounter;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"        Tutor.setTutorCount(tutorCounter);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"        this.tutorCounter \u003d tutorCounter;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"        this.studentCounter \u003d Student.getStudentCount();","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"        this.tutorCounter \u003d Tutor.getTutorCount();","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yanlingkuek":16,"-":59}},{"path":"src/main/java/seedu/address/storage/JsonSerializableSession.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"@JsonRootName(value \u003d \"session\")","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"class JsonSerializableSession {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"    public static final String MESSAGE_DUPLICATE_SESSION \u003d \"Session list contains duplicate session(s).\";","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    private final List\u003cJsonAdaptedSession\u003e sessions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    private final String sessionCounter;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"    public JsonSerializableSession(@JsonProperty(\"sessions\") List\u003cJsonAdaptedSession\u003e sessions,","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"                                   @JsonProperty(\"sessionCounter\") String sessionCounter) {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"        this.sessions.addAll(sessions);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"        Session.setSessionCount(sessionCounter);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        this.sessionCounter \u003d sessionCounter;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"    public JsonSerializableSession(ReadOnlyAddressBook source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"        sessions.addAll(source.getSessionList().stream().map(JsonAdaptedSession::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        sessionCounter \u003d Session.getSessionCount();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"        for (JsonAdaptedSession jsonAdaptedSession : sessions) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"            Session session \u003d jsonAdaptedSession.toModelType();","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"            if (addressBook.hasSession(session)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SESSION);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"            addressBook.addSession(session);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"        return addressBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"chanellNg":6,"Bennyphoe":59}},{"path":"src/main/java/seedu/address/storage/JsonSessionStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"public class JsonSessionStorage implements AddressBookStorage {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSessionStorage.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    public JsonSessionStorage(Path filePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"        return filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"        Optional\u003cJsonSerializableSession\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"                filePath, JsonSerializableSession.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Bennyphoe"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSession(addressBook), filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Bennyphoe":79}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"    void saveSessions(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readSession() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readSession(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":31,"Bennyphoe":3}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"    private AddressBookStorage sessionBookStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, AddressBookStorage sessionStorage,","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"        this.sessionBookStorage \u003d sessionStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readSession() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"        return readSession(sessionBookStorage.getAddressBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"     * return an optional ReadOnlyAddressBook for sessions","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"     * @param filePath","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"     * @return Optional ReadOnlyAddressBook","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"     * @throws DataConversionException throws dataConversionException","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":"     * @throws IOException throws IOException","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"Bennyphoe"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readSession(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"Bennyphoe"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"Bennyphoe"},"content":"        return sessionBookStorage.readAddressBook(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"Bennyphoe"},"content":"    public void saveSessions(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"Bennyphoe"},"content":"        saveSessions(addressBook, sessionBookStorage.getAddressBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"Bennyphoe"},"content":"     * Save Sessions","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"Bennyphoe"},"content":"     * @param addressBook","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"Bennyphoe"},"content":"     * @param filePath","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"Bennyphoe"},"content":"     * @throws IOException","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"Bennyphoe"},"content":"    public void saveSessions(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"Bennyphoe"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"Bennyphoe"},"content":"        sessionBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"Bennyphoe":35}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103-w16-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yanlingkuek":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import javafx.scene.control.SplitPane;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.ViewPersonCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.ViewSessionCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"    private SessionListPanel sessionListPanel;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"    private StackPane sessionListPanelPlaceholder;","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"    @FXML","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"    private SplitPane viewIndividualPlaceholder;","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"chanellNg"},"content":"        viewIndividualPlaceholder.getItems().clear();","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"Bennyphoe"},"content":"        sessionListPanelPlaceholder.setVisible(false);","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"chanellNg"},"content":"        personListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"chanellNg"},"content":"        personListPanelPlaceholder.setDisable(false);","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"chanellNg"},"content":"        sessionListPanelPlaceholder.toFront();","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"yanlingkuek"},"content":"        sessionListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"chanellNg"},"content":"        viewIndividualPlaceholder.getItems().add(personListPanelPlaceholder);","lastModifiedDate":"2021-03-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"Bennyphoe"},"content":"    void fillInnerPartsWithSessions() {","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"chanellNg"},"content":"        viewIndividualPlaceholder.getItems().clear();","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"Bennyphoe"},"content":"        sessionListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"Bennyphoe"},"content":"        personListPanelPlaceholder.setDisable(true);","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"Bennyphoe"},"content":"        personListPanelPlaceholder.setVisible(false);","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"Bennyphoe"},"content":"        personListPanelPlaceholder.toFront();","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"yanlingkuek"},"content":"        personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"Bennyphoe"},"content":"        sessionListPanel \u003d new SessionListPanel(logic.getFilteredSessionList());","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"Bennyphoe"},"content":"        sessionListPanelPlaceholder.getChildren().add(sessionListPanel.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"chanellNg"},"content":"        viewIndividualPlaceholder.getItems().add(sessionListPanelPlaceholder);","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"Bennyphoe"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"Bennyphoe"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"Bennyphoe"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"Bennyphoe"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"Bennyphoe"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"Bennyphoe"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"chanellNg"},"content":"    void fillSplitPane(boolean viewSession) {","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"chanellNg"},"content":"        viewIndividualPlaceholder.getItems().clear();","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"chanellNg"},"content":"        sessionListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"chanellNg"},"content":"        personListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"chanellNg"},"content":"        sessionListPanelPlaceholder.setDisable(false);","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"chanellNg"},"content":"        personListPanelPlaceholder.setDisable(false);","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"chanellNg"},"content":"        sessionListPanel \u003d new SessionListPanel(logic.getFilteredSessionList());","lastModifiedDate":"2021-03-22"},{"lineNumber":171,"author":{"gitId":"chanellNg"},"content":"        sessionListPanelPlaceholder.getChildren().add(sessionListPanel.getRoot());","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"chanellNg"},"content":"        if (viewSession) {","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"chanellNg"},"content":"            viewIndividualPlaceholder.getItems().addAll(sessionListPanelPlaceholder, personListPanelPlaceholder);","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"chanellNg"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"chanellNg"},"content":"            viewIndividualPlaceholder.getItems().addAll(personListPanelPlaceholder, sessionListPanelPlaceholder);","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-03-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-03-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2021-03-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"chanellNg"},"content":"     * Only used when command is invalid.","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"chanellNg"},"content":"    void clearPanels() {","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"chanellNg"},"content":"        viewIndividualPlaceholder.getItems().clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"chanellNg"},"content":"        personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"chanellNg"},"content":"        sessionListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"chanellNg"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"chanellNg"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"chanellNg"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"chanellNg"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"chanellNg"},"content":"            clearPanels();","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"Bennyphoe"},"content":"            if (commandResult.getFeedbackToUser().equals(ListCommand.MESSAGE_SUCCESS_SESSIONS)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"Bennyphoe"},"content":"                fillInnerPartsWithSessions();","lastModifiedDate":"2021-03-14"},{"lineNumber":268,"author":{"gitId":"Bennyphoe"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"chanellNg"},"content":"            if (commandResult.getFeedbackToUser().equals(ViewSessionCommand.MESSAGE_SUCCESS)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":271,"author":{"gitId":"chanellNg"},"content":"                boolean viewSession \u003d true;","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"chanellNg"},"content":"                fillSplitPane(viewSession);","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"chanellNg"},"content":"            if (commandResult.getFeedbackToUser().equals(ViewPersonCommand.MESSAGE_SUCCESS)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":276,"author":{"gitId":"chanellNg"},"content":"                boolean viewSession \u003d false;","lastModifiedDate":"2021-03-29"},{"lineNumber":277,"author":{"gitId":"chanellNg"},"content":"                fillSplitPane(viewSession);","lastModifiedDate":"2021-03-29"},{"lineNumber":278,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":279,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":280,"author":{"gitId":"chanellNg"},"content":"            if (commandResult.getFeedbackToUser().equals(ListCommand.MESSAGE_SUCCESS_PERSONS) || commandResult","lastModifiedDate":"2021-03-29"},{"lineNumber":281,"author":{"gitId":"chanellNg"},"content":"                    .getFeedbackToUser().equals(ListCommand.MESSAGE_SUCCESS_STUDENTS)","lastModifiedDate":"2021-03-29"},{"lineNumber":282,"author":{"gitId":"chanellNg"},"content":"                    || commandResult.getFeedbackToUser().equals(ListCommand.MESSAGE_SUCCESS_TUTORS)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":283,"author":{"gitId":"chanellNg"},"content":"                fillInnerParts();","lastModifiedDate":"2021-03-15"},{"lineNumber":284,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":285,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":286,"author":{"gitId":"chanellNg"},"content":"            if (commandResult.getFeedbackToUser().equals(ListCommand.MESSAGE_EMPTY_PERSON_LIST) || commandResult","lastModifiedDate":"2021-03-29"},{"lineNumber":287,"author":{"gitId":"chanellNg"},"content":"                    .getFeedbackToUser().equals(ListCommand.MESSAGE_EMPTY_SESSION_LIST)","lastModifiedDate":"2021-03-29"},{"lineNumber":288,"author":{"gitId":"chanellNg"},"content":"                    || commandResult.getFeedbackToUser().equals(ListCommand.MESSAGE_EMPTY_TUTOR_LIST)","lastModifiedDate":"2021-03-29"},{"lineNumber":289,"author":{"gitId":"chanellNg"},"content":"                    || commandResult.getFeedbackToUser().equals(ListCommand.MESSAGE_EMPTY_STUDENT_LIST)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":290,"author":{"gitId":"chanellNg"},"content":"                clearPanels();","lastModifiedDate":"2021-03-29"},{"lineNumber":291,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":292,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":293,"author":{"gitId":"chanellNg"},"content":"            if (commandResult.getFeedbackToUser().equals(String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2021-04-01"},{"lineNumber":294,"author":{"gitId":"chanellNg"},"content":"                    logic.getFilteredPersonList().size()))) {","lastModifiedDate":"2021-04-01"},{"lineNumber":295,"author":{"gitId":"chanellNg"},"content":"                fillInnerParts();","lastModifiedDate":"2021-04-01"},{"lineNumber":296,"author":{"gitId":"chanellNg"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":297,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":298,"author":{"gitId":"chanellNg"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-22"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":302,"author":{"gitId":"chanellNg"},"content":"            clearPanels();","lastModifiedDate":"2021-03-31"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chanellNg":71,"yanlingkuek":2,"-":208,"Bennyphoe":26}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"    private Label personId;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"    private Label personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"    @FXML","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"        personId.setText(person.getPersonId().toString());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"        personType.setText(person.getPersonType().toString());","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yanlingkuek":3,"-":77,"Bennyphoe":3}},{"path":"src/main/java/seedu/address/ui/SessionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"public class SessionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    private static final String FXML \u003d \"SessionListCard.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    public final Session session;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    private Label id;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"    private Label classId;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    private Label day;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"    private Label timeslot;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"    private Label subject;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"    private Label tutor;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"     * Creates a {@code SessionCode} with the given {@code Session} and index to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"    public SessionCard(Session session, int displayedIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"        this.session \u003d session;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        classId.setText(session.getClassId().toString());","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"        day.setText(session.getDay().toString());","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"        timeslot.setText(session.getTimeslot().toString());","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"        subject.setText(session.getSubject().toString());","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"        tutor.setText(session.getTutor().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"        session.getTags().stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"        if (!(other instanceof SessionCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"        SessionCard card \u003d (SessionCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Bennyphoe"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"                \u0026\u0026 session.equals(card.session);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"chanellNg":4,"Bennyphoe":72}},{"path":"src/main/java/seedu/address/ui/SessionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"public class SessionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    private static final String FXML \u003d \"SessionListPanel.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SessionListPanel.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    private ListView\u003cSession\u003e sessionListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"     * Creates a {@code sessionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"    public SessionListPanel(ObservableList\u003cSession\u003e sessionList) {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"        sessionListView.setItems(sessionList);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"        sessionListView.setCellFactory(listView -\u003e new SessionListPanel.SessionListViewCell());","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Session} using a {@code SessionCard}.","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"    class SessionListViewCell extends ListCell\u003cSession\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"        protected void updateItem(Session session, boolean empty) {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"            super.updateItem(session, empty);","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"            if (empty || session \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"                setGraphic(new SessionCard(session, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"chanellNg":1,"Bennyphoe":43}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":89,"Bennyphoe":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"         title\u003d\"EzManage App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"          \u003cSplitPane fx:id\u003d\"viewIndividualPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"          \u003cStackPane fx:id\u003d\"sessionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"          \u003c/SplitPane\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yanlingkuek":1,"chanellNg":2,"-":59,"Bennyphoe":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"        \u003cLabel fx:id\u003d\"personType\" text\u003d\"\\$PersonType\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"        \u003cLabel fx:id\u003d\"separator\" styleClass\u003d\"cell_small_label\" text\u003d\" | \" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"        \u003cLabel fx:id\u003d\"personId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$personId\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yanlingkuek":2,"-":36,"Bennyphoe":1}},{"path":"src/main/resources/view/SessionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"                \u003cLabel fx:id\u003d\"classId\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"                \u003cLabel fx:id\u003d\"day\" text\u003d\"\\$Day\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"            \u003cLabel fx:id\u003d\"timeslot\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timeslot\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"            \u003cLabel fx:id\u003d\"subject\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$subject\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"            \u003cLabel fx:id\u003d\"tutor\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$tutor\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"chanellNg":1,"Bennyphoe":36}},{"path":"src/main/resources/view/SessionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"    \u003cListView fx:id\u003d\"sessionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Bennyphoe":8}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/12345\"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"    \"tagged\" : [ \"owes Money\"],","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"human\",","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"wrongId\"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yanlingkuek":8,"-":11}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"    \"tagged\" : [ \"owes Money\"],","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"human\",","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"wrongId\"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"  \"studentCounter\" : \"1\",","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"  \"tutorCounter\" : \"2\"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yanlingkuek":7,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/2\"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/2\"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"  \"studentCounter\" : \"2\",","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"  \"tutorCounter\" : \"0\"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yanlingkuek":7,"-":11,"Bennyphoe":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"human\",","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"wrongId\"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"  \"studentCounter\" : \"1\",","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"  \"tutorCounter\" : \"2\"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yanlingkuek":6,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/1\"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/2\"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/3\"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/4\"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/5\"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/6\"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"    \"personType\" : \"student\",","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"    \"personId\" : \"s/7\"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"  \"studentCounter\" : \"7\",","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"  \"tutorCounter\" : \"0\"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yanlingkuek":17,"-":38,"Bennyphoe":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_TYPE_DESC_STUDENT;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"        JsonAddressBookStorage sessionStorage \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"session.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, sessionStorage, userPrefsStorage);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"yanlingkuek"},"content":"        String deletePersonCommand \u003d \"delete_person s/20\";","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"        assertCommandException(deletePersonCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" persons\";","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_EMPTY_PERSON_LIST, model);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"Bennyphoe"},"content":"        JsonAddressBookStorage sessionStorage \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"Bennyphoe"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"session.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"Bennyphoe"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, sessionStorage, userPrefsStorage);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"car155"},"content":"        String addPersonCommand \u003d AddPersonCommand.COMMAND_WORD + PERSON_TYPE_DESC_STUDENT + NAME_DESC_AMY","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"car155"},"content":"        assertCommandFailure(addPersonCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"car155":3,"yanlingkuek":2,"chanellNg":1,"-":153,"Bennyphoe":9}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"car155"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"car155":5,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"car155"},"content":"        assertThrows(CommandException.class, AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"car155"},"content":"                modelStub));","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"car155"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"car155"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"car155"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"Bennyphoe"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"        public ObservableList\u003cSession\u003e getFilteredSessionList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"            return null;","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"Bennyphoe"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"Bennyphoe"},"content":"        public void updateFilteredSessionList(Predicate\u003cSession\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"car155"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":162,"author":{"gitId":"car155"},"content":"        public void addSession(Session session) {","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"car155"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":164,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"chanellNg"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"chanellNg"},"content":"        public void deleteSession(Session session) {","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"chanellNg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"chanellNg"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"chanellNg"},"content":"        public void setSession(Session target, Session editedSession) {","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"chanellNg"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"chanellNg"},"content":"        public boolean emptySessionList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"chanellNg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"chanellNg"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"chanellNg"},"content":"        public boolean emptyPersonList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"chanellNg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"chanellNg"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"chanellNg"},"content":"        public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"chanellNg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"chanellNg"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"chanellNg"},"content":"        public ObservableList\u003cSession\u003e getUnfilteredSessionList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"chanellNg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"car155":16,"chanellNg":30,"-":185,"Bennyphoe":8}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_TYPE;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.testutil.EditPersonPersonDescriptorBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"import seedu.address.testutil.EditSessionDescriptorBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"    public static final String VALID_PERSON_TYPE_STUDENT \u003d \"student\";","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"    public static final String VALID_PERSON_TYPE_TUTOR \u003d \"tutor\";","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"    public static final String VALID_PERSON_ID_AMY \u003d \"s/1\";","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"    public static final String VALID_PERSON_ID_BOB \u003d \"t/1\";","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"    public static final String VALID_SESSION_ID_FIRST_SESSION \u003d \"c/1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"    public static final String VALID_SESSION_ID_SECOND_SESSION \u003d \"c/2\";","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"    public static final String VALID_DAY_FIRST_SESSION \u003d \"MONDAY\";","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"    public static final String VALID_DAY_SECOND_SESSION \u003d \"TUESDAY\";","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"    public static final String VALID_SUBJECT_FIRST_SESSION \u003d \"SCIENCE\";","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"    public static final String VALID_SUBJECT_SECOND_SESSION \u003d \"MATH\";","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"    public static final String VALID_TIMESLOT_FIRST_SESSION \u003d \"12:00 to 13:00\";","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"    public static final String VALID_TIMESLOT_SECOND_SESSION \u003d \"09:00 to 10:00\";","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"    public static final String VALID_TAG_SESSION \u003d \"session\";","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"    public static final String PERSON_TYPE_DESC_STUDENT \u003d \" \" + PREFIX_PERSON_TYPE + VALID_PERSON_TYPE_STUDENT;","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"    public static final String PERSON_TYPE_DESC_TUTOR \u003d \" \" + PREFIX_PERSON_TYPE + VALID_PERSON_TYPE_TUTOR;","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"    public static final String PERSON_TYPE_DESC_AMY \u003d \" \" + PREFIX_PERSON_TYPE + VALID_PERSON_TYPE_STUDENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"    public static final String PERSON_TYPE_DESC_BOB \u003d \" \" + PREFIX_PERSON_TYPE + VALID_PERSON_TYPE_TUTOR;","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"    public static final String PERSON_ID_DESC_AMY \u003d VALID_PERSON_ID_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"    public static final String PERSON_ID_DESC_BOB \u003d VALID_PERSON_ID_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"Bennyphoe"},"content":"    public static final String INVALID_PERSON_TYPE_DESC \u003d \" \" + PREFIX_PERSON_TYPE + \"invalid\";","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"    public static final String INVALID_PERSON_ID_DESC \u003d \"wrongid\";","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"    public static final EditSessionCommand.EditSessionDescriptor DESC_FIRST_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"    public static final EditSessionCommand.EditSessionDescriptor DESC_SECOND_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"yanlingkuek"},"content":"    public static final EditPersonPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"yanlingkuek"},"content":"    public static final EditPersonPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"yanlingkuek"},"content":"    public static final EditPersonDescriptor DESC_AMY_EDIT;","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"yanlingkuek"},"content":"    public static final EditPersonDescriptor DESC_BOB_EDIT;","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"yanlingkuek"},"content":"        DESC_AMY \u003d new EditPersonPersonDescriptorBuilder().withPersonType(VALID_PERSON_TYPE_STUDENT)","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"yanlingkuek"},"content":"                .withPersonId(VALID_PERSON_ID_AMY)","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"yanlingkuek"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"yanlingkuek"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"yanlingkuek"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"yanlingkuek"},"content":"        DESC_BOB \u003d new EditPersonPersonDescriptorBuilder().withPersonType(VALID_PERSON_TYPE_TUTOR)","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"yanlingkuek"},"content":"                .withPersonId(VALID_PERSON_ID_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"yanlingkuek"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"yanlingkuek"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"yanlingkuek"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"yanlingkuek"},"content":"        DESC_AMY_EDIT \u003d new EditPersonDescriptorBuilder().withPersonType(VALID_PERSON_TYPE_STUDENT)","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"yanlingkuek"},"content":"                .withPersonId(VALID_PERSON_ID_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"yanlingkuek"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"yanlingkuek"},"content":"        DESC_BOB_EDIT \u003d new EditPersonDescriptorBuilder().withPersonType(VALID_PERSON_TYPE_TUTOR)","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"yanlingkuek"},"content":"                .withPersonId(VALID_PERSON_ID_BOB)","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"yanlingkuek"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"chanellNg"},"content":"        DESC_FIRST_SESSION \u003d new EditSessionDescriptorBuilder().withSessionId(VALID_SESSION_ID_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"chanellNg"},"content":"                .withDay(VALID_DAY_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"chanellNg"},"content":"                .withSubject(VALID_SUBJECT_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"chanellNg"},"content":"                .withTimeslot(VALID_TIMESLOT_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"chanellNg"},"content":"                .withTags(VALID_TAG_SESSION).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"chanellNg"},"content":"        DESC_SECOND_SESSION \u003d new EditSessionDescriptorBuilder().withSessionId(VALID_SESSION_ID_SECOND_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":"                .withDay(VALID_DAY_SECOND_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"chanellNg"},"content":"                .withSubject(VALID_SUBJECT_SECOND_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"chanellNg"},"content":"                .withTimeslot(VALID_TIMESLOT_SECOND_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"chanellNg"},"content":"                .withTags(VALID_TAG_SESSION).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yanlingkuek":30,"chanellNg":24,"-":123,"Bennyphoe":6}},{"path":"src/test/java/seedu/address/logic/commands/DeleteSessionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalSessionIds.SESSION_ID_FIRST_CLASS;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalSessionIds.SESSION_ID_SECOND_CLASS;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalSessions.getTypicalAddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":" * {@code DeleteSessionCommand}.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"public class DeleteSessionCommandTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"    public void execute_validSessionIdFilteredList_success() {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"        Optional\u003cSession\u003e sessionToDelete \u003d model.getFilteredSessionList().stream()","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"                .filter(x-\u003e x.getClassId().equals(SESSION_ID_FIRST_CLASS)).findAny();","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        DeleteSessionCommand deleteSessionCommand \u003d new DeleteSessionCommand(SESSION_ID_FIRST_CLASS);","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"        String expectedMessage \u003d String.format(DeleteSessionCommand.MESSAGE_DELETE_SESSION_SUCCESS,","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"                sessionToDelete.get());","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"        Optional\u003cSession\u003e expectedSessionToDelete \u003d expectedModel.getFilteredSessionList().stream()","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"                .filter(x-\u003e x.getClassId().equals(SESSION_ID_FIRST_CLASS)).findAny();","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        assertCommandSuccess(deleteSessionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"    public void execute_invalidSessionIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"        SessionId outOfBoundSessionId \u003d SessionId.fromOneBased(model.getFilteredSessionList().size() + 1);","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        DeleteSessionCommand deleteSessionCommand \u003d new DeleteSessionCommand(outOfBoundSessionId);","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"        assertCommandFailure(deleteSessionCommand, model, Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"    public void equals() {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"        DeleteSessionCommand deleteFirstSessionCommand \u003d new DeleteSessionCommand(SESSION_ID_FIRST_CLASS);","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"        DeleteSessionCommand deleteSecondSessionCommand \u003d new DeleteSessionCommand(SESSION_ID_SECOND_CLASS);","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"        assertTrue(deleteFirstSessionCommand.equals(deleteFirstSessionCommand));","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"        DeleteSessionCommand deleteFirstSessionCommandCopy \u003d new DeleteSessionCommand(SESSION_ID_FIRST_CLASS);","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"        assertTrue(deleteFirstSessionCommand.equals(deleteFirstSessionCommandCopy));","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        assertFalse(deleteFirstSessionCommand.equals(1));","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"        assertFalse(deleteFirstSessionCommand.equals(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"        // different session -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"        assertFalse(deleteFirstSessionCommand.equals(deleteSecondSessionCommand));","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"chanellNg":78}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY_EDIT;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB_EDIT;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"yanlingkuek"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY_EDIT);","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY_EDIT);","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"yanlingkuek"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY_EDIT)));","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"yanlingkuek"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB_EDIT)));","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"yanlingkuek":6,"-":150}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanlingkuek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yanlingkuek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_ID_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_ID_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.testutil.EditPersonPersonDescriptorBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(new PersonId(VALID_PERSON_ID_AMY), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"yanlingkuek"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"yanlingkuek"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(lastPerson.getPersonId(), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(new PersonId(VALID_PERSON_ID_AMY),","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yanlingkuek"},"content":"                new EditPersonPersonDescriptor());","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"yanlingkuek"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"yanlingkuek"},"content":"                .filter(x-\u003e x.getPersonId().equals(new PersonId(VALID_PERSON_ID_AMY))).findAny().get();","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"yanlingkuek"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"yanlingkuek"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"yanlingkuek"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"yanlingkuek"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"yanlingkuek"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"yanlingkuek"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"yanlingkuek"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(personInFilteredList.getPersonId(),","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"yanlingkuek"},"content":"                new EditPersonPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"yanlingkuek"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"yanlingkuek"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"yanlingkuek"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"yanlingkuek"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"yanlingkuek"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"yanlingkuek"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"yanlingkuek"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(secondPerson.getPersonId(), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"yanlingkuek"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"yanlingkuek"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"yanlingkuek"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"yanlingkuek"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"yanlingkuek"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"yanlingkuek"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(firstPerson.getPersonId(),","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"yanlingkuek"},"content":"                new EditPersonPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"yanlingkuek"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"yanlingkuek"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"yanlingkuek"},"content":"        PersonId outOfBoundPersonId \u003d new PersonId(\"s/100000\");","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"yanlingkuek"},"content":"                .build();","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundPersonId, descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"yanlingkuek"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"yanlingkuek"},"content":"    public void equals() {","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"yanlingkuek"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(new PersonId(VALID_PERSON_ID_AMY), DESC_AMY);","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"yanlingkuek"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"yanlingkuek"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor copyDescriptor \u003d new EditPersonPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(firstPerson.getPersonId(), copyDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"yanlingkuek"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"yanlingkuek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"yanlingkuek"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"yanlingkuek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"yanlingkuek"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"yanlingkuek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"yanlingkuek"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"yanlingkuek"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"yanlingkuek"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(new PersonId(VALID_PERSON_ID_BOB), DESC_AMY)));","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"yanlingkuek"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"yanlingkuek"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(new PersonId(VALID_PERSON_ID_AMY), DESC_BOB)));","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yanlingkuek":165}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.testutil.EditPersonPersonDescriptorBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptorWithSameValues \u003d new EditPersonPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor editedAmy \u003d new EditPersonPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"                .build();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"        editedAmy \u003d new EditPersonPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"        editedAmy \u003d new EditPersonPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"        editedAmy \u003d new EditPersonPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"        editedAmy \u003d new EditPersonPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yanlingkuek":9,"-":50}},{"path":"src/test/java/seedu/address/logic/commands/EditSessionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_FIRST_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SECOND_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DAY_FIRST_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_FIRST_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalSessionIds.SESSION_ID_FIRST_CLASS;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalSessionIds.SESSION_ID_SECOND_CLASS;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalSessions.getTypicalAddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"import seedu.address.testutil.EditSessionDescriptorBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"import seedu.address.testutil.SessionBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"public class EditSessionCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"        Session editedSession \u003d new SessionBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand.EditSessionDescriptor descriptor \u003d new EditSessionDescriptorBuilder(editedSession).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand editSessionCommand \u003d new EditSessionCommand(SESSION_ID_FIRST_CLASS, descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        String expectedMessage \u003d String.format(EditSessionCommand.MESSAGE_EDIT_SESSION_SUCCESS, editedSession);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"        List\u003cSession\u003e lastShownList \u003d model.getFilteredSessionList();","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        Optional\u003cSession\u003e optSessionToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"                .filter(x-\u003e x.getClassId().equals(SESSION_ID_FIRST_CLASS)).findAny();","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"        Session sessionToEdit \u003d optSessionToEdit.get();","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"        expectedModel.setSession(sessionToEdit, editedSession);","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"        assertCommandSuccess(editSessionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"        int size \u003d model.getFilteredSessionList().size() - 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"        Session lastSession \u003d model.getFilteredSessionList().get(size);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"        SessionId lastSessionId \u003d lastSession.getClassId();","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"        SessionBuilder sessionInList \u003d new SessionBuilder(lastSession);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"        Session editedSession \u003d sessionInList.withDay(VALID_DAY_FIRST_SESSION).withSubject(VALID_SUBJECT_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"                .withTags(VALID_TAG_SESSION).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand.EditSessionDescriptor descriptor \u003d new EditSessionDescriptorBuilder()","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"                .withDay(VALID_DAY_FIRST_SESSION).withSubject(VALID_SUBJECT_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"                .withTags(VALID_TAG_SESSION).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand editSessionCommand \u003d new EditSessionCommand(lastSessionId, descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"        String expectedMessage \u003d String.format(EditSessionCommand.MESSAGE_EDIT_SESSION_SUCCESS, editedSession);","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"        expectedModel.setSession(lastSession, editedSession);","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"        assertCommandSuccess(editSessionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand editSessionCommand \u003d new EditSessionCommand(SESSION_ID_FIRST_CLASS,","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"                new EditSessionCommand.EditSessionDescriptor());","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"        List\u003cSession\u003e lastShownList \u003d model.getFilteredSessionList();","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"        Optional\u003cSession\u003e optSessionToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"                .filter(x-\u003e x.getClassId().equals(SESSION_ID_FIRST_CLASS)).findAny();","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"        Session sessionToEdit \u003d optSessionToEdit.get();","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"        String expectedMessage \u003d String.format(EditSessionCommand.MESSAGE_EDIT_SESSION_SUCCESS, sessionToEdit);","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"        assertCommandSuccess(editSessionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"        Integer outOfBoundSessionCount \u003d Integer.valueOf(Session.getSessionCount()) + 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":"        SessionId invalidSessionId \u003d SessionId.fromOneBased(outOfBoundSessionCount);","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand.EditSessionDescriptor descriptor \u003d new EditSessionDescriptorBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand editSessionCommand \u003d new EditSessionCommand(invalidSessionId, descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"chanellNg"},"content":"        assertCommandFailure(editSessionCommand, model, Messages.MESSAGE_INVALID_SESSION_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"chanellNg"},"content":"    public void equals() {","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"chanellNg"},"content":"        final EditSessionCommand standardCommand \u003d new EditSessionCommand(SESSION_ID_FIRST_CLASS, DESC_FIRST_SESSION);","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"chanellNg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand.EditSessionDescriptor copyDescriptor \u003d new EditSessionCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"chanellNg"},"content":"                .EditSessionDescriptor(DESC_FIRST_SESSION);","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"chanellNg"},"content":"        EditSessionCommand commandWithSameValues \u003d new EditSessionCommand(SESSION_ID_FIRST_CLASS, copyDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"chanellNg"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"chanellNg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"chanellNg"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"chanellNg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"chanellNg"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"chanellNg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"chanellNg"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"chanellNg"},"content":"        // different Session Id -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"chanellNg"},"content":"        assertFalse(standardCommand.equals(new EditSessionCommand(SESSION_ID_SECOND_CLASS, DESC_FIRST_SESSION)));","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"chanellNg"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"chanellNg"},"content":"        assertFalse(standardCommand.equals(new EditSessionCommand(SESSION_ID_FIRST_CLASS, DESC_SECOND_SESSION)));","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"chanellNg":138}},{"path":"src/test/java/seedu/address/logic/commands/EditSessionDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_FIRST_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SECOND_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DAY_SECOND_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_SECOND_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIMESLOT_SECOND_SESSION;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.EditSessionCommand.EditSessionDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"import seedu.address.testutil.EditSessionDescriptorBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"public class EditSessionDescriptorTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"    public void equals() {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"        EditSessionDescriptor descriptorWithSameValues \u003d new EditSessionDescriptor(DESC_FIRST_SESSION);","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"        assertTrue(DESC_FIRST_SESSION.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"        assertTrue(DESC_FIRST_SESSION.equals(DESC_FIRST_SESSION));","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"        assertFalse(DESC_FIRST_SESSION.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        assertFalse(DESC_FIRST_SESSION.equals(5));","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        assertFalse(DESC_FIRST_SESSION.equals(DESC_SECOND_SESSION));","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"        // different day -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"        EditSessionDescriptor editedFirstSession \u003d new EditSessionDescriptorBuilder(DESC_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"                                                    .withDay(VALID_DAY_SECOND_SESSION).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"        assertFalse(DESC_FIRST_SESSION.equals(editedFirstSession));","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        // different subject -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        editedFirstSession \u003d new EditSessionDescriptorBuilder(DESC_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"                                .withSubject(VALID_SUBJECT_SECOND_SESSION).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        assertFalse(DESC_FIRST_SESSION.equals(editedFirstSession));","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"        // different timeslot -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        editedFirstSession \u003d new EditSessionDescriptorBuilder(DESC_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"                                .withTimeslot(VALID_TIMESLOT_SECOND_SESSION).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"        assertFalse(DESC_FIRST_SESSION.equals(editedFirstSession));","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"        editedFirstSession \u003d new EditSessionDescriptorBuilder(DESC_FIRST_SESSION)","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"                                                    .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"        assertFalse(DESC_FIRST_SESSION.equals(editedFirstSession));","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"chanellNg":58}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SESSIONS;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TUTORS;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        assertCommandSuccess(new ListCommand(PREDICATE_SHOW_ALL_PERSONS,","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"                PREDICATE_SHOW_ALL_SESSIONS, \"persons\"), model,","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"                ListCommand.MESSAGE_SUCCESS_PERSONS, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        assertCommandSuccess(new ListCommand(PREDICATE_SHOW_ALL_PERSONS,","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"                PREDICATE_SHOW_ALL_SESSIONS, \"persons\"), model,","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"                ListCommand.MESSAGE_SUCCESS_PERSONS, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"jingxueguo"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"jingxueguo"},"content":"    public void execute_showAllStudents_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"jingxueguo"},"content":"        assertCommandSuccess(new ListCommand(PREDICATE_SHOW_ALL_STUDENTS,","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"jingxueguo"},"content":"                        PREDICATE_SHOW_ALL_SESSIONS, \"students\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"jingxueguo"},"content":"                model, ListCommand.MESSAGE_SUCCESS_STUDENTS, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"jingxueguo"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"jingxueguo"},"content":"    public void execute_showAllTutors_emptyList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"jingxueguo"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_TUTORS);","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"jingxueguo"},"content":"        assertCommandSuccess(new ListCommand(PREDICATE_SHOW_ALL_TUTORS,","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"jingxueguo"},"content":"                        PREDICATE_SHOW_ALL_SESSIONS, \"tutors\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"jingxueguo"},"content":"                model, ListCommand.MESSAGE_EMPTY_TUTOR_LIST, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jingxueguo":21,"chanellNg":6,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/ViewPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalPersonIds.FIRST_PERSON_ID;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.person.PersonIdPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"public class ViewPersonCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"    private Model model;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"    public void execute_viewPerson_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"        expectedModel.updateFilteredPersonList(new PersonIdPredicate(FIRST_PERSON_ID));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"        assertCommandSuccess(new ViewPersonCommand(new PersonIdPredicate(FIRST_PERSON_ID)),","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"                model, ViewPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"jingxueguo"},"content":"    public void execute_viewPerson_throwCommandException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"jingxueguo"},"content":"        expectedModel.updateFilteredPersonList(new PersonIdPredicate(new PersonId(\"t/-1\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"jingxueguo"},"content":"        assertCommandFailure(new ViewPersonCommand(new PersonIdPredicate(new PersonId(\"t/-1\"))),","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"jingxueguo"},"content":"                model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"jingxueguo"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"jingxueguo"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"jingxueguo":37,"chanellNg":4}},{"path":"src/test/java/seedu/address/logic/commands/ViewSessionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalSessionIds.SESSION_ID_FIRST_CLASS;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalSessions.getTypicalAddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionIdPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ViewSessionCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"public class ViewSessionCommandTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"    private Model model;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"        assertCommandSuccess(new ViewSessionCommand(new SessionIdPredicate(SESSION_ID_FIRST_CLASS)),","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"                model, ViewSessionCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"chanellNg":36}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PERSON_TYPE_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_TYPE_DESC_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_TYPE_DESC_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_TYPE_TUTOR;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"car155"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"car155"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PERSON_TYPE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"car155"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"car155"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"car155"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"                + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"car155"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"car155"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Bennyphoe"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"car155"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":92,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, PERSON_TYPE_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Bennyphoe"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"car155"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"car155"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"yanlingkuek"},"content":"        // missing person type prefix","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_TYPE_TUTOR + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"yanlingkuek"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"yanlingkuek"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + VALID_NAME_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"Bennyphoe"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"Bennyphoe"},"content":"                        + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"Bennyphoe"},"content":"                        + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_TYPE_TUTOR + VALID_NAME_BOB + VALID_PHONE_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"Bennyphoe"},"content":"                        + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"yanlingkuek"},"content":"        // invalid person type","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, INVALID_PERSON_TYPE_DESC + NAME_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"yanlingkuek"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"yanlingkuek"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, PersonType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + INVALID_NAME_DESC","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"Bennyphoe"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"Bennyphoe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"Bennyphoe"},"content":"                + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"Bennyphoe"},"content":"                + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"Bennyphoe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PERSON_TYPE_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"Bennyphoe"},"content":"                        + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-03-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + PERSON_TYPE_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"Bennyphoe"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"car155"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"car155":12,"yanlingkuek":34,"-":110,"Bennyphoe":19}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_ID_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.testutil.EditPersonPersonDescriptorBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddPersonCommand(person));","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"    public void parseCommand_delete() {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"            assert false;","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"            String expected \u003d \"Invalid command format! \\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yanlingkuek"},"content":"                    + \"Delete command should either be delete_person or delete_session!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yanlingkuek"},"content":"            assertEquals(expected, pe.getMessage());","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"    public void parseCommand_edit() {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"            assert false;","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yanlingkuek"},"content":"            String expected \u003d \"Invalid command format! \\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yanlingkuek"},"content":"                    + \"Edit command should either be edit_person or edit_session!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"yanlingkuek"},"content":"            assertEquals(expected, pe.getMessage());","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"yanlingkuek"},"content":"    public void parseCommand_edit_person() throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder(person).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPersonId(null);","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPersonType(null);","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"yanlingkuek"},"content":"                + \" \" + VALID_PERSON_ID_AMY + \" \" + PersonUtil.getEditPersonPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand testCommand \u003d new EditPersonCommand(new PersonId(VALID_PERSON_ID_AMY), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"yanlingkuek"},"content":"        assertEquals(testCommand, command);","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"Bennyphoe"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" persons\") instanceof ListCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"Bennyphoe"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" sessions\") instanceof ListCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"car155":3,"yanlingkuek":31,"-":95,"Bennyphoe":2}},{"path":"src/test/java/seedu/address/logic/parser/DeleteSessionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import static seedu.address.testutil.TypicalSessionIds.SESSION_ID_FIRST_CLASS;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.DeleteSessionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":" * outside of the DeleteSessionCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"public class DeleteSessionCommandParserTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"    private DeleteSessionCommandParser parser \u003d new DeleteSessionCommandParser();","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    public void parse_validArgs_returnsDeleteSessionCommand() {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        assertParseSuccess(parser, \"c/1\", new DeleteSessionCommand(SESSION_ID_FIRST_CLASS));","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"                DeleteSessionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"chanellNg":32}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_invalidCommandAndArgs_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yanlingkuek":1,"-":20}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanlingkuek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_ID_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_ID_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.testutil.EditPersonPersonDescriptorBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"yanlingkuek"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"        // no ID specified","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"        // no field specified","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY, EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yanlingkuek"},"content":"        // no ID and no field specified","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"        // negative index","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, \"s/-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"        // zero index","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yanlingkuek"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, \"i/string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + INVALID_NAME_DESC,","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"yanlingkuek"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + INVALID_PHONE_DESC,","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"yanlingkuek"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + INVALID_EMAIL_DESC,","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"yanlingkuek"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"yanlingkuek"},"content":"                Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + INVALID_TAG_DESC,","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"yanlingkuek"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"yanlingkuek"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"yanlingkuek"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"yanlingkuek"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"yanlingkuek"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + PHONE_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"yanlingkuek"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"yanlingkuek"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"yanlingkuek"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"yanlingkuek"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"yanlingkuek"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"yanlingkuek"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"yanlingkuek"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"yanlingkuek"},"content":"        assertParseFailure(parser, VALID_PERSON_ID_AMY + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"yanlingkuek"},"content":"                + VALID_ADDRESS_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"yanlingkuek"},"content":"        String targetPersonId \u003d VALID_PERSON_ID_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"yanlingkuek"},"content":"        String userInput \u003d targetPersonId + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"yanlingkuek"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"yanlingkuek"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"yanlingkuek"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"yanlingkuek"},"content":"        String targetPersonId \u003d VALID_PERSON_ID_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"yanlingkuek"},"content":"        String userInput \u003d targetPersonId + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"yanlingkuek"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"yanlingkuek"},"content":"        // name","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"yanlingkuek"},"content":"        String targetPersonId \u003d VALID_PERSON_ID_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"yanlingkuek"},"content":"        String userInput \u003d targetPersonId + NAME_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"yanlingkuek"},"content":"                .build();","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"yanlingkuek"},"content":"        // phone","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"yanlingkuek"},"content":"        userInput \u003d targetPersonId + PHONE_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"yanlingkuek"},"content":"        descriptor \u003d new EditPersonPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"yanlingkuek"},"content":"        expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"yanlingkuek"},"content":"        // email","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"yanlingkuek"},"content":"        userInput \u003d targetPersonId + EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"yanlingkuek"},"content":"        descriptor \u003d new EditPersonPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"yanlingkuek"},"content":"        expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"yanlingkuek"},"content":"        // address","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"yanlingkuek"},"content":"        userInput \u003d targetPersonId + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"yanlingkuek"},"content":"        descriptor \u003d new EditPersonPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"yanlingkuek"},"content":"        expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"yanlingkuek"},"content":"        // tags","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"yanlingkuek"},"content":"        userInput \u003d targetPersonId + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"yanlingkuek"},"content":"        descriptor \u003d new EditPersonPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"yanlingkuek"},"content":"        expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"yanlingkuek"},"content":"        String targetPersonId \u003d VALID_PERSON_ID_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"yanlingkuek"},"content":"        String userInput \u003d targetPersonId + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"yanlingkuek"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"yanlingkuek"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"yanlingkuek"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"yanlingkuek"},"content":"                .build();","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"yanlingkuek"},"content":"        // no other valid values specified","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"yanlingkuek"},"content":"        String targetPersonId \u003d VALID_PERSON_ID_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"yanlingkuek"},"content":"        String userInput \u003d targetPersonId + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"yanlingkuek"},"content":"                .build();","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"yanlingkuek"},"content":"        // other valid values specified","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"yanlingkuek"},"content":"        userInput \u003d targetPersonId + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"yanlingkuek"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"yanlingkuek"},"content":"        descriptor \u003d new EditPersonPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"yanlingkuek"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"yanlingkuek"},"content":"        expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"yanlingkuek"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"yanlingkuek"},"content":"        String targetPersonId \u003d VALID_PERSON_ID_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"yanlingkuek"},"content":"        String userInput \u003d targetPersonId + TAG_EMPTY;","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonPersonDescriptor descriptor \u003d new EditPersonPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"yanlingkuek"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(new PersonId(targetPersonId), descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"yanlingkuek"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yanlingkuek":222}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.SessionList;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"car155"},"content":"        private final ObservableList\u003cSession\u003e sessions \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"car155"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"car155"},"content":"        public ObservableList\u003cSession\u003e getSessionList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"car155"},"content":"            return sessions;","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"car155"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"Bennyphoe"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"Bennyphoe"},"content":"        public void setSessions(SessionList sessions) {","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"        public SessionList getSessions() {","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"            return null;","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"car155":7,"-":102,"Bennyphoe":10}},{"path":"src/test/java/seedu/address/model/session/DayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class DayTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Day(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    public void constructor_invalidDay_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"        String invalidDay \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Day(invalidDay));","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public void isValidDay() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        // null day","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"        assertThrows(NullPointerException.class, () -\u003e Day.isValidDay(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        // invalid day","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        assertFalse(Day.isValidDay(\"\")); // empty string","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        assertFalse(Day.isValidDay(\" \")); // spaces only","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"        assertFalse(Day.isValidDay(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        assertFalse(Day.isValidDay(\"wednesday*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        assertFalse(Day.isValidDay(\"someday\")); // invalid day","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"        // valid day","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        assertTrue(Day.isValidDay(\"monday\")); // lowercase only","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        assertTrue(Day.isValidDay(\"TUESDAY\")); // uppercase only","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        assertTrue(Day.isValidDay(\"Wednesday\")); // title case","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        assertTrue(Day.isValidDay(\"tHurSDay\")); // mix","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"car155":39}},{"path":"src/test/java/seedu/address/model/session/SubjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class SubjectTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Subject(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    public void constructor_invalidSubject_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"        String invalidSubject \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Subject(invalidSubject));","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public void isValidSubject() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        // null subject","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"        assertThrows(NullPointerException.class, () -\u003e Subject.isValidSubject(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        // invalid subject","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        assertFalse(Subject.isValidSubject(\"\")); // empty string","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        assertFalse(Subject.isValidSubject(\" \")); // spaces only","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"        assertFalse(Subject.isValidSubject(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        assertFalse(Subject.isValidSubject(\"math*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        // valid subject","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"        assertTrue(Subject.isValidSubject(\"mathematics\")); // alphabets only","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        assertTrue(Subject.isValidSubject(\"12345\")); // numbers only","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        assertTrue(Subject.isValidSubject(\"h2 mathematics\")); // alphanumeric characters","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        assertTrue(Subject.isValidSubject(\"Mathematics\")); // with capital letters","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        assertTrue(Subject.isValidSubject(\"Mathematics\")); // with valid seperators","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"        assertTrue(Subject.isValidSubject(\"O-Level Combined Humanities Geography-Literature\")); // long Subjects","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"car155":40}},{"path":"src/test/java/seedu/address/model/session/TimeComparisonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"public class TimeComparisonTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    public void isBefore() {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"        assertFalse(new Time(\"00:00\").isBefore(new Time(\"00:00\"))); // same time","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"        assertFalse(new Time(\"00:01\").isBefore(new Time(\"00:00\"))); // is after","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"        assertTrue(new Time(\"00:00\").isBefore(new Time(\"00:01\"))); // is before","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"    public void isAfter() {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        assertFalse(new Time(\"12:00\").isAfter(new Time(\"12:00\"))); // same time","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"        assertFalse(new Time(\"12:00\").isAfter(new Time(\"12:01\"))); // is after","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"        assertTrue(new Time(\"12:01\").isAfter(new Time(\"12:00\"))); // is after","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"    public void isSame() {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"        assertFalse(new Time(\"23:58\").isSame(new Time(\"23:59\"))); // is before","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        assertFalse(new Time(\"23:59\").isSame(new Time(\"23:58\"))); // is after","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        assertTrue(new Time(\"23:59\").isSame(new Time(\"23:59\"))); // is same","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"car155":29}},{"path":"src/test/java/seedu/address/model/session/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class TimeTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime));","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        // null Time","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"        assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        // invalid time","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"\")); // empty string","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\" \")); // spaces only","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"math\")); // only alphabets","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"1230\")); // missing hour-minute seperator","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"12:30^\")); // contains invalid non-alphanumeric character","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"12:30pm\")); // contains alphabet","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"24:00\")); // invalid hour","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"25:00\")); // invalid hour","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"12:60\")); // invalid minute","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"        assertFalse(Time.isValidTime(\"12:75\")); // invalid minute","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        // valid Time","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        assertTrue(Time.isValidTime(\"12:30\")); // normal time","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        assertTrue(Time.isValidTime(\"00:30\")); // hour corner case","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        assertTrue(Time.isValidTime(\"23:30\")); // hour corner case","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"        assertTrue(Time.isValidTime(\"00:00\")); // minute corner case","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"        assertTrue(Time.isValidTime(\"23:59\")); // minute corner case","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"car155":46}},{"path":"src/test/java/seedu/address/model/session/TimeslotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"car155"},"content":"package seedu.address.model.session;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"car155"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"car155"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"car155"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"car155"},"content":"public class TimeslotTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"car155"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timeslot(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"car155"},"content":"    public void constructor_invalidTimeslot_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"car155"},"content":"        String invalidTimeslot \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"car155"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Timeslot(invalidTimeslot));","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"car155"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"car155"},"content":"    public void isValidTimeslot() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"car155"},"content":"        // null Timeslot","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"car155"},"content":"        assertThrows(NullPointerException.class, () -\u003e Timeslot.isValidTimeslot(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"        // invalid Timeslot","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"\")); // empty string","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\" \")); // spaces only","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"11:30\")); // only 1 time","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"11:30 12:30\")); // missing infix","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"11:30 - 12:30\")); // wrong infix","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"11:30am to 12:30\")); // wrong time format","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"1130 to 1230\")); // wrong time format","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"23:30 to 24:30\")); // invalid time","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"12:30 to 11:30\")); // starting time after ending time","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"car155"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"12:30 to 12:30\")); // starting time same as ending time","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"car155"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"car155"},"content":"        // valid Timeslot","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"car155"},"content":"        assertTrue(Timeslot.isValidTimeslot(\"12:00 to 14:00\")); // valid timeslot","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"car155"},"content":"        assertTrue(Timeslot.isValidTimeslot(\"00:30 to 02:30\")); // hour corner case","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"car155"},"content":"        assertTrue(Timeslot.isValidTimeslot(\"23:00 to 23:30\")); // hour corner case","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"car155"},"content":"        assertTrue(Timeslot.isValidTimeslot(\"00:00 to 02:00\")); // minute corner case","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"car155"},"content":"        assertTrue(Timeslot.isValidTimeslot(\"22:59 to 23:59\")); // minute corner case","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"car155"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"car155"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"car155":45}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    private static final String INVALID_PERSON_TYPE \u003d \"invalid\";","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"    private static final String INVALID_PERSON_ID \u003d \"wrongId\";","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"    private static final String VALID_PERSON_TYPE \u003d \"student\";","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"    private static final String VALID_PERSON_ID \u003d \"s/1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"    private static final List\u003cJsonAdaptedSessionId\u003e VALID_SESSIONS \u003d BENSON.getSessions()","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"            .stream().map(JsonAdaptedSessionId::new).collect(Collectors.toList());","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"                        VALID_TAGS, VALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"                VALID_TAGS, VALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"                        VALID_TAGS, VALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Bennyphoe"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"                        VALID_TAGS, VALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Bennyphoe"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"Bennyphoe"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"Bennyphoe"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"Bennyphoe"},"content":"                        VALID_TAGS, VALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"Bennyphoe"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"                null, VALID_TAGS, VALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"Bennyphoe"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"Bennyphoe"},"content":"                        invalidTags, VALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"Bennyphoe"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"Bennyphoe"},"content":"    public void toModelType_invalidPersonType_throwsIllegalValueException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"Bennyphoe"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"Bennyphoe"},"content":"                VALID_ADDRESS, VALID_TAGS, INVALID_PERSON_TYPE, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"Bennyphoe"},"content":"        String expectedMessage \u003d PersonType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"Bennyphoe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"Bennyphoe"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":135,"author":{"gitId":"Bennyphoe"},"content":"    public void toModelType_nullPersonType_throwsIllegalValueException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"Bennyphoe"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"Bennyphoe"},"content":"                VALID_ADDRESS, VALID_TAGS, null, VALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"Bennyphoe"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PersonType.class.getSimpleName());","lastModifiedDate":"2021-03-01"},{"lineNumber":139,"author":{"gitId":"Bennyphoe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"yanlingkuek"},"content":"    public void toModelType_invalidPersonId_throwsIllegalValueException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"yanlingkuek"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"Bennyphoe"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_PERSON_TYPE, INVALID_PERSON_ID, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"yanlingkuek"},"content":"        String expectedMessage \u003d PersonId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"yanlingkuek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"yanlingkuek"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"yanlingkuek"},"content":"    public void toModelType_nullPersonId_throwsIllegalValueException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"yanlingkuek"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"Bennyphoe"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_PERSON_TYPE, null, VALID_SESSIONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"yanlingkuek"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PersonId.class.getSimpleName());","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"yanlingkuek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yanlingkuek":16,"-":101,"Bennyphoe":39}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"        JsonAddressBookStorage sessionStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"sb\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, sessionStorage, userPrefsStorage);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"Bennyphoe":2}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"        descriptor.setPersonType(person.getPersonType());","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPersonId(person.getPersonId());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"     * Sets the {@code PersonType} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"Bennyphoe"},"content":"    public EditPersonDescriptorBuilder withPersonType(String personType) {","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"Bennyphoe"},"content":"        descriptor.setPersonType(new PersonType(personType));","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"Bennyphoe"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"yanlingkuek"},"content":"     * Sets the {@code PersonId} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonDescriptorBuilder withPersonId(String personId) {","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPersonId(new PersonId(personId));","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"yanlingkuek"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yanlingkuek":9,"-":88,"Bennyphoe":9}},{"path":"src/test/java/seedu/address/testutil/EditPersonPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yanlingkuek"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yanlingkuek"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yanlingkuek"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yanlingkuek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yanlingkuek"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"yanlingkuek"},"content":" * A utility class to help with building EditPersonPersonDescriptor objects.","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yanlingkuek"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yanlingkuek"},"content":"public class EditPersonPersonDescriptorBuilder {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yanlingkuek"},"content":"    private EditPersonPersonDescriptor descriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder() {","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yanlingkuek"},"content":"        descriptor \u003d new EditPersonPersonDescriptor();","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder(EditPersonPersonDescriptor descriptor) {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yanlingkuek"},"content":"        this.descriptor \u003d new EditPersonPersonDescriptor(descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"     * Returns an {@code EditPersonPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"yanlingkuek"},"content":"        descriptor \u003d new EditPersonPersonDescriptor();","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPersonType(person.getPersonType());","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPersonId(person.getPersonId());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"     * Sets the {@code Name} of the {@code EditPersonPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"     * Sets the {@code Phone} of the {@code EditPersonPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yanlingkuek"},"content":"     * Sets the {@code Email} of the {@code EditPersonPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"     * Sets the {@code Address} of the {@code EditPersonPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yanlingkuek"},"content":"     * Sets the {@code PersonType} of the {@code EditPersonPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder withPersonType(String personType) {","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPersonType(new PersonType(personType));","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"yanlingkuek"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"yanlingkuek"},"content":"     * Sets the {@code PersonId} of the {@code EditPersonPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder withPersonId(String personId) {","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setPersonId(new PersonId(personId));","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"yanlingkuek"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"yanlingkuek"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonPersonDescriptor}","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"yanlingkuek"},"content":"     * that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"yanlingkuek"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"yanlingkuek"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"yanlingkuek"},"content":"    public EditPersonPersonDescriptor build() {","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"yanlingkuek"},"content":"        return descriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"yanlingkuek"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yanlingkuek":106}},{"path":"src/test/java/seedu/address/testutil/EditSessionDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import seedu.address.logic.commands.EditSessionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Day;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Subject;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Timeslot;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":" * A utility class to help with building EditSessionDescriptor objects.","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"public class EditSessionDescriptorBuilder {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"    private EditSessionCommand.EditSessionDescriptor descriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    public EditSessionDescriptorBuilder() {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"        descriptor \u003d new EditSessionCommand.EditSessionDescriptor();","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    public EditSessionDescriptorBuilder(EditSessionCommand.EditSessionDescriptor descriptor) {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"        this.descriptor \u003d new EditSessionCommand.EditSessionDescriptor(descriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"     * Returns an {@code EditSessionDescriptor} with fields containing {@code session}\u0027s details","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"    public EditSessionDescriptorBuilder(Session session) {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"        descriptor \u003d new EditSessionCommand.EditSessionDescriptor();","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"        descriptor.setSessionId(session.getClassId());","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        descriptor.setDay(session.getDay());","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"        descriptor.setSubject(session.getSubject());","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"        descriptor.setTimeSlot(session.getTimeslot());","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"        descriptor.setTags(session.getTags());","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"     * Sets the {@code Session Id} of the {@code EditSessionDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"    public seedu.address.testutil.EditSessionDescriptorBuilder withSessionId(String sessionId) {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        descriptor.setSessionId(new SessionId(sessionId));","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"     * Sets the {@code Day} of the {@code EditSessionDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"    public seedu.address.testutil.EditSessionDescriptorBuilder withDay(String day) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"        descriptor.setDay(new Day(day));","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"     * Sets the {@code Subject} of the {@code EditSessionDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"    public seedu.address.testutil.EditSessionDescriptorBuilder withSubject(String subject) {","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"        descriptor.setSubject(new Subject(subject));","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"     * Sets the {@code Timeslot} of the {@code EditSessionDescriptor} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"    public seedu.address.testutil.EditSessionDescriptorBuilder withTimeslot(String timeslot) {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        descriptor.setTimeSlot(new Timeslot(timeslot));","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditSessionDescriptor}","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"     * that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"    public seedu.address.testutil.EditSessionDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"    public EditSessionCommand.EditSessionDescriptor build() {","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"        return descriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"chanellNg":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.person.Tutor;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"    public static final String DEFAULT_PERSON_TYPE \u003d \"student\";","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"yanlingkuek"},"content":"    public static final String DEFAULT_PERSON_ID \u003d \"s/1\";","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"    private PersonType personType;","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"yanlingkuek"},"content":"    private PersonId personId;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"    private List\u003cSessionId\u003e sessions;","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"        personType \u003d new PersonType(DEFAULT_PERSON_TYPE);","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"yanlingkuek"},"content":"        personId \u003d new PersonId(DEFAULT_PERSON_ID);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"        sessions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"        personType \u003d personToCopy.getPersonType();","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"        personId \u003d personToCopy.getPersonId();","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"        sessions \u003d personToCopy.getSessions();","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":111,"author":{"gitId":"Bennyphoe"},"content":"     * Sets the {@code PersonType} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"    public PersonBuilder withPersonType(String type) {","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"        this.personType \u003d new PersonType(type);","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"yanlingkuek"},"content":"     * Sets the {@code PersonId} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"yanlingkuek"},"content":"    public PersonBuilder withPersonId(String id) {","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"yanlingkuek"},"content":"        this.personId \u003d new PersonId(id);","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"yanlingkuek"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"Bennyphoe"},"content":"     * Parses the {@code sessionIds} into a {@code List\u003cSessionId\u003e} and set it to the {@code Person}","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"Bennyphoe"},"content":"     * that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"Bennyphoe"},"content":"     * @param sessionId","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"Bennyphoe"},"content":"     * @return","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"Bennyphoe"},"content":"    public PersonBuilder withSessions(String ... sessionId) {","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"Bennyphoe"},"content":"        this.sessions \u003d SampleDataUtil.getSessionIds();","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"Bennyphoe"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"Bennyphoe"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"Bennyphoe"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"Bennyphoe"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"Bennyphoe"},"content":"     * Build","lastModifiedDate":"2021-03-01"},{"lineNumber":139,"author":{"gitId":"Bennyphoe"},"content":"     * @return Person","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"Bennyphoe"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":142,"author":{"gitId":"Bennyphoe"},"content":"        if (this.personType.toString().equals(\"student\")) {","lastModifiedDate":"2021-03-01"},{"lineNumber":143,"author":{"gitId":"Bennyphoe"},"content":"            Person student \u003d new Student(personId, name, phone, email, address, tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"Bennyphoe"},"content":"            student.getSessions().addAll(sessions);","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"Bennyphoe"},"content":"            return student;","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"Bennyphoe"},"content":"        } else {","lastModifiedDate":"2021-03-01"},{"lineNumber":147,"author":{"gitId":"Bennyphoe"},"content":"            Person tutor \u003d new Tutor(personId, name, phone, email, address, tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"Bennyphoe"},"content":"            tutor.getSessions().addAll(sessions);","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"Bennyphoe"},"content":"            return tutor;","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"Bennyphoe"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"yanlingkuek":13,"-":96,"Bennyphoe":44}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_TYPE;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"car155"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"yanlingkuek"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonPersonDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"car155"},"content":"    public static String getAddPersonCommand(Person person) {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"car155"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"        sb.append(PREFIX_PERSON_TYPE + person.getPersonType().toString() + \" \");","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"yanlingkuek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yanlingkuek"},"content":"     * Returns the part of command string for the given {@code EditPersonPersonDescriptor}\u0027s details.","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"yanlingkuek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"yanlingkuek"},"content":"    public static String getEditPersonPersonDescriptorDetails(EditPersonPersonDescriptor descriptor) {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"yanlingkuek"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"yanlingkuek"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yanlingkuek"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yanlingkuek"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"yanlingkuek"},"content":"            } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"yanlingkuek"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"yanlingkuek"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"yanlingkuek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"yanlingkuek"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"yanlingkuek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"car155":3,"yanlingkuek":21,"-":59,"Bennyphoe":2}},{"path":"src/test/java/seedu/address/testutil/SessionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Day;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Subject;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Timeslot;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":" * A utility class to help with building Session objects.","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"public class SessionBuilder {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    public static final String DEFAULT_SESSION_ID \u003d \"c/1\";","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"    public static final String DEFAULT_DAY \u003d \"MONDAY\";","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"    public static final String DEFAULT_SUBJECT \u003d \"BIOLOGY\";","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    public static final String DEFAULT_TIMESLOT \u003d \"12:00 to 13:00\";","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"    private SessionId sessionId;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    private Day day;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"    private Subject subject;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    private Timeslot timeslot;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"     * Creates a {@code SessionBuilder} with the default details.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"    public SessionBuilder() {","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"        sessionId \u003d new SessionId(DEFAULT_SESSION_ID);","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        day \u003d new Day(DEFAULT_DAY);","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"        subject \u003d new Subject(DEFAULT_SUBJECT);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"        timeslot \u003d new Timeslot(DEFAULT_TIMESLOT);","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"     * Initializes the SessionBuilder with the data of {@code sessionToCopy}.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"    public SessionBuilder(Session sessionToCopy) {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        sessionId \u003d sessionToCopy.getClassId();","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        day \u003d sessionToCopy.getDay();","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"        subject \u003d sessionToCopy.getSubject();","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"        timeslot \u003d sessionToCopy.getTimeslot();","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        tags \u003d new HashSet\u003c\u003e(sessionToCopy.getTags());","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"     * Sets the {@code SessionId} of the {@code Session} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"    public SessionBuilder withSessionId(String sessionId) {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"        this.sessionId \u003d new SessionId(sessionId);","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Session} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"    public SessionBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"     * Sets the {@code Day} of the {@code Session} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"    public SessionBuilder withDay(String day) {","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"        this.day \u003d new Day(day);","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"     * Sets the {@code Subject} of the {@code Session} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"    public SessionBuilder withSubject(String subject) {","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"        this.subject \u003d new Subject(subject);","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"     * Sets the {@code Timeslot} of the {@code Session} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"    public SessionBuilder withTimeslot(String timeslot) {","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"        this.timeslot \u003d new Timeslot(timeslot);","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"     * Build","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"     * @return Session","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":"    public Session build() {","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"        return new Session(sessionId, day, timeslot, subject, tags);","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"chanellNg":100}},{"path":"src/test/java/seedu/address/testutil/TypicalPersonIds.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":" * A utility class containing a list of {@code SessionId} objects to be used in tests.","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"public class TypicalPersonIds {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"    public static final PersonId FIRST_PERSON_ID \u003d new PersonId(\"s/1\");","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chanellNg":10}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_ID_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"yanlingkuek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_ID_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"yanlingkuek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"yanlingkuek"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonType(\"student\")","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonId(\"s/1\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"yanlingkuek"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonType(\"student\")","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"            .withPersonId(\"s/2\").withSessions(\"c/1\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"yanlingkuek"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonType(\"student\")","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonId(\"s/3\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"yanlingkuek"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonType(\"student\")","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonId(\"s/4\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"yanlingkuek"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonType(\"student\")","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonId(\"s/5\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"yanlingkuek"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonType(\"student\")","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonId(\"s/6\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"yanlingkuek"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonType(\"student\")","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonId(\"s/7\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"yanlingkuek"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonId(VALID_PERSON_ID_AMY).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"yanlingkuek"},"content":"            .withPersonId(VALID_PERSON_ID_BOB)","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"yanlingkuek":26,"-":68,"Bennyphoe":1}},{"path":"src/test/java/seedu/address/testutil/TypicalSessionIds.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.SessionId;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":" * A utility class containing a list of {@code SessionId} objects to be used in tests.","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"public class TypicalSessionIds {","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"    public static final SessionId SESSION_ID_FIRST_CLASS \u003d SessionId.fromOneBased(1);","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"    public static final SessionId SESSION_ID_SECOND_CLASS \u003d SessionId.fromOneBased(2);","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"chanellNg":11}},{"path":"src/test/java/seedu/address/testutil/TypicalSessions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":" * A utility class containing a list of {@code Session} objects to be used in tests.","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"public class TypicalSessions {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"    public static final Session FIRST_SESSION \u003d new SessionBuilder().withSessionId(\"c/1\")","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"            .withDay(\"MONDAY\").withTimeslot(\"09:30 to 12:00\")","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"            .withSubject(\"Piano\").withTags(\"Morning\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    public static final Session SECOND_SESSION \u003d new SessionBuilder().withSessionId(\"c/2\")","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"            .withDay(\"TUESDAY\").withTimeslot(\"12:00 to 13:00\")","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"            .withSubject(\"CHEMISTRY\").withTags(\"AFTERNOON\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    public static final Session THIRD_SESSION \u003d new SessionBuilder().withSessionId(\"c/3\")","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"            .withDay(\"WEDNESDAY\").withTimeslot(\"14:30 to 16:00\")","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"            .withSubject(\"MATH\").withTags(\"EVENING\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"    public static final Session FOURTH_SESSION \u003d new SessionBuilder().withSessionId(\"c/4\")","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"            .withDay(\"THURSDAY\").withTimeslot(\"12:30 to 13:00\")","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"            .withSubject(\"SCIENCE\").withTags(\"AFTERNOON\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    public static final Session FIFTH_SESSION \u003d new SessionBuilder().withSessionId(\"c/5\")","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"            .withDay(\"FRIDAY\").withTimeslot(\"08:30 to 10:00\")","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"            .withSubject(\"CHINESE\").withTags(\"Morning\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"    public static final Session SIXTH_SESSION \u003d new SessionBuilder().withSessionId(\"c/6\")","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"            .withDay(\"SATURDAY\").withTimeslot(\"12:30 to 13:00\")","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"            .withSubject(\"Piano\").withTags(\"Morning\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"    public static final Session SEVENTH_SESSION \u003d new SessionBuilder().withSessionId(\"c/7\")","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"            .withDay(\"SUNDAY\").withTimeslot(\"15:00 to 16:00\")","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"            .withSubject(\"PHYSICS\").withTags(\"AFTERNOON\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"    private TypicalSessions() {","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"     * Returns an {@code AddressBook} with all the typical sessions.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        for (Session session : getTypicalSessions()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"            ab.addSession(session);","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        Session.setSessionCount(\"7\");","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"        return ab;","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"    public static List\u003cSession\u003e getTypicalSessions() {","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FIRST_SESSION , SECOND_SESSION , THIRD_SESSION,","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"                FOURTH_SESSION , FIFTH_SESSION , SIXTH_SESSION , SEVENTH_SESSION));","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"chanellNg":57}}]
