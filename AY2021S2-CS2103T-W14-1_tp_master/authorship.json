[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# FriendDex","lastModifiedDate":"2021-02-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-13"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W14-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-W14-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"* For the detailed documentation of this project, see the **[FriendDex Product Website](https://ay2021s2-cs2103t-w14-1.github.io/tp/)**.","lastModifiedDate":"2021-02-22"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-22"}],"authorContributionMap":{"ivantjh":3,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"    implementation group: \u0027org.controlsfx\u0027, name: \u0027controlsfx\u0027, version: \u002711.1.0\u0027","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"    archiveName \u003d \u0027friendDex.jar\u0027","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"run {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ivantjh":5,"-":73}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for a modified version of the module\u0027s code standard at","lastModifiedDate":"2016-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://oss-generic.github.io/process/codingstandards/coding-standards-java.html","lastModifiedDate":"2016-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":311,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"ivantjh"},"content":"      \u003cproperty name\u003d\"arrayInitIndent\" value\u003d\"8\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every class, enumeration and interface have a header comment. --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":404,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ivantjh":1,"-":403}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"### Muhammad Assyarul Ariffin Bin Omar","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"\u003cimg src\u003d\"images/assyarul.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"[[github](https://github.com/assyarul)]","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"* Role: Developer","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"### Lin Lue","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"\u003cimg src\u003d\"images/lue97.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"[[github](https://github.com/lue97)]","lastModifiedDate":"2021-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"### Chester How","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"\u003cimg src\u003d\"images/chesterhow.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"[[homepage](https://chester.how)]","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"[[github](https://github.com/chesterhow)]","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"* Responsibilities: UI + Integration","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"### Tan Jun Han Ivan","lastModifiedDate":"2021-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"\u003cimg src\u003d\"images/ivantjh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"[[github](https://github.com/ivantjh)]","lastModifiedDate":"2021-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-25"}],"authorContributionMap":{"Assyarul":3,"lue97":2,"ivantjh":4,"-":27,"chesterhow":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"each component.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"the [diagrams](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/docs/diagrams/) folder. Refer to the [_PlantUML","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"diagrams.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"**`Main`** has two classes","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"called [`Main`](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"and [`MainApp`](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"is responsible for,","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"the command `delete 1`.","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"the [`MainWindow`](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"is specified","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"Assyarul"},"content":"in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Assyarul"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"lue97"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"lue97"},"content":"   help to the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Assyarul"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for a typical Command.","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Assyarul"},"content":"![Interactions Inside the Logic Component](images/CommandSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"Assyarul"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `CommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"Assyarul"},"content":"#### Command Implementations","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"Assyarul"},"content":"The diagram below further explains the implementation of individual commands.","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"Assyarul"},"content":"1. AddGroup Command","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"Assyarul"},"content":"![](images/AddGroupSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"lue97"},"content":"**","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"Assyarul"},"content":"API** : [`Model.java`](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"lue97"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"lue97"},"content":"  the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"lue97"},"content":"**","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"Assyarul"},"content":"API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"lue97"},"content":"### Theme","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"lue97"},"content":"The implementation of theme is done by parsing the raw values of the `json` file containing a color palette, and then","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"lue97"},"content":"transforming them into a `css` file that is then applied to `MainWindow.fxml`. All other elements will read from the","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"lue97"},"content":"same `css` file. When the application is first launched, it will apply the default theme constructed by `ThemeFactory`.","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"lue97"},"content":"When a theme is set by the command, it and it\u0027s temporary `css` file will be stored as variables in `ThemeManager`,","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"lue97"},"content":"which will subsequently be used by the other parts of the application (for e.g. messageboxes).","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"lue97"},"content":"#### Initialization","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"lue97"},"content":"When the application starts up, it first checks for any previously used themes in `UserPrefs`. If not found, the","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"lue97"},"content":"application continues to use the default theme. Otherwise, it attempts to load the theme file with","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"lue97"},"content":"`ThemeFactory#load()`.","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"lue97"},"content":"![Sequence diagram for `ThemeManager` initialization](images/ThemeInitializationSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"lue97"},"content":"#### Command Invocation","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"lue97"},"content":"When the command `theme` is invoked, the following happens:","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"lue97"},"content":"1. A `Theme t` instance is created by calling `ThemeManager#load(FILE)`, where `FILE` is the supplied file path.","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"lue97"},"content":"2. `ThemeManager#setTheme(t, FILE)` is then called. This stores/generates the following:","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"lue97"},"content":"    * `theme` - The `Theme` object currently used.","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"lue97"},"content":"    * `themePath` - The path of the `json` file.","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"lue97"},"content":"    * `cssCacheUri` - The temp file containing the `CSS` to be used by `MainWindow.fxml`\u0027s `scene`.","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"lue97"},"content":"3. When the command gets executed, the result is processed by `MainWindow#executeCommand()`. The flag `theme` will be","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"lue97"},"content":"set, informing the application that there is a change in `cssCacheUri` and it applies the theme.","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"lue97"},"content":"The following sequence diagram depicts the simplified workings of the command:","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"lue97"},"content":"![Sequence diagram for theme invocation](images/ThemeCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"lue97"},"content":"#### Termination","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"lue97"},"content":"When the program terminates, `themePath` is saved into `UserPrefs` so it can locate the same theme for subsequent runs.","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"chesterhow"},"content":"### Details panel tab switching","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"chesterhow"},"content":"The `DetailsPanel` is used for displaying multiple types of content. We will refer to each type of content as a tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"chesterhow"},"content":"By default, it displays a list of upcoming dates, but it can be toggled to display other tabs as well. ","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"chesterhow"},"content":"#### Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"chesterhow"},"content":"All tabs are contained in the `DetailsPanel` fxml file as elements, and are recorded as enums under [`DetailsPanelTab.java`](https://github.com/AY2021S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/commons/core/DetailsPanelTab.java).","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"chesterhow"},"content":"Toggling to a new tab is done by executing commands. The enum representation of the new tab is stored in the executed","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"chesterhow"},"content":"command\u0027s `CommandResult`, which is then parsed by the `MainWindow` UI component. If a new tab is found in `CommandResult`,","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"chesterhow"},"content":"`MainWindow` calls `DetailsPanel#toggleTab()` and `DetailsPanel` will switch to the new tab accordingly.","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"chesterhow"},"content":"[comment]: \u003c\u003e (Todo: add sequence diagram)","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"ivantjh"},"content":"### Add Picture","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"ivantjh"},"content":"FriendDex allows users to add a picture to their contact. This section details the implementation of that feature.","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"ivantjh"},"content":"#### Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"ivantjh"},"content":"1. The user will first supply the index of the contact to edit and the path to an image file.","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"ivantjh"},"content":"2. `AddPictureCommand` will take the file path and validate it.","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"ivantjh"},"content":"3. If everything looks good, the image file will be renamed to a random UUID and copied to `[JAR file location]/data`. The renaming is done to avoid problems with two image files having the same file name.","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"ivantjh"},"content":"4. A `Picture` object will then be created, storing the file path of the copied image file.","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"ivantjh"},"content":"5. Lastly, it will be attached to the `Person` being edited and saved to `Model`.","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"ivantjh"},"content":"The below sequence diagram depicts the execution path when a `AddPictureCommand` is executed.","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"ivantjh"},"content":"![AddPictureSequenceDiagram](images/AddPictureSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"lue97"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2021-03-12"},{"lineNumber":227,"author":{"gitId":"lue97"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2021-03-12"},{"lineNumber":228,"author":{"gitId":"lue97"},"content":"following operations:","lastModifiedDate":"2021-03-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"lue97"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-03-12"},{"lineNumber":231,"author":{"gitId":"lue97"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-03-12"},{"lineNumber":232,"author":{"gitId":"lue97"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-03-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"lue97"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2021-03-12"},{"lineNumber":235,"author":{"gitId":"lue97"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2021-03-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"lue97"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2021-03-12"},{"lineNumber":240,"author":{"gitId":"lue97"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-03-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"lue97"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2021-03-12"},{"lineNumber":245,"author":{"gitId":"lue97"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2021-03-12"},{"lineNumber":246,"author":{"gitId":"lue97"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2021-03-12"},{"lineNumber":247,"author":{"gitId":"lue97"},"content":"state.","lastModifiedDate":"2021-03-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"lue97"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`","lastModifiedDate":"2021-03-12"},{"lineNumber":252,"author":{"gitId":"lue97"},"content":", causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"lue97"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2021-03-12"},{"lineNumber":261,"author":{"gitId":"lue97"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2021-03-12"},{"lineNumber":262,"author":{"gitId":"lue97"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-03-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"lue97"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2021-03-12"},{"lineNumber":280,"author":{"gitId":"lue97"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-03-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"lue97"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2021-03-12"},{"lineNumber":287,"author":{"gitId":"lue97"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2021-03-12"},{"lineNumber":288,"author":{"gitId":"lue97"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-03-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"lue97"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2021-03-12"},{"lineNumber":293,"author":{"gitId":"lue97"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2021-03-12"},{"lineNumber":294,"author":{"gitId":"lue97"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2021-03-12"},{"lineNumber":295,"author":{"gitId":"lue97"},"content":"desktop applications follow.","lastModifiedDate":"2021-03-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"lue97"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-03-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"Assyarul"},"content":"* is a young programmer studying in NUS Computer Science","lastModifiedDate":"2021-02-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":342,"author":{"gitId":"Assyarul"},"content":"* has difficulty maintaining personal relationships","lastModifiedDate":"2021-02-23"},{"lineNumber":343,"author":{"gitId":"Assyarul"},"content":"* cannot recall previous conversations with others","lastModifiedDate":"2021-02-23"},{"lineNumber":344,"author":{"gitId":"Assyarul"},"content":"* is a goal-driven individual and seeks new challenges.","lastModifiedDate":"2021-02-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"Assyarul"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":348,"author":{"gitId":"Assyarul"},"content":"* makes relationship management easier for the user","lastModifiedDate":"2021-02-23"},{"lineNumber":349,"author":{"gitId":"Assyarul"},"content":"    * keeps track of personal relationship with users\u0027 friends","lastModifiedDate":"2021-02-23"},{"lineNumber":350,"author":{"gitId":"Assyarul"},"content":"* manages relationship faster than a mouse-driven app.","lastModifiedDate":"2021-02-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"Assyarul"},"content":"| Category            | As a/an...         | I can...                                                                               | So that...                                                          |","lastModifiedDate":"2021-02-23"},{"lineNumber":355,"author":{"gitId":"Assyarul"},"content":"|---------------------|--------------------|----------------------------------------------------------------------------------------|---------------------------------------------------------------------|","lastModifiedDate":"2021-02-23"},{"lineNumber":356,"author":{"gitId":"Assyarul"},"content":"| Birthdays           | Forgetful User     | Add a birthday to a contact                                                            | I can remember when that person\u0027s birthday is                       |","lastModifiedDate":"2021-02-23"},{"lineNumber":357,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":358,"author":{"gitId":"Assyarul"},"content":"| Grouping/tagging    | Forgetful User     | Tags to identify people with the same name                                             | I can easily differentiate between friends who has the same name.   |","lastModifiedDate":"2021-02-23"},{"lineNumber":359,"author":{"gitId":"Assyarul"},"content":"| Grouping/tagging    | Orderly User       | Create new friend groups                                                               | Customize my own categories of friends                              |","lastModifiedDate":"2021-02-23"},{"lineNumber":360,"author":{"gitId":"Assyarul"},"content":"| Grouping/tagging    | Orderly User       | Group my contacts by categories                                                        | I easily check contacts in a certain category                       |","lastModifiedDate":"2021-02-23"},{"lineNumber":361,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":362,"author":{"gitId":"Assyarul"},"content":"| Friend details      | Forgetful User     | Track how much debt is owed by/to the person                                           | I can get my money back or pay the money back.                      |","lastModifiedDate":"2021-02-23"},{"lineNumber":363,"author":{"gitId":"Assyarul"},"content":"| Friend details      | User               | Store dietary habits/allergies on the contact                                          | I don\u0027t accidentally kill him when buying food for him              |","lastModifiedDate":"2021-03-24"},{"lineNumber":364,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":365,"author":{"gitId":"Assyarul"},"content":"| Customized UI       | User               | Choose between light/dark mode for the app                                             | It fits the aesthetics of my comptuer                               |","lastModifiedDate":"2021-02-23"},{"lineNumber":366,"author":{"gitId":"Assyarul"},"content":"| Customized UI       | Artsy User         | Customize the way the application looks                                                | It matches the aesthetics of my computer                            |","lastModifiedDate":"2021-02-23"},{"lineNumber":367,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":368,"author":{"gitId":"Assyarul"},"content":"| User Guide          | New User           | Easily access the user guide                                                           | I can understand how the app works easily                           |","lastModifiedDate":"2021-02-23"},{"lineNumber":369,"author":{"gitId":"Assyarul"},"content":"| User Guide          | New User           | Search for frequently asked question in the application                                | I can find help easily                                              |","lastModifiedDate":"2021-02-23"},{"lineNumber":370,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":371,"author":{"gitId":"Assyarul"},"content":"| Reminders           | Forgetful User     | Add reminders for special dates                                                        | I can remember my anniversary                                       |","lastModifiedDate":"2021-02-23"},{"lineNumber":372,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":373,"author":{"gitId":"Assyarul"},"content":"| Notes               | Forgetful User     | Takes notes on specific user                                                           | I can remember certain things                                       |","lastModifiedDate":"2021-02-23"},{"lineNumber":374,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":375,"author":{"gitId":"Assyarul"},"content":"| Calendar            | Visual User        | Have a calendar view of birthdays for the month                                        | I can plan my timetable ahead                                       |","lastModifiedDate":"2021-02-23"},{"lineNumber":376,"author":{"gitId":"Assyarul"},"content":"| Calendar            | New User           | See who are the friends I have not met in a long time                                  | I am reminded to meet them soon                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":377,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":378,"author":{"gitId":"Assyarul"},"content":"| UX                  | Expert User        | Perform most tasks with a single command                                               | I can save time                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":379,"author":{"gitId":"Assyarul"},"content":"| UX                  | Non-Technical User | Have the option to use the mouse                                                       | I will not be overwhelmed by the CLI                                |","lastModifiedDate":"2021-02-23"},{"lineNumber":380,"author":{"gitId":"Assyarul"},"content":"| UX                  | New User           | Easily undo previous commands                                                          | I do not have to be afraid of making mistakes                       |","lastModifiedDate":"2021-02-23"},{"lineNumber":381,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":382,"author":{"gitId":"Assyarul"},"content":"| Storage/backup/data | Tech-Savvy User    | Export/import information from the application                                         | I can back up the data                                              |","lastModifiedDate":"2021-02-23"},{"lineNumber":383,"author":{"gitId":"Assyarul"},"content":"| Storage/backup/data | Tech-Savvy User    | Detect conflicts when importing information                                            | I can detect if there are any changes to the after exporting        |","lastModifiedDate":"2021-03-24"},{"lineNumber":384,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":385,"author":{"gitId":"Assyarul"},"content":"| Search              | Forgetful User     | See suggested commands as i type in the command bar                                    | I do not have to memorise all commands                              |","lastModifiedDate":"2021-02-23"},{"lineNumber":386,"author":{"gitId":"Assyarul"},"content":"| Search              | Tech-Savvy User    | Search for contacts via regex                                                          | I can find contacts easily                                          |","lastModifiedDate":"2021-02-23"},{"lineNumber":387,"author":{"gitId":"Assyarul"},"content":"| Search              | User               | Search for my contacts by name                                                         | I can find contacts easily                                          |","lastModifiedDate":"2021-02-23"},{"lineNumber":388,"author":{"gitId":"Assyarul"},"content":"| Search              | Intermediate User  | Sort search result on different things                                                 | I can find whatever I\u0027m looking for easily                          |","lastModifiedDate":"2021-02-23"},{"lineNumber":389,"author":{"gitId":"Assyarul"},"content":"| Search              | Experienced User   | Write SQL like statements to search for things                                         | I can have full control over search                                 |","lastModifiedDate":"2021-02-23"},{"lineNumber":390,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":391,"author":{"gitId":"Assyarul"},"content":"| Profile             | Forgetful User     | Add a profile picture to the contact                                                   | I can remember how they look like                                   |","lastModifiedDate":"2021-02-23"},{"lineNumber":392,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":393,"author":{"gitId":"Assyarul"},"content":"| Relationship management   | Good friend        | Set a desired frequency for meeting each contact                                       | I am reminded to meet my friends either weekly, monthly, yearly etc |","lastModifiedDate":"2021-02-23"},{"lineNumber":394,"author":{"gitId":"Assyarul"},"content":"| Relationship management   | Forgetful friend   | Be reminded of who i should meet soon                                                  |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":395,"author":{"gitId":"Assyarul"},"content":"| Relationship management   | Friend             | See upcoming dates (birthdays/special dates/due-to-meet)                               |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":396,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":397,"author":{"gitId":"Assyarul"},"content":"| Dashboard           | User               | See upcoming birthdays at a glance                                                     | I know what to expect in the week to come                           |","lastModifiedDate":"2021-02-23"},{"lineNumber":398,"author":{"gitId":"Assyarul"},"content":"| Dashboard           | User               | See upcoming events at a glance                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":399,"author":{"gitId":"Assyarul"},"content":"| Dashboard           | User               | See goals that will reach deadline                                                     |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":400,"author":{"gitId":"Assyarul"},"content":"| Dashboard           | Friend             | See which friends I have to meet soon                                                  |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":401,"author":{"gitId":"Assyarul"},"content":"|                     |                    |                                                                                        |                                                                     |","lastModifiedDate":"2021-02-23"},{"lineNumber":402,"author":{"gitId":"Assyarul"},"content":"| Friendship Journal  | User               | Record brief summary of last meeting with the other person (include last meeting date) | I know why we last met.                                             |","lastModifiedDate":"2021-02-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"Assyarul"},"content":"(For all use cases below, the **System** is the `FriendDex` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"Assyarul"},"content":"**Use case: Add profile picture to person**","lastModifiedDate":"2021-02-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"Assyarul"},"content":"1. User requests to list persons.","lastModifiedDate":"2021-02-23"},{"lineNumber":413,"author":{"gitId":"Assyarul"},"content":"2. FriendDex shows a list of persons.","lastModifiedDate":"2021-02-23"},{"lineNumber":414,"author":{"gitId":"Assyarul"},"content":"3. User requests to add a picture to a person in the list.","lastModifiedDate":"2021-02-23"},{"lineNumber":415,"author":{"gitId":"Assyarul"},"content":"4. FriendDex attaches a picture to the person.","lastModifiedDate":"2021-02-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"Assyarul"},"content":"* 3a. User supplies an invalid file location to FriendDex","lastModifiedDate":"2021-02-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"Assyarul"},"content":"    * 3a1. FriendDex shows an error message of the error.","lastModifiedDate":"2021-02-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"Assyarul"},"content":"* 3b. User supplies a valid file location but wrong file format","lastModifiedDate":"2021-02-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"Assyarul"},"content":"    * 3b1. FriendDex shows an error message of the error.","lastModifiedDate":"2021-02-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"Assyarul"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"Assyarul"},"content":"**Use case: Add birthday to a person**","lastModifiedDate":"2021-02-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"Assyarul"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"Assyarul"},"content":"1. User requests to list persons","lastModifiedDate":"2021-02-23"},{"lineNumber":442,"author":{"gitId":"Assyarul"},"content":"2. FriendDex shows a list of persons","lastModifiedDate":"2021-02-23"},{"lineNumber":443,"author":{"gitId":"Assyarul"},"content":"3. User requests to add a birthday to a specific person in the list","lastModifiedDate":"2021-02-23"},{"lineNumber":444,"author":{"gitId":"Assyarul"},"content":"4. FriendDex stores the birthday information for the person","lastModifiedDate":"2021-02-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"Assyarul"},"content":"   Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":447,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":448,"author":{"gitId":"Assyarul"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":449,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":450,"author":{"gitId":"Assyarul"},"content":"* 2a. The list is empty","lastModifiedDate":"2021-02-23"},{"lineNumber":451,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":452,"author":{"gitId":"Assyarul"},"content":"  Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":453,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":454,"author":{"gitId":"Assyarul"},"content":"* 3a. The given date is invalid","lastModifiedDate":"2021-02-23"},{"lineNumber":455,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":456,"author":{"gitId":"Assyarul"},"content":"    * 3a1. FriendDex shows an error message, and the accepted date format(s)","lastModifiedDate":"2021-02-23"},{"lineNumber":457,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":458,"author":{"gitId":"Assyarul"},"content":"      Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":459,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":460,"author":{"gitId":"Assyarul"},"content":"**Use case: Create a friend group**","lastModifiedDate":"2021-02-23"},{"lineNumber":461,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":462,"author":{"gitId":"Assyarul"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":463,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":464,"author":{"gitId":"Assyarul"},"content":"1. User requests to list persons","lastModifiedDate":"2021-02-23"},{"lineNumber":465,"author":{"gitId":"Assyarul"},"content":"2. FriendDex shows a list of persons","lastModifiedDate":"2021-02-23"},{"lineNumber":466,"author":{"gitId":"Assyarul"},"content":"3. User requests to add a group of friends to a new friend group.","lastModifiedDate":"2021-02-23"},{"lineNumber":467,"author":{"gitId":"Assyarul"},"content":"4. FriendDex creates the friend group and adds the group of friends to the friend group.","lastModifiedDate":"2021-02-23"},{"lineNumber":468,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":469,"author":{"gitId":"Assyarul"},"content":"   Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":470,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":471,"author":{"gitId":"Assyarul"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":472,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":473,"author":{"gitId":"Assyarul"},"content":"* 3a. The friend group is already existing.","lastModifiedDate":"2021-02-23"},{"lineNumber":474,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":475,"author":{"gitId":"Assyarul"},"content":"    * 3a1. FriendDex will add the indicated group to the existing group.","lastModifiedDate":"2021-02-23"},{"lineNumber":476,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":477,"author":{"gitId":"Assyarul"},"content":"      Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":478,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":479,"author":{"gitId":"Assyarul"},"content":"* 4a. Some indicated users already exist in the friend group","lastModifiedDate":"2021-02-23"},{"lineNumber":480,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":481,"author":{"gitId":"Assyarul"},"content":"    * 4a1. FriendDex will indicate the contacts that already exist in the friend group.","lastModifiedDate":"2021-02-23"},{"lineNumber":482,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":483,"author":{"gitId":"Assyarul"},"content":"      Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":484,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":485,"author":{"gitId":"Assyarul"},"content":"**Use case: Edit a person**","lastModifiedDate":"2021-02-23"},{"lineNumber":486,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":487,"author":{"gitId":"Assyarul"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":488,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":489,"author":{"gitId":"Assyarul"},"content":"1. User requests to list persons.","lastModifiedDate":"2021-02-23"},{"lineNumber":490,"author":{"gitId":"Assyarul"},"content":"2. FriendDex shows a list of persons.","lastModifiedDate":"2021-02-23"},{"lineNumber":491,"author":{"gitId":"Assyarul"},"content":"3. User requests to edit a specific person in the list.","lastModifiedDate":"2021-02-23"},{"lineNumber":492,"author":{"gitId":"Assyarul"},"content":"4. FriendDex stores the edited information.","lastModifiedDate":"2021-02-23"},{"lineNumber":493,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":494,"author":{"gitId":"Assyarul"},"content":"   Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":495,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":496,"author":{"gitId":"Assyarul"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":497,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":498,"author":{"gitId":"Assyarul"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-02-23"},{"lineNumber":499,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":500,"author":{"gitId":"Assyarul"},"content":"  Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":501,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":502,"author":{"gitId":"Assyarul"},"content":"* 3a. The new details supplied contain formatting errors.","lastModifiedDate":"2021-02-23"},{"lineNumber":503,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":504,"author":{"gitId":"Assyarul"},"content":"    * 3a1. FriendDex shows an error message and displays the correct format for the command.","lastModifiedDate":"2021-02-23"},{"lineNumber":505,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":506,"author":{"gitId":"Assyarul"},"content":"      Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":507,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":508,"author":{"gitId":"Assyarul"},"content":"* 3b. A supplied Date field is in an invalid format.","lastModifiedDate":"2021-02-23"},{"lineNumber":509,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":510,"author":{"gitId":"Assyarul"},"content":"    * 3b1. FriendDex shows an error message and displays the accepted date formats.","lastModifiedDate":"2021-02-23"},{"lineNumber":511,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":512,"author":{"gitId":"Assyarul"},"content":"      Use case ends","lastModifiedDate":"2021-02-23"},{"lineNumber":513,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":514,"author":{"gitId":"Assyarul"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-02-23"},{"lineNumber":515,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":516,"author":{"gitId":"Assyarul"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-02-23"},{"lineNumber":517,"author":{"gitId":"Assyarul"},"content":"2. The application should be able to support up to 1000 contacts.","lastModifiedDate":"2021-02-23"},{"lineNumber":518,"author":{"gitId":"Assyarul"},"content":"3. The system should respond within two seconds.","lastModifiedDate":"2021-02-23"},{"lineNumber":519,"author":{"gitId":"lue97"},"content":"4. The application should be portable (The user should be able to copy content over to another computer using some","lastModifiedDate":"2021-03-12"},{"lineNumber":520,"author":{"gitId":"lue97"},"content":"   storage medium and still be able to work).","lastModifiedDate":"2021-03-12"},{"lineNumber":521,"author":{"gitId":"Assyarul"},"content":"5. Should work on most mainstream keyboards (works without numpad/touchbar etc).","lastModifiedDate":"2021-02-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2021-02-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":525,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-02-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":527,"author":{"gitId":"Assyarul"},"content":"-------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"lue97"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-03-12"},{"lineNumber":545,"author":{"gitId":"lue97"},"content":"       optimum.","lastModifiedDate":"2021-03-12"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"lue97"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-03-12"},{"lineNumber":564,"author":{"gitId":"lue97"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2021-03-12"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lue97":96,"Assyarul":167,"ivantjh":16,"-":286,"chesterhow":15}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"Our world is more connected than ever. There are numerous interactions between multiple people daily in our lives. ","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"As we move forward towards more of an asynchronous and remote way of living, daily interactions become more transient and harder to remember. ","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"FriendDex aims to act as a tool to bridge that gap so that interactions become more permanent. FriendDex will empower you to have better relationships with people around you.","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"Welcome to the FriendDex User Guide. FriendDex, a portmanteau of Friend and Pokedex, is a relationship management tool, catered to those who would like to maintain their personal relationships without compromising on other aspects of their life. ","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"A good example is students who are struggling to do well in both their studies and social life. Managing your relationships should not be any more tedious than doing your laundry.","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"FriendDex uses a command line interface; this means that you type commands to interact with the application. ","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"To help you get started, you should read the [Installation](#installation) and [Quick start](#quick-start) section first.","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"## About","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"This document can be thought of as a manual and a reference guide for FriendDex. It will guide you on how to use FriendDex and will provide complete information on each available command.","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"Furthermore, the guide gives information on the User Interface (UI) and the other useful features of FriendDex. Each section of the guide can be read independently. ","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"You can view the full list of content using the Table of Contents above. You can also use your document viewer’s Find function to quickly navigate to the content you want to know more about. ","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"It is generally advised for new users to at least read through the [Quick Start](#quick-start) section to familiarise themselves with FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"Note the following symbols and formatting used in this document:","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"`list n/Close Friends` \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"The grey highlight, also called a mark-up, indicates that the text in it can be typed into the command line and executed by the application.  ","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":":information_source: **Notes:**\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"* This block is used for detailing information about formatting, handling exceptional cases or special keywords used in the corresponding section.","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":":bulb: **Tip:**","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"This block is used to provide you extra details about the feature that will enable you to use it more effectively.","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":":exclamation: **Caution:** This block is used to point out any dangerous actions that may result in the loss of data or the app crashing.","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"## Installation","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"1. Ensure you have Java `11` or above installed in your Computer. Your Computer\u0027s operating system (OS) needs to be Windows, macOS or Linux, and the OS version you are using should still be supported by the respective companies.","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"   For more detailed Java installation instructions, please click [here](https://docs.oracle.com/en/java/javase/11/install/preface.html#).","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"2. Download the latest `frienddex.jar` from [here](https://github.com/AY2021S2-CS2103T-W14-1/tp/releases).","lastModifiedDate":"2021-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data. Once the GUI finishes loading, you are ready to start using FriendDex.\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"5. You can move on to the [Quick Start](#quick-start) section to learn about the common operations for FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"## Quick start","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"1. Once FriendDex is installed, you first want to begin by populating it with your friends’ information. You might notice that FriendDex comes with some sample data. You may remove this sample data using the `clear` command.","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"2. To add a person to the FriendDex, you may use the `add` command followed by their relevant details. ","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"   For example, here’s how you can add a friend, John Doe with the following particulars:","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"   Friend Detail  | Value","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"   ---------------|------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"   Phone number | 98765432","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"   E-mail | johnd@example.com ","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"   Address | John street, block 123, #01-01","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"   Birthday | 19th January 1998","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"   Type the full `add` command into the command bar to execute it","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 b/19-01-1998`","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"3. If you made a mistake while adding a person, you can easily amend it with the `edit` command. ","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"    For example, changing the phone number of John Doe to ‘87654321’. Assuming John is the first person in the list of friends on the screen, you may use the `edit` command as follows,","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"    * `edit 1 p/87654321`","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"\u003cbr/\u003e\u003cbr/\u003e    ","lastModifiedDate":"2021-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"4. Now that you have populated the app, you are ready to explore the various relationship management features that FriendDex has to offer. Here are some things you can try:","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"    * `set-goal` : Set a goal for how often you would like to meet a friend","lastModifiedDate":"2021-04-02"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"    * `add-meeting` : Record details about a meeting you’ve had with a friend","lastModifiedDate":"2021-04-02"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"    * `add-group` : Categorise and group your friends on the app (e.g. RC neighbours, CCA mates)","lastModifiedDate":"2021-04-02"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"    * `add-date` : Record special dates for a friend (e.g. Anniversary)","lastModifiedDate":"2021-04-02"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"    ","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"5. FriendDex comes with a built-in autocomplete feature, so there\u0027s no need to memorise any of the commands. If you need help with the commands, a thorough documentation for each command is provided in this user guide, complete with usage instructions and examples.","lastModifiedDate":"2021-04-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Assyarul"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":101,"author":{"gitId":"Assyarul"},"content":"## UI ","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"Assyarul"},"content":"![UiAnnotated](images/UiAnnotated.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"Assyarul"},"content":"### Group Panel","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"Assyarul"},"content":"The left panel of FriendDex shows the list of groups that are available in the application.","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"Assyarul"},"content":"To list the friends within a specific group, use `list n/GROUP_NAME`. See [List Command](#listing-all-persons--list) for specific details.","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"Assyarul"},"content":"### Friend Panel","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"Assyarul"},"content":"The centre panel shows the currently listed friends in the application.","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"Assyarul"},"content":"Commands such as `list`, `find`, `add`, `clear`, `delete` will change the listed friends. ","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"Assyarul"},"content":"See [Features](#features) for specific details. ","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"ivantjh"},"content":"### Details Panel","lastModifiedDate":"2021-04-02"},{"lineNumber":116,"author":{"gitId":"Assyarul"},"content":"The right panel of FriendDex is a multi-purpose details panel. It displays upcoming events by default, and can be toggled to display different information. ","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"ivantjh"},"content":"The available dashboards are detailed below.","lastModifiedDate":"2021-04-02"},{"lineNumber":118,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"Assyarul"},"content":"#### Upcoming Events","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"Assyarul"},"content":"By default, FriendDex displays your upcoming events on the details panel, such as upcoming birthdays and special dates.","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"ivantjh"},"content":"#### Streaks Dashboard","lastModifiedDate":"2021-04-02"},{"lineNumber":123,"author":{"gitId":"ivantjh"},"content":"The Streaks dashboard shows how consistent you stick to your goal of meeting your friends up till the current day.    ","lastModifiedDate":"2021-04-02"},{"lineNumber":124,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":125,"author":{"gitId":"Assyarul"},"content":"#### Full Details of a Person","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"Assyarul"},"content":"As a person in the FriendDex can contain a lot of information, not all of it is displayed in the main list of persons.","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"Assyarul"},"content":"Upon execution of the `details` command, FriendDex will display the full details of the specified person on the details panel.","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"ivantjh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"ivantjh"},"content":"## Autocomplete","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"ivantjh"},"content":"There is no need to remember commands as FriendDex will suggest them to you as you type. To use a suggested command, press up/down to the desired command and hit enter.","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"ivantjh"},"content":"The suggested command will be automatically typed into the command bar.","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"lue97"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-02-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Assyarul"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"Assyarul"},"content":"  e.g. `p/ INDEX…​` must have at least one `INDEX`, `p/1`, `p/1 2` etc.","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"lue97"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":160,"author":{"gitId":"Assyarul"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-02-03"},{"lineNumber":163,"author":{"gitId":"ivantjh"},"content":"* The `INDEX` parameter in a command will refer to the index number shown in the currently displayed person list. The index **must be a positive integer** 1, 2, 3, ...​","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"ivantjh"},"content":"  e.g. `edit 2 n/Gregory` will change the name of the 2nd person on the displayed person list to Gregory. ","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"ivantjh"},"content":"### Adding a person : `add`","lastModifiedDate":"2021-04-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":170,"author":{"gitId":"ivantjh"},"content":"Adds a person to FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":172,"author":{"gitId":"ivantjh"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS b/BIRTHDAY [t/TAG]…​`","lastModifiedDate":"2021-04-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":174,"author":{"gitId":"ivantjh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-02"},{"lineNumber":175,"author":{"gitId":"ivantjh"},"content":"You can provide any number of tags (including 0)","lastModifiedDate":"2021-04-02"},{"lineNumber":176,"author":{"gitId":"ivantjh"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":177,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":178,"author":{"gitId":"ivantjh"},"content":"Examples:","lastModifiedDate":"2021-04-02"},{"lineNumber":179,"author":{"gitId":"ivantjh"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 b/19-01-1998`","lastModifiedDate":"2021-04-02"},{"lineNumber":180,"author":{"gitId":"ivantjh"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com b/19-03-1998 a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2021-04-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":182,"author":{"gitId":"ivantjh"},"content":"### Adding a special date : `add-date`","lastModifiedDate":"2021-04-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":184,"author":{"gitId":"ivantjh"},"content":"Adds a special date for an existing person in FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":186,"author":{"gitId":"ivantjh"},"content":"Format: `add-date INDEX d/DATE desc/DESCRIPTION`","lastModifiedDate":"2021-04-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":188,"author":{"gitId":"ivantjh"},"content":"* Adds a special date with the person at the specified `INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":190,"author":{"gitId":"ivantjh"},"content":"Examples:","lastModifiedDate":"2021-04-02"},{"lineNumber":191,"author":{"gitId":"ivantjh"},"content":"* `add-date 1 d/16-02-2021 desc/Anniversary`","lastModifiedDate":"2021-04-02"},{"lineNumber":192,"author":{"gitId":"ivantjh"},"content":"* `add-date 2 d/17-02-2021 desc/Dog\u0027s birthday`","lastModifiedDate":"2021-04-02"},{"lineNumber":193,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":194,"author":{"gitId":"ivantjh"},"content":"### Adding debt : `add-debt`","lastModifiedDate":"2021-04-02"},{"lineNumber":195,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":196,"author":{"gitId":"ivantjh"},"content":"Adds a specified amount to the debt owed to the friend at the specified `INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":197,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":198,"author":{"gitId":"ivantjh"},"content":"Format: `add-debt INDEX DEBT_AMOUNT`","lastModifiedDate":"2021-04-02"},{"lineNumber":199,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":200,"author":{"gitId":"ivantjh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":201,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":202,"author":{"gitId":"ivantjh"},"content":":information_source: **Notes: Add Debt Command**\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":203,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":204,"author":{"gitId":"ivantjh"},"content":"* `DEBT_AMOUNT` provided should be a **positive number** of up to 2 decimal places","lastModifiedDate":"2021-04-02"},{"lineNumber":205,"author":{"gitId":"ivantjh"},"content":"  e.g `10.10` or `10.1000` and **not** `10.103`.","lastModifiedDate":"2021-04-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-02"},{"lineNumber":209,"author":{"gitId":"ivantjh"},"content":"* `add-debt 1 100` adds 100 to the debt owed to the 1st listed friend.","lastModifiedDate":"2021-04-02"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":211,"author":{"gitId":"ivantjh"},"content":"### Adding a friend group : `add-group`","lastModifiedDate":"2021-04-02"},{"lineNumber":212,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":213,"author":{"gitId":"Assyarul"},"content":"Creates a new friend group to FriendDex with a specified name and adds all the people at the specified","lastModifiedDate":"2021-02-23"},{"lineNumber":214,"author":{"gitId":"Assyarul"},"content":"indexes to the group.","lastModifiedDate":"2021-02-23"},{"lineNumber":215,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":216,"author":{"gitId":"Assyarul"},"content":"Format: `add-group n/GROUP_NAME p/INDEX…​`","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"Assyarul"},"content":"* You should provide at least one index.","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"Assyarul"},"content":"* If the group name you provided already exists, the friends at the specified `INDEX…​` will be added to the group.","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"Assyarul"},"content":"* If some friends specified already exist in the group, they will be ignored.","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":222,"author":{"gitId":"Assyarul"},"content":"Examples:","lastModifiedDate":"2021-02-23"},{"lineNumber":223,"author":{"gitId":"Assyarul"},"content":"* `add-group n/Close Friends  p/1 2 3 4 5`","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"ivantjh"},"content":"### Adding a meeting : `add-meeting`","lastModifiedDate":"2021-04-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"ivantjh"},"content":"Records a meeting with an existing person in FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"ivantjh"},"content":"Format: `add-meeting INDEX d/DATE t/TIME desc/DESCRIPTION`","lastModifiedDate":"2021-04-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"ivantjh"},"content":"* Records a meeting with the person at the specified `INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"ivantjh"},"content":"* `meeting 1 d/16-02-2021 t/1130 desc/We had lunch together!`","lastModifiedDate":"2021-04-02"},{"lineNumber":235,"author":{"gitId":"ivantjh"},"content":"* `meeting 2 d/17-02-2021 t/1930 desc/We went to see the sunset!`","lastModifiedDate":"2021-04-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"ivantjh"},"content":"### Adding a profile picture : `add-picture`","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":239,"author":{"gitId":"ivantjh"},"content":"Adds a profile picture to an existing person in FriendDex.","lastModifiedDate":"2021-02-22"},{"lineNumber":240,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":241,"author":{"gitId":"ivantjh"},"content":"Format: `add-picture INDEX FILE_PATH`","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":243,"author":{"gitId":"Assyarul"},"content":"* The image of the friend should be at the `FILE_PATH` you provided.","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":245,"author":{"gitId":"ivantjh"},"content":"Examples:","lastModifiedDate":"2021-02-22"},{"lineNumber":246,"author":{"gitId":"ivantjh"},"content":"* `add-picture 1 /Users/john/Desktop/jake.png`","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":248,"author":{"gitId":"chesterhow"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-04-04"},{"lineNumber":249,"author":{"gitId":"chesterhow"},"content":"To edit your profile picture, edit the original image and use the `add-picture` command again.","lastModifiedDate":"2021-04-04"},{"lineNumber":250,"author":{"gitId":"chesterhow"},"content":"Editing of pictures directly from the `/data` folder is not supported.","lastModifiedDate":"2021-04-04"},{"lineNumber":251,"author":{"gitId":"chesterhow"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":252,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":253,"author":{"gitId":"ivantjh"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-04-02"},{"lineNumber":254,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"ivantjh"},"content":"Clears all entries from FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"ivantjh"},"content":"Format: `clear`","lastModifiedDate":"2021-04-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"ivantjh"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2021-04-02"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"ivantjh"},"content":"Deletes the specified person from FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"ivantjh"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"ivantjh"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"ivantjh"},"content":"* `list` followed by `delete 2` deletes the 2nd person in FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":269,"author":{"gitId":"ivantjh"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-04-02"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"ivantjh"},"content":"### Deleting a special date : `del-date`","lastModifiedDate":"2021-04-02"},{"lineNumber":272,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":273,"author":{"gitId":"ivantjh"},"content":"Deletes a special date from an existing person in FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":274,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":275,"author":{"gitId":"ivantjh"},"content":"Format: `del-date INDEX i/DATE_INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":276,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":277,"author":{"gitId":"ivantjh"},"content":"* Deletes a special date with the person at the specified `INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":278,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"chesterhow"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"ivantjh"},"content":"* `del-date 1 i/2` deletes the 2nd special date from the 1st listed friend.","lastModifiedDate":"2021-04-02"},{"lineNumber":281,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":282,"author":{"gitId":"ivantjh"},"content":"### Deleting a friend group: `del-group`","lastModifiedDate":"2021-04-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":284,"author":{"gitId":"ivantjh"},"content":"Deletes a friend group from FriendDex with the specified name.","lastModifiedDate":"2021-04-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":286,"author":{"gitId":"ivantjh"},"content":"Format: `del-group n/GROUP_NAME`","lastModifiedDate":"2021-04-02"},{"lineNumber":287,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"ivantjh"},"content":"* The group name provided should already exist in FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":289,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"ivantjh"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"ivantjh"},"content":"* `del-group n/Close Friends`","lastModifiedDate":"2021-04-02"},{"lineNumber":292,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"ivantjh"},"content":"### Deleting a meeting: `del-meeting`","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"ivantjh"},"content":"Deletes a meeting from an existing person in FriendDex.","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"ivantjh"},"content":"Format: `del-meeting INDEX i/MEETING_INDEX`","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"ivantjh"},"content":"* Deletes a meeting with the person at the specified `INDEX`.","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":301,"author":{"gitId":"ivantjh"},"content":"Examples:","lastModifiedDate":"2021-02-22"},{"lineNumber":302,"author":{"gitId":"ivantjh"},"content":"* `del-meeting 1 i/3` deletes the 3rd meeting from the 1st person in FriendDex.","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":304,"author":{"gitId":"ivantjh"},"content":"### Deleting a profile picture: `del-picture`","lastModifiedDate":"2021-04-02"},{"lineNumber":305,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":306,"author":{"gitId":"ivantjh"},"content":"Deletes a profile picture from an existing person in FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":307,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":308,"author":{"gitId":"ivantjh"},"content":"Format: `del-picture INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":309,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"ivantjh"},"content":"* The person selected should already have a profile picture.","lastModifiedDate":"2021-04-02"},{"lineNumber":311,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":312,"author":{"gitId":"ivantjh"},"content":"### Viewing full details : `details`","lastModifiedDate":"2021-04-02"},{"lineNumber":313,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":314,"author":{"gitId":"ivantjh"},"content":"Displays the full details of the specified person from FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":315,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":316,"author":{"gitId":"ivantjh"},"content":"Format: `details INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":317,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":318,"author":{"gitId":"ivantjh"},"content":"* Displays the full details of the person at the specified `INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":319,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":320,"author":{"gitId":"chesterhow"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":321,"author":{"gitId":"ivantjh"},"content":"* `list` followed by `details 2` displays the details of the 2nd person in FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":322,"author":{"gitId":"ivantjh"},"content":"* `find Betsy` followed by `details 1` displays the details of the 1st person in the results of the `find` command.","lastModifiedDate":"2021-04-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2021-04-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":326,"author":{"gitId":"ivantjh"},"content":"Edits an existing person in FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":328,"author":{"gitId":"ivantjh"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [b/DATETIME] [t/TAG]…​`","lastModifiedDate":"2021-04-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":330,"author":{"gitId":"ivantjh"},"content":"* Edits the person at the specified `INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-04-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-02"},{"lineNumber":333,"author":{"gitId":"ivantjh"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2021-04-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2021-04-02"},{"lineNumber":335,"author":{"gitId":"ivantjh"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-04-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":337,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-04-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-04-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":341,"author":{"gitId":"ivantjh"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-04-02"},{"lineNumber":342,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":343,"author":{"gitId":"ivantjh"},"content":"Exits the program.","lastModifiedDate":"2021-04-02"},{"lineNumber":344,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":345,"author":{"gitId":"ivantjh"},"content":"Format: `exit`","lastModifiedDate":"2021-04-02"},{"lineNumber":346,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":347,"author":{"gitId":"-"},"content":"### Locating persons by name : `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"lue97"},"content":"Format: `find KEYWORD [MORE_KEYWORDS] [p/]`","lastModifiedDate":"2021-02-26"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"Assyarul"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":354,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":355,"author":{"gitId":"Assyarul"},"content":":information_source: **Notes: Find Command**\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":357,"author":{"gitId":"lue97"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2021-02-26"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"ivantjh"},"content":"* If the `p/` flag is set, then the argument(s) `KEYWORD [MORE KEYWORDS]` will be treated as a regular expression.","lastModifiedDate":"2021-03-24"},{"lineNumber":364,"author":{"gitId":"Assyarul"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"lue97"},"content":"* `find ^a.*h$ p/` returns `Alex Yeoh`","lastModifiedDate":"2021-02-26"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"ivantjh"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-04-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"ivantjh"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-04-02"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"ivantjh"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"ivantjh"},"content":"Format: `help`","lastModifiedDate":"2021-04-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"ivantjh"},"content":"### Listing all persons : `list`","lastModifiedDate":"2021-04-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"ivantjh"},"content":"Shows a list of all persons in FriendDex.","lastModifiedDate":"2021-04-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"ivantjh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-02"},{"lineNumber":384,"author":{"gitId":"ivantjh"},"content":"You can optionally provide a group name to list all friends in that group.","lastModifiedDate":"2021-04-02"},{"lineNumber":385,"author":{"gitId":"ivantjh"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"ivantjh"},"content":"Format: `list [n/GROUP_NAME]`","lastModifiedDate":"2021-04-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"ivantjh"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":390,"author":{"gitId":"ivantjh"},"content":"* `list n/Primary School` to list persons in the `Primary School` group","lastModifiedDate":"2021-04-02"},{"lineNumber":391,"author":{"gitId":"ivantjh"},"content":"* `list` to list all persons in FriendDex","lastModifiedDate":"2021-04-02"},{"lineNumber":392,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":393,"author":{"gitId":"ivantjh"},"content":"### Setting meeting goal: `set-goal`","lastModifiedDate":"2021-04-02"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"ivantjh"},"content":"Format: `set-goal INDEX f/FREQUENCY`","lastModifiedDate":"2021-04-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"ivantjh"},"content":"* Sets a goal to achieve an ideal frequency for meeting a contact","lastModifiedDate":"2021-04-02"},{"lineNumber":398,"author":{"gitId":"ivantjh"},"content":"* FriendDex will give reminders based on the frequency specified and the latest meeting the user had with that person.","lastModifiedDate":"2021-04-02"},{"lineNumber":399,"author":{"gitId":"ivantjh"},"content":"* Accepts the following as FREQUENCY: weekly (`w`, `week`, `weekly`), monthly (`m`, `month`, `monthly`), yearly (`y`, `year`, `yearly`), and none (`n`, `none`).","lastModifiedDate":"2021-04-02"},{"lineNumber":400,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":401,"author":{"gitId":"ivantjh"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":402,"author":{"gitId":"ivantjh"},"content":"* `set-goal 1 f/w`, `set-goal 1 f/week` and `set-goal 1 f/weekly` will do the same thing by setting the goal to meet the person at index 1 every week.","lastModifiedDate":"2021-04-02"},{"lineNumber":403,"author":{"gitId":"ivantjh"},"content":"* `set-goal 1 f/n` and `set-goal 1 f/none` will remove the goal set with the person at the specified index. ","lastModifiedDate":"2021-04-02"},{"lineNumber":404,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":405,"author":{"gitId":"ivantjh"},"content":"### Subtracting debt: `subtract-debt`","lastModifiedDate":"2021-04-02"},{"lineNumber":406,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":407,"author":{"gitId":"ivantjh"},"content":"Subtracts a specified amount to the debt owed to the friend at the specified `INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":408,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":409,"author":{"gitId":"ivantjh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":410,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":411,"author":{"gitId":"ivantjh"},"content":":information_source: **Notes: Subtract Debt Command**\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":412,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":413,"author":{"gitId":"ivantjh"},"content":"* `DEBT_AMOUNT` provided should be a **positive number** of up to 2 decimal places,","lastModifiedDate":"2021-04-02"},{"lineNumber":414,"author":{"gitId":"ivantjh"},"content":"  e.g `10.10` or `10.1000` and **not** `10.103`.","lastModifiedDate":"2021-04-02"},{"lineNumber":415,"author":{"gitId":"ivantjh"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":416,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":417,"author":{"gitId":"ivantjh"},"content":"Format: `subtract-debt INDEX DEBT_AMOUNT`","lastModifiedDate":"2021-04-02"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":419,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-02"},{"lineNumber":420,"author":{"gitId":"ivantjh"},"content":"`subtract-debt 1 100` subtracts 100 to the debt owed to the 1st listed friend.","lastModifiedDate":"2021-04-02"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"lue97"},"content":"### Styling the application : `theme`","lastModifiedDate":"2021-02-26"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":424,"author":{"gitId":"lue97"},"content":"Applies a colorscheme to the application based on the supplied theme.","lastModifiedDate":"2021-03-30"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":426,"author":{"gitId":"lue97"},"content":"Format `theme THEME`","lastModifiedDate":"2021-03-30"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":428,"author":{"gitId":"lue97"},"content":"* Applies the theme specified by the argument `THEME`.","lastModifiedDate":"2021-03-30"},{"lineNumber":429,"author":{"gitId":"lue97"},"content":"* FriendDex is shipped with the following preinstalled themes:","lastModifiedDate":"2021-03-30"},{"lineNumber":430,"author":{"gitId":"lue97"},"content":"  * `monokai`","lastModifiedDate":"2021-03-30"},{"lineNumber":431,"author":{"gitId":"lue97"},"content":"  * `sweetlove`","lastModifiedDate":"2021-03-30"},{"lineNumber":432,"author":{"gitId":"lue97"},"content":"  * `pulp`","lastModifiedDate":"2021-03-30"},{"lineNumber":433,"author":{"gitId":"lue97"},"content":"  * `paraiso-light`","lastModifiedDate":"2021-03-30"},{"lineNumber":434,"author":{"gitId":"lue97"},"content":"* To apply a preinstalled theme, prepend it with an `@`.","lastModifiedDate":"2021-03-30"},{"lineNumber":435,"author":{"gitId":"lue97"},"content":"* Applied themes will persist for subsequent sessions. ","lastModifiedDate":"2021-03-30"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":437,"author":{"gitId":"ivantjh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":438,"author":{"gitId":"ivantjh"},"content":":bulb: **Tip:**","lastModifiedDate":"2021-04-02"},{"lineNumber":439,"author":{"gitId":"ivantjh"},"content":"You can also define your own theme. Find out more [here](#defining-your-own-theme). To apply a custom theme, ","lastModifiedDate":"2021-04-02"},{"lineNumber":440,"author":{"gitId":"ivantjh"},"content":"pass the file path to the custom theme as the `THEME` parameter.     ","lastModifiedDate":"2021-04-02"},{"lineNumber":441,"author":{"gitId":"ivantjh"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":443,"author":{"gitId":"lue97"},"content":"Example:","lastModifiedDate":"2021-03-30"},{"lineNumber":444,"author":{"gitId":"lue97"},"content":"* `theme @monokai` applies the `monokai` theme to the application.","lastModifiedDate":"2021-03-30"},{"lineNumber":445,"author":{"gitId":"ivantjh"},"content":"* `theme /Users/john/Desktop/themes/solarized.dark.json` applies the custom theme found at the given file path to the application.","lastModifiedDate":"2021-04-02"},{"lineNumber":446,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":447,"author":{"gitId":"lue97"},"content":"See also:","lastModifiedDate":"2021-02-26"},{"lineNumber":448,"author":{"gitId":"lue97"},"content":"* [Defining your own Theme](#defining-your-own-theme)","lastModifiedDate":"2021-03-30"},{"lineNumber":449,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":450,"author":{"gitId":"ivantjh"},"content":"### Viewing different details panel: `view`","lastModifiedDate":"2021-04-02"},{"lineNumber":451,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":452,"author":{"gitId":"ivantjh"},"content":"Select a details panel to display. Available panels:","lastModifiedDate":"2021-04-02"},{"lineNumber":453,"author":{"gitId":"ivantjh"},"content":"* Upcoming Events (`upcoming events`)","lastModifiedDate":"2021-04-02"},{"lineNumber":454,"author":{"gitId":"ivantjh"},"content":"* Streaks (`streaks`)","lastModifiedDate":"2021-04-02"},{"lineNumber":455,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":456,"author":{"gitId":"ivantjh"},"content":"Format: `view (upcoming events | streaks)`","lastModifiedDate":"2021-04-02"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":458,"author":{"gitId":"ivantjh"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":459,"author":{"gitId":"ivantjh"},"content":"* `view streaks` will switch the details panel to show the Streaks dashboard.","lastModifiedDate":"2021-04-02"},{"lineNumber":460,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":461,"author":{"gitId":"lue97"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-26"},{"lineNumber":462,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":463,"author":{"gitId":"chesterhow"},"content":"## Data Storage","lastModifiedDate":"2021-02-24"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"chesterhow"},"content":"FriendDex data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-02-24"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":470,"author":{"gitId":"chesterhow"},"content":"FriendDex data is saved as a JSON file at `[JAR file location]/data/frienddex.json`. ","lastModifiedDate":"2021-03-28"},{"lineNumber":471,"author":{"gitId":"ivantjh"},"content":"Gui-related settings such as theme preference are saved in the same directory under `preferences.json`.","lastModifiedDate":"2021-03-24"},{"lineNumber":472,"author":{"gitId":"ivantjh"},"content":"Advanced users are welcome to update the data directly by making edits to these files.","lastModifiedDate":"2021-03-25"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":474,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":475,"author":{"gitId":"ivantjh"},"content":"If your changes to the data file makes its format invalid, FriendDex will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-22"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":478,"author":{"gitId":"lue97"},"content":"## Defining your own theme","lastModifiedDate":"2021-03-30"},{"lineNumber":479,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":480,"author":{"gitId":"lue97"},"content":"FriendDex allows advanced users to customize and apply their own theme. This can be done by supplying the path to a `json` file specifying the theme.","lastModifiedDate":"2021-03-30"},{"lineNumber":481,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":482,"author":{"gitId":"lue97"},"content":"### Theme format","lastModifiedDate":"2021-02-26"},{"lineNumber":483,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":484,"author":{"gitId":"lue97"},"content":"A valid theme is a JSON object containing the following fields:","lastModifiedDate":"2021-02-26"},{"lineNumber":485,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":486,"author":{"gitId":"lue97"},"content":"| Name         | Type         | Description                                                                                                                                                             |","lastModifiedDate":"2021-02-26"},{"lineNumber":487,"author":{"gitId":"lue97"},"content":"|--------------|--------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-02-26"},{"lineNumber":488,"author":{"gitId":"lue97"},"content":"| `foreground` | `String`     | The foreground color of the application in valid hex color string                                                                                                       |","lastModifiedDate":"2021-02-26"},{"lineNumber":489,"author":{"gitId":"lue97"},"content":"| `background` | `String`     | The background color of the application in valid hex color string                                                                                                       |","lastModifiedDate":"2021-02-26"},{"lineNumber":490,"author":{"gitId":"lue97"},"content":"| `color`      | `String[16]` | Colors 0 to 15 of the application in valid hex color strings. Refer to [XTerm colors](https://invisible-island.net/xterm/manpage/xterm.html#h3-VT100-Widget-Resources). |","lastModifiedDate":"2021-02-26"},{"lineNumber":491,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":492,"author":{"gitId":"lue97"},"content":"A sample theme (Monokai Dark)","lastModifiedDate":"2021-02-26"},{"lineNumber":493,"author":{"gitId":"lue97"},"content":"```","lastModifiedDate":"2021-02-26"},{"lineNumber":494,"author":{"gitId":"lue97"},"content":"{","lastModifiedDate":"2021-02-26"},{"lineNumber":495,"author":{"gitId":"lue97"},"content":"  \"color\": [","lastModifiedDate":"2021-02-26"},{"lineNumber":496,"author":{"gitId":"lue97"},"content":"    \"#272822\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-03-30"},{"lineNumber":497,"author":{"gitId":"lue97"},"content":"    \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", \"#f8f8f2\",","lastModifiedDate":"2021-03-30"},{"lineNumber":498,"author":{"gitId":"lue97"},"content":"    \"#75715e\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-03-30"},{"lineNumber":499,"author":{"gitId":"lue97"},"content":"    \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", \"#f9f8f5\"","lastModifiedDate":"2021-03-30"},{"lineNumber":500,"author":{"gitId":"lue97"},"content":"  ],","lastModifiedDate":"2021-02-26"},{"lineNumber":501,"author":{"gitId":"lue97"},"content":"  \"foreground\": \"#f8f8f2\",","lastModifiedDate":"2021-02-26"},{"lineNumber":502,"author":{"gitId":"lue97"},"content":"  \"background\": \"#272822\"","lastModifiedDate":"2021-02-26"},{"lineNumber":503,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-02-26"},{"lineNumber":504,"author":{"gitId":"lue97"},"content":"```","lastModifiedDate":"2021-02-26"},{"lineNumber":505,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":506,"author":{"gitId":"lue97"},"content":"### Applying the theme","lastModifiedDate":"2021-03-30"},{"lineNumber":507,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":508,"author":{"gitId":"lue97"},"content":"Instead of providing a preinstalled `THEME` as an argument, simply supply the file path instead.","lastModifiedDate":"2021-03-30"},{"lineNumber":509,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":510,"author":{"gitId":"lue97"},"content":"Example:","lastModifiedDate":"2021-03-30"},{"lineNumber":511,"author":{"gitId":"lue97"},"content":"* `theme sample-theme.json` applies the theme defined in the file `sample-theme.json`.","lastModifiedDate":"2021-03-30"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":513,"author":{"gitId":"lue97"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-03-30"},{"lineNumber":514,"author":{"gitId":"lue97"},"content":"If the previous theme file supplied is not found or unreadable, then the default theme will be applied.","lastModifiedDate":"2021-03-30"},{"lineNumber":515,"author":{"gitId":"lue97"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":517,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"ivantjh"},"content":"**A**: Install the app in the other computer and overwrite the files it creates with the files in your previous FriendDex home folder.","lastModifiedDate":"2021-03-28"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"lue97"},"content":"**Q**: Where can I find more themes?\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":525,"author":{"gitId":"lue97"},"content":"**A**: Certain online tools such as [terminal.sexy](https://terminal.sexy) can be used to generate the required `json` file.","lastModifiedDate":"2021-03-30"},{"lineNumber":526,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":527,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"ivantjh"},"content":"## Troubleshooting Instructions","lastModifiedDate":"2021-04-02"},{"lineNumber":530,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":531,"author":{"gitId":"ivantjh"},"content":"If FriendDex is unresponsive, you can force quit the application through your OS’s task manager and restart it. The data saved from the last operation will automatically be loaded back into the app. ","lastModifiedDate":"2021-04-02"},{"lineNumber":532,"author":{"gitId":"ivantjh"},"content":"If FriendDex is still not working, you can reinstall the app by deleting `friendDex.jar` from the _home folder_ of FriendDex and redownloading the latest version [here](https://github.com/AY2021S2-CS2103T-W14-1/tp/releases).","lastModifiedDate":"2021-04-02"},{"lineNumber":533,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":534,"author":{"gitId":"ivantjh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":535,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":536,"author":{"gitId":"ivantjh"},"content":"## Where to get additional help","lastModifiedDate":"2021-04-02"},{"lineNumber":537,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":538,"author":{"gitId":"ivantjh"},"content":"If you are still facing an issue that is not addressed in the guide, you submit it issue on Github page [here](https://github.com/AY2021S2-CS2103T-W14-1/tp/issues).","lastModifiedDate":"2021-04-02"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":540,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":542,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"Assyarul"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [b/BIRTHDAY] [t/TAG]…​`\u003cbr\u003e e.g. `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2021-02-23"},{"lineNumber":547,"author":{"gitId":"ivantjh"},"content":"**Add Date** | `add-date INDEX d/DATE desc/DESCRIPTION`\u003cbr\u003e e.g. `add-date 1 d/16-02-2021 desc/Anniversary`","lastModifiedDate":"2021-04-02"},{"lineNumber":548,"author":{"gitId":"ivantjh"},"content":"**Add Debt** | `add-debt INDEX DEBT_AMOUNT`\u003cbr\u003e e.g. `add-debt 1 100`","lastModifiedDate":"2021-04-02"},{"lineNumber":549,"author":{"gitId":"ivantjh"},"content":"**Add Group** | `add-group n/GROUP_NAME p/[INDEX...]`\u003cbr\u003e e.g. `add-group n/Close Friends p/1 2 3 4`","lastModifiedDate":"2021-04-02"},{"lineNumber":550,"author":{"gitId":"ivantjh"},"content":"**Add Meeting** | `add-meeting INDEX d/DATE t/TIME desc/DESCRIPTION`\u003cbr\u003e e.g. `add-meeting 2 d/17-02-2021 t/1930 desc/We went to see the sunset!`","lastModifiedDate":"2021-04-02"},{"lineNumber":551,"author":{"gitId":"ivantjh"},"content":"**Add Picture** | `add-picture INDEX FILE_PATH`\u003cbr\u003e e.g. `picture 1 /Users/john/Desktop/jake.png`","lastModifiedDate":"2021-04-02"},{"lineNumber":552,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"chesterhow"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g. `delete 3`","lastModifiedDate":"2021-03-24"},{"lineNumber":554,"author":{"gitId":"ivantjh"},"content":"**Delete Date** | `del-date INDEX i/DATE_INDEX`\u003cbr\u003e e.g. `del-date 1 i/1`","lastModifiedDate":"2021-04-02"},{"lineNumber":555,"author":{"gitId":"ivantjh"},"content":"**Delete Group** | `del-group n/GROUP_NAME` \u003cbr\u003e e.g. `del-group n/Close Friends`","lastModifiedDate":"2021-04-02"},{"lineNumber":556,"author":{"gitId":"ivantjh"},"content":"**Delete Meeting** | `del-meeting INDEX i/MEETING_INDEX`\u003cbr\u003e e.g. `del-meeting 1 i/2`","lastModifiedDate":"2021-04-02"},{"lineNumber":557,"author":{"gitId":"ivantjh"},"content":"**Delete Picture** | `del-picture INDEX` \u003cbr\u003e e.g. `del-picture 1`","lastModifiedDate":"2021-04-02"},{"lineNumber":558,"author":{"gitId":"chesterhow"},"content":"**Details** | `details INDEX`\u003cbr\u003e e.g. `details 1`","lastModifiedDate":"2021-03-24"},{"lineNumber":559,"author":{"gitId":"ivantjh"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [t/TAG]…​`\u003cbr\u003e e.g.`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-04-02"},{"lineNumber":560,"author":{"gitId":"ivantjh"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-04-02"},{"lineNumber":561,"author":{"gitId":"chesterhow"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `find James Jake`","lastModifiedDate":"2021-03-17"},{"lineNumber":562,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"ivantjh"},"content":"**List** | `list [n/GROUP_NAME]` \u003cbr\u003e e.g. `list` or `list n/Close Friends`","lastModifiedDate":"2021-04-02"},{"lineNumber":564,"author":{"gitId":"ivantjh"},"content":"**Set Goal** | `set-goal INDEX f/FREQUENCY` \u003cbr\u003e e.g. `set-goal 1 f/w`","lastModifiedDate":"2021-04-02"},{"lineNumber":565,"author":{"gitId":"ivantjh"},"content":"**Subtract Debt** | `subtract-debt INDEX DEBT_AMOUNT`\u003cbr\u003e e.g. `subtract-debt 1 100`","lastModifiedDate":"2021-04-02"},{"lineNumber":566,"author":{"gitId":"ivantjh"},"content":"**Theme** | `theme THEME`\u003cbr\u003e e.g. `theme @monokai`","lastModifiedDate":"2021-04-02"},{"lineNumber":567,"author":{"gitId":"ivantjh"},"content":"**View** | `view (upcoming events | streaks)` \u003cbr\u003e e.g.`view streaks`","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"Assyarul":58,"lue97":61,"ivantjh":253,"-":167,"chesterhow":28}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"chesterhow"},"content":"    content: \"FriendDex\";","lastModifiedDate":"2021-03-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"chesterhow":1}},{"path":"docs/diagrams/AddGroupSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"participant \":AddGroupCommand\" as AddGroupCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"participant \":GroupMap\" as GroupMap MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"participant \":Group\" as Group MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"[-\u003e AddGroupCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"activate AddGroupCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"AddGroupCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"Model --\u003e AddGroupCommand : filteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"AddGroupCommand -\u003e Model : getGroupMap().getOrDefault()","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"alt MODEL_COLOR_T1 group exists","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"\tModel -\u003e GroupMap : getOrDefault()","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"\tGroupMap --\u003e Model : group","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"else no existing group","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"\tModel -\u003e Group ** : getOrDefault()","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"\tactivate Group","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"\tGroup --\u003e Model : group","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"\tdeactivate Group","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"end","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"loop for all indexes","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"Model --\u003e AddGroupCommand : group","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"alt LOGIC_COLOR_T1 is new group","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"\tAddGroupCommand -\u003e Model : addGroup(group)","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"\tactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"else existing group","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"\tAddGroupCommand -\u003e Model : setGroup(groupName, group)","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"end","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"\tModel --\u003e AddGroupCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"\tdeactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"AddGroupCommand -\u003e CommandResult **","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"CommandResult --\u003e AddGroupCommand : result","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"[\u003c-- AddGroupCommand : result","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"deactivate AddGroupCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Assyarul":56}},{"path":"docs/diagrams/AddPictureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"participant \"cmd:AddPictureCommand\" as AddPictureCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n:FileUtil\"  as FileUtil LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"participant \"p:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"participant \"oldPic:Picture\" as OldPicture LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"participant \"pic:Picture\" as Picture LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"[-\u003e AddPictureCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"activate AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e AddPictureCommand : validateFile(filePath)","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"activate AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e FileUtil : access helper methods","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"activate FileUtil","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"FileUtil -\u003e AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"deactivate FileUtil","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e AddPictureCommand : validation result","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"deactivate AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e Model : get person to edit","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"Model -\u003e AddPictureCommand : p","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e Person : getPicture()","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"activate Person","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"Person -\u003e AddPictureCommand : oldPic","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"deactivate Person","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"opt oldPic is present","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e OldPicture : deleteFile()","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"activate OldPicture","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"OldPicture --\u003e AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"deactivate OldPicture","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"end","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e AddPictureCommand : generateNewFilename()","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"activate AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e AddPictureCommand : newFileName","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"deactivate AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e FileUtil : copyFile(filepath, newFilePath)","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"activate FileUtil","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"FileUtil --\u003e AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"deactivate FileUtil","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"create Picture","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e Picture","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"activate Picture","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"Picture -\u003e AddPictureCommand : pic","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"deactivate Picture","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e Person : withPicture(pic)","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"activate Person","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"Person -\u003e AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"deactivate Person","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e Model : update p","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"Model --\u003e AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"create CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"AddPictureCommand -\u003e CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"ivantjh"},"content":"CommandResult --\u003e AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"[\u003c--AddPictureCommand : result","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"deactivate AddPictureCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"ivantjh":95}},{"path":"docs/diagrams/CommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"participant \":CommandParser\" as CommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"participant \":Command\" as Command LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"[-\u003e LogicManager : execute(commandText)","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"LogicManager -\u003e InputParser : parseCommand(commandText)","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"activate InputParser","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"create CommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"InputParser-\u003e CommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"activate CommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"CommandParser --\u003e InputParser","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"deactivate CommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"InputParser-\u003e CommandParser : parse()","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"activate CommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"create Command","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"CommandParser -\u003e Command","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"activate Command","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"Command --\u003e CommandParser : command","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"deactivate Command","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"CommandParser --\u003e InputParser : command","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"deactivate CommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"CommandParser -[hidden]-\u003e InputParser","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"destroy CommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"InputParser --\u003e LogicManager : command","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"deactivate InputParser","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"LogicManager -\u003e Command: execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"activate Command","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"ref over Command, Model","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"Command implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"(see below for specifics)","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"end ref","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"Command -\u003e CommandResult **","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"CommandResult --\u003e Command : result","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"Command--\u003e LogicManager : result","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"deactivate Command","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Assyarul":62}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"skinparam ArrowFontSize 11","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"Interface ObservableMap \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Package Person {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"Class Birthday","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"Class Picture","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"Class Event","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"Package Group {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"Class Group","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"Class GroupHashMap","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"Model .right.\u003e ObservableMap","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"ObservableList -[hidden]down- ObservableMap","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2019-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"AddressBook *.left.--\u003e \"1\" GroupHashMap","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"GroupHashMap o--\u003e \"*\" Group","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"UniquePersonList o--\u003e \"*\" Person","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"Person *--\u003e Birthday","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"Person --\u003e \"~* dates,meetings\" Event","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"Person --\u003e \"0...1\" Picture","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"ModelManager -----\u003e\" ~* filtered list\" Person","lastModifiedDate":"2021-01-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Assyarul":19,"-":56}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"StorageManager o--\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .left.|\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .down.\u003e JsonSerializableAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"JsonSerializableAddressBookStorage .right.\u003e JsonAdaptedPerson","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"JsonSerializableAddressBookStorage .right.\u003e JsonAdaptedGroup","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"JsonAdaptedGroup -[hidden]down- JsonAdaptedPerson","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"JsonAdaptedPerson .right.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"JsonAdaptedPerson .down.\u003e JsonAdaptedEvent","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"JsonAdaptedPerson .down.\u003e JsonAdaptedPicture","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Assyarul":8,"-":22}},{"path":"docs/diagrams/ThemeCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"autoactivate on","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"box Model LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"participant \"t:ThemeCommand\" as ThemeCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"participant \":ThemeManager\" as ThemeManager \u003c\u003c class \u003e\u003e UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"participant \":ThemeFactory\" as ThemeFactory \u003c\u003c class \u003e\u003e UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"[-\u003e  LogicManager : execute(path)","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(path)","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"create ThemeCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"AddressBookParser -\u003e ThemeCommand : ThemeCommand(path);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"ThemeCommand --\u003e AddressBookParser : t","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"AddressBookParser --\u003e LogicManager : t","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"LogicManager -\u003e ThemeCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"ThemeCommand -\u003e ThemeFactory : load(path)","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"ThemeFactory --\u003e ThemeCommand : theme","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"ref over ThemeCommand, ThemeFactory : ThemeManager#setTheme(theme, themePath)","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"ThemeCommand --\u003e LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lue97":40}},{"path":"docs/diagrams/ThemeInitializationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"\u0027autoactivate on","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"participant \":MainApp\" as MainApp USER_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"participant \"guiSettings:GuiSettings\" as GuiSettings MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"participant \":ThemeManager\" as ThemeManager \u003c\u003c class \u003e\u003e UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"participant \":ThemeFactory\" as ThemeFactory \u003c\u003c class \u003e\u003e UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"[-\u003e  MainApp:","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"activate MainApp","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"MainApp -\u003e MainApp : init()","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"MainApp -\u003e MainApp : initTheme()","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"MainApp -\u003e Model : getGuiSettings()","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"Model --\u003e MainApp : guiSettings","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"MainApp -\u003e GuiSettings : getThemePath()","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"activate GuiSettings","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"GuiSettings --\u003e MainApp : themePath","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"deactivate GuiSettings","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"alt themePath \u003d\u003d null","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"    MainApp -\u003e ThemeFactory : getDefaultTheme()","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"    activate ThemeFactory","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"    ThemeFactory --\u003e MainApp : theme","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"    deactivate ThemeFactory","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"    ref over MainApp, ThemeManager : ThemeManager#setTheme(theme, themePath)","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"else","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"    MainApp -\u003e ThemeFactory : loadTheme(themePath)","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"    activate ThemeFactory","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"    ThemeFactory --\u003e MainApp : theme","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"    deactivate ThemeFactory","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"    ref over MainApp, ThemeManager : ThemeManager#setTheme(theme, themePath)","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"end","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"[\u003c-- MainApp","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lue97":67}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"class DetailsPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"class PersonDetailsCard","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"class UpcomingDateCard","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"class ProfilePicture","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"class GroupListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"MainWindow *-down-\u003e GroupListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"MainWindow *-down-\u003e DetailsPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"PersonCard -down-\u003e ProfilePicture","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"DetailsPanel -down-\u003e UpcomingDateCard","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"DetailsPanel -down-\u003e PersonDetailsCard","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"PersonDetailsCard -down-\u003e ProfilePicture","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"DetailsPanel --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"UpcomingDateCard --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"PersonDetailsCard --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"ProfilePicture --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"PersonDetailsCard ..\u003e Model","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"UpcomingDateCard ..\u003e Model","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"ProfilePicture ..\u003e Model","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"DetailsPanel -[hidden]left- PersonListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"PersonListPanel -[hidden]left- GroupListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"GroupListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"PersonDetailsCard -[hidden]left- PersonCard","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"UpcomingDateCard -[hidden]left- PersonDetailsCard","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":59,"chesterhow":25}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"title: FriendDex","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W14-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-W14-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"**FriendDex is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"* If you are interested in using FriendDex, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"* If you are interested about developing FriendDex, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ivantjh":5,"-":12}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"chesterhow"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/frienddex.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2021-03-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":393,"chesterhow":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.Theme;","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.ThemeFactory;","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.ThemeManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.exceptions.InvalidThemeException;","lastModifiedDate":"2021-02-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2021-02-19"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"        initTheme();","lastModifiedDate":"2021-02-19"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"     * Initializes the content of ThemeManager with the theme in the GuiSetting of model.","lastModifiedDate":"2021-02-19"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"    private void initTheme() {","lastModifiedDate":"2021-02-19"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"        ThemeManager.init();","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (model.getGuiSettings().getThemePath() \u003d\u003d null) {","lastModifiedDate":"2021-02-18"},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"            logger.info(\"No theme specified. Applying default theme ...\");","lastModifiedDate":"2021-02-19"},{"lineNumber":84,"author":{"gitId":"lue97"},"content":"            ThemeManager.setTheme(ThemeFactory.getDefaultTheme(), null);","lastModifiedDate":"2021-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-02-18"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":"            logger.info(\"Loading theme \" + model.getGuiSettings().getThemePath() + \" ...\");","lastModifiedDate":"2021-02-19"},{"lineNumber":87,"author":{"gitId":"lue97"},"content":"            try {","lastModifiedDate":"2021-02-19"},{"lineNumber":88,"author":{"gitId":"lue97"},"content":"                Theme theme \u003d ThemeFactory.load(model.getGuiSettings().getThemePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"lue97"},"content":"                ThemeManager.setTheme(theme, model.getGuiSettings().getThemePath());","lastModifiedDate":"2021-02-19"},{"lineNumber":90,"author":{"gitId":"lue97"},"content":"                return;","lastModifiedDate":"2021-02-19"},{"lineNumber":91,"author":{"gitId":"lue97"},"content":"            } catch (DataConversionException | InvalidThemeException exception) {","lastModifiedDate":"2021-02-19"},{"lineNumber":92,"author":{"gitId":"lue97"},"content":"                logger.warning(\"Invalid \" + model.getGuiSettings().getThemePath() + \" theme supplied\");","lastModifiedDate":"2021-02-19"},{"lineNumber":93,"author":{"gitId":"lue97"},"content":"            } catch (IOException fileNotFoundException) {","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"lue97"},"content":"                logger.warning(\"Theme \" + model.getGuiSettings().getThemePath() + \" not found\");","lastModifiedDate":"2021-02-19"},{"lineNumber":95,"author":{"gitId":"lue97"},"content":"            }","lastModifiedDate":"2021-02-19"},{"lineNumber":96,"author":{"gitId":"lue97"},"content":"            ThemeManager.setTheme(ThemeFactory.getDefaultTheme(), model.getGuiSettings().getThemePath());","lastModifiedDate":"2021-02-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-02-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lue97":29,"ivantjh":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/DetailsPanelTab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"public enum DetailsPanelTab {","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"    UPCOMING_EVENTS(\"Upcoming Events\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"    PERSON_DETAILS(\"Person Details\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"    STREAKS(\"Streaks\");","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    private final String label;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    DetailsPanelTab(final String label) {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"     * Returns the DetailsPanelTab enum representation of the given {@code String}","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    public static DetailsPanelTab fromString(String label) {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        for (DetailsPanelTab tab : DetailsPanelTab.values()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"            if (tab.label.equalsIgnoreCase(label)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"                return tab;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        throw new IllegalArgumentException(\"No tab with text \" + label + \" found\");","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    public String toString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        return label;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"chesterhow":30}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_INVALID_ARGUMENT_FORMAT \u003d \"Invalid argument format! \\n%1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Invalid date format! \\n\";","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_INVALID_TIME_FORMAT \u003d \"Invalid time format! \\n\";","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_INVALID_INDEX_ARGUMENT \u003d \"The \\\"i/\\\" index provided is invalid\";","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_UNKNOWN_GROUP \u003d \"The group name provided is not in the group list.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    // Files","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_INVALID_FILE \u003d \"\\\"%1$s\\\" is an invalid file path\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"File \\\"%1$s\\\" not found\";","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_FILE_TOO_BIG \u003d \"File \\\"%1$s\\\" is too big. Reduce file size to below %2$s bytes\";","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_INVALID_FILE_EXTENSION \u003d \"File \\\"%1$s\\\" does not have the required extension. \"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"        + \"Accepted file extensions: \\\"%2$s\\\"\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    // Tabs","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_INVALID_TAB \u003d \"To view this tab, use the following command instead: \\n%1$s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lue97":8,"Assyarul":1,"ivantjh":1,"-":13,"chesterhow":4}},{"path":"src/main/java/seedu/address/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DATE_FORMAT;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.time.Instant;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"public class DateUtil {","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    public static final LocalDate ZERO_DAY \u003d LocalDate.ofInstant(Instant.ofEpochMilli(0), ZoneId.systemDefault());","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    private static final DateTimeFormatter DATE_PARSER;","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"    private static final DateTimeFormatter DEFAULT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    private static final DateTimeFormatter NO_YEAR_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM\");","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"    private static final String[] patterns;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    private static final String[] examples;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"    static {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"        patterns \u003d new String[]{\"dd-MM-yyyy\"};","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"        examples \u003d new String[]{\"12-12-2020\"};","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder();","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"        Arrays.stream(patterns).map(DateTimeFormatter::ofPattern).forEach(builder::appendOptional);","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"        DATE_PARSER \u003d builder.toFormatter();","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_CONSTRAINT \u003d MESSAGE_INVALID_DATE_FORMAT + \"Format given should be one of \"","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        + String.join(\", \", patterns) + \"\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        + \"Some examples are \" + String.join(\", \", examples);","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"     * Takes a string and parses it into a LocalDate","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"     * @param string the string to convert","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"     * @return a LocalDate that was created from the string","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"    public static LocalDate fromDateInput(String string) throws ParseException {","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"        LocalDate date;","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"            date \u003d DATE_PARSER.parse(string, LocalDate::from);","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"            throw new ParseException(MESSAGE_CONSTRAINT);","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"        return date;","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"    public static String toString(LocalDate localDate, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"        return dateFormatter.format(localDate);","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"    public static String toUi(LocalDate localDate) {","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"        return DEFAULT_FORMATTER.format(localDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"    public static String toUiNoYear(LocalDate localDate) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"        return NO_YEAR_FORMATTER.format(localDate);","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"lue97":4,"Assyarul":9,"ivantjh":52,"chesterhow":6}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"     * Assumes source file exists","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"    public static void copyFile(Path source, Path destination) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"        createParentDirsOfFile(destination);","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"        Files.copy(source, destination);","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"     * Extracts extension of file","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"    public static String extractExtension(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"ivantjh"},"content":"        String fileName \u003d filePath.toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"ivantjh"},"content":"        return extractExtension(fileName);","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"ivantjh"},"content":"     * Extracts extension of file","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"    public static String extractExtension(String fileName) {","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"ivantjh"},"content":"        int lastIndexOf \u003d fileName.lastIndexOf(\u0027.\u0027);","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"ivantjh"},"content":"        return fileName.substring(lastIndexOf);","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"ivantjh"},"content":"     * Checks if filePath contains given extension","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"ivantjh"},"content":"    public static boolean hasExtension(Path filePath, String[] allowedExtensions) {","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"ivantjh"},"content":"        String ext \u003d FileUtil.extractExtension(filePath);","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"ivantjh"},"content":"        return Arrays.stream(allowedExtensions)","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"ivantjh"},"content":"                .map(ext::equals)","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"ivantjh"},"content":"                .reduce(false, (x, y) -\u003e x || y);","lastModifiedDate":"2021-03-21"},{"lineNumber":124,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":125,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":126,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":127,"author":{"gitId":"ivantjh"},"content":"     * Checks if the file at the path given is below {@code maxSize}","lastModifiedDate":"2021-03-21"},{"lineNumber":128,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":129,"author":{"gitId":"ivantjh"},"content":"    public static boolean belowSizeLimit(Path path, long maxSize) throws IOException {","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"ivantjh"},"content":"        long bytes \u003d Files.size(path);","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"ivantjh"},"content":"        return bytes \u003c\u003d maxSize;","lastModifiedDate":"2021-03-21"},{"lineNumber":132,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"lue97"},"content":"     * Returns the content of a resource as String. Only works on text based resources.","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"lue97"},"content":"    public static String getResourceAsString(String resourceName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"lue97"},"content":"        InputStream inputStream \u003d Application.class.getResourceAsStream(resourceName);","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"lue97"},"content":"        return new BufferedReader(new InputStreamReader(inputStream))","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"lue97"},"content":"                .lines().collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"lue97"},"content":"    public static String joinPath(String ... tokens) {","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"lue97"},"content":"        return Arrays.stream(tokens).collect(Collectors.joining(getSeparator()));","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"lue97"},"content":"    public static String getSeparator() {","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"lue97"},"content":"        return System.getProperty(\"file.separator\");","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lue97":23,"ivantjh":44,"-":83}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ivantjh":4,"-":142}},{"path":"src/main/java/seedu/address/commons/util/TimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TIME_FORMAT;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"public class TimeUtil {","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"    private static final DateTimeFormatter TIME_PARSER;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"    private static final DateTimeFormatter DEFAULT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    private static final String[] patterns;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    private static final String[] examples;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    static {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"        patterns \u003d new String[]{\"HHmm\"};","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"        examples \u003d new String[]{\"1200\"};","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"        DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder();","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"        Arrays.stream(patterns).map(DateTimeFormatter::ofPattern).forEach(builder::appendOptional);","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"        TIME_PARSER \u003d builder.toFormatter();","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_CONSTRAINT \u003d MESSAGE_INVALID_TIME_FORMAT + \"Format given should be one of \"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"            + String.join(\", \", patterns) + \"\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"            + \"Some examples are \" + String.join(\", \", examples);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"     * Takes a string and parses it into a LocalTime","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"     * @param string the string to convert","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"     * @return a LocalTime that was created from the string","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"    public static LocalTime fromTimeInput(String string) throws ParseException {","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        LocalTime time;","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"            time \u003d TIME_PARSER.parse(string, LocalTime::from);","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"            throw new ParseException(MESSAGE_CONSTRAINT);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"        return time;","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"    public static String toUi(LocalTime localTime) {","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"        return DEFAULT_FORMATTER.format(localTime);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"ivantjh":56}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"    void saveFiles() throws IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"     * Returns an unmodifiable view of upcoming dates","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"    ObservableList\u003cPersonEvent\u003e getUpcomingDates();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"     * Returns an unmodifiable view of a person to display the full details for","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    ObservableList\u003cPerson\u003e getDetailedPerson();","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"     * Returns an unmodifiable view of contacts and their streaks","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"    ObservableList\u003cPersonStreak\u003e getPersonStreaks();","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lue97":3,"ivantjh":6,"-":49,"chesterhow":14}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.parser.InputParser;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"    private final InputParser inputParser;","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        inputParser \u003d new InputParser();","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"        Command command \u003d inputParser.parseCommand(commandText);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"    public void saveFiles() throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"        storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"        storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"    public ObservableList\u003cPersonEvent\u003e getUpcomingDates() {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"        return model.getUpcomingDates();","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"    public ObservableList\u003cPerson\u003e getDetailedPerson() {","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"        return model.getDetailedPerson();","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"    public ObservableList\u003cPersonStreak\u003e getPersonStreaks() {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"        return model.getPersonStreaks();","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lue97":7,"ivantjh":10,"-":77,"chesterhow":11}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"            + PREFIX_BIRTHDAY + \"BIRTHDAY \"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"            + PREFIX_BIRTHDAY + \"01-01-1998 \"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.toUi()));","lastModifiedDate":"2021-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Assyarul":4,"-":66}},{"path":"src/main/java/seedu/address/logic/commands/AddDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import java.util.List;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":" * Adds a special date to an existing person in the FriendDex.","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"public class AddDateCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    public static final String COMMAND_WORD \u003d \"add-date\";","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Save a special date for the person identified \"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"            + PREFIX_DATE + \"12-12-2021 \"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"            + PREFIX_DESCRIPTION + \"Wedding Anniversary\";","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_ADD_DATE_SUCCESS \u003d \"Added date for %1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    private final Index index;","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    private final Event event;","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"     * @param index of the person in the filtered person list to add date to","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"     * @param event details of the date to add","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    public AddDateCommand(Index index, Event event) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        requireAllNonNull(index, event);","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"        List\u003cEvent\u003e datesToEdit \u003d new ArrayList\u003c\u003e(personToEdit.getDates());","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        datesToEdit.add(event);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        Person editedPerson \u003d personToEdit.withDates(datesToEdit);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"        model.updateUpcomingDates();","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_DATE_SUCCESS, editedPerson.getName()));","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof AddDateCommand)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"        AddDateCommand e \u003d (AddDateCommand) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"        return index.equals(e.index) \u0026\u0026 event.equals(e.event);","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"ivantjh":3,"chesterhow":83}},{"path":"src/main/java/seedu/address/logic/commands/AddGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSONS;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"public class AddGroupCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    public static final String COMMAND_WORD \u003d \"add-group\";","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds the group of the specified name with the\"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"            + \"specified persons indicated by the index numbers used in the last person listing. If group exists,\"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"            + \"add people into group if they are not in it.  \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"            + \"Parameters: \" + PREFIX_NAME + \"GROUP_NAME (must be alphanumeric only) \"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"            + PREFIX_PERSONS + \"[INDEX]\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"            + PREFIX_NAME + \"Close Friends\" + \" \"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"            + PREFIX_PERSONS + \"1 2 3 4\";","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_ADD_GROUP_SUCCESS \u003d \"Added/Added into group %1$s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    private final List\u003cIndex\u003e indexes;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"    private final Name groupName;","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"     * @param indexes of the person in the filtered person list to add to the group","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"     * @param groupName the group Name being added/adding persons into","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"    public AddGroupCommand(List\u003cIndex\u003e indexes, Name groupName) {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        requireAllNonNull(indexes, groupName);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"        Group group \u003d model.getGroupMap().getOrDefault(groupName, new Group(groupName));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"        Set\u003cName\u003e newPersonSet \u003d new HashSet\u003c\u003e(group.getPersonNames());","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"        boolean isNewGroup \u003d !model.hasGroup(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"        if (indexes.stream().anyMatch(index-\u003eindex.getZeroBased() \u003e\u003d lastShownList.size())) {","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"        for (Index index: indexes) {","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"            Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"            newPersonSet.add(person.getName());","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"        group.setPersons(newPersonSet);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"        if (isNewGroup) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"            model.addGroup(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"        } else {","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"            model.setGroup(groupName, group);","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"Assyarul"},"content":"        model.updateFilteredPersonList(p -\u003e group.getPersonNames().contains(p.getName()));","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"Assyarul"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_GROUP_SUCCESS, groupName));","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"Assyarul"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"Assyarul"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"        if (!(other instanceof AddGroupCommand)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"Assyarul"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"Assyarul"},"content":"        AddGroupCommand e \u003d (AddGroupCommand) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"Assyarul"},"content":"        return indexes.equals(e.indexes) \u0026\u0026 groupName.equals(e.groupName);","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":92}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"    public static final String COMMAND_WORD \u003d \"add-meeting\";","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Records a meeting of the person identified \"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"            + \"by the index number used in the last person listing. \\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"            + PREFIX_TIME + \"TIME \"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"            + PREFIX_DATE + \"12-12-2021 \"","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"            + PREFIX_TIME + \"1240 \"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"            + PREFIX_DESCRIPTION + \"We went to the beach!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_ADD_MEETING_SUCCESS \u003d \"Added meeting for %1$s\";","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_ADD_MEETING_FAILURE \u003d \"Failed to add meeting: Meeting \"","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"            + \"date %1$s is after current date.\";","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"    private final Index index;","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    private final Event meeting;","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"     * @param index of the person in the filtered person list to add the meeting to","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"     * @param meeting the meeting to add","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"    public AddMeetingCommand(Index index, Event meeting) {","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"        requireAllNonNull(index, meeting);","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"    private static Person createEditedPerson(Person personToEdit, Event meeting) {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"        List\u003cEvent\u003e meetingsToEdit \u003d new ArrayList\u003c\u003e(personToEdit.getMeetings());","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"        meetingsToEdit.add(meeting);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"        meetingsToEdit \u003d meetingsToEdit.stream()","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"                .sorted(Comparator.comparing(Event::getDate).reversed())","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        return personToEdit.withMeetings(meetingsToEdit);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"        // ignore time comparisons for leniency","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"        if (meeting.getDate().isAfter(LocalDate.now())) {","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"            throw new CommandException(String.format(MESSAGE_ADD_MEETING_FAILURE, meeting.getDate()));","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"        Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"        Person editedPerson \u003d createEditedPerson(person, meeting);","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"ivantjh"},"content":"        model.setPerson(person, editedPerson);","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_MEETING_SUCCESS, editedPerson.getName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"        if (!(other instanceof AddMeetingCommand)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"            return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"        AddMeetingCommand e \u003d (AddMeetingCommand) other;","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"        return index.equals(e.index) \u0026\u0026 meeting.equals(e.meeting);","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"lue97":13,"ivantjh":86,"chesterhow":3}},{"path":"src/main/java/seedu/address/logic/commands/AddPictureCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FILE_NOT_FOUND;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FILE_TOO_BIG;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_FILE_EXTENSION;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import java.util.UUID;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"public class AddPictureCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"    public static final String COMMAND_WORD \u003d \"add-picture\";","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a picture to the person identified \"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"            + \"by the index number used in the last person listing. \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"            + \"Parameters: INDEX (must be a positive integer) PICTURE_FILE_PATH \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 /Users/john/img_of_friend.jpg\";","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_ADD_PICTURE_SUCCESS \u003d \"Added picture for %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddPictureCommand.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    private final Index index;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"    private final Path filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"     * @param index    of the person in the filtered person list to add a picture to","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"     * @param filePath of the picture to add","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"    public AddPictureCommand(Index index, Path filePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"        validateFile();","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        ReadOnlyUserPrefs userPrefs \u003d model.getUserPrefs();","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"        Path pictureDir \u003d userPrefs.getPictureStorageDirPath();","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"        UUID uuid \u003d UUID.randomUUID();","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        String ext \u003d FileUtil.extractExtension(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"        String newFileName \u003d uuid.toString() + ext;","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"        Path newFilePath \u003d pictureDir.resolve(newFileName);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"            FileUtil.copyFile(filePath, newFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException(String.format(\"Error copying file to picture storage directory. \"","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"                    + \"Please try again. %s\", e));","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"        Picture picture \u003d new Picture(newFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"        Person editedPerson \u003d personToEdit.deletePicture().withPicture(picture);","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_PICTURE_SUCCESS, editedPerson.getName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"    private void validateFile() throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"        if (!FileUtil.isFileExists(filePath)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException(String.format(MESSAGE_FILE_NOT_FOUND, filePath));","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"        if (!FileUtil.hasExtension(filePath, Picture.ALLOWED_FILE_EXTENSIONS)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_FILE_EXTENSION,","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"                    filePath, Picture.ALLOWED_FILE_EXTENSIONS_STRING));","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"            if (!FileUtil.belowSizeLimit(filePath, Picture.MAX_FILE_SIZE)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"                throw new CommandException(String.format(MESSAGE_FILE_TOO_BIG, filePath, Picture.MAX_FILE_SIZE));","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException(String.format(\"Error occurred checking file size. %s\", e));","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"ivantjh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"ivantjh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"        if (!(o instanceof AddPictureCommand)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"ivantjh"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"ivantjh"},"content":"        AddPictureCommand that \u003d (AddPictureCommand) o;","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"ivantjh"},"content":"        return index.equals(that.index) \u0026\u0026 filePath.equals(that.filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"ivantjh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"ivantjh"},"content":"        return Objects.hash(index, filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"ivantjh":123}},{"path":"src/main/java/seedu/address/logic/commands/ChangeDebtCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":" * Base Class for AddDebtCommand and SubtractDebtCommand.","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"public class ChangeDebtCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    public static final String COMMAND_WORD_ADD \u003d \"add-debt\";","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    public static final String COMMAND_WORD_SUBTRACT \u003d \"subtract-debt\";","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_USAGE_ADD \u003d String.format(ChangeDebtCommand.MESSAGE_USAGE, COMMAND_WORD_ADD);","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_USAGE_SUBTRACT \u003d String.format(ChangeDebtCommand.MESSAGE_USAGE,","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"            COMMAND_WORD_SUBTRACT);","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_ADD_DEBT_SUCCESS \u003d \"Added %1$s to %2$s debt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_SUBTRACT_DEBT_SUCCESS \u003d \"Subtracted %1$s to %2$s debt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    private static final String MESSAGE_USAGE \u003d \"%1$s: Adds the specified debt to the person identified\"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"            + \" by the index number used in the last person listing. \\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"            + \"Parameters: INDEX (must be a positive integer) DEBT \\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"            + \"Example: %1$s 1 10.50\";","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"    private final Index index;","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"    private final Debt debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    private final boolean isAdd;","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"     * Command that changes debt by the specified amount.","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"     * @param index person index in the last person listing","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"     * @param debt Debt to be added/subtracted","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"     * @param isAdd True if adding debt, subtract otherwise","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"    public ChangeDebtCommand(Index index, Debt debt, boolean isAdd) {","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        this.debt \u003d debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        this.isAdd \u003d isAdd;","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"        Debt currentDebt \u003d personToEdit.getDebt();","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"        Person editedPerson;","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"        if (isAdd) {","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"            editedPerson \u003d personToEdit.withDebt(Debt.add(currentDebt, debt));","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"            editedPerson \u003d personToEdit.withDebt(Debt.subtract(currentDebt, debt));","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"        if (isAdd) {","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"            return new CommandResult(String.format(MESSAGE_ADD_DEBT_SUCCESS, debt.toUi(), editedPerson.getName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"            return new CommandResult(String.format(MESSAGE_SUBTRACT_DEBT_SUCCESS, debt.toUi(), editedPerson.getName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Assyarul":68}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        model.updateUpcomingDates();","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        model.updateDetailedPerson(null);","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":23,"chesterhow":2}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"     * The application should exit.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"    private final boolean theme;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"     * The new tab to be displayed on the {@code DetailsPanel}.","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    private final DetailsPanelTab tab;","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"    private CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean theme, DetailsPanelTab tab) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        this.tab \u003d tab;","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"        this.theme \u003d theme;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean theme) {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"        this(feedbackToUser, showHelp, exit, theme, null);","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"    public CommandResult(String feedbackToUser, DetailsPanelTab tab) {","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"        this(feedbackToUser, false, false, false, tab);","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"        this(feedbackToUser, false, false, false, null);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"    public boolean isTheme() {","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"        return theme;","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"    public DetailsPanelTab getNewTab() {","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"        return tab;","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"                \u0026\u0026 tab \u003d\u003d otherCommandResult.tab;","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"chesterhow"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, tab);","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"    public String toString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"        return \"CommandResult{\"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"ivantjh"},"content":"                + \"feedbackToUser\u003d\u0027\" + feedbackToUser + \"\u0027\"","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"ivantjh"},"content":"                + \", showHelp\u003d\" + showHelp","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"ivantjh"},"content":"                + \", exit\u003d\" + exit","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"chesterhow"},"content":"                + \", tab\u003d\" + tab","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"ivantjh"},"content":"                + \"}\";","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lue97":12,"ivantjh":14,"-":65,"chesterhow":27}},{"path":"src/main/java/seedu/address/logic/commands/Commands.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":" * Represents functions involving all the commands","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"public class Commands {","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"    public static String[] getAutoCompleteStrings() {","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"        // In alphabetical order for neatness","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"        return new String[]{","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"                AddCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"                AddDateCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"                AddGroupCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"                AddMeetingCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"                AddPictureCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"                ChangeDebtCommand.COMMAND_WORD_ADD,","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"                ChangeDebtCommand.COMMAND_WORD_SUBTRACT,","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"                ClearCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"                DeleteCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"                DeleteDateCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"                DeleteGroupCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"                DeleteMeetingCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"                DeletePictureCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"                DetailsCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"                EditCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"                ExitCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"                FindCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"                HelpCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"                ListCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"                SetGoalCommand.COMMAND_WORD,","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"                ThemeCommand.COMMAND_WORD,","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"                ViewCommand.COMMAND_WORD","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"        };","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lue97":1,"Assyarul":1,"ivantjh":33,"chesterhow":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        // TODO: check current tab and only switch if user is on PersonDetailsTab","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        if (model.getDetailedPerson().contains(personToDelete)) {","lastModifiedDate":"2021-04-03"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete),","lastModifiedDate":"2021-04-03"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"                    DetailsPanelTab.UPCOMING_EVENTS);","lastModifiedDate":"2021-04-03"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":53,"chesterhow":8}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import java.util.List;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":" * Deletes an existing special date from an existing person in the FriendDex.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"public class DeleteDateCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    public static final String COMMAND_WORD \u003d \"del-date\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the special date identified \"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"            + \"by the date index number used, for the person identified by the index number used.\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"            + PREFIX_INDEX + \"DATE_INDEX\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"            + PREFIX_INDEX + \"1\";","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_DELETE_DATE_SUCCESS \u003d \"Deleted date for %1$s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    private final Index index;","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    private final Index dateIndex;","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"     * @param index of the person in the filtered person list to delete date from","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"     * @param dateIndex of the date to be deleted","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"    public DeleteDateCommand(Index index, Index dateIndex) {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        requireAllNonNull(index, dateIndex);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        this.dateIndex \u003d dateIndex;","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"            throw new CommandException((Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        List\u003cEvent\u003e dates \u003d new ArrayList\u003c\u003e(personToEdit.getDates());","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"        if (dateIndex.getZeroBased() \u003e\u003d dates.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"            throw new CommandException((Messages.MESSAGE_INVALID_INDEX_ARGUMENT));","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"        dates.remove(dateIndex.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        Person editedPerson \u003d personToEdit.withDates(dates);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"        model.updateUpcomingDates();","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DATE_SUCCESS, editedPerson.getName()));","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof DeleteDateCommand)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"        DeleteDateCommand e \u003d (DeleteDateCommand) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"        return index.equals(e.index) \u0026\u0026 dateIndex.equals(e.dateIndex);","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"ivantjh":1,"chesterhow":85}},{"path":"src/main/java/seedu/address/logic/commands/DeleteGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_GROUP;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"public class DeleteGroupCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"    public static final String COMMAND_WORD \u003d \"del-group\";","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the group of the specified name \\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"            + \"Parameters: \" + PREFIX_NAME + \"GROUP_NAME (must be alphanumeric only) \\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"            + PREFIX_NAME + \"Close Friends\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_DELETE_GROUP_SUCCESS \u003d \"Deleted group %1$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    private final Name groupName;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"     * @param groupName the group Name being deleted.","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"    public DeleteGroupCommand(Name groupName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        requireAllNonNull(groupName);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        Group group \u003d model.getGroupMap().getOrDefault(groupName, new Group(groupName));","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        if (!model.hasGroup(group)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_GROUP);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        model.deleteGroup(group);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GROUP_SUCCESS, groupName));","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"        if (!(other instanceof DeleteGroupCommand)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"        DeleteGroupCommand e \u003d (DeleteGroupCommand) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"        return groupName.equals(e.groupName);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Assyarul":60,"ivantjh":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":" * Deletes an existing meeting from an existing person in the FriendDex.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"    public static final String COMMAND_WORD \u003d \"del-meeting\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the meeting identified \"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"            + \"by the second index number used, for the person identified by the first index number.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"            + PREFIX_INDEX + \"INDEX\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"            + PREFIX_INDEX + \"1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Deleted meeting for %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    private final Index index;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"    private final Index meetingIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"     * @param index of the person in the filtered person list to delete meeting from","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"     * @param meetingIndex of the meeting to be deleted","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"    public DeleteMeetingCommand(Index index, Index meetingIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        requireAllNonNull(index, meetingIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        this.meetingIndex \u003d meetingIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException((Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"        List\u003cEvent\u003e meetings \u003d new ArrayList\u003c\u003e(personToEdit.getMeetings());","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"        if (meetingIndex.getZeroBased() \u003e\u003d meetings.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException((Messages.MESSAGE_INVALID_INDEX_ARGUMENT));","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        meetings.remove(meetingIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        Person editedPerson \u003d personToEdit.withMeetings(meetings);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEETING_SUCCESS, editedPerson.getName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"        if (!(other instanceof DeleteMeetingCommand)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"        DeleteMeetingCommand e \u003d (DeleteMeetingCommand) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"        return index.equals(e.index) \u0026\u0026 meetingIndex.equals(e.meetingIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"ivantjh":85}},{"path":"src/main/java/seedu/address/logic/commands/DeletePictureCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"public class DeletePictureCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    public static final String COMMAND_WORD \u003d \"del-picture\";","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"            + \": Deletes the picture of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_DELETE_PICTURE_SUCCESS \u003d \"Deleted picture for %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_DELETE_PICTURE_NO_PICTURE_FOUND \u003d \"No picture found for %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"    public DeletePictureCommand(Index targetIndex) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"        Optional\u003cPicture\u003e pictureOptional \u003d personToEdit.getPicture();","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"        if (pictureOptional.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_PICTURE_NO_PICTURE_FOUND, name));","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"        Person editedPerson \u003d personToEdit.deletePicture();","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PICTURE_SUCCESS, name));","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"                || (other instanceof DeletePictureCommand // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePictureCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"ivantjh":67}},{"path":"src/main/java/seedu/address/logic/commands/DetailsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import java.util.List;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":" * Displays the full details for a person by the index number used in the displayed person list.","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"public class DetailsCommand extends Command {","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    public static final String COMMAND_WORD \u003d \"details\";","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"            + \": Displays the full details for a person identified \"","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_DETAILS_SUCCESS \u003d \"Displaying details for %1$s on the right panel\";","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    private final Index index;","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    public DetailsCommand(Index index) {","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"        Person personToDisplay \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        model.updateDetailedPerson(personToDisplay);","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        return new CommandResult(String.format(MESSAGE_DETAILS_SUCCESS, personToDisplay.getName()),","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"                DetailsPanelTab.PERSON_DETAILS);","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof DetailsCommand)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"        DetailsCommand e \u003d (DetailsCommand) other;","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"chesterhow":64}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"        model.updateUpcomingDates();","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Assyarul"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson.toUi()));","lastModifiedDate":"2021-04-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"Assyarul"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"lue97"},"content":"        Goal updatedGoal \u003d editPersonDescriptor.getGoal().orElse(personToEdit.getGoal());","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"Assyarul"},"content":"        Debt debt \u003d personToEdit.getDebt();","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"ivantjh"},"content":"        Picture picture \u003d personToEdit.getPicture().orElse(null);","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"ivantjh"},"content":"        List\u003cEvent\u003e dates \u003d personToEdit.getDates();","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"ivantjh"},"content":"        List\u003cEvent\u003e meetings \u003d personToEdit.getMeetings();","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"lue97"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedBirthday, updatedGoal,","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"Assyarul"},"content":"                updatedAddress, picture, debt, updatedTags, dates, meetings);","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"Assyarul"},"content":"        private Birthday birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"lue97"},"content":"        private Goal goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"Assyarul"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"lue97"},"content":"            setGoal(toCopy.goal);","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"Assyarul"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address,","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"Assyarul"},"content":"                    birthday, tags);","lastModifiedDate":"2021-03-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"Assyarul"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2021-03-09"},{"lineNumber":209,"author":{"gitId":"Assyarul"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":210,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":211,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":212,"author":{"gitId":"Assyarul"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2021-03-09"},{"lineNumber":213,"author":{"gitId":"Assyarul"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2021-03-09"},{"lineNumber":214,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":215,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":216,"author":{"gitId":"lue97"},"content":"        public void setGoal(Goal goal) {","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"lue97"},"content":"            this.goal \u003d goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"lue97"},"content":"        public Optional\u003cGoal\u003e getGoal() {","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"lue97"},"content":"            return Optional.ofNullable(goal);","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"Assyarul"},"content":"                    \u0026\u0026 getBirthday().equals(e.getBirthday())","lastModifiedDate":"2021-03-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Assyarul":21,"lue97":13,"ivantjh":5,"-":223,"chesterhow":2}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lue97":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATTERN;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_INVALID_REGEX \u003d \"Regex supplied is invalid\";","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS] \"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"            + \"[\" + PREFIX_PATTERN + \"]\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lue97":9,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lue97":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_GROUP;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List all persons. If a name is given,\"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"            + \"list all the persons in the specified group name.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"            + \"PARAMETERS: [\" + PREFIX_NAME + \"GROUP_NAME]\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"            + \"EXAMPLE: list \" + PREFIX_NAME + \"Close Friends.\\n\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_SUCCESS_DEFAULT \u003d \"Listed all persons\";","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_SUCCESS_GROUP \u003d \"Listed all persons in group %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"    private Optional\u003cName\u003e name;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"    public ListCommand(Optional\u003cName\u003e name) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        if (this.name.isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"            return new CommandResult(MESSAGE_SUCCESS_DEFAULT);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"            Group group \u003d model.getGroupMap().get(name.get());","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"            if (group \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"                throw new CommandException(MESSAGE_UNKNOWN_GROUP);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"            //this will cause the UI to select the group cell.","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"            model.setGroup(group.getName(), group);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"            model.updateFilteredPersonList(p -\u003e group.getPersonNames().contains(p.getName()));","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_GROUP, group.getName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Assyarul":31,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/SetGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal.Frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"public class SetGoalCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    public static final String COMMAND_WORD \u003d \"set-goal\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"            + \": Set goals for meeting the person identified by the index.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"            + \"f/(w[eek[ly]] | m[onth[ly]] | y[ear[ly]] | n[one])\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 f/w\";","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_ADD_GOAL_SUCCESS \u003d \"Set %1$s goal for %2$s\";","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"    private final Index index;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"    private final Frequency frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"     * Constructs an {@code AddGoalCommand} with the given index and frequency.","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"     * @param index of the person in the filter person list to add a goal for.","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"     * @param frequency of the meetings with this person.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"    public SetGoalCommand(Index index, Frequency frequency) {","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size() || index.getOneBased() \u003c\u003d 0) {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX_ARGUMENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"        Goal newGoal \u003d new Goal(this.frequency);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"        Person editedPerson \u003d personToEdit.withGoal(newGoal);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"        model.updateUpcomingDates();","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_GOAL_SUCCESS,","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"                newGoal.toString().toLowerCase(), editedPerson.getName()));","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lue97":61}},{"path":"src/main/java/seedu/address/logic/commands/ThemeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FILE_NOT_FOUND;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.util.Objects;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.Theme;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.ThemeFactory;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.ThemeManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.exceptions.InvalidThemeException;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"public class ThemeCommand extends Command {","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"    public static final String COMMAND_WORD \u003d \"theme\";","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Selects and apply a theme to the application.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"        + \"Parameters: THEME\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"        + \"Example: \" + COMMAND_WORD + \" @monokai\";","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Theme \\\"%1$s\\\" applied\";","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_INVALID_THEME \u003d \"Invalid theme \\\"%1$s\\\" given\";","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"    private final String themePathString;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"     * Creates a ThemeCommand to apply the theme located at specified {@code path}","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"     * @param themePathString The path to the theme to be applied.","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"    public ThemeCommand(String themePathString) {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"        requireNonNull(themePathString);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"        this.themePathString \u003d themePathString;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-02-19"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-02-19"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-02-19"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"        String feedback \u003d String.format(MESSAGE_SUCCESS, this.themePathString);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"        try {","lastModifiedDate":"2021-02-19"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"            Theme theme \u003d ThemeFactory.load(themePathString);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"            ThemeManager.setTheme(theme, this.themePathString);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"        } catch (DataConversionException | InvalidThemeException exception) {","lastModifiedDate":"2021-02-19"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"            feedback \u003d String.format(MESSAGE_INVALID_THEME, this.themePathString);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"            throw new CommandException(feedback);","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"            feedback \u003d String.format(MESSAGE_FILE_NOT_FOUND, this.themePathString);","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"            throw new CommandException(feedback);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"        return new CommandResult(feedback, false, false, true);","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-02-19"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-02-19"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-02-19"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"            return true;","lastModifiedDate":"2021-02-19"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-02-19"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-02-19"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"        ThemeCommand that \u003d (ThemeCommand) o;","lastModifiedDate":"2021-02-19"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"        return Objects.equals(themePathString, that.themePathString);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-02-19"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-19"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"        return themePathString !\u003d null ? themePathString.hashCode() : 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"lue97":74,"ivantjh":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TAB;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"            + \": Updates the details panel to display the given tab.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"            + \"Parameters: TAB (upcoming events | streaks)\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"            + \"Example: \" + COMMAND_WORD + \" upcoming events\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    public static final String MESSAGE_DETAILS_SUCCESS \u003d \"Displaying the %1$s tab on the right panel\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    private final DetailsPanelTab tab;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    public ViewCommand(DetailsPanelTab tab) {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        this.tab \u003d tab;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        // NOTE: replace with switch case if more such tabs are added","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        if (tab \u003d\u003d DetailsPanelTab.PERSON_DETAILS) {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_TAB, DetailsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        return new CommandResult(String.format(MESSAGE_DETAILS_SUCCESS, tab), tab);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"        ViewCommand e \u003d (ViewCommand) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        return tab.equals(e.tab);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"chesterhow":52}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal.Frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"                        PREFIX_BIRTHDAY, PREFIX_TAG);","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_BIRTHDAY)","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        Birthday birthday \u003d ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get());","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"        Goal goal \u003d new Goal(Frequency.NONE);","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"        Person person \u003d new Person(name, phone, email, birthday, goal, address, tagList);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Assyarul":6,"lue97":4,"ivantjh":1,"-":46}},{"path":"src/main/java/seedu/address/logic/parser/AddDateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.AddDateCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":" * Parses input arguments and creates a new DateCommand object","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"public class AddDateCommandParser implements Parser\u003cAddDateCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDateCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"     * and returns a AddDateCommand object for execution","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    public AddDateCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        Index index;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDateCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        return new AddDateCommand(index, new Event(date, description));","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"ivantjh":3,"chesterhow":46}},{"path":"src/main/java/seedu/address/logic/parser/AddGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSONS;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"public class AddGroupCommandParser implements Parser\u003cAddGroupCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGroupCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"     * and returns an AddGroupCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    public AddGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PERSONS);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"        List\u003cIndex\u003e indexes;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        Name name;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PERSONS)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"        name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        indexes \u003d ParserUtil.parseIndexes(argMultimap.getValue(PREFIX_PERSONS).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        return new AddGroupCommand(indexes, name);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":40}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMeetingCommand","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"     * and returns an AddMeetingCommand object for execution.","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TIME, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"        Index index;","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"                    AddMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_TIME, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        LocalTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        return new AddMeetingCommand(index, new Event(date, time, description));","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"ivantjh":48,"chesterhow":2}},{"path":"src/main/java/seedu/address/logic/parser/AddPictureCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.AddPictureCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"public class AddPictureCommandParser implements Parser\u003cAddPictureCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"    private void throwParseException() throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"        throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPictureCommand.MESSAGE_USAGE)","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"     * Parses the given {@code String} of arguments in the context of AddPictureCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"     * and returns an AddPictureCommand object for execution","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    public AddPictureCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"        String[] argArr \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"        if (argArr.length \u003c 2) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"            throwParseException();","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"        Index index \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"            index \u003d ParserUtil.parseIndex(argArr[0]);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"            throwParseException();","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        int startIdx \u003d args.indexOf(argArr[1]);","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        Path path \u003d ParserUtil.parseFilePath(args.substring(startIdx));","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"        return new AddPictureCommand(index, path);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"ivantjh":45}},{"path":"src/main/java/seedu/address/logic/parser/ChangeDebtParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.ChangeDebtCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"public class ChangeDebtParser implements Parser\u003cChangeDebtCommand\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    private final boolean isAdd;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"     * Constructs the ChangeDebtParser.","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"     * @param isAdd true if adding debt, otherwise will subtract.","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    public ChangeDebtParser(boolean isAdd) {","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"        this.isAdd \u003d isAdd;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"     * Parses the given {@code String} of arguments in the context of the ChangeDebtCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"     * and returns an ChangeDebtCommand object for execution.","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"     * @param args arguments","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    public ChangeDebtCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        String[] argArr \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"        if (argArr.length \u003c 2) {","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"            if (isAdd) {","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"                        ChangeDebtCommand.MESSAGE_USAGE_ADD));","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"            } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"                        ChangeDebtCommand.MESSAGE_USAGE_SUBTRACT));","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        Index index \u003d ParserUtil.parseIndex(argArr[0]);","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        Debt debt \u003d ParserUtil.parsePositiveDebt(argArr[1]);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        if (debt.value \u003c 0) {","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"            if (isAdd) {","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"                        ChangeDebtCommand.MESSAGE_USAGE_ADD));","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"            } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"                        ChangeDebtCommand.MESSAGE_USAGE_SUBTRACT));","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"        return new ChangeDebtCommand(index, debt, isAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Assyarul":57}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    public static final Prefix PREFIX_PATTERN \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"    // Meetings","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"desc/\");","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    // For commands that need a secondary index","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    // Groups","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    public static final Prefix PREFIX_PERSONS \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"    // Goals","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"    public static final Prefix PREFIX_FREQUENCY \u003d new Prefix(\"f/\");","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Assyarul":4,"lue97":4,"ivantjh":7,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.DeleteDateCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"public class DeleteDateCommandParser implements Parser\u003cDeleteDateCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteDateCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"     * and returns a DeleteDateCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    public DeleteDateCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        Index index;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"                    DeleteDateCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        Index dateIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        return new DeleteDateCommand(index, dateIndex);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"chesterhow":40}},{"path":"src/main/java/seedu/address/logic/parser/DeleteGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"public class DeleteGroupCommandParser implements Parser\u003cDeleteGroupCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteGroupCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"     * and returns a DeleteGroupCommand for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    public DeleteGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"        if (!argMultiMap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        String groupNameString \u003d argMultiMap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        Name groupName \u003d ParserUtil.parseName(groupNameString);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"        return new DeleteGroupCommand(groupName);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Assyarul":27}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"        Index index;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"                    DeleteMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"        Index meetingIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"        return new DeleteMeetingCommand(index, meetingIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"ivantjh":40}},{"path":"src/main/java/seedu/address/logic/parser/DeletePictureCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.DeletePictureCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"public class DeletePictureCommandParser implements Parser {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePictureCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"     * and returns a DeletePictureCommand object for execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    public DeletePictureCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"            return new DeletePictureCommand(index);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePictureCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"ivantjh":29}},{"path":"src/main/java/seedu/address/logic/parser/DetailsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.DetailsCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"public class DetailsCommandParser implements Parser\u003cDetailsCommand\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"     * Parses the given {@code String} of arguments in the context of the DetailsCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"     * and returns a DetailsCommand object for execution.","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    public DetailsCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"            return new DetailsCommand(index);","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DetailsCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"chesterhow":24}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"                        PREFIX_BIRTHDAY, PREFIX_TAG);","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Assyarul":6,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_ARGUMENT_FORMAT;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import static seedu.address.logic.commands.FindCommand.MESSAGE_INVALID_REGEX;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATTERN;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.NameContainsPatternPredicate;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PATTERN);","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"        String searchString \u003d argMultiMap.getPreamble();","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"        if (argMultiMap.getValue(PREFIX_PATTERN).isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"            try {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"                // The p/ is only an indicator to use the searchString as the regex pattern.","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"                // E.g. \"abc p/\" should use \"abc\" as the regex to match.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"                Pattern pattern \u003d Pattern.compile(searchString, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"                return new FindCommand(new NameContainsPatternPredicate(pattern));","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"            } catch (PatternSyntaxException pe) {","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"                        String.format(MESSAGE_INVALID_ARGUMENT_FORMAT, MESSAGE_INVALID_REGEX));","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"        if (searchString.isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"        String[] nameKeywords \u003d searchString.split(\"\\\\s+\");","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lue97":20,"ivantjh":3,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/InputParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.AddDateCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.AddPictureCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.ChangeDebtCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.DeleteDateCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.DeletePictureCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.DetailsCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"import seedu.address.logic.commands.SetGoalCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"public class InputParser {","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"        // PSA: When you add in a new command, please add it to Commands class too.","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"        case AddDateCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"            return new AddDateCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"        case DeleteDateCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"            return new DeleteDateCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"lue97"},"content":"        case ThemeCommand.COMMAND_WORD:","lastModifiedDate":"2021-02-19"},{"lineNumber":93,"author":{"gitId":"lue97"},"content":"            return new ThemeCommandParser().parse(arguments);","lastModifiedDate":"2021-02-19"},{"lineNumber":94,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":95,"author":{"gitId":"Assyarul"},"content":"        case AddGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"Assyarul"},"content":"            return new AddGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Assyarul"},"content":"        case DeleteGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"Assyarul"},"content":"            return new DeleteGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"ivantjh"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"ivantjh"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"ivantjh"},"content":"        case AddPictureCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"            return new AddPictureCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"        case DeletePictureCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"            return new DeletePictureCommandParser().parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"lue97"},"content":"        case SetGoalCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"lue97"},"content":"            return new SetGoalCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"chesterhow"},"content":"        case DetailsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"chesterhow"},"content":"            return new DetailsCommandParser().parse(arguments);","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"Assyarul"},"content":"        //ChangeDebtParser takes in a boolean to indicate if the command is adding or subtracting.","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"Assyarul"},"content":"        case ChangeDebtCommand.COMMAND_WORD_ADD:","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"Assyarul"},"content":"            return new ChangeDebtParser(true).parse(arguments);","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"Assyarul"},"content":"        case ChangeDebtCommand.COMMAND_WORD_SUBTRACT:","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"Assyarul"},"content":"            return new ChangeDebtParser(false).parse(arguments);","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"chesterhow"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"chesterhow"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Assyarul":17,"lue97":8,"ivantjh":19,"-":73,"chesterhow":15}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"     * and returns an ListCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"        Optional\u003cName\u003e name;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"        if (argumentMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"            name \u003d Optional.ofNullable(ParserUtil","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"                    .parseName(argumentMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"            if (!args.isBlank()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"                        ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"            name \u003d Optional.empty();","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        return new ListCommand(name);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Assyarul":38}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_FILE;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal;","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal.Frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_INVALID_INDEXES \u003d \"One of of the indexes is not a non-zero unsigned integer.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"Assyarul"},"content":"     * Parses a {@code String birthday} into a {@code Birthday}.","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"Assyarul"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"Assyarul"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"Assyarul"},"content":"     * @throws ParseException if the given {@code birthday} is invalid.","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"Assyarul"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"Assyarul"},"content":"        String trimmedBirthday \u003d birthday.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"Assyarul"},"content":"        LocalDate birthdayDate \u003d DateUtil.fromDateInput(trimmedBirthday);","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"Assyarul"},"content":"        return new Birthday(birthdayDate);","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":112,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":155,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"ivantjh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"ivantjh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"ivantjh"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-07"},{"lineNumber":160,"author":{"gitId":"ivantjh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":162,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"Assyarul"},"content":"     * Parses a {@code String indexes} into a {@code List\u003cIndex\u003e}.","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"Assyarul"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"Assyarul"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"Assyarul"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"Assyarul"},"content":"    public static List\u003cIndex\u003e parseIndexes(String indexes) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"Assyarul"},"content":"        String[] indexStringArray \u003d indexes.trim().split(\" \");","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"Assyarul"},"content":"        List\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"Assyarul"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"Assyarul"},"content":"            for (String s : indexStringArray) {","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"Assyarul"},"content":"                indexArray.add(parseIndex(s));","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"Assyarul"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"Assyarul"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEXES);","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"Assyarul"},"content":"        return indexArray;","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"ivantjh"},"content":"     * Parses a {@code String} into a {@code Path}","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"ivantjh"},"content":"     * @throws ParseException if the given {@code pathStr} is invalid","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"ivantjh"},"content":"    public static Path parseFilePath(String pathStr) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":190,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(pathStr);","lastModifiedDate":"2021-03-21"},{"lineNumber":191,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"ivantjh"},"content":"        if (!FileUtil.isValidPath(pathStr)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"ivantjh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_FILE, pathStr));","lastModifiedDate":"2021-03-21"},{"lineNumber":194,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"ivantjh"},"content":"        return Path.of(pathStr);","lastModifiedDate":"2021-03-21"},{"lineNumber":197,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"ivantjh"},"content":"     * Parses a {@code String} into a {@code LocalDate}","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"ivantjh"},"content":"     * @throws ParseException if the given {@code String} is invalid","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"ivantjh"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"ivantjh"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"ivantjh"},"content":"        return DateUtil.fromDateInput(trimmedDate);","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"ivantjh"},"content":"     * Parses a {@code String} into a {@code LocalTime}","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"ivantjh"},"content":"     * @throws ParseException if the given {@code String} is invalid","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"ivantjh"},"content":"    public static LocalTime parseTime(String time) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"ivantjh"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"ivantjh"},"content":"        return TimeUtil.fromTimeInput(trimmedTime);","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"ivantjh"},"content":"     * Parses a {@code String} as an {@code Event} description","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"ivantjh"},"content":"    public static String parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"ivantjh"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"ivantjh"},"content":"        if (!Event.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"ivantjh"},"content":"            throw new ParseException(Event.DESCRIPTION_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"ivantjh"},"content":"        return trimmedDescription;","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":234,"author":{"gitId":"Assyarul"},"content":"     * Parses a {@code String} as a positive {@code Debt}","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":236,"author":{"gitId":"Assyarul"},"content":"    public static Debt parsePositiveDebt(String debt) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":237,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(debt);","lastModifiedDate":"2021-03-26"},{"lineNumber":238,"author":{"gitId":"Assyarul"},"content":"        String trimmedDebt \u003d debt.trim();","lastModifiedDate":"2021-03-26"},{"lineNumber":239,"author":{"gitId":"Assyarul"},"content":"        if (!Debt.isValidDebt(trimmedDebt)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":240,"author":{"gitId":"Assyarul"},"content":"            throw new ParseException(Debt.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-26"},{"lineNumber":241,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":242,"author":{"gitId":"Assyarul"},"content":"        return new Debt(debt);","lastModifiedDate":"2021-03-26"},{"lineNumber":243,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":244,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"lue97"},"content":"     * Parses a {@code String} into a {@code Frequency}","lastModifiedDate":"2021-03-27"},{"lineNumber":246,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"lue97"},"content":"     * @throws ParseException if the given {@code String} is an invalid frequency.","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"lue97"},"content":"    public static Frequency parseFrequency(String frequencyString) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":250,"author":{"gitId":"lue97"},"content":"        return Goal.parseFrequency(frequencyString);","lastModifiedDate":"2021-03-27"},{"lineNumber":251,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Assyarul":52,"lue97":11,"ivantjh":65,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/SetGoalCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import seedu.address.logic.commands.SetGoalCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal.Frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"public class SetGoalCommandParser implements Parser\u003cSetGoalCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    public SetGoalCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_FREQUENCY);","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"        Index index;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"        Frequency frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"            String frequencyString \u003d argMultimap.getValue(PREFIX_FREQUENCY).orElse(\"n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"            frequency \u003d ParserUtil.parseFrequency(frequencyString);","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetGoalCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FREQUENCY)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetGoalCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"        return new SetGoalCommand(index, frequency);","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lue97":36}},{"path":"src/main/java/seedu/address/logic/parser/ThemeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"public class ThemeCommandParser implements Parser\u003cThemeCommand\u003e {","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"    public ThemeCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"            throw new ParseException(","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE)","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"            );","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"        return new ThemeCommand(trimmedArgs);","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"lue97":18,"ivantjh":1}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    public ViewCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"            DetailsPanelTab tab \u003d DetailsPanelTab.fromString(userInput.trim());","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"            return new ViewCommand(tab);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"chesterhow":25}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.GroupHashMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    private final GroupHashMap groups;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"    private final PersonStreakList personStreaks;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        groups \u003d new GroupHashMap();","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        personStreaks \u003d new PersonStreakList();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"     * Groups will be emptied.","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"        this.groups.setGroups(new HashMap\u003c\u003e());","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"        personStreaks.setPersons(persons);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"     * Replaces the contents of the group list with {@code groups}.","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"    public void setGroups(HashMap\u003cName, Group\u003e groups) {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"        this.groups.setGroups(groups);","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"Assyarul"},"content":"        setGroups(new HashMap\u003c\u003e(newData.getGroupMap()));","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"        personStreaks.add(p);","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":114,"author":{"gitId":"Assyarul"},"content":"        if (!target.isSamePerson(editedPerson)) {","lastModifiedDate":"2021-04-02"},{"lineNumber":115,"author":{"gitId":"Assyarul"},"content":"            groups.replacePerson(target.getName(), editedPerson.getName());","lastModifiedDate":"2021-04-02"},{"lineNumber":116,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":117,"author":{"gitId":"ivantjh"},"content":"        personStreaks.setPerson(target, editedPerson);","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":126,"author":{"gitId":"ivantjh"},"content":"        personStreaks.remove(key);","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"Assyarul"},"content":"    //// group-level operations","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"Assyarul"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"Assyarul"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"Assyarul"},"content":"        return groups.contains(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"Assyarul"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"Assyarul"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"Assyarul"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"Assyarul"},"content":"        groups.add(g);","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"Assyarul"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"Assyarul"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"Assyarul"},"content":"    public void removeGroup(Group key) {","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"Assyarul"},"content":"        groups.remove(key);","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"Assyarul"},"content":"     * Replaces the group for {@code groupName} in the map with {@code editedGroup}.","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"Assyarul"},"content":"     * {@code groupName} must exist in the group map.","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"Assyarul"},"content":"    public void setGroup(Name groupName, Group editedGroup) {","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"Assyarul"},"content":"        requireAllNonNull(groupName, editedGroup);","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"Assyarul"},"content":"        groups.setGroup(groupName, editedGroup);","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":177,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"Assyarul"},"content":"    public ObservableMap\u003cName, Group\u003e getGroupMap() {","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"Assyarul"},"content":"        return groups.asUnmodifiableObservableMap();","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"chesterhow"},"content":"    public ObservableList\u003cPersonEvent\u003e getUpcomingDates() {","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"chesterhow"},"content":"        List\u003cPersonEvent\u003e personEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"chesterhow"},"content":"        persons.forEach(person -\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"chesterhow"},"content":"            // Add birthday","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"chesterhow"},"content":"            personEvents.add(new PersonEvent(person.getBirthday().getDate(), person,","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"chesterhow"},"content":"                    PersonEvent.getBirthdayDescription(person)));","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"chesterhow"},"content":"            // Add special dates","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"chesterhow"},"content":"            person.getDates().forEach(event -\u003e personEvents.add(new PersonEvent(event.getDate(), person,","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"chesterhow"},"content":"                    PersonEvent.getEventDescription(person, event))));","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"chesterhow"},"content":"        });","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"chesterhow"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"chesterhow"},"content":"        personEvents.sort((x, y) -\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"chesterhow"},"content":"            // Sorts dates by proximity to current date","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"chesterhow"},"content":"            int xMonth \u003d (x.getMonth() \u003c now.getMonthValue()) ? (x.getMonth() + 12) : x.getMonth();","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"chesterhow"},"content":"            int yMonth \u003d (y.getMonth() \u003c now.getMonthValue()) ? (y.getMonth() + 12) : y.getMonth();","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"chesterhow"},"content":"            if (xMonth \u003d\u003d yMonth) {","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"chesterhow"},"content":"                return x.getDate() - y.getDate();","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"chesterhow"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"chesterhow"},"content":"                return xMonth - yMonth;","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"chesterhow"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"chesterhow"},"content":"        });","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"chesterhow"},"content":"        return FXCollections.observableArrayList(personEvents);","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"ivantjh"},"content":"    public ObservableList\u003cPersonStreak\u003e getPersonStreaks() {","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"ivantjh"},"content":"        return personStreaks.asUnmodifiableList();","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 groups.equals(((AddressBook) other).groups));","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Assyarul":62,"ivantjh":12,"-":121,"chesterhow":31}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"Assyarul"},"content":"     * Adds the given group.","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"Assyarul"},"content":"     * {@code group} must not already exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"Assyarul"},"content":"    void addGroup(Group group);","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"Assyarul"},"content":"     * Returns true if a person with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"Assyarul"},"content":"    boolean hasGroup(Group group);","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"Assyarul"},"content":"     * Deletes the given group.","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"Assyarul"},"content":"     * The group must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"Assyarul"},"content":"    void deleteGroup(Group target);","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"Assyarul"},"content":"     * Replaces the group for {@code groupName} in the map with {@code editedGroup}.","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"Assyarul"},"content":"     * {@code groupName} must exist in the group map.","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"Assyarul"},"content":"    void setGroup(Name groupName, Group editedGroup);","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"chesterhow"},"content":"     * Returns an unmodifiable view of the filtered group list","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"Assyarul"},"content":"    ObservableMap\u003cName, Group\u003e getGroupMap();","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"chesterhow"},"content":"     * Returns an unmodifiable view of upcoming dates","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"chesterhow"},"content":"    ObservableList\u003cPersonEvent\u003e getUpcomingDates();","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"chesterhow"},"content":"     * Updates the list of upcoming dates","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"chesterhow"},"content":"    void updateUpcomingDates();","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"chesterhow"},"content":"     * Returns an unmodifiable view of a person to display the full details for","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"chesterhow"},"content":"    ObservableList\u003cPerson\u003e getDetailedPerson();","lastModifiedDate":"2021-03-21"},{"lineNumber":135,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":136,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"chesterhow"},"content":"     * Updates the person to display the full details for","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"chesterhow"},"content":"    void updateDetailedPerson(Person personToDisplay);","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"ivantjh"},"content":"     * Returns an unmodifiable view of contacts and their streaks","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"ivantjh"},"content":"    ObservableList\u003cPersonStreak\u003e getPersonStreaks();","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Assyarul":28,"ivantjh":6,"-":87,"chesterhow":24}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"    private final ObservableMap\u003cName, Group\u003e groupMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    private final ObservableList\u003cPersonEvent\u003e upcomingDates;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    private final ObservableList\u003cPerson\u003e detailedPerson;","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    private final ObservableList\u003cPersonStreak\u003e personStreaks;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"        groupMap \u003d this.addressBook.getGroupMap();","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"        upcomingDates \u003d this.addressBook.getUpcomingDates();","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        detailedPerson \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"        personStreaks \u003d this.addressBook.getPersonStreaks();","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-02-19"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"        return userPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-02-19"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2021-02-19"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2021-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"lue97"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-02-19"},{"lineNumber":97,"author":{"gitId":"lue97"},"content":"        return addressBook;","lastModifiedDate":"2021-02-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"lue97"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2021-02-19"},{"lineNumber":102,"author":{"gitId":"lue97"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2021-02-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"lue97"},"content":"        updateUpcomingDates();","lastModifiedDate":"2021-04-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"chesterhow"},"content":"        if (detailedPerson.size() \u003d\u003d 1 \u0026\u0026 target.isSamePerson(detailedPerson.get(0))) {","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"chesterhow"},"content":"            updateDetailedPerson(editedPerson);","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"Assyarul"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"Assyarul"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"Assyarul"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"Assyarul"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"Assyarul"},"content":"    public void deleteGroup(Group target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"Assyarul"},"content":"        addressBook.removeGroup(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"Assyarul"},"content":"    public void setGroup(Name groupName, Group editedGroup) {","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"Assyarul"},"content":"        addressBook.setGroup(groupName, editedGroup);","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"Assyarul"},"content":"     * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"Assyarul"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"Assyarul"},"content":"    public ObservableMap\u003cName, Group\u003e getGroupMap() {","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"Assyarul"},"content":"        return groupMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"ivantjh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Details Panel \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"chesterhow"},"content":"    public ObservableList\u003cPersonEvent\u003e getUpcomingDates() {","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"chesterhow"},"content":"        return upcomingDates;","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"chesterhow"},"content":"    public void updateUpcomingDates() {","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"chesterhow"},"content":"        upcomingDates.setAll(this.addressBook.getUpcomingDates());","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":192,"author":{"gitId":"chesterhow"},"content":"    public ObservableList\u003cPerson\u003e getDetailedPerson() {","lastModifiedDate":"2021-03-21"},{"lineNumber":193,"author":{"gitId":"chesterhow"},"content":"        return detailedPerson;","lastModifiedDate":"2021-03-21"},{"lineNumber":194,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":195,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":196,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":197,"author":{"gitId":"chesterhow"},"content":"    public void updateDetailedPerson(Person personToDisplay) {","lastModifiedDate":"2021-03-21"},{"lineNumber":198,"author":{"gitId":"chesterhow"},"content":"        detailedPerson.setAll(personToDisplay);","lastModifiedDate":"2021-03-21"},{"lineNumber":199,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":200,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":201,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"ivantjh"},"content":"    public ObservableList\u003cPersonStreak\u003e getPersonStreaks() {","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"ivantjh"},"content":"        return personStreaks;","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":222,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 groupMap.equals(other.groupMap);","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Assyarul":35,"lue97":10,"ivantjh":10,"-":144,"chesterhow":26}},{"path":"src/main/java/seedu/address/model/PersonStreakList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":" * Represents a list of PersonStreaks that will always be sorted in the descending order.","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":" * Uses a mutable list to achieve better efficiency.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"public class PersonStreakList {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"    private final ObservableList\u003cPersonStreak\u003e lst;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"    private final ObservableList\u003cPersonStreak\u003e unmodifiableLst;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"    private final FilteredList\u003cPersonStreak\u003e filteredLst;","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"     * Initialises the PersonStreakList","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"    public PersonStreakList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"        lst \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        filteredLst \u003d new FilteredList\u003c\u003e(lst, (PersonStreak::isActiveGoal));","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"        unmodifiableLst \u003d FXCollections.unmodifiableObservableList(filteredLst);","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"     * Replaces the contents of this list with {@code persons}","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"     * @param persons must not contain duplicate persons","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(persons);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        List\u003cPersonStreak\u003e personStreaks \u003d persons","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"                .stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"                .distinct()","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"                .map(PersonStreak::fromPerson)","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"                .sorted()","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"        lst.clear();","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"        lst.addAll(personStreaks);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"     * Adds a person to the list","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"     * @param p must not exist in the list","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"    public void add(Person p) {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(p);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"        PersonStreak toAdd \u003d PersonStreak.fromPerson(p);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"        if (lst.contains(toAdd)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"        int i;","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        for (i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"            PersonStreak ps \u003d lst.get(i);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"            if (toAdd.compareTo(ps) \u003c\u003d -1) {","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"        lst.add(i, toAdd);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"     * @param target must exists in the list.","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"     * @param editedPerson must not be the same as another existing person in the list.","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"ivantjh"},"content":"        remove(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"        add(editedPerson);","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"ivantjh"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"     * @param p must exist in the list","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"    public void remove(Person p) {","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(p);","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"        PersonStreak toRemove \u003d PersonStreak.fromPerson(p);","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"        if (!lst.remove(toRemove)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"    public ObservableList\u003cPersonStreak\u003e asUnmodifiableList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"ivantjh"},"content":"        return unmodifiableLst;","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"ivantjh":106}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"     * Returns an unmodifiable view of the groups list.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"     * This list will not contain any duplicate groups.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    ObservableMap\u003cName, Group\u003e getGroupMap();","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    ObservableList\u003cPersonEvent\u003e getUpcomingDates();","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"    ObservableList\u003cPersonStreak\u003e getPersonStreaks();","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Assyarul":9,"ivantjh":3,"-":17,"chesterhow":2}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    Path getPictureStorageDirPath();","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ivantjh":1,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"frienddex.json\");","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    private Path pictureStorageDirPath \u003d Paths.get(\"data\");","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"        setPictureStorageDirPath(newUserPrefs.getPictureStorageDirPath());","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"    public Path getPictureStorageDirPath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        return pictureStorageDirPath;","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"    public void setPictureStorageDirPath(Path pictureStorageDirPath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(pictureStorageDirPath);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"        this.pictureStorageDirPath \u003d pictureStorageDirPath;","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"                \u0026\u0026 pictureStorageDirPath.equals(o.pictureStorageDirPath);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, pictureStorageDirPath);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"        sb.append(\"\\nLocal picture storage dir location: \" + pictureStorageDirPath);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ivantjh":15,"-":84,"chesterhow":1}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":" * Represents a Group in FriendDex.","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"public class Group {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    private Name groupName;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    private Set\u003cName\u003e persons;","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"     * Constructs a {@code Group}.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"     *  @param name A valid name.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"     * @param persons A set of person.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    public Group(Name name, Set\u003cName\u003e persons) {","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"        requireAllNonNull(name, persons);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        this.groupName \u003d name;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        this.persons \u003d persons;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"     * Constructs a {@code Group} with an empty set of Names.","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    public Group(Name name) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        this.groupName \u003d name;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        this.persons \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        return groupName;","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"    public Set\u003cName\u003e getPersonNames() {","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"        return persons;","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        persons.add(p.getName());","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"    public void setPerson(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        if (persons.contains(personToEdit.getName())) {","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"            persons.remove(personToEdit.getName());","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"            persons.add(editedPerson.getName());","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"    public void setPersonName(Name personNameToEdit, Name editedPersonName) {","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"        if (persons.contains(personNameToEdit)) {","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"            persons.remove(personNameToEdit);","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"            persons.add(editedPersonName);","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"    public void setPersons(Set\u003cName\u003e editedPersonSet) {","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"        persons \u003d editedPersonSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"Assyarul"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"Assyarul"},"content":"        return groupName.toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"     * Returns true if both groups have the same name.","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"Assyarul"},"content":"     * This defines a weaker notion of equality between two groups.","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"Assyarul"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"Assyarul"},"content":"        if (otherGroup \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"Assyarul"},"content":"        return otherGroup !\u003d null","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 otherGroup.getName().equals(getName());","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"Assyarul"},"content":"     * Returns true if both groups have field values.","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"Assyarul"},"content":"     * This defines a stronger notion of equality between two groups.","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"Assyarul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"Assyarul"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"Assyarul"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"Assyarul"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"Assyarul"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"Assyarul"},"content":"        Group otherGroup \u003d (Group) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"Assyarul"},"content":"        return otherGroup.getName().equals(getName())","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 otherGroup.getPersonNames().equals(getPersonNames());","lastModifiedDate":"2021-04-02"},{"lineNumber":108,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"Assyarul"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"Assyarul"},"content":"        return Objects.hash(groupName, persons);","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":114}},{"path":"src/main/java/seedu/address/model/group/GroupHashMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":" * A HashMap mapping groupName to Group.","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":" *","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":" * @see Group#isSameGroup(Group)","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"public class GroupHashMap {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    private final ObservableMap\u003cName, Group\u003e internalMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    private final ObservableMap\u003cName, Group\u003e internalUnmodifiableMap \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"            FXCollections.unmodifiableObservableMap(internalMap);","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"     * Returns true if the map contains an equivalent group as the given argument.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    public boolean contains(Group toCheck) {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        return internalMap.containsKey(toCheck.getName());","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"     * Adds a group to the hashmap.","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"     * The group must not already exist in the hashmap.","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"    public void add(Group toAdd) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        internalMap.put(toAdd.getName(), toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"     * Replace given person name with new name in all groups.","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"    public void replacePerson(Name personToReplace, Name newPersonName) {","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        internalMap.values().stream().forEach(g -\u003e g.setPersonName(personToReplace, newPersonName));","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"     * Removes the equivalent group from the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"     * The group must exist in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"    public void remove(Group toRemove) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"        if (!contains(toRemove)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"        internalMap.remove(toRemove.getName());","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"     * Replaces the group for {@code groupName} in the map with {@code editedGroup}.","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"     * {@code groupName} must exist in the hashmap.","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"    public void setGroup(Name groupName, Group editedGroup) {","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"        requireAllNonNull(groupName, editedGroup);","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"        Group group \u003d internalMap.get(groupName);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"        if (group \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"Assyarul"},"content":"        internalMap.remove(groupName);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Assyarul"},"content":"        internalMap.put(groupName, editedGroup);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"Assyarul"},"content":"     * Replaces the contents of this map with {@code groupHashMap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"Assyarul"},"content":"    public void setGroups(HashMap\u003cName, Group\u003e groupHashMap) {","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"Assyarul"},"content":"        requireAllNonNull(groupHashMap);","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"        internalMap.clear();","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"Assyarul"},"content":"        internalMap.putAll(groupHashMap);","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"Assyarul"},"content":"     * Returns the backing Map as an unmodifiable {@code ObservableMap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"Assyarul"},"content":"    public ObservableMap\u003cName, Group\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"Assyarul"},"content":"        return internalUnmodifiableMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"Assyarul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"Assyarul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"Assyarul"},"content":"                || (other instanceof GroupHashMap // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 internalMap.equals(((GroupHashMap) other).internalMap));","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"Assyarul"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"Assyarul"},"content":"        return internalMap.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":106}},{"path":"src/main/java/seedu/address/model/group/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":" * identity).","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":11}},{"path":"src/main/java/seedu/address/model/group/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"public class GroupNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":6}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"public class Birthday {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"            seedu.address.commons.util.DateUtil.MESSAGE_CONSTRAINT;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    public static final DateTimeFormatter BIRTHDAY_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"     * This constructor is mainly for testing purposes","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"     * @param date A non-empty birthday","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    public Birthday(LocalDate date) {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"     * This constructor is mainly for testing purposes","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"     * @param birthday A non-empty birthday","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        checkArgument(isValidBirthday(birthday), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"            this.date \u003d DateUtil.fromDateInput(birthday);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        return date;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"     * Returns true if a given string is a valid birthday.","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"    public static boolean isValidBirthday(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"            DateUtil.fromDateInput(test);","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"            return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"            return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"        return DateUtil.toString(date, BIRTHDAY_INPUT_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"    public String toUi() {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"        return DateUtil.toUi(date);","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"Assyarul"},"content":"                || (other instanceof Birthday // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"                \u0026\u0026 getDate().equals(((Birthday) other).getDate())); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"        return date.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Assyarul":70,"chesterhow":14}},{"path":"src/main/java/seedu/address/model/person/Debt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":" * Debt stores a float that should be up to only 2 decimal places.","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":" * The user can only input in positive floats but the program is allowed to store negative floats.","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":" * A negative debt would indicate that the Person owes money to the user.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"public class Debt {","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Debt given should be a positive float and \"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"            + \"should only be up 2 decimal places.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    public final Float value;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"     * Constructs a {@code Debt}","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"     * @param debt a valid debt","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    public Debt(String debt) {","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(debt);","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        checkArgument(isValidDebt(debt), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"        value \u003d Float.valueOf(debt);","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"     * Constructs a {@code Debt}.","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"     * For testing purposes only.","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"     * @param debt","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    protected Debt(Float debt) {","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(debt);","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"        value \u003d debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    private static int getPrecision(Float debt) {","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        String debtString \u003d debt.toString();","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        int decimalIndex \u003d debtString.indexOf(\".\");","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        return debtString.length() - decimalIndex - 1;","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"     * Check whether the given string has a valid format for {@code Debt}","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"     * @param debt","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"     * @return boolean which indicate if string is a valid debt.","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"    public static boolean isValidDebt(String debt) {","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"            Float debtFloat \u003d Float.valueOf(debt);","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"            return getPrecision(debtFloat) \u003c\u003d 2;","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"            return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"     * Adds two {@code Debt} objects.","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"     * @param first","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"     * @param second","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"     * @return Debt with the value being the sum of the two given Debt.","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"    public static Debt add(Debt first, Debt second) {","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(first);","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(second);","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"        return new Debt(first.value + second.value);","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"     * Subtract the second {@Debt} object from the first.","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"     * @param first","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"     * @param second","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"     * @return Debt with the value being first.value - second.value.","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"Assyarul"},"content":"    public static Debt subtract(Debt first, Debt second) {","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(first);","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(second);","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"        return new Debt(first.value - second.value);","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"Assyarul"},"content":"    public String toUi() {","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"Assyarul"},"content":"        return String.format(\"%.2f\", value);","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"Assyarul"},"content":"    public String toString() {","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"Assyarul"},"content":"        return String.format(\"%.2f\", value);","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"Assyarul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"Assyarul"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"Assyarul"},"content":"                || (other instanceof Debt","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 (value.equals(((Debt) other).value)));","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"Assyarul"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"Assyarul"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"Assyarul"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Assyarul":102}},{"path":"src/main/java/seedu/address/model/person/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":" * Represents a Date event for a Person in the FriendDex.","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"public class Event {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    public static final String DESCRIPTION_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"            \"Description can take any values, and it should not be blank\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    public static final String DESCRIPTION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"    private final String description;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"     * Constructs a {@code Event}","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     * @param date        A valid date.","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"     * @param description A description of the event.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    public Event(LocalDate date, String description) {","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        requireAllNonNull(date, description);","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        this.time \u003d null;","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"     * Constructs a {@code Event}","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"     * @param date        A valid date.","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"     * @param time        A valid time.","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"     * @param description A description of the event.","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    public Event(LocalDate date, LocalTime time, String description) {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"        requireAllNonNull(date, description);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"        return test.matches(DESCRIPTION_VALIDATION_REGEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        return date;","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"        return time;","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"        return description;","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"    public boolean hasTime() {","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"        return time !\u003d null;","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"     * Returns the string to be displayed on the UI","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"     * @return String to be displayed on the UI","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"    public String toUi() {","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"        if (hasTime()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"            return String.format(\"%s %s %s\\n\", DateUtil.toUi(date), TimeUtil.toUi(time), description);","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%s %s\\n\", DateUtil.toUi(date), description);","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"chesterhow"},"content":"        return otherEvent.getDate().equals(getDate())","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":"                \u0026\u0026 (!otherEvent.hasTime() || otherEvent.getTime().equals(getTime()))","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":"                \u0026\u0026 otherEvent.getDescription().equals(getDescription());","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"chesterhow"},"content":"        return Objects.hash(date, time, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"chesterhow"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"chesterhow"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"chesterhow"},"content":"        builder.append(getDate())","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"chesterhow"},"content":"                .append(\"; \");","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"chesterhow"},"content":"        if (hasTime()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"chesterhow"},"content":"            builder.append(getTime())","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"chesterhow"},"content":"                    .append(\"; \");","lastModifiedDate":"2021-03-11"},{"lineNumber":114,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"chesterhow"},"content":"        builder.append(getDescription());","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"chesterhow"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"ivantjh":15,"chesterhow":104}},{"path":"src/main/java/seedu/address/model/person/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.time.DayOfWeek.SUNDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"public class Goal {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Goal should only be of type WEEKLY, MONTHLY, YEARLY, or NONE\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"    public static final HashMap\u003cString, Frequency\u003e ENUM_MAP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    public enum Frequency {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"        WEEKLY, MONTHLY, YEARLY, NONE","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    private static final HashMap\u003cFrequency, Function\u003cLocalDate, LocalDate\u003e\u003e FREQUENCY_MAP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"    static {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"w\", Frequency.WEEKLY);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"m\", Frequency.MONTHLY);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"y\", Frequency.YEARLY);","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"n\", Frequency.NONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"week\", Frequency.WEEKLY);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"month\", Frequency.MONTHLY);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"year\", Frequency.YEARLY);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"weekly\", Frequency.WEEKLY);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"monthly\", Frequency.MONTHLY);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"yearly\", Frequency.YEARLY);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"        ENUM_MAP.put(\"none\", Frequency.NONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"    static {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"        FREQUENCY_MAP.put(Frequency.WEEKLY, x -\u003e x.plusWeeks(1));","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"        FREQUENCY_MAP.put(Frequency.MONTHLY, x -\u003e x.plusMonths(1));","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"        FREQUENCY_MAP.put(Frequency.YEARLY, x -\u003e x.plusYears(1));","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"    private final Frequency frequency;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"     * Constructs a {@code Goal} instance of frequency type NONE.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"    public Goal() {","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"        this.frequency \u003d Frequency.NONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"     * Constructs a {@code Goal} instance with the given frequency.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"    public Goal(Frequency frequency) {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"    private static boolean isValidFrequencyString(String frequencyString) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"        return Goal.ENUM_MAP.containsKey(frequencyString);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"    public static boolean isValidGoal(String goal) {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"        return goal.equals(\"WEEKLY\") || goal.equals(\"MONTHLY\") || goal.equals(\"YEARLY\") || goal.equals(\"NONE\");","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"     * Converts a key defined in {@code ENUM_MAP} to frequency type.","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"     * @throws ParseException if the provided {@code frequencyString} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"    public static Frequency parseFrequency(String frequencyString) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"        if (!Goal.isValidFrequencyString(frequencyString)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"            throw new ParseException(\"Invalid frequency string \" + frequencyString + \" provided\");","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"        return Goal.ENUM_MAP.get(frequencyString);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"    public Frequency getFrequency() {","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"        return frequency;","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"    public boolean isNoneFrequency() {","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"        return this.getFrequency().equals(Frequency.NONE);","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"     * Calculates the next goal deadline from the given {@code date}. Deadlines are guaranteed to fall on Sundays.","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"lue97"},"content":"    public LocalDate getGoalDeadline(LocalDate date) {","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"        Frequency freq \u003d getFrequency();","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"        if (date \u003d\u003d null || getFrequency().equals(Frequency.NONE)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"lue97"},"content":"            return null;","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"        LocalDate deadline \u003d FREQUENCY_MAP.get(getFrequency()).apply(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"        switch (freq) {","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"        case WEEKLY:","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"            deadline \u003d deadline.with(TemporalAdjusters.nextOrSame(SUNDAY));","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"            break;","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"        case MONTHLY:","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"            deadline \u003d deadline.with(TemporalAdjusters.firstDayOfNextMonth()).minusDays(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"ivantjh"},"content":"            break;","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"ivantjh"},"content":"        case YEARLY:","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"ivantjh"},"content":"            deadline \u003d deadline.with(TemporalAdjusters.firstDayOfNextYear()).minusDays(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"ivantjh"},"content":"            break;","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"        default:","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"ivantjh"},"content":"            assert false : \"Default clause should not be used\";","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"ivantjh"},"content":"        return deadline;","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"lue97"},"content":"    public String toString() {","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"lue97"},"content":"        return this.frequency.toString();","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"lue97"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"lue97"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"lue97"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"lue97"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"lue97"},"content":"        Goal goal \u003d (Goal) o;","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"lue97"},"content":"        return frequency \u003d\u003d goal.frequency;","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"lue97"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"lue97"},"content":"        return frequency !\u003d null ? frequency.hashCode() : 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lue97":86,"ivantjh":52}},{"path":"src/main/java/seedu/address/model/person/NameContainsPatternPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches the pattern given.","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"public class NameContainsPatternPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"    private final Pattern pattern;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"    public NameContainsPatternPredicate(Pattern pattern) {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"        this.pattern \u003d pattern;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"        return pattern.matcher(person.getName().toString()).find();","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"        NameContainsPatternPredicate patternPredicate \u003d (NameContainsPatternPredicate) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"        return pattern.toString().equals(patternPredicate.pattern.toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"        return Objects.hash(pattern);","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"lue97":38}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":" * Guarantees: details are present and not null, field values are validated, immutable with the exception of groups.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":" * The groups inside the set groups may change as people are added into these groups.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Person.class);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    private final Birthday birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"    private final Goal goal;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"    private final Picture picture;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"    private final Debt debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"    private final List\u003cEvent\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    private final List\u003cEvent\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"     * Bare minimum fields to create a Person. Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"    public Person(Name name, Phone phone, Email email, Birthday birthday, Goal goal, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        this.picture \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        this.debt \u003d new Debt(\"0\");","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"     * Used for immutable editing","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"    public Person(Name name, Phone phone, Email email, Birthday birthday, Goal goal, Address address, Picture picture,","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"                  Debt debt, Set\u003cTag\u003e tags, List\u003cEvent\u003e dates, List\u003cEvent\u003e meetings) {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"        this.picture \u003d picture;","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"        this.debt \u003d debt;","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"        this.dates.addAll(dates);","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"        return birthday;","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"    public Goal getGoal() {","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"        return goal;","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":103,"author":{"gitId":"Assyarul"},"content":"    public Debt getDebt() {","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"Assyarul"},"content":"        return debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"Assyarul"},"content":"    public Person withDebt(Debt debt) {","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"Assyarul"},"content":"        return new Person(name, phone, email, birthday, goal, address, picture, debt, tags, dates, meetings);","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"    public Optional\u003cPicture\u003e getPicture() {","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"ivantjh"},"content":"        return Optional.ofNullable(picture);","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"ivantjh"},"content":"    public Person withPicture(Picture picture) {","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"Assyarul"},"content":"        return new Person(name, phone, email, birthday, goal, address, picture, debt, tags, dates, meetings);","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"chesterhow"},"content":"    public List\u003cEvent\u003e getDates() {","lastModifiedDate":"2021-03-09"},{"lineNumber":128,"author":{"gitId":"chesterhow"},"content":"        return Collections.unmodifiableList(dates);","lastModifiedDate":"2021-03-09"},{"lineNumber":129,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"ivantjh"},"content":"    public Person withDates(List\u003cEvent\u003e dates) {","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"Assyarul"},"content":"        return new Person(name, phone, email, birthday, goal, address, picture, debt, tags, dates, meetings);","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"lue97"},"content":"    public Person withGoal(Goal goal) {","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"Assyarul"},"content":"        return new Person(name, phone, email, birthday, goal, address, picture, debt, tags, dates, meetings);","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"chesterhow"},"content":"    public List\u003cEvent\u003e getMeetings() {","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"ivantjh"},"content":"        return Collections.unmodifiableList(meetings);","lastModifiedDate":"2021-03-07"},{"lineNumber":141,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":142,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":143,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"Assyarul"},"content":"     * Create a new person based on the new given list of meetings.","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"Assyarul"},"content":"     * @param meetings","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"Assyarul"},"content":"     * @return Person","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"ivantjh"},"content":"    public Person withMeetings(List\u003cEvent\u003e meetings) {","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"Assyarul"},"content":"        return new Person(name, phone, email, birthday, goal, address, picture, debt, tags, dates, meetings);","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"ivantjh"},"content":"     * Compute the next goal deadline using meetings before the {@code beforeDate}","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"ivantjh"},"content":"    public LocalDate getGoalDeadline(LocalDate beforeDate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"ivantjh"},"content":"        if (meetings.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"lue97"},"content":"            // user has never met up with this person before","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"lue97"},"content":"            return DateUtil.ZERO_DAY;","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"lue97"},"content":"        // If a meeting falls on the current day then the goal for the current duration will be satisfied","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"lue97"},"content":"        LocalDate latestMeetingDate \u003d meetings.stream()","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"lue97"},"content":"                .map(Event::getDate)","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"lue97"},"content":"                .filter(x -\u003e x.isBefore(beforeDate.plusDays(1)))","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"ivantjh"},"content":"                .max(LocalDate::compareTo)","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"ivantjh"},"content":"                .orElse(DateUtil.ZERO_DAY);","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"lue97"},"content":"        if (latestMeetingDate.equals(DateUtil.ZERO_DAY)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":169,"author":{"gitId":"lue97"},"content":"            return latestMeetingDate;","lastModifiedDate":"2021-04-04"},{"lineNumber":170,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":171,"author":{"gitId":"lue97"},"content":"        return goal.getGoalDeadline(latestMeetingDate);","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"ivantjh"},"content":"     * Deletes the picture from person. The person is guaranteed to have a null {@code Picture} after","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"ivantjh"},"content":"     * execution of this method. Physical file may still remain if for some reason, the file cannot be deleted from","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"ivantjh"},"content":"     * disk.","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"ivantjh"},"content":"    public Person deletePicture() {","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"ivantjh"},"content":"        if (picture \u003d\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"ivantjh"},"content":"            return this;","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"ivantjh"},"content":"            // It is not that critical for the physical file of picture to get deleted so we just log the error.","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"ivantjh"},"content":"            picture.deleteFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"ivantjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"ivantjh"},"content":"            logger.warning(\"Unable to delete physical picture file for \" + toString());","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"ivantjh"},"content":"            logger.warning(\"IOException caught: \" + e.getMessage());","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"ivantjh"},"content":"        return withPicture(null);","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":223,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":227,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 otherPerson.getBirthday().equals(getBirthday())","lastModifiedDate":"2021-03-09"},{"lineNumber":228,"author":{"gitId":"lue97"},"content":"                \u0026\u0026 otherPerson.getGoal().equals(getGoal())","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"ivantjh"},"content":"                \u0026\u0026 otherPerson.getPicture().equals(getPicture())","lastModifiedDate":"2021-03-15"},{"lineNumber":231,"author":{"gitId":"ivantjh"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-03-07"},{"lineNumber":232,"author":{"gitId":"chesterhow"},"content":"                \u0026\u0026 otherPerson.getDates().equals(getDates())","lastModifiedDate":"2021-03-11"},{"lineNumber":233,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 otherPerson.getMeetings().equals(getMeetings())","lastModifiedDate":"2021-03-26"},{"lineNumber":234,"author":{"gitId":"Assyarul"},"content":"                \u0026\u0026 otherPerson.getDebt().equals(getDebt());","lastModifiedDate":"2021-03-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":240,"author":{"gitId":"Assyarul"},"content":"        return Objects.hash(name, phone, email, birthday, goal, address, picture, debt, tags, dates, meetings);","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":251,"author":{"gitId":"ivantjh"},"content":"                .append(\"; Birthday: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":252,"author":{"gitId":"ivantjh"},"content":"                .append(getBirthday())","lastModifiedDate":"2021-03-14"},{"lineNumber":253,"author":{"gitId":"lue97"},"content":"                .append(\"; Goal: \")","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"lue97"},"content":"                .append(getGoal())","lastModifiedDate":"2021-03-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":256,"author":{"gitId":"Assyarul"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-09"},{"lineNumber":257,"author":{"gitId":"ivantjh"},"content":"                .append(\"; Picture: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":258,"author":{"gitId":"Assyarul"},"content":"                .append(getPicture())","lastModifiedDate":"2021-03-26"},{"lineNumber":259,"author":{"gitId":"Assyarul"},"content":"                .append(\"; Debt: \")","lastModifiedDate":"2021-03-26"},{"lineNumber":260,"author":{"gitId":"Assyarul"},"content":"                .append(getDebt());","lastModifiedDate":"2021-03-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":267,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":268,"author":{"gitId":"chesterhow"},"content":"        List\u003cEvent\u003e dates \u003d getDates();","lastModifiedDate":"2021-03-09"},{"lineNumber":269,"author":{"gitId":"chesterhow"},"content":"        if (!dates.isEmpty()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":270,"author":{"gitId":"chesterhow"},"content":"            builder.append(\"; Dates: \");","lastModifiedDate":"2021-03-09"},{"lineNumber":271,"author":{"gitId":"chesterhow"},"content":"            dates.forEach(builder::append);","lastModifiedDate":"2021-03-09"},{"lineNumber":272,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":273,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":274,"author":{"gitId":"chesterhow"},"content":"        List\u003cEvent\u003e meetings \u003d getMeetings();","lastModifiedDate":"2021-03-11"},{"lineNumber":275,"author":{"gitId":"ivantjh"},"content":"        if (!meetings.isEmpty()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":276,"author":{"gitId":"ivantjh"},"content":"            String meetingsStr \u003d meetings","lastModifiedDate":"2021-03-07"},{"lineNumber":277,"author":{"gitId":"ivantjh"},"content":"                    .stream()","lastModifiedDate":"2021-03-07"},{"lineNumber":278,"author":{"gitId":"chesterhow"},"content":"                    .map(Event::toString)","lastModifiedDate":"2021-03-11"},{"lineNumber":279,"author":{"gitId":"ivantjh"},"content":"                    .collect(Collectors.joining(\", \"));","lastModifiedDate":"2021-03-07"},{"lineNumber":280,"author":{"gitId":"ivantjh"},"content":"            builder.append(\"; Meetings: \");","lastModifiedDate":"2021-03-07"},{"lineNumber":281,"author":{"gitId":"ivantjh"},"content":"            builder.append(meetingsStr);","lastModifiedDate":"2021-03-07"},{"lineNumber":282,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":283,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":287,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-04-03"},{"lineNumber":288,"author":{"gitId":"Assyarul"},"content":"     * Returns description of Person to be printed","lastModifiedDate":"2021-04-03"},{"lineNumber":289,"author":{"gitId":"Assyarul"},"content":"     * @return String Person Description","lastModifiedDate":"2021-04-03"},{"lineNumber":290,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-04-03"},{"lineNumber":291,"author":{"gitId":"Assyarul"},"content":"    public String toUi() {","lastModifiedDate":"2021-04-03"},{"lineNumber":292,"author":{"gitId":"Assyarul"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-04-03"},{"lineNumber":293,"author":{"gitId":"Assyarul"},"content":"        builder.append(getName())","lastModifiedDate":"2021-04-03"},{"lineNumber":294,"author":{"gitId":"Assyarul"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-04-03"},{"lineNumber":295,"author":{"gitId":"Assyarul"},"content":"                .append(getPhone())","lastModifiedDate":"2021-04-03"},{"lineNumber":296,"author":{"gitId":"Assyarul"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2021-04-03"},{"lineNumber":297,"author":{"gitId":"Assyarul"},"content":"                .append(getEmail())","lastModifiedDate":"2021-04-03"},{"lineNumber":298,"author":{"gitId":"Assyarul"},"content":"                .append(\"; Birthday: \")","lastModifiedDate":"2021-04-03"},{"lineNumber":299,"author":{"gitId":"Assyarul"},"content":"                .append(getBirthday())","lastModifiedDate":"2021-04-03"},{"lineNumber":300,"author":{"gitId":"Assyarul"},"content":"                .append(\"; Goal: \")","lastModifiedDate":"2021-04-03"},{"lineNumber":301,"author":{"gitId":"Assyarul"},"content":"                .append(getGoal())","lastModifiedDate":"2021-04-03"},{"lineNumber":302,"author":{"gitId":"Assyarul"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-04-03"},{"lineNumber":303,"author":{"gitId":"Assyarul"},"content":"                .append(getAddress())","lastModifiedDate":"2021-04-03"},{"lineNumber":304,"author":{"gitId":"Assyarul"},"content":"                .append(\"; Debt: \")","lastModifiedDate":"2021-04-03"},{"lineNumber":305,"author":{"gitId":"Assyarul"},"content":"                .append(getDebt());","lastModifiedDate":"2021-04-03"},{"lineNumber":306,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":307,"author":{"gitId":"Assyarul"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-04-03"},{"lineNumber":308,"author":{"gitId":"Assyarul"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-04-03"},{"lineNumber":309,"author":{"gitId":"Assyarul"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-04-03"},{"lineNumber":310,"author":{"gitId":"Assyarul"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-04-03"},{"lineNumber":311,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":312,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":313,"author":{"gitId":"Assyarul"},"content":"        return builder.toString();","lastModifiedDate":"2021-04-03"},{"lineNumber":314,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lue97":25,"Assyarul":64,"ivantjh":90,"-":119,"chesterhow":17}},{"path":"src/main/java/seedu/address/model/person/PersonEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"public class PersonEvent {","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    private final Person person;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    private final String description;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"     * Constructs a {@code PersonEvent}","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"     * @param localDate Date of the event.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"     * @param person Person whom the event belongs to.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"     * @param description A description of the event.","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    public PersonEvent(LocalDate localDate, Person person, String description) {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        this.date \u003d localDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        return date;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"    public int getDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        return date.getDayOfMonth();","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    public int getMonth() {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        return date.getMonthValue();","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    public Person getPerson() {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"        return person;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"        return description;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        return DateUtil.toUiNoYear(date);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    public static String getBirthdayDescription(Person person) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%s\u0027s Birthday\", person.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"    public static String getEventDescription(Person person, Event event) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"        return String.format(\"%s [%s]\", event.getDescription(), person.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof PersonEvent)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"        PersonEvent otherPersonEvent \u003d (PersonEvent) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"        return otherPersonEvent.getLocalDate().equals(getLocalDate())","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"                \u0026\u0026 otherPersonEvent.getPerson().equals(getPerson())","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"                \u0026\u0026 otherPersonEvent.getDescription().equals(getDescription());","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"        return Objects.hash(date, person, description);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"chesterhow":78}},{"path":"src/main/java/seedu/address/model/person/PersonStreak.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":" * Class representation of a pair of Person and Streak.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"public class PersonStreak implements Comparable\u003cPersonStreak\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"    private final Person person;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"    private final Streak streak;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    public PersonStreak(Person person, Streak streak) {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"        requireAllNonNull(person, streak);","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"        this.streak \u003d streak;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"     * Creates a PersonStreak from the given {@code Person}","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"    public static PersonStreak fromPerson(Person p) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"        requireNonNull(p);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"        return new PersonStreak(p, Streak.from(p.getGoal(), p.getMeetings()));","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"    public Person getPerson() {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"        return person;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"    public Streak getStreak() {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"        return streak;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"    public boolean isActiveGoal() {","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        return !person.getGoal().isNoneFrequency();","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"    public int compareTo(PersonStreak other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        int cmpStreak \u003d streak.compareTo(other.streak);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"        if (cmpStreak !\u003d 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"            return cmpStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"        String thisName \u003d person.getName().fullName;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"        String otherName \u003d other.person.getName().fullName;","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"        return thisName.compareTo(otherName);","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        PersonStreak that \u003d (PersonStreak) o;","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"        return Objects.equals(person, that.person) \u0026\u0026 Objects.equals(streak, that.streak);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"        return Objects.hash(person, streak);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"ivantjh":74}},{"path":"src/main/java/seedu/address/model/person/Picture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"public class Picture {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"    public static final String[] ALLOWED_FILE_EXTENSIONS \u003d {\".png\", \".jpeg\", \".jpg\"};","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"    public static final String ALLOWED_FILE_EXTENSIONS_STRING \u003d String.join(\", \", ALLOWED_FILE_EXTENSIONS);","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"An image file should exist at specified path. \"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"            + \"Accepted file extensions: \" + ALLOWED_FILE_EXTENSIONS_STRING;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    // 10 MB","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    public static final long MAX_FILE_SIZE \u003d 10 * 1024 * 1024;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    private final Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"    public Picture(Path filePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"     * Checks if the given @{code str} is a valid file path to an image file","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"    public static boolean isValidFilePath(String str) {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        Path path;","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"            path \u003d ParserUtil.parseFilePath(str);","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"        return isValidFilePath(path);","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"    public static boolean isValidFilePath(Path path) {","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"        return FileUtil.isFileExists(path) \u0026\u0026 FileUtil.hasExtension(path, ALLOWED_FILE_EXTENSIONS);","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"    public Path getFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"    public String getAbsoluteFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"        return filePath.toAbsolutePath().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"    public void deleteFile() throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"        Files.delete(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"        final StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        sb.append(\"filePath: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"                .append(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"ivantjh":66}},{"path":"src/main/java/seedu/address/model/person/Streak.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":" * Represents a streak in the address book.","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":" * Guaranteed to be immutable","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"public class Streak implements Comparable\u003cStreak\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    private final int value;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    private Streak(int value) {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    public static Streak empty() {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"        return new Streak(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"     * Returns a Streak created from the given {@code goal} and {@code List\u003cEvent\u003e}","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"    public static Streak from(Goal goal, List\u003cEvent\u003e meetings) {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"        requireAllNonNull(goal, meetings);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        if (goal.isNoneFrequency() || meetings.isEmpty()) {","lastModifiedDate":"2021-04-03"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"            return Streak.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e dates \u003d meetings.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"                .map(Event::getDate)","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"                .sorted(LocalDate::compareTo)","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        return calculateToday(goal, dates);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"    private static Streak calculateToday(Goal goal, List\u003cLocalDate\u003e dates) {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        requireAllNonNull(goal, dates);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"        int currentStreak \u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"        int idx \u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"        LocalDate currentDate \u003d dates.get(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"        while (idx \u003c dates.size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"            LocalDate deadline \u003d goal.getGoalDeadline(currentDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"            LocalDate nextDate \u003d dates.get(idx);","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"            if (nextDate.compareTo(deadline) \u003c\u003d 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"                currentStreak +\u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"                currentStreak \u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"            idx++;","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"            currentDate \u003d nextDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        // Check that it is possible to continue the streak","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"        LocalDate latestDate \u003d currentDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        LocalDate latestGoalDeadline \u003d goal.getGoalDeadline(latestDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"        if (LocalDate.now().compareTo(latestGoalDeadline) \u003e 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"            return new Streak(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"        return new Streak(currentStreak);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"    public int getValue() {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"        return value;","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"    public String toUi() {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"        return String.format(\"%d\", value);","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"ivantjh"},"content":"    public int compareTo(Streak other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"        // Highest value comes first","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"        return -Integer.compare(value, other.value);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"        Streak streak \u003d (Streak) o;","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"        return value \u003d\u003d streak.value;","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"ivantjh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"ivantjh"},"content":"        return Objects.hash(value);","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"ivantjh"},"content":"    public String toString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"        return \"Streak{\"","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"                + \"value\u003d\" + value","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"ivantjh"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"ivantjh":114}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"     * Returns true if the list contains an equivalent person with the given name.","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"    public boolean contains(Name toCheck) {","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        return internalList.stream().anyMatch(x-\u003ex.getName().equals(toCheck));","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Assyarul":8,"-":137}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal.Frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"                    new Birthday(\"01-01-1998\"), new Goal(Frequency.NONE),","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), getPicture(), getDebt(),","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"                    getTagSet(\"friends\"), getDateList(), getMeetingList()),","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"                    new Birthday(\"01-02-1999\"), new Goal(Frequency.NONE),","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), getPicture(), getDebt(),","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"                    getTagSet(\"colleagues\", \"friends\"), getDateList(), getMeetingList()),","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"                    new Birthday(\"03-11-1979\"), new Goal(Frequency.NONE),","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getPicture(), getDebt(),","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"                    getTagSet(\"neighbours\"), getDateList(), getMeetingList()),","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"                    new Birthday(\"14-12-1998\"), new Goal(Frequency.NONE),","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), getPicture(), getDebt(),","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"                    getTagSet(\"family\"), getDateList(), getMeetingList()),","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"                    new Birthday(\"12-12-1995\"), new Goal(Frequency.NONE),","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), getPicture(), getDebt(),","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"                    getTagSet(\"classmates\"), getDateList(), getMeetingList()),","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"                    new Birthday(\"05-02-1998\"), new Goal(Frequency.NONE),","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), getPicture(), getDebt(),","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"                    getTagSet(\"colleagues\"), getDateList(), getMeetingList())","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"Assyarul"},"content":"    public static Set\u003cName\u003e getPersonSet(Name... personNames) {","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"Assyarul"},"content":"        return Arrays.stream(personNames)","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"Assyarul"},"content":"    public static Set\u003cGroup\u003e getGroupSet(Group... groups) {","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"Assyarul"},"content":"        return Arrays.stream(groups)","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"Assyarul"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"    public static Picture getPicture() {","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"        return null;","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"Assyarul"},"content":"    public static Debt getDebt() {","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"Assyarul"},"content":"        return new Debt(\"0\");","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":"    public static List\u003cEvent\u003e getMeetingList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"        return Collections.emptyList();","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"    public static List\u003cEvent\u003e getMeetingList(Event... meetings) {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"        return Arrays.stream(meetings)","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":"    public static List\u003cEvent\u003e getDateList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"        return Collections.emptyList();","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"ivantjh"},"content":"    public static List\u003cEvent\u003e getDateList(Event... dates) {","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"ivantjh"},"content":"        return Arrays.stream(dates)","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Assyarul":24,"lue97":8,"ivantjh":24,"-":48,"chesterhow":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    private final String description;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given {@code date}, {@code time} and {@code description}.","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"date\") LocalDate date, @JsonProperty(\"time\") LocalTime time,","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"            @JsonProperty(\"description\") String description) {","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        date \u003d source.getDate();","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        time \u003d source.getTime();","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    private boolean hasTime() {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"        return time !\u003d null;","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"    public Event toModelType() {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        if (hasTime()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"            return new Event(date, time, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        return new Event(date, description);","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"chesterhow":53}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"public class JsonAdaptedGroup {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"Groups list contains non-existing person(s).\";","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    private final String groupName;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    private final List\u003cString\u003e personNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given meeting details.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"    public JsonAdaptedGroup(@JsonProperty(\"name\") String groupName,","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"            @JsonProperty(\"persons\")List\u003cString\u003e personNames) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"        if (personNames !\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"            personNames.addAll(personNames);","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        groupName \u003d source.getName().fullName;","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        personNames.addAll(source.getPersonNames().stream()","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"                .map(Name::toString)","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"     * Converts this Jackson-friendly adapted group object into the model\u0027s {@code Group} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"     * Requires list of person to construct group list.","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"     * @param personList actual personList serialised from json file.","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted group.","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"    public Group toModelType(List\u003cPerson\u003e personList) throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        if (groupName \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"        if (!Name.isValidName(groupName)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"        final Name modelName \u003d new Name(groupName);","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"        final Set\u003cName\u003e modelPersonNameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"        for (String personName : personNames) {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"            if (!Name.isValidName(personName)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"                throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"            Person person;","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"            person \u003d personList.stream().filter(x-\u003ex.getName()","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"                    .toString().equals(personName))","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"                    .findFirst().get();","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"            if (person \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"Assyarul"},"content":"                throw new IllegalValueException(MESSAGE_INVALID_PERSON);","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"Assyarul"},"content":"            modelPersonNameSet.add(person.getName());","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"        return new Group(modelName, modelPersonNameSet);","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":80}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    private final String birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"    private final String debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"    private final String goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"    private final JsonAdaptedPicture picture;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    private final List\u003cJsonAdaptedEvent\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    private final List\u003cJsonAdaptedEvent\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"            @JsonProperty(\"goal\") String goal, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"            @JsonProperty(\"picture\") JsonAdaptedPicture picture,","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"            @JsonProperty(\"debt\") String debt, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"            @JsonProperty(\"dates\") List\u003cJsonAdaptedEvent\u003e dates,","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"            @JsonProperty(\"meetings\") List\u003cJsonAdaptedEvent\u003e meetings) {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        this.picture \u003d picture;","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"        this.debt \u003d debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"        if (dates !\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"            this.dates.addAll(dates);","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"        if (meetings !\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"            this.meetings.addAll(meetings);","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"Assyarul"},"content":"        birthday \u003d source.getBirthday().toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":"        goal \u003d source.getGoal().toString();","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"        Optional\u003cPicture\u003e srcPic \u003d source.getPicture();","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"        picture \u003d srcPic.isEmpty() ? null : new JsonAdaptedPicture(srcPic.get());","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Assyarul"},"content":"        debt \u003d source.getDebt().value.toString();","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":"        dates.addAll(source.getDates().stream()","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"                .map(JsonAdaptedEvent::new)","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"        meetings.addAll(source.getMeetings().stream()","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":"                .map(JsonAdaptedEvent::new)","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"ivantjh"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"ivantjh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"ivantjh"},"content":"                    Birthday.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"ivantjh"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"ivantjh"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"ivantjh"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"lue97"},"content":"        if (!Goal.isValidGoal(goal)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"lue97"},"content":"            throw new IllegalValueException(Goal.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"lue97"},"content":"        final Goal modelGoal \u003d new Goal(Goal.parseFrequency(goal.toLowerCase(Locale.ROOT)));","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"Assyarul"},"content":"        Picture modelPicture \u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"Assyarul"},"content":"        if (picture !\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"Assyarul"},"content":"            modelPicture \u003d picture.toModelType();","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"Assyarul"},"content":"        if (debt \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Debt.class.getSimpleName()));","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"Assyarul"},"content":"        if (!Debt.isValidDebt(debt)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalValueException(Debt.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"Assyarul"},"content":"        final Debt modelDebt \u003d new Debt(debt);","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"ivantjh"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":167,"author":{"gitId":"ivantjh"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-08"},{"lineNumber":168,"author":{"gitId":"ivantjh"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":172,"author":{"gitId":"chesterhow"},"content":"        final List\u003cEvent\u003e modelDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"chesterhow"},"content":"        for (JsonAdaptedEvent date : dates) {","lastModifiedDate":"2021-03-09"},{"lineNumber":174,"author":{"gitId":"chesterhow"},"content":"            modelDates.add(date.toModelType());","lastModifiedDate":"2021-03-09"},{"lineNumber":175,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":176,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":177,"author":{"gitId":"chesterhow"},"content":"        final List\u003cEvent\u003e modelMeetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":178,"author":{"gitId":"chesterhow"},"content":"        for (JsonAdaptedEvent meeting : meetings) {","lastModifiedDate":"2021-03-11"},{"lineNumber":179,"author":{"gitId":"ivantjh"},"content":"            modelMeetings.add(meeting.toModelType());","lastModifiedDate":"2021-03-08"},{"lineNumber":180,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":181,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":182,"author":{"gitId":"lue97"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelBirthday, modelGoal, modelAddress, modelPicture,","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"Assyarul"},"content":"                modelDebt, modelTags, modelDates, modelMeetings);","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lue97":12,"Assyarul":27,"ivantjh":28,"-":101,"chesterhow":17}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPicture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":" * Jackson-friendly version of {@link Picture}","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"public class JsonAdaptedPicture {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    private final Path filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"     * Constructs a {@code JsonAdaptedPicture} with the given args.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    public JsonAdaptedPicture(@JsonProperty(\"filePath\") Path filePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"     * Converts a given {@code Picture} into this class for Jackson use","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"    public JsonAdaptedPicture(Picture source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"        filePath \u003d source.getFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"     * Converts this Jackson-friendly adapted picture object into the model\u0027s {@code Picture} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"    public Picture toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"        if (!Picture.isValidFilePath(filePath)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"            throw new IllegalValueException(this.filePath + \" \" + Picture.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        return new Picture(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"ivantjh":43}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Groups list contains duplicate group(s).\";","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and groups","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"            @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups) {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"        groups.addAll(source.getGroupMap().entrySet().stream().map(x-\u003ex.getValue())","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"                .map(JsonAdaptedGroup::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"        for (JsonAdaptedGroup jsonAdaptedGroup : groups) {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"            Group group \u003d jsonAdaptedGroup.toModelType(addressBook.getPersonList());","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"            if (addressBook.hasGroup(group)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"            addressBook.addGroup(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Assyarul":20,"-":58}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ivantjh":1,"-":79}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import org.controlsfx.control.textfield.AutoCompletionBinding;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import org.controlsfx.control.textfield.TextFields;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import impl.org.controlsfx.skin.AutoCompletePopup;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.Commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"        String[] suggestions \u003d Commands.getAutoCompleteStrings();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        AutoCompletionBinding\u003cString\u003e autoCompletionBinding \u003d TextFields.bindAutoCompletion(commandTextField,","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"                suggestions);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        autoCompletionBinding.setDelay(100); // in ms","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        autoCompletionBinding.setVisibleRowCount(5);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"        AutoCompletePopup\u003cString\u003e autoCompletePopup \u003d autoCompletionBinding.getAutoCompletionPopup();","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        autoCompletePopup.setId(\"autoCompletePopup\"); // for styles in the css files","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"ivantjh":14,"-":85}},{"path":"src/main/java/seedu/address/ui/DetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"public class DetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private static final String FXML \u003d \"DetailsPanel.fxml\";","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    private final PersonDetailsTab personDetailsTab;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    private final UpcomingEventsTab upcomingEventsTab;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    private final StreaksTab streaksTab;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    private VBox tabPlaceholder;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"     * Creates a {@code DetailsPanel} with the given {@code ObservableList}s.","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     * @param upcomingEventsList A list of upcoming events.","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"     * @param detailedPerson     A list containing a single {@code Person}.","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"    public DetailsPanel(ObservableList\u003cPersonEvent\u003e upcomingEventsList,","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"            ObservableList\u003cPerson\u003e detailedPerson, ObservableList\u003cPersonStreak\u003e personStreaks) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        upcomingEventsTab \u003d new UpcomingEventsTab(upcomingEventsList);","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        personDetailsTab \u003d new PersonDetailsTab(detailedPerson);","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"        streaksTab \u003d new StreaksTab(personStreaks);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"        toggleTab(DetailsPanelTab.UPCOMING_EVENTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"     * Toggles which tab is visible on the {@code DetailsPanel}.","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"     * @param tab A {@code DetailsPanelTab} enum representing the tab to toggle to.","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    public void toggleTab(DetailsPanelTab tab) {","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        switch (tab) {","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        case PERSON_DETAILS:","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"            tabPlaceholder.getChildren().setAll(personDetailsTab.getRoot());","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"        case STREAKS:","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"            tabPlaceholder.getChildren().setAll(streaksTab.getRoot());","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"            break;","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"        case UPCOMING_EVENTS:","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"        default:","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"            tabPlaceholder.getChildren().setAll(upcomingEventsTab.getRoot());","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"            break;","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"ivantjh":12,"chesterhow":46}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    public static final int HEIGHT \u003d 41;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private static final String FXML \u003d \"EventCard.fxml\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    public final Event event;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    private Label description;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    private Label datetime;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"     * Creates a {@code EventCard} with the given {@code Event}.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     * @param event Event to display","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    public EventCard(Event event) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        super(FXML);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        description.setText(event.getDescription());","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        // TODO: Refactor this","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        String timeString \u003d (event.hasTime() ? String.format(\", %s\", TimeUtil.toUi(event.getTime())) : \"\");","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        datetime.setText(DateUtil.toUi(event.getDate()) + timeString);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"        return event.equals(card.event);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"chesterhow":54}},{"path":"src/main/java/seedu/address/ui/GroupListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.MapChangeListener;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"public class GroupListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    private static final String FXML \u003d \"GroupListPanel.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GroupListPanel.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    private ListView\u003cName\u003e groupListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"     * Creates a {@code GroupListPanel} with the given {@code ObservableMap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    public GroupListPanel(ObservableMap\u003cName, Group\u003e groupMap) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        groupListView.getItems().addAll(groupMap.keySet());","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        groupMap.addListener((MapChangeListener\u003cName, Group\u003e) change -\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"            if (change.wasAdded()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"                groupListView.getItems().removeAll(change.getKey());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"                groupListView.getItems().add(change.getKey());","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"            if (change.wasRemoved()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"                groupListView.getItems().removeAll(change.getKey());","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"            Platform.runLater(() -\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"                groupListView.getSelectionModel().select(change.getKey());","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"                groupListView.scrollTo(change.getKey());","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"            });","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        });","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        groupListView.setCellFactory(listView -\u003e new GroupListPanel.GroupListViewCell());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"     * Custom {@code ListCell} that displays the graphics of a Group {@code Name}.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"    class GroupListViewCell extends ListCell\u003cName\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"        protected void updateItem(Name groupName, boolean empty) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"            super.updateItem(groupName, empty);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"            if (empty || groupName \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"                setGraphic(new Label(groupName.fullName));","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Assyarul":61}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"chesterhow":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-02-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"    private GroupListPanel groupListPanel;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    private DetailsPanel detailsPanel;","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"    private StackPane groupListPanelPlaceholder;","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"    private StackPane detailsPanelPlaceholder;","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-02-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private Scene mainScene;","lastModifiedDate":"2021-02-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"lue97"},"content":"        applyTheme();","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"lue97"},"content":"    public Scene getMainScene() {","lastModifiedDate":"2021-02-19"},{"lineNumber":88,"author":{"gitId":"lue97"},"content":"        return this.mainScene;","lastModifiedDate":"2021-02-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"Assyarul"},"content":"        groupListPanel \u003d new GroupListPanel(logic.getAddressBook().getGroupMap());","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"Assyarul"},"content":"        groupListPanelPlaceholder.getChildren().add(groupListPanel.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"ivantjh"},"content":"        detailsPanel \u003d new DetailsPanel(logic.getUpcomingDates(), logic.getDetailedPerson(), logic.getPersonStreaks());","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"chesterhow"},"content":"        detailsPanelPlaceholder.getChildren().add(detailsPanel.getRoot());","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"lue97"},"content":"        updateGuiSettings();","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"lue97"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"lue97"},"content":"    private void applyTheme() {","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"lue97"},"content":"        this.getMainScene().getStylesheets().clear();","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"lue97"},"content":"        this.getMainScene().getStylesheets().add(\"file:///\" + ThemeManager.getCssCacheUri());","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"lue97"},"content":"    private void updateGuiSettings() {","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"lue97"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"lue97"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY(), ThemeManager.getThemePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"lue97"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"lue97"},"content":"            if (commandResult.isTheme()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"lue97"},"content":"                applyTheme();","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"lue97"},"content":"                updateGuiSettings();","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"lue97"},"content":"                try {","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"lue97"},"content":"                    logic.saveFiles();","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"lue97"},"content":"                } catch (IOException ioException) {","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"lue97"},"content":"                    logger.warning(\"Unable to save theme\");","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"lue97"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"lue97"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"chesterhow"},"content":"            DetailsPanelTab tab \u003d commandResult.getNewTab();","lastModifiedDate":"2021-03-21"},{"lineNumber":237,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"chesterhow"},"content":"            if (tab !\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":239,"author":{"gitId":"chesterhow"},"content":"                detailsPanel.toggleTab(tab);","lastModifiedDate":"2021-03-22"},{"lineNumber":240,"author":{"gitId":"chesterhow"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":241,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lue97":29,"Assyarul":7,"ivantjh":2,"-":199,"chesterhow":12}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    private Label birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"    @FXML","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"    private Label debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    private StackPane picturePlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"    private Label goal;","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"        birthday.setText(person.getBirthday().toUi());","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"        debt.setText(\"Debt: \" + person.getDebt().toUi());","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"        String goalText;","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"        if (person.getGoal().isNoneFrequency()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"            goalText \u003d \"No goal set for this person\";","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"            LocalDate deadline \u003d person.getGoalDeadline(LocalDate.now());","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"            if (deadline.equals(DateUtil.ZERO_DAY)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"                goalText \u003d \"Yet to meet this person!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"            } else if (deadline.plusDays(1).isAfter(LocalDate.now())) {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"                goalText \u003d String.format(\"Deadline for goal: %s\", DateUtil.toUi(deadline));","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"            } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"                goalText \u003d String.format(\"Missed the deadline on :( %s\", DateUtil.toUi(deadline));","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"        goal.setText(goalText);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"        ProfilePicture profilePicture \u003d new ProfilePicture(person, new Insets(5, 5, 5, 5));","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"        picturePlaceholder.getChildren().add(profilePicture.getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lue97":18,"Assyarul":7,"ivantjh":2,"-":76,"chesterhow":6}},{"path":"src/main/java/seedu/address/ui/PersonDetailsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"public class PersonDetailsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    private static final String FXML \u003d \"PersonDetailsCard.fxml\";","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    public final Person person;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    private Label name;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    private Label phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    private Label address;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    private Label email;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    private Label debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    private Label birthday;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    private VBox datesContainer;","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    private VBox meetingsContainer;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    private StackPane picturePlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"     * Creates a {@code PersonDetailsCard} with the given {@code Person}.","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    public PersonDetailsCard(Person person) {","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        super(FXML);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        debt.setText(\"Debt: \" + person.getDebt().value.toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"        birthday.setText(person.getBirthday().toUi());","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"        person.getTags().stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        person.getDates().forEach(date -\u003e datesContainer","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"                .getChildren()","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"                .add((new EventCard(date)).getRoot()));","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"        person.getMeetings().forEach(meeting -\u003e meetingsContainer","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"                .getChildren()","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"                .add((new EventCard(meeting)).getRoot()));","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"        ProfilePicture profilePicture \u003d new ProfilePicture(person, new Insets(0, 0, 10, 0));","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"        picturePlaceholder.getChildren().add(profilePicture.getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof PersonDetailsCard)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"        // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"        PersonDetailsCard card \u003d (PersonDetailsCard) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"        return person.equals(card.person);","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Assyarul":3,"lue97":2,"chesterhow":80}},{"path":"src/main/java/seedu/address/ui/PersonDetailsTab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"public class PersonDetailsTab extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private static final String FXML \u003d \"PersonDetailsTab.fxml\";","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    private VBox personDetailsPane;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    private Label personDetailsTitle;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    private ListView\u003cPerson\u003e personDetailsListView;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     * Creates a {@code PersonDetailsTab} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"     * @param detailedPerson A list containing a single {@code Person}.","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    public PersonDetailsTab(ObservableList\u003cPerson\u003e detailedPerson) {","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        super(FXML);","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        personDetailsTitle.setText(\"Contact Details\");","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        personDetailsListView.setItems(detailedPerson);","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        personDetailsListView.setCellFactory(listView -\u003e new PersonDetailsListViewCell());","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"     * Custom {@code ListCell} that displays the full details of a {@code Person}.","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    class PersonDetailsListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"                setText(null);","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"            } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"                setGraphic(new PersonDetailsCard(person).getRoot());","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"chesterhow":52}},{"path":"src/main/java/seedu/address/ui/ProfilePicture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import java.io.File;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import javafx.geometry.Rectangle2D;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"public class ProfilePicture extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    private static final String FXML \u003d \"ProfilePicture.fxml\";","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    public final Person person;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    private ImageView picture;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"     * Creates a {@code ProfilePicture} with the given {@code Person}.","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    public ProfilePicture(Person person, Insets margin) {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        super(FXML);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        StackPane.setMargin(picture, margin);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        Optional\u003cPicture\u003e personPicture \u003d person.getPicture();","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"        if (personPicture.isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"            File imgFile \u003d new File(personPicture.get().getAbsoluteFilePath());","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"            try {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"                Image userImage \u003d new Image(new FileInputStream(imgFile));","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"                picture.setImage(userImage);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"                // Set viewport to center of image","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"                if (userImage.getHeight() \u003e userImage.getWidth()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"                    picture.setViewport(","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"                            new Rectangle2D(0, (userImage.getHeight() - userImage.getWidth()) / 2,","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"                                    userImage.getWidth(), userImage.getWidth()));","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"                    picture.setFitWidth(100);","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"                } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"                    picture.setViewport(","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"                            new Rectangle2D((userImage.getWidth() - userImage.getHeight()) / 2, 0,","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"                                    userImage.getHeight(), userImage.getHeight()));","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"                    picture.setFitHeight(100);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"                Rectangle clip \u003d new Rectangle();","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"                clip.setWidth(100);","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"                clip.setHeight(100);","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"                clip.setArcHeight(100);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"                clip.setArcWidth(100);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"                picture.setClip(clip);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"                throw new RuntimeException(\"Unable to read input stream for person\");","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"            picture.setVisible(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"            picture.setManaged(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof ProfilePicture)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"        // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"        ProfilePicture profilePicture \u003d (ProfilePicture) other;","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"        return person.equals(profilePicture.person);","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"chesterhow":89}},{"path":"src/main/java/seedu/address/ui/StreakCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Streak;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"public class StreakCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"    private static final String FXML \u003d \"StreakCard.fxml\";","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    public final PersonStreak personStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    private Label name;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    private Label streak;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"     * Creates a {@code StreakCard} with the given {@code PersonStreak} to display.","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"    public StreakCard(PersonStreak personStreak) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"        super(FXML);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"        this.personStreak \u003d personStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"        Person p \u003d personStreak.getPerson();","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        Streak s \u003d personStreak.getStreak();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"        name.setText(p.getName().fullName);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"        streak.setText(s.toUi());","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"            return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"        StreakCard that \u003d (StreakCard) o;","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"        return Objects.equals(personStreak, that.personStreak)","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"                \u0026\u0026 Objects.equals(name, that.name)","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"                \u0026\u0026 Objects.equals(streak, that.streak);","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"        return Objects.hash(personStreak, name, streak);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"ivantjh":58}},{"path":"src/main/java/seedu/address/ui/StreaksTab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"public class StreaksTab extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"    private static final String FXML \u003d \"StreaksTab.fxml\";","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"    private VBox streaksPane;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    private Label streaksTitle;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"    private ListView\u003cPersonStreak\u003e streaksListView;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"     * Creates a {@code StreaksTab} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"    public StreaksTab(ObservableList\u003cPersonStreak\u003e personStreaks) {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"        super(FXML);","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"        streaksTitle.setText(\"Streaks\");","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"        streaksListView.setItems(personStreaks);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        streaksListView.setCellFactory(listView -\u003e new StreaksListViewCell());","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"    class StreaksListViewCell extends ListCell\u003cPersonStreak\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"        protected void updateItem(PersonStreak personStreak, boolean empty) {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"            super.updateItem(personStreak, empty);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"            if (empty || personStreak \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"                setText(null);","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"            } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"                setGraphic(new StreakCard(personStreak).getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"ivantjh":48}},{"path":"src/main/java/seedu/address/ui/Theme.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-02-18"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.util.Objects;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"/**","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":" * The theme object. Stores the color palette of the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":" */","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Theme implements Serializable {","lastModifiedDate":"2021-02-18"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"    public static final Pattern REGEX_HEX_COLOR \u003d Pattern.compile(\"^#([a-fA-F0-9]{3}|[a-fA-F0-9]{6})$\");","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"     * The foreground color of the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"     * The background color of the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String background;","lastModifiedDate":"2021-02-18"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"     * The 16 \u0027ASCII\u0027 color of the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"     * See \u003ca href\u003d\"https://invisible-island.net/xterm/manpage/xterm.html#h3-VT100-Widget-Resources\"\u003eXTerm Colors\u003c/a\u003e.","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final String[] color;","lastModifiedDate":"2021-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"     * The default constructor.","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"     * Necessary for deserializing from JSON.","lastModifiedDate":"2021-02-19"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Theme() {","lastModifiedDate":"2021-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        foreground \u003d \"\";","lastModifiedDate":"2021-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        background \u003d \"\";","lastModifiedDate":"2021-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        color \u003d null;","lastModifiedDate":"2021-02-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"     * Constructs a Theme object based on given foreground, background, and colors.","lastModifiedDate":"2021-02-19"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"     * @param foreground Foreground of the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"     * @param background Background of the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"     * @param color      Colors 0 - 15 of the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Theme(String foreground, String background, String[] color) {","lastModifiedDate":"2021-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.foreground \u003d foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.background \u003d background;","lastModifiedDate":"2021-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.color \u003d color;","lastModifiedDate":"2021-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"     * Checks if the Theme object is a valid theme.","lastModifiedDate":"2021-02-19"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"     * @return true if theme is valid otherwise false.","lastModifiedDate":"2021-02-19"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-02-19"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"        if (this.foreground.isEmpty() || this.background.isEmpty()) {","lastModifiedDate":"2021-02-19"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-02-19"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"        if (!REGEX_HEX_COLOR.matcher(this.foreground).find()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"        if (!REGEX_HEX_COLOR.matcher(this.background).find()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"        if (color \u003d\u003d null) {","lastModifiedDate":"2021-02-19"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-02-19"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"        if (color.length !\u003d 16) {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"        for (String hex : color) {","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"            if (!REGEX_HEX_COLOR.matcher(hex).find()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"                return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"        return true;","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-02-18"},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-02-19"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":"            return true;","lastModifiedDate":"2021-02-19"},{"lineNumber":87,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":88,"author":{"gitId":"lue97"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-02-19"},{"lineNumber":89,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-02-19"},{"lineNumber":90,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":91,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Theme theme \u003d (Theme) o;","lastModifiedDate":"2021-02-18"},{"lineNumber":93,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":94,"author":{"gitId":"lue97"},"content":"        if (!Objects.equals(foreground, theme.foreground)) {","lastModifiedDate":"2021-02-19"},{"lineNumber":95,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-02-19"},{"lineNumber":96,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":97,"author":{"gitId":"lue97"},"content":"        if (!Objects.equals(background, theme.background)) {","lastModifiedDate":"2021-02-19"},{"lineNumber":98,"author":{"gitId":"lue97"},"content":"            return false;","lastModifiedDate":"2021-02-19"},{"lineNumber":99,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":100,"author":{"gitId":"lue97"},"content":"        return Arrays.equals(color, theme.color);","lastModifiedDate":"2021-02-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-18"},{"lineNumber":102,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"}],"authorContributionMap":{"lue97":77,"-":26}},{"path":"src/main/java/seedu/address/ui/ThemeFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.net.URL;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.util.Optional;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.exceptions.InvalidThemeException;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ThemeFactory {","lastModifiedDate":"2021-02-18"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    // Properties of the default theme","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    // Can be found on https://terminal.sexy, monokai.dark","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_FOREGROUND \u003d \"#f8f8f2\";","lastModifiedDate":"2021-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_BACKGROUND \u003d \"#272822\";","lastModifiedDate":"2021-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String[] DEFAULT_COLOR;","lastModifiedDate":"2021-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        DEFAULT_COLOR \u003d new String[] {","lastModifiedDate":"2021-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \"#272822\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", \"#f8f8f2\",","lastModifiedDate":"2021-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"#75715e\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", \"#f9f8f5\"","lastModifiedDate":"2021-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ThemeFactory.class);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"     * Loads a theme from a given file path.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"     * @param location The location of the JSON theme file. Location can either be a file on the system","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"     *                 or some predefined resources","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"     * @return The loaded Theme instance.","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"     * @throws InvalidThemeException   The theme is malformed or is missing certain variables.","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"     * @throws FileNotFoundException   The theme file cannot be located.","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"     * @throws DataConversionException An error occurred when parsing the theme.","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"    public static Theme load(String location) throws IOException, DataConversionException, InvalidThemeException {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"        logger.info(\"Attempting to load theme \" + location);","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"        if (location.startsWith(\"@\")) {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"            String resourceName \u003d \"/themes/\" + location.substring(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"            logger.info(\"Loading from resource \" + resourceName);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"            return loadFromResource(resourceName);","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"            return loadFromFile(Path.of(location));","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"     * Loads a theme from the given file path.","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"     * @throws IOException If the json cannot be parsed.","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"    private static Theme loadFromFile(Path path)","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"            throws InvalidThemeException, FileNotFoundException, DataConversionException {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"        Optional\u003cTheme\u003e optionalTheme \u003d JsonUtil.readJsonFile(path, Theme.class);","lastModifiedDate":"2021-02-19"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"        if (optionalTheme.isEmpty()) {","lastModifiedDate":"2021-02-19"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-02-19"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-02-19"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"        if (!optionalTheme.get().isValid()) {","lastModifiedDate":"2021-02-19"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"            throw new InvalidThemeException(\"Invalid theme supplied\");","lastModifiedDate":"2021-02-19"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"        } else {","lastModifiedDate":"2021-02-19"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"            return optionalTheme.get();","lastModifiedDate":"2021-02-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-02-18"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"     * Loads a theme from the given resource.","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"     * @throws IOException If the json cannot be parsed.","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"    private static Theme loadFromResource(String themeResource) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"        URL u \u003d MainApp.class.getResource(themeResource);","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"        if (u \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"            throw new FileNotFoundException(\"Default theme\" + themeResource + \"not found\");","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"        return JsonUtil.fromJsonString(FileUtil.getResourceAsString(themeResource), Theme.class);","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":87,"author":{"gitId":"lue97"},"content":"     * Returns the default theme.","lastModifiedDate":"2021-02-19"},{"lineNumber":88,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":89,"author":{"gitId":"lue97"},"content":"     * @return The default Theme instance.","lastModifiedDate":"2021-02-19"},{"lineNumber":90,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":91,"author":{"gitId":"lue97"},"content":"    public static Theme getDefaultTheme() {","lastModifiedDate":"2021-02-19"},{"lineNumber":92,"author":{"gitId":"lue97"},"content":"        return new Theme(DEFAULT_FOREGROUND, DEFAULT_BACKGROUND, DEFAULT_COLOR);","lastModifiedDate":"2021-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"}],"authorContributionMap":{"lue97":70,"ivantjh":2,"-":22}},{"path":"src/main/java/seedu/address/ui/ThemeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2021-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"/**","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":" * Class for managing the theme of the application. Stores data on what theme is currently being applied.","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":" */","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ThemeManager {","lastModifiedDate":"2021-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"     * Template of the css used by the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    private static final String CSS_TEMPLATE \u003d FileUtil.getResourceAsString(\"/view/Template.css\");","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"     * Current theme used by the application","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static Theme theme \u003d null;","lastModifiedDate":"2021-02-18"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"     * Path of the current theme","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"    private static String themePath \u003d null;","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"     * Path of the css file currently in use","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"    private static String cssCacheUri \u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"     * Gets the theme currently in use by the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"     * @return The theme currently in use by the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"    public static Theme getTheme() {","lastModifiedDate":"2021-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return ThemeManager.theme;","lastModifiedDate":"2021-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"     * Gets the path of the JSON theme file currently being applied.","lastModifiedDate":"2021-02-19"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"     * @return Path of the JSON theme file currently being applied.","lastModifiedDate":"2021-02-19"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"    public static String getThemePath() {","lastModifiedDate":"2021-02-19"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"        return themePath;","lastModifiedDate":"2021-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"     * Initialized the variables in ThemeManager.","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"    public static void init() {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"        ThemeManager.theme \u003d ThemeFactory.getDefaultTheme();","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"        ThemeManager.cssCacheUri \u003d getNewCssCacheUri(ThemeManager.theme);","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"     * Sets the current theme of the application.","lastModifiedDate":"2021-02-19"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"     * @param newTheme  The new theme to be used.","lastModifiedDate":"2021-02-19"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"     * @param themePath The path of the new theme to be used.","lastModifiedDate":"2021-02-19"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"    public static void setTheme(Theme newTheme, String themePath) {","lastModifiedDate":"2021-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ThemeManager.theme \u003d newTheme;","lastModifiedDate":"2021-02-18"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"        ThemeManager.themePath \u003d themePath;","lastModifiedDate":"2021-02-19"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"        String newCssCache \u003d getNewCssCacheUri(newTheme);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"        if (newCssCache !\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"            ThemeManager.cssCacheUri \u003d getNewCssCacheUri(newTheme);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"    public static String getCssCacheUri() {","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"        return ThemeManager.cssCacheUri;","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"     * Returns the URI of the updated CSS cache.","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"     * @return URI of the updated CSS cache.","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"    private static String getNewCssCacheUri(Theme theme) {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"lue97"},"content":"        String cssString \u003d generateCssFromTheme(theme);","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":"            return createCssCacheFile(cssString);","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"lue97"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"lue97"},"content":"            return null;","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"lue97"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":93,"author":{"gitId":"lue97"},"content":"     * Generates CSS based on theme given.","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":95,"author":{"gitId":"lue97"},"content":"     * @param theme The theme to be used.","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"lue97"},"content":"     * @return cssTemplate with colors assigned.","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":98,"author":{"gitId":"lue97"},"content":"    private static String generateCssFromTheme(Theme theme) {","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"lue97"},"content":"        String cssString \u003d ThemeManager.CSS_TEMPLATE;","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"lue97"},"content":"        cssString \u003d cssString","lastModifiedDate":"2021-02-19"},{"lineNumber":101,"author":{"gitId":"lue97"},"content":"                .replaceAll(\"\\\\$foreground\", theme.foreground)","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"lue97"},"content":"                .replaceAll(\"\\\\$background\", theme.background);","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c 16; i++) {","lastModifiedDate":"2021-02-18"},{"lineNumber":104,"author":{"gitId":"lue97"},"content":"            cssString \u003d cssString","lastModifiedDate":"2021-02-19"},{"lineNumber":105,"author":{"gitId":"lue97"},"content":"                    .replaceAll(\"\\\\$c\" + Integer.toHexString(i), theme.color[i]);","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-02-18"},{"lineNumber":107,"author":{"gitId":"lue97"},"content":"        return cssString;","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"lue97"},"content":"     * Creates a temporary file containing the given CSS.","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"lue97"},"content":"     * @param cssString CSS to be written to the file.","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"lue97"},"content":"     * @return The temp file location.","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"lue97"},"content":"     * @throws IOException The file cannot be created/written to.","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"lue97"},"content":"    private static String createCssCacheFile(String cssString) throws IOException {","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        File temp \u003d File.createTempFile(\"current\", \".tmp\");","lastModifiedDate":"2021-02-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        temp.deleteOnExit();","lastModifiedDate":"2021-02-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        BufferedWriter out \u003d new BufferedWriter(new FileWriter(temp));","lastModifiedDate":"2021-02-18"},{"lineNumber":121,"author":{"gitId":"lue97"},"content":"        out.write(cssString);","lastModifiedDate":"2021-02-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        out.close();","lastModifiedDate":"2021-02-18"},{"lineNumber":123,"author":{"gitId":"lue97"},"content":"        return temp.getAbsolutePath().replace(File.separator, \"/\");","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"}],"authorContributionMap":{"lue97":95,"-":31}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"    private final Logic logic;","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2021-02-19"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2021-02-19"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2021-02-19"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"                                               String contentText) {","lastModifiedDate":"2021-02-19"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2021-02-19"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"        alert.getDialogPane().getStylesheets().add(\"file:///\" + ThemeManager.getCssCacheUri());","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2021-02-19"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"        alert.setTitle(title);","lastModifiedDate":"2021-02-19"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2021-02-19"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2021-02-19"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2021-02-19"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"        alert.showAndWait();","lastModifiedDate":"2021-02-19"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2021-02-19"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2021-02-19"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lue97":21,"-":68}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"    /**","lastModifiedDate":"2021-02-19"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2021-02-19"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"     */","lastModifiedDate":"2021-02-19"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2021-02-19"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2021-02-19"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2021-02-19"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2021-02-19"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2021-02-19"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"     *","lastModifiedDate":"2021-02-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lue97":16,"-":77}},{"path":"src/main/java/seedu/address/ui/UpcomingDateCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"public class UpcomingDateCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    private static final String FXML \u003d \"UpcomingDateCard.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    public final PersonEvent personEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    private VBox dateCardPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    private Label description;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    private Label date;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"     * Creates a {@code UpcomingDateCard} with the given {@code PersonEvent}.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     * @param personEvent Upcoming date event to display.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    public UpcomingDateCard(PersonEvent personEvent) {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        this.personEvent \u003d personEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        description.setText(personEvent.getDescription());","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        date.setText(personEvent.getFormattedDate());","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"        if (!(other instanceof UpcomingDateCard)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        UpcomingDateCard card \u003d (UpcomingDateCard) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"        return personEvent.equals(card.personEvent);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"chesterhow":51}},{"path":"src/main/java/seedu/address/ui/UpcomingEventsTab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"public class UpcomingEventsTab extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private static final String FXML \u003d \"UpcomingEventsTab.fxml\";","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    private VBox upcomingEventsPane;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    private Label upcomingEventsTitle;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    private ListView\u003cPersonEvent\u003e upcomingEventsListView;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"     * Creates a {@code UpcomingEventsTab} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"     * @param upcomingDatesList A list of upcoming events.","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    public UpcomingEventsTab(ObservableList\u003cPersonEvent\u003e upcomingDatesList) {","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        super(FXML);","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        upcomingEventsTitle.setText(\"Upcoming Events\");","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        upcomingEventsListView.setItems(upcomingDatesList);","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        upcomingEventsListView.setCellFactory(listView -\u003e new UpcomingEventsListViewCell());","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"     * Custom {@code ListCell} that displays the graphics of an upcoming date.","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    class UpcomingEventsListViewCell extends ListCell\u003cPersonEvent\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"        protected void updateItem(PersonEvent personEvent, boolean empty) {","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"            super.updateItem(personEvent, empty);","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"            if (empty || personEvent \u003d\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"                setText(null);","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"            } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"                setGraphic(new UpcomingDateCard(personEvent).getRoot());","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"chesterhow":52}},{"path":"src/main/java/seedu/address/ui/exceptions/InvalidThemeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.ui.exceptions;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"public class InvalidThemeException extends Exception {","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"    public InvalidThemeException(String message) {","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"        super(message);","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"lue97":9}},{"path":"src/main/resources/view/DetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"\u003cVBox fx:id\u003d\"tabPlaceholder\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"chesterhow":5}},{"path":"src/main/resources/view/EventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"\u003cVBox fx:id\u003d\"eventCard\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"    \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$description\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    \u003cLabel fx:id\u003d\"datetime\" styleClass\u003d\"cell_subheading_label\" text\u003d\"\\$dateTime\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"chesterhow":13}},{"path":"src/main/resources/view/GroupListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"    \u003cListView fx:id\u003d\"groupListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Assyarul":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"800\" onCloseRequest\u003d\"#handleExit\" title\u003d\"FriendDex\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene fx:id\u003d\"mainScene\"\u003e","lastModifiedDate":"2021-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"          \u003cMenu styleClass\u003d\"menu\" mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"            \u003cMenuItem styleClass\u003d\"menu-item\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"          \u003cHBox alignment\u003d\"CENTER\" minWidth\u003d\"700.0\" prefWidth\u003d\"700.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"              \u003cVBox fx:id\u003d\"groupList\" minWidth\u003d\"200.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"                      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"                  \u003cStackPane fx:id\u003d\"groupListPanelPlaceholder\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"              \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"300.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"                    HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"                      \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                  \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"              \u003cVBox fx:id\u003d\"details\" minWidth\u003d\"200.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"                      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"                  \u003cStackPane fx:id\u003d\"detailsPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Assyarul":13,"lue97":2,"ivantjh":2,"-":45,"chesterhow":10}},{"path":"src/main/resources/view/PersonDetailsCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"\u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"150\" prefWidth\u003d\"150\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    \u003cStackPane fx:id\u003d\"picturePlaceholder\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    \u003c/FlowPane\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"    \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"    \u003cLabel fx:id\u003d\"debt\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$debt\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"    \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthday\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"    \u003cVBox styleClass\u003d\"person-details-section\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets top\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"        \u003cLabel styleClass\u003d\"cell_subheading_label\" text\u003d\"Special Dates\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"        \u003cVBox fx:id\u003d\"datesContainer\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"                \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"    \u003cVBox styleClass\u003d\"person-details-section\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets top\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"        \u003cLabel styleClass\u003d\"cell_subheading_label\" text\u003d\"Meetings\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"        \u003cVBox fx:id\u003d\"meetingsContainer\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"                \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Assyarul":5,"chesterhow":78}},{"path":"src/main/resources/view/PersonDetailsTab.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"\u003cVBox fx:id\u003d\"personDetailsPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    \u003cLabel fx:id\u003d\"personDetailsTitle\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    \u003cListView fx:id\u003d\"personDetailsListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"chesterhow":15}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"      \u003cHBox GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"          \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"              \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                  \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"              \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"            \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthday\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"            \u003cLabel fx:id\u003d\"debt\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$debt\"/\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"            \u003cLabel fx:id\u003d\"goal\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$goal\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"            \u003cVBox fx:id\u003d\"dates\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"            \u003cVBox fx:id\u003d\"meetings\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"          \u003cStackPane fx:id\u003d\"picturePlaceholder\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Assyarul":2,"lue97":1,"ivantjh":8,"-":33,"chesterhow":1}},{"path":"src/main/resources/view/ProfilePicture.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"\u003cStackPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"    \u003cImageView fx:id\u003d\"picture\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"chesterhow":8}},{"path":"src/main/resources/view/StreakCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"      \u003cLabel fx:id\u003d\"name\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" maxWidth\u003d\"120.0\" text\u003d\"\\$name\" wrapText\u003d\"true\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"10.0\" AnchorPane.topAnchor\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"      \u003cLabel fx:id\u003d\"streak\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" text\u003d\"\\$streak\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\" AnchorPane.topAnchor\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"ivantjh":11}},{"path":"src/main/resources/view/StreaksTab.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"\u003cVBox fx:id\u003d\"streaksPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"    \u003cLabel fx:id\u003d\"streaksTitle\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"    \u003cListView fx:id\u003d\"streaksListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"ivantjh":15}},{"path":"src/main/resources/view/Template.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2021-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: $background, 20%;","lastModifiedDate":"2021-02-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: $background; /* Used in the default.html file */","lastModifiedDate":"2021-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2021-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-02-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2021-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2021-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2021-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2021-02-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2021-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2021-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2021-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-02-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2021-02-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2021-02-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2021-02-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2021-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2021-02-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2021-02-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-02-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-02-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2021-02-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-02-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2021-02-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-02-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-02-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: $background, 20%;","lastModifiedDate":"2021-02-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2021-02-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2021-02-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2021-02-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2021-02-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-02-18"},{"lineNumber":103,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive($background, 40%);","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-02-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: derive($background, 50%);","lastModifiedDate":"2021-02-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":110,"author":{"gitId":"lue97"},"content":".list-cell:filled:even:selected {","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"lue97"},"content":"  -fx-background-color: $c6, derive($background, 40%);","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"lue97"},"content":"  -fx-background-insets: 0, 0 0 0 5;","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":115,"author":{"gitId":"lue97"},"content":".list-cell:filled:odd:selected {","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"lue97"},"content":"  -fx-background-color: $c6, derive($background, 50%);","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"lue97"},"content":"  -fx-background-insets: 0, 0 0 0 5;","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2021-02-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2021-02-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-02-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-02-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2021-02-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-02-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-02-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":136,"author":{"gitId":"chesterhow"},"content":".cell_subheading_label {","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"chesterhow"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"chesterhow"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"chesterhow"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"chesterhow"},"content":".person-details-section {","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"chesterhow"},"content":"    -fx-border-width: 1 0 0 0;","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"chesterhow"},"content":"    -fx-border-color: $cf;","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2021-02-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2021-02-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 0px;","lastModifiedDate":"2021-02-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2021-02-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2021-02-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-02-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-02-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-02-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2021-02-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground !important;","lastModifiedDate":"2021-02-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2021-02-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-02-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-02-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-02-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2021-02-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-02-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-02-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2021-02-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-02-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-02-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2021-02-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-foreground-color: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2021-02-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2021-02-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-foreground-color: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2021-02-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-02-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-02-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-02-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"lue97"},"content":".menu:hover {","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive($background, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"lue97"},"content":".menu-item:focused {","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive($background, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"lue97"},"content":".menu-item .label {","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive($background, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2021-02-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-02-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2021-02-18"},{"lineNumber":238,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-02-18"},{"lineNumber":239,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-02-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-02-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2021-02-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-02-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-02-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-02-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2021-02-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-02-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-02-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-02-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2021-02-18"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-02-18"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  -fx-background-color: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  -fx-text-fill: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2021-02-18"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-border-color: $foreground, $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-02-18"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-02-18"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-02-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-02-18"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2021-02-18"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-02-18"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":282,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2021-02-18"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-02-18"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2021-02-18"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2021-02-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2021-02-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-02-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-02-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2021-02-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-02-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-02-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-02-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2021-02-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-02-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: $c8;","lastModifiedDate":"2021-02-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-02-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-02-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-02-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-02-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-02-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-02-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-02-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-02-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-02-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2021-02-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-02-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-02-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-02-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-02-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-text-fill: $cf;","lastModifiedDate":"2021-02-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2021-02-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent $background transparent $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-color: $background $background $c4 $background;","lastModifiedDate":"2021-02-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-02-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-02-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-02-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2021-02-18"},{"lineNumber":359,"author":{"gitId":"lue97"},"content":"    -fx-effect: innershadow(gaussian, $background, 20, 0, 0, 0);","lastModifiedDate":"2021-03-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":362,"author":{"gitId":"lue97"},"content":".person-card:focused {","lastModifiedDate":"2021-03-29"},{"lineNumber":363,"author":{"gitId":"lue97"},"content":"    -fx-border-color: red !important;","lastModifiedDate":"2021-03-29"},{"lineNumber":364,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 20 !important;","lastModifiedDate":"2021-03-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-02-18"},{"lineNumber":368,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive($background, 10%);","lastModifiedDate":"2021-03-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-02-18"},{"lineNumber":370,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-03-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2021-02-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-02-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-02-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2021-02-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-02-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-color: $ca;","lastModifiedDate":"2021-02-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-02-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-02-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-02-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-02-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":387,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2021-02-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-text-fill: $c9 !important; /* The error class should always override the default text-fill style 9 */","lastModifiedDate":"2021-02-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2021-02-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-02-18"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-background: $background; /* background */","lastModifiedDate":"2021-02-18"},{"lineNumber":394,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2021-02-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-02-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-border-color: $foreground; /* foreground */","lastModifiedDate":"2021-02-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-02-18"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-02-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2021-02-18"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    -fx-text-fill: $foreground; /* foreground */","lastModifiedDate":"2021-02-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-18"},{"lineNumber":406,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":407,"author":{"gitId":"ivantjh"},"content":"#autoCompletePopup .list-cell {","lastModifiedDate":"2021-03-23"},{"lineNumber":408,"author":{"gitId":"ivantjh"},"content":"    -fx-background-color: $background;","lastModifiedDate":"2021-03-25"},{"lineNumber":409,"author":{"gitId":"ivantjh"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-03-25"},{"lineNumber":410,"author":{"gitId":"ivantjh"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-03-23"},{"lineNumber":411,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":412,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":413,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":414,"author":{"gitId":"ivantjh"},"content":"#autoCompletePopup .list-cell:selected {","lastModifiedDate":"2021-03-23"},{"lineNumber":415,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive($background, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":416,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: $foreground;","lastModifiedDate":"2021-03-29"},{"lineNumber":417,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":418,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":419,"author":{"gitId":"ivantjh"},"content":"#autoCompletePopup .list-cell:hover {","lastModifiedDate":"2021-03-24"},{"lineNumber":420,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive($background, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":421,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"lue97":28,"ivantjh":12,"-":370,"chesterhow":11}},{"path":"src/main/resources/view/UpcomingDateCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"\u003cVBox fx:id\u003d\"dateCardPane\" minWidth\u003d\"150\" prefWidth\u003d\"150\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"   \u003cLabel fx:id\u003d\"description\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"   \u003cLabel fx:id\u003d\"date\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"chesterhow":13}},{"path":"src/main/resources/view/UpcomingEventsTab.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"\u003cVBox fx:id\u003d\"upcomingEventsPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"    \u003cLabel fx:id\u003d\"upcomingEventsTitle\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    \u003cListView fx:id\u003d\"upcomingEventsListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"chesterhow":15}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"  } ],","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"  \"groups\": []","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Assyarul":2,"-":12}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"  } ],","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"  \"groups\": []","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Assyarul":2,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"    \"birthday\" : \"01-01-1998\",","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    \"debt\" : \"0\",","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"    \"goal\": \"NONE\"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"    \"birthday\" : \"01-01-1998\",","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    \"debt\" : \"0\",","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    \"goal\": \"NONE\"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"  } ],","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"  \"groups\": []","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Assyarul":6,"lue97":4,"-":11}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"  } ],","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"  \"groups\": []","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Assyarul":2,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    \"birthday\" : \"01-01-1998\",","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    \"debt\" : \"0\",","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"    \"goal\": \"NONE\"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"    \"birthday\" : \"01-02-1998\",","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    \"debt\" : \"0\",","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    \"goal\": \"NONE\"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    \"birthday\" : \"01-01-1998\",","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"    \"debt\" : \"0\",","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"    \"goal\": \"NONE\"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"    \"birthday\" : \"01-03-1998\",","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    \"debt\" : \"0\",","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"    \"goal\": \"NONE\"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"    \"birthday\" : \"01-04-1998\",","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"    \"debt\" : \"0\",","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"    \"goal\": \"NONE\"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"    \"birthday\" : \"01-05-2000\",","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"    \"debt\" : \"0\",","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"    \"goal\": \"NONE\"","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"    \"birthday\" : \"15-12-1960\",","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"    \"debt\" : \"0\",","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"    \"goal\": \"NONE\"","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"  } ],","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"  \"groups\" : [ ]","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Assyarul":23,"lue97":7,"-":38}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"  \"addressBookFilePath\" : \"frienddex.json\"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":12,"chesterhow":1}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"  \"addressBookFilePath\" : \"frienddex.json\"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":10,"chesterhow":1}},{"path":"src/test/data/ThemeTest/default.template.css","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":".background {","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822, 20%;","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"    background-color: #272822; /* Used in the default.html file */","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":".label {","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":".label-bright {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":".label-header {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":".text-field {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":".tab-pane {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":".table-view {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"    -fx-base: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"    -fx-control-inner-background: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"    -fx-size: 35;","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"    -fx-border-color:","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"        transparent","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"        transparent","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"        transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":".table-view .column-header .label {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822, 20%;","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"lue97"},"content":".split-pane {","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"lue97"},"content":".list-view {","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"lue97"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"lue97"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"lue97"},"content":".list-cell {","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"lue97"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"lue97"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"lue97"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"lue97"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive(#272822, 40%);","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"lue97"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive(#272822, 50%);","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"lue97"},"content":".list-cell:filled:even:selected {","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"lue97"},"content":"  -fx-background-color: #a1efe4, derive(#272822, 40%);","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"lue97"},"content":"  -fx-background-insets: 0, 0 0 0 5;","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"lue97"},"content":".list-cell:filled:odd:selected {","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"lue97"},"content":"  -fx-background-color: #a1efe4, derive(#272822, 50%);","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"lue97"},"content":"  -fx-background-insets: 0, 0 0 0 5;","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"lue97"},"content":".list-cell .label {","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"lue97"},"content":".cell_big_label {","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"lue97"},"content":".cell_small_label {","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"chesterhow"},"content":".cell_subheading_label {","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"chesterhow"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"chesterhow"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"chesterhow"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"chesterhow"},"content":".person-details-section {","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"chesterhow"},"content":"    -fx-border-width: 1 0 0 0;","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"chesterhow"},"content":"    -fx-border-color: #f9f8f5;","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"lue97"},"content":".stack-pane {","lastModifiedDate":"2021-03-12"},{"lineNumber":148,"author":{"gitId":"lue97"},"content":"     -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":150,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":151,"author":{"gitId":"lue97"},"content":".pane-with-border {","lastModifiedDate":"2021-03-12"},{"lineNumber":152,"author":{"gitId":"lue97"},"content":"     -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"lue97"},"content":"     -fx-border-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"lue97"},"content":"     -fx-border-top-width: 0px;","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"lue97"},"content":".status-bar {","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":159,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"lue97"},"content":".result-display {","lastModifiedDate":"2021-03-12"},{"lineNumber":162,"author":{"gitId":"lue97"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-12"},{"lineNumber":164,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":165,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":166,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":168,"author":{"gitId":"lue97"},"content":".result-display .label {","lastModifiedDate":"2021-03-12"},{"lineNumber":169,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2 !important;","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":171,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":172,"author":{"gitId":"lue97"},"content":".status-bar .label {","lastModifiedDate":"2021-03-12"},{"lineNumber":173,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-12"},{"lineNumber":174,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":175,"author":{"gitId":"lue97"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-03-12"},{"lineNumber":176,"author":{"gitId":"lue97"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-03-12"},{"lineNumber":177,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":178,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"lue97"},"content":".status-bar-with-border {","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"lue97"},"content":"    -fx-border-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-12"},{"lineNumber":183,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"lue97"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-03-12"},{"lineNumber":186,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":189,"author":{"gitId":"lue97"},"content":".grid-pane {","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":191,"author":{"gitId":"lue97"},"content":"    -fx-border-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-12"},{"lineNumber":193,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":194,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":195,"author":{"gitId":"lue97"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-03-12"},{"lineNumber":196,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":197,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":198,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":199,"author":{"gitId":"lue97"},"content":".context-menu {","lastModifiedDate":"2021-03-12"},{"lineNumber":200,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":201,"author":{"gitId":"lue97"},"content":"    -fx-foreground-color: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":202,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":203,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":204,"author":{"gitId":"lue97"},"content":".context-menu .label {","lastModifiedDate":"2021-03-12"},{"lineNumber":205,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":206,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":207,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":208,"author":{"gitId":"lue97"},"content":".menu-bar {","lastModifiedDate":"2021-03-12"},{"lineNumber":209,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":210,"author":{"gitId":"lue97"},"content":"    -fx-foreground-color: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":211,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":212,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":213,"author":{"gitId":"lue97"},"content":".menu-bar .label {","lastModifiedDate":"2021-03-12"},{"lineNumber":214,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":215,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-12"},{"lineNumber":216,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":217,"author":{"gitId":"lue97"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-12"},{"lineNumber":218,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":219,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":220,"author":{"gitId":"lue97"},"content":".menu:hover {","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive(#272822, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"lue97"},"content":".menu-item:focused {","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive(#272822, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"lue97"},"content":".menu-item .label {","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive(#272822, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"lue97"},"content":".menu .left-container {","lastModifiedDate":"2021-03-12"},{"lineNumber":233,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":234,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":235,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":236,"author":{"gitId":"lue97"},"content":"/*","lastModifiedDate":"2021-03-12"},{"lineNumber":237,"author":{"gitId":"lue97"},"content":" * Metro style Push Button","lastModifiedDate":"2021-03-12"},{"lineNumber":238,"author":{"gitId":"lue97"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-03-12"},{"lineNumber":239,"author":{"gitId":"lue97"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-03-12"},{"lineNumber":240,"author":{"gitId":"lue97"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":241,"author":{"gitId":"lue97"},"content":".button {","lastModifiedDate":"2021-03-12"},{"lineNumber":242,"author":{"gitId":"lue97"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-03-12"},{"lineNumber":243,"author":{"gitId":"lue97"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-03-12"},{"lineNumber":244,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-03-12"},{"lineNumber":245,"author":{"gitId":"lue97"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":246,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":247,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2021-03-12"},{"lineNumber":248,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":249,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-03-12"},{"lineNumber":250,"author":{"gitId":"lue97"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-03-12"},{"lineNumber":251,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":252,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":253,"author":{"gitId":"lue97"},"content":".button:hover {","lastModifiedDate":"2021-03-12"},{"lineNumber":254,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":255,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":256,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":257,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":258,"author":{"gitId":"lue97"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-03-12"},{"lineNumber":259,"author":{"gitId":"lue97"},"content":"  -fx-background-color: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":260,"author":{"gitId":"lue97"},"content":"  -fx-text-fill: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":261,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":262,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":263,"author":{"gitId":"lue97"},"content":".button:focused {","lastModifiedDate":"2021-03-12"},{"lineNumber":264,"author":{"gitId":"lue97"},"content":"    -fx-border-color: #f8f8f2, #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":265,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":266,"author":{"gitId":"lue97"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-03-12"},{"lineNumber":267,"author":{"gitId":"lue97"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":268,"author":{"gitId":"lue97"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":269,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":270,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":271,"author":{"gitId":"lue97"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-03-12"},{"lineNumber":272,"author":{"gitId":"lue97"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-03-12"},{"lineNumber":273,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":274,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":275,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":276,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":277,"author":{"gitId":"lue97"},"content":".button:default {","lastModifiedDate":"2021-03-12"},{"lineNumber":278,"author":{"gitId":"lue97"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-03-12"},{"lineNumber":279,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":280,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":281,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":282,"author":{"gitId":"lue97"},"content":".button:default:hover {","lastModifiedDate":"2021-03-12"},{"lineNumber":283,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-03-12"},{"lineNumber":284,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":285,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":286,"author":{"gitId":"lue97"},"content":".dialog-pane {","lastModifiedDate":"2021-03-12"},{"lineNumber":287,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":288,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":289,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":290,"author":{"gitId":"lue97"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2021-03-12"},{"lineNumber":291,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":292,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":293,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":294,"author":{"gitId":"lue97"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2021-03-12"},{"lineNumber":295,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-03-12"},{"lineNumber":296,"author":{"gitId":"lue97"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-03-12"},{"lineNumber":297,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":298,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":299,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":300,"author":{"gitId":"lue97"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2021-03-12"},{"lineNumber":301,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":302,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":303,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":304,"author":{"gitId":"lue97"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-03-12"},{"lineNumber":305,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-03-12"},{"lineNumber":306,"author":{"gitId":"lue97"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-03-12"},{"lineNumber":307,"author":{"gitId":"lue97"},"content":"    -fx-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":308,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":309,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":310,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":311,"author":{"gitId":"lue97"},"content":".scroll-bar {","lastModifiedDate":"2021-03-12"},{"lineNumber":312,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":313,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":314,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":315,"author":{"gitId":"lue97"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-03-12"},{"lineNumber":316,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #75715e;","lastModifiedDate":"2021-03-12"},{"lineNumber":317,"author":{"gitId":"lue97"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-03-12"},{"lineNumber":318,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":319,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":320,"author":{"gitId":"lue97"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-03-12"},{"lineNumber":321,"author":{"gitId":"lue97"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":322,"author":{"gitId":"lue97"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":323,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":324,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":325,"author":{"gitId":"lue97"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-03-12"},{"lineNumber":326,"author":{"gitId":"lue97"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-03-12"},{"lineNumber":327,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":328,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":329,"author":{"gitId":"lue97"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-03-12"},{"lineNumber":330,"author":{"gitId":"lue97"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-03-12"},{"lineNumber":331,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":332,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":333,"author":{"gitId":"lue97"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-03-12"},{"lineNumber":334,"author":{"gitId":"lue97"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":335,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":336,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":337,"author":{"gitId":"lue97"},"content":"#cardPane {","lastModifiedDate":"2021-03-12"},{"lineNumber":338,"author":{"gitId":"lue97"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":339,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":340,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":341,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":342,"author":{"gitId":"lue97"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-03-12"},{"lineNumber":343,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-03-12"},{"lineNumber":344,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f9f8f5;","lastModifiedDate":"2021-03-12"},{"lineNumber":345,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":346,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":347,"author":{"gitId":"lue97"},"content":"#commandTextField {","lastModifiedDate":"2021-03-12"},{"lineNumber":348,"author":{"gitId":"lue97"},"content":"    -fx-background-color: transparent #272822 transparent #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":349,"author":{"gitId":"lue97"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":350,"author":{"gitId":"lue97"},"content":"    -fx-border-color: #272822 #272822 #66d9ef #272822;","lastModifiedDate":"2021-03-12"},{"lineNumber":351,"author":{"gitId":"lue97"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":352,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":353,"author":{"gitId":"lue97"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-12"},{"lineNumber":354,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":355,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":356,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":357,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":358,"author":{"gitId":"lue97"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2021-03-12"},{"lineNumber":359,"author":{"gitId":"lue97"},"content":"    -fx-effect: innershadow(gaussian, #272822, 20, 0, 0, 0);","lastModifiedDate":"2021-03-29"},{"lineNumber":360,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":361,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":362,"author":{"gitId":"lue97"},"content":".person-card:focused {","lastModifiedDate":"2021-03-29"},{"lineNumber":363,"author":{"gitId":"lue97"},"content":"    -fx-border-color: red !important;","lastModifiedDate":"2021-03-29"},{"lineNumber":364,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 20 !important;","lastModifiedDate":"2021-03-29"},{"lineNumber":365,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":366,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":367,"author":{"gitId":"lue97"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-03-12"},{"lineNumber":368,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive(#272822, 10%);","lastModifiedDate":"2021-03-29"},{"lineNumber":369,"author":{"gitId":"lue97"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":370,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-29"},{"lineNumber":371,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":372,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":373,"author":{"gitId":"lue97"},"content":"#tags {","lastModifiedDate":"2021-03-12"},{"lineNumber":374,"author":{"gitId":"lue97"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-12"},{"lineNumber":375,"author":{"gitId":"lue97"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-12"},{"lineNumber":376,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":377,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":378,"author":{"gitId":"lue97"},"content":"#tags .label {","lastModifiedDate":"2021-03-12"},{"lineNumber":379,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-12"},{"lineNumber":380,"author":{"gitId":"lue97"},"content":"    -fx-background-color: #a6e22e;","lastModifiedDate":"2021-03-12"},{"lineNumber":381,"author":{"gitId":"lue97"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-12"},{"lineNumber":382,"author":{"gitId":"lue97"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-12"},{"lineNumber":383,"author":{"gitId":"lue97"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-12"},{"lineNumber":384,"author":{"gitId":"lue97"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-12"},{"lineNumber":385,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":386,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":387,"author":{"gitId":"lue97"},"content":".error {","lastModifiedDate":"2021-03-12"},{"lineNumber":388,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f92672 !important; /* The error class should always override the default text-fill style 9 */","lastModifiedDate":"2021-03-12"},{"lineNumber":389,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":390,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":391,"author":{"gitId":"lue97"},"content":".list-cell:empty {","lastModifiedDate":"2021-03-12"},{"lineNumber":392,"author":{"gitId":"lue97"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-03-12"},{"lineNumber":393,"author":{"gitId":"lue97"},"content":"    -fx-background: #272822; /* background */","lastModifiedDate":"2021-03-12"},{"lineNumber":394,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":395,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":396,"author":{"gitId":"lue97"},"content":".tag-selector {","lastModifiedDate":"2021-03-12"},{"lineNumber":397,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":398,"author":{"gitId":"lue97"},"content":"    -fx-border-color: #f8f8f2; /* foreground */","lastModifiedDate":"2021-03-12"},{"lineNumber":399,"author":{"gitId":"lue97"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-03-12"},{"lineNumber":400,"author":{"gitId":"lue97"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-03-12"},{"lineNumber":401,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":402,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":403,"author":{"gitId":"lue97"},"content":".tooltip-text {","lastModifiedDate":"2021-03-12"},{"lineNumber":404,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2; /* foreground */","lastModifiedDate":"2021-03-12"},{"lineNumber":405,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":406,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":407,"author":{"gitId":"ivantjh"},"content":"#autoCompletePopup .list-cell {","lastModifiedDate":"2021-03-24"},{"lineNumber":408,"author":{"gitId":"ivantjh"},"content":"    -fx-background-color: #272822;","lastModifiedDate":"2021-03-25"},{"lineNumber":409,"author":{"gitId":"ivantjh"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-25"},{"lineNumber":410,"author":{"gitId":"ivantjh"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-03-24"},{"lineNumber":411,"author":{"gitId":"lue97"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":412,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":413,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":414,"author":{"gitId":"ivantjh"},"content":"#autoCompletePopup .list-cell:selected {","lastModifiedDate":"2021-03-24"},{"lineNumber":415,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive(#272822, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":416,"author":{"gitId":"lue97"},"content":"    -fx-text-fill: #f8f8f2;","lastModifiedDate":"2021-03-29"},{"lineNumber":417,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":418,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":419,"author":{"gitId":"ivantjh"},"content":"#autoCompletePopup .list-cell:hover {","lastModifiedDate":"2021-03-24"},{"lineNumber":420,"author":{"gitId":"lue97"},"content":"    -fx-background-color: derive(#272822, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":421,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lue97":398,"ivantjh":12,"chesterhow":11}},{"path":"src/test/data/ThemeTest/invalid.theme.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"{","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"  \"name\": \"\",","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"  \"author\": \"\",","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"  \"color\": [","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"    \"#272822\",","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"    \"#f92672\",","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"    \"#a6e22e\",","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"    \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"    \"#66d9ef\",","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"    \"#ae81ff\",","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"    \"#a1efe4\",","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"    \"#f8f8f2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"    \"#75715e\",","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"    \"#f92672\",","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    \"#a6e22e\",","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"    \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    \"#66d9ef\",","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    \"#ae81f\",","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"    \"#a1efe4\",","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    \"#f9f8f5\"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"  ],","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"  \"foreground\": \"#f8f8f2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"  \"background\": \"#272822\"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"lue97":25}},{"path":"src/test/data/ThemeTest/malformed.theme.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"{","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"  \"name\": \"\",","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"  \"author\": \"\",","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"  \"color\": [","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"    \"#272822\",","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"    \"#f92672\",","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"    \"#a6e22e\",","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"    \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"    \"#66d9ef\",","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"    \"#ae81ff\",","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"    \"#a1efe4\",","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"    \"#f8f8f2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"    \"#75715e\",","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"    \"#f92672\",","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    \"#a6e22e\",","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"    \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    \"#66d9ef\",","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    \"#ae81ff\",","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"    \"#a1efe4\",","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    \"#f9f8f5\"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"  \"foreground\": \"#f8f8f2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"  \"background\": \"#272822\"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"lue97":24}},{"path":"src/test/data/ThemeTest/valid.theme.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"{","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"  \"name\": \"\",","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"  \"author\": \"\",","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"  \"color\": [","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"    \"#272822\",","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"    \"#f92672\",","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"    \"#a6e22e\",","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"    \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"    \"#66d9ef\",","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"    \"#ae81ff\",","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"    \"#a1efe4\",","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"    \"#f8f8f2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"    \"#75715e\",","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"    \"#f92672\",","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    \"#a6e22e\",","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"    \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    \"#66d9ef\",","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    \"#ae81ff\",","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"    \"#a1efe4\",","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    \"#f9f8f5\"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"  ],","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"  \"foreground\": \"#f8f8f2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"  \"background\": \"#272822\"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"lue97":25}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"frienddex.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS_DEFAULT, model);","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"                + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Assyarul":3,"-":159,"chesterhow":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson.toUi()), expectedModel);","lastModifiedDate":"2021-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Assyarul":1,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson.toUi()), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"Assyarul"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"Assyarul"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"Assyarul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"Assyarul"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"Assyarul"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"Assyarul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"Assyarul"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"Assyarul"},"content":"        public void deleteGroup(Group target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"Assyarul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"Assyarul"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"Assyarul"},"content":"        public void setGroup(Name groupName, Group editedGroup) {","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"Assyarul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"Assyarul"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"Assyarul"},"content":"        public ObservableMap\u003cName, Group\u003e getGroupMap() {","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"Assyarul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"chesterhow"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"chesterhow"},"content":"        public ObservableList\u003cPersonEvent\u003e getUpcomingDates() {","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"chesterhow"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"chesterhow"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"chesterhow"},"content":"        public void updateUpcomingDates() {","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"chesterhow"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"chesterhow"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":192,"author":{"gitId":"chesterhow"},"content":"        public ObservableList\u003cPerson\u003e getDetailedPerson() {","lastModifiedDate":"2021-03-22"},{"lineNumber":193,"author":{"gitId":"chesterhow"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":194,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":195,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":196,"author":{"gitId":"chesterhow"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":197,"author":{"gitId":"chesterhow"},"content":"        public void updateDetailedPerson(Person personToDisplay) {","lastModifiedDate":"2021-03-22"},{"lineNumber":198,"author":{"gitId":"chesterhow"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":199,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":200,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"ivantjh"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"ivantjh"},"content":"        public ObservableList\u003cPersonStreak\u003e getPersonStreaks() {","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"ivantjh"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Assyarul":29,"ivantjh":6,"-":193,"chesterhow":21}},{"path":"src/test/java/seedu/address/logic/commands/AddDateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalEvents.DATE_ONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"public class AddDateCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    private static final Event VALID_DATE \u003d DATE_ONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"    public void execute_validInputsUnfilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withDates(VALID_DATE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(AddDateCommand.MESSAGE_ADD_DATE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        AddDateCommand addDateCommand \u003d new AddDateCommand(INDEX_FIRST_PERSON, VALID_DATE);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"        assertCommandSuccess(addDateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    public void execute_validInputsFilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withDates(VALID_DATE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(AddDateCommand.MESSAGE_ADD_DATE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"        AddDateCommand addDateCommand \u003d new AddDateCommand(INDEX_FIRST_PERSON, VALID_DATE);","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"        assertCommandSuccess(addDateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"        AddDateCommand addDateCommand \u003d new AddDateCommand(outOfBoundIndex, VALID_DATE);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"        assertCommandFailure(addDateCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"        AddDateCommand addDateCommand \u003d new AddDateCommand(outOfBoundIndex, VALID_DATE);","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"        assertCommandFailure(addDateCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chesterhow":82}},{"path":"src/test/java/seedu/address/logic/commands/AddGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":" * {@code AddGroupCommand}.","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"public class AddGroupCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddGroupCommand(null, null));","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    public void execute_validIndexesUnfilteredList_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        indexes.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        Person person1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        Group group \u003d new GroupBuilder().withPersons(person1).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        AddGroupCommand addGroupCommand \u003d new AddGroupCommand(indexes, group.getName());","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(AddGroupCommand.MESSAGE_ADD_GROUP_SUCCESS, group.getName());","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        expectedModel.addGroup(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"        expectedModel.updateFilteredPersonList(x-\u003egroup.getPersonNames().contains(x.getName()));","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"        assertCommandSuccess(addGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"        indexes.add(outOfBoundIndex);","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"        Group group \u003d new GroupBuilder().build();","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"        AddGroupCommand addGroupCommand \u003d new AddGroupCommand(indexes, group.getName());","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"        assertCommandFailure(addGroupCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":66}},{"path":"src/test/java/seedu/address/logic/commands/AddMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_ONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"class AddMeetingCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    private static final Event VALID_MEETING \u003d MEETING_ONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"    public void execute_addMeetingUnfilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withMeetings(VALID_MEETING).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"        AddMeetingCommand cmd \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, VALID_MEETING);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        String expectedMessage \u003d String.format(AddMeetingCommand.MESSAGE_ADD_MEETING_SUCCESS, editedPerson.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"        assertCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"    public void execute_addMeetingFilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withMeetings(VALID_MEETING).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"        AddMeetingCommand cmd \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, VALID_MEETING);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        String expectedMessage \u003d String.format(AddMeetingCommand.MESSAGE_ADD_MEETING_SUCCESS, editedPerson.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"        assertCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        AddMeetingCommand cmd \u003d new AddMeetingCommand(outOfBoundIndex, VALID_MEETING);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        assertCommandFailure(cmd, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"        AddMeetingCommand meetingCommand \u003d new AddMeetingCommand(outOfBoundIndex, VALID_MEETING);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"        assertCommandFailure(meetingCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"ivantjh":82}},{"path":"src/test/java/seedu/address/logic/commands/AddPictureCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FILE_NOT_FOUND;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_FILE_EXTENSION;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import java.io.File;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"import org.opentest4j.TestAbortedException;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"public class AddPictureCommandTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"    private static UserPrefs userPrefs;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"    private final Path testFilesDir \u003d Path.of(\"src\", \"test\", \"data\", \"PictureTest\");","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"    private final Path fileNotFoundPath \u003d testFilesDir.resolve(\"non_existant.jpeg\");","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"    private final Path fileWrongExtPath \u003d testFilesDir.resolve(\"invalid_format.txt\");","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    private final Path validPath \u003d testFilesDir.resolve(\"picture.jpg\");","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"    private final Path validPathWithSpaces \u003d testFilesDir.resolve(\"picture with space.jpg\");","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), userPrefs);","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    @BeforeAll","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"    public static void initPictureDir() {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"        userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        Path tempPictureDir;","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"            tempPictureDir \u003d Files.createTempDirectory(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"            userPrefs.setPictureStorageDirPath(tempPictureDir);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"            tempPictureDir.toFile().deleteOnExit();","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"            throw new TestAbortedException(\"Unable to create temp directory for AddPictureCommandTest: \" + ioe);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"    @AfterAll","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"    public static void deletePictureDir() {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"        File pictureDir \u003d userPrefs.getPictureStorageDirPath().toFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        for (File file : pictureDir.listFiles()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"            file.delete();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"        pictureDir.delete();","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"    public void execute_addPictureInvalidFile_failure() {","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        AddPictureCommand cmd;","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        // file not found","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"        cmd \u003d new AddPictureCommand(INDEX_FIRST_PERSON, fileNotFoundPath);","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"        assertCommandFailure(cmd, model, String.format(MESSAGE_FILE_NOT_FOUND, fileNotFoundPath));","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"        // wrong extension","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"        cmd \u003d new AddPictureCommand(INDEX_FIRST_PERSON, fileWrongExtPath);","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"        assertCommandFailure(cmd, model, String.format(MESSAGE_INVALID_FILE_EXTENSION, fileWrongExtPath,","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"                Picture.ALLOWED_FILE_EXTENSIONS_STRING));","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"    public void testAddPicture(AddPictureCommand cmd) {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"        String expectedMessage \u003d String.format(AddPictureCommand.MESSAGE_ADD_PICTURE_SUCCESS, firstPerson.getName());","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"        assertCommandSuccess(cmd, model, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"        assertTrue(Files.exists(editedPerson.getPicture().get().getFilePath()));","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"    public void execute_addPictureValidFile_success() {","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"        AddPictureCommand cmd1 \u003d new AddPictureCommand(INDEX_FIRST_PERSON, validPath);","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"        AddPictureCommand cmd2 \u003d new AddPictureCommand(INDEX_FIRST_PERSON, validPathWithSpaces);","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"        testAddPicture(cmd1);","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"        testAddPicture(cmd2);","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"ivantjh":93}},{"path":"src/test/java/seedu/address/logic/commands/ChangeDebtCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"public class ChangeDebtCommandTest {","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    private final Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    public void execute_addDebtUnfilteredList_success() {","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withDebt(\"10\").build();","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        Debt addedDebt \u003d new Debt(\"10\");","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        ChangeDebtCommand cmd \u003d new ChangeDebtCommand(INDEX_FIRST_PERSON, addedDebt, true);","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(ChangeDebtCommand.MESSAGE_ADD_DEBT_SUCCESS,","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"                addedDebt.toUi(), editedPerson.getName());","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        assertCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"    public void execute_subtractDebtUnfilteredList_success() {","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        Debt expectedDebt \u003d Debt.subtract(new Debt(\"0\"), new Debt(\"10\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withDebt(expectedDebt).build();","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        Debt subtractedDebt \u003d new Debt(\"10\");","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        ChangeDebtCommand cmd \u003d new ChangeDebtCommand(INDEX_FIRST_PERSON, subtractedDebt, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(ChangeDebtCommand.MESSAGE_SUBTRACT_DEBT_SUCCESS,","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"                subtractedDebt.toUi(), editedPerson.getName());","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"        assertCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"        Debt addedDebt \u003d new Debt(\"10\");","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"        ChangeDebtCommand cmd \u003d new ChangeDebtCommand(outOfBoundIndex, addedDebt, true);","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"        assertCommandFailure(cmd, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Assyarul":62}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        expectedModel.updateUpcomingDates();","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        expectedModel.updateDetailedPerson(null);","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":31,"chesterhow":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"lue97":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"01-01-2000\";","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"05-05-1980\";","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"    public static final String INVALID_BIRTHDAY_DESC \u003d \" \" + PREFIX_BIRTHDAY + \"abc\"; // not proper format","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"ivantjh"},"content":"     * Executes the given {@code command} and confirms that the returned {@link CommandResult} matches","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"ivantjh"},"content":"     * has a message that matches {@code expectedMessage}","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"ivantjh"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"ivantjh"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"ivantjh"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Assyarul":6,"ivantjh":14,"-":127}},{"path":"src/test/java/seedu/address/logic/commands/DeleteDateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalEvents.DATE_ONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"public class DeleteDateCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    private static final Event VALID_DATE \u003d DATE_ONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    private static final Index VALID_INDEX \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"    public void execute_validInputsUnfilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        Person firstPersonWithDate \u003d new PersonBuilder(firstPerson).withDates(VALID_DATE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        model.setPerson(firstPerson, firstPersonWithDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(DeleteDateCommand.MESSAGE_DELETE_DATE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        expectedModel.setPerson(firstPersonWithDate, editedPerson);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"        DeleteDateCommand deleteDateCommand \u003d new DeleteDateCommand(INDEX_FIRST_PERSON, VALID_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"        assertCommandSuccess(deleteDateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"    public void execute_validInputsFilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"        Person firstPersonWithDate \u003d new PersonBuilder(firstPerson).withDates(VALID_DATE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"        model.setPerson(firstPerson, firstPersonWithDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(DeleteDateCommand.MESSAGE_DELETE_DATE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"        expectedModel.setPerson(firstPersonWithDate, editedPerson);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        DeleteDateCommand deleteDateCommand \u003d new DeleteDateCommand(INDEX_FIRST_PERSON, VALID_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"        assertCommandSuccess(deleteDateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"        DeleteDateCommand deleteDateCommand \u003d new DeleteDateCommand(outOfBoundIndex, VALID_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"        assertCommandFailure(deleteDateCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"chesterhow"},"content":"        DeleteDateCommand deleteDateCommand \u003d new DeleteDateCommand(INDEX_SECOND_PERSON, VALID_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"chesterhow"},"content":"        assertCommandFailure(deleteDateCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"    public void execute_invalidDateIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"chesterhow"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"chesterhow"},"content":"        Person firstPersonWithDate \u003d new PersonBuilder(firstPerson).withDates(VALID_DATE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"chesterhow"},"content":"        model.setPerson(firstPerson, firstPersonWithDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"chesterhow"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(firstPersonWithDate.getDates().size() + 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"chesterhow"},"content":"        DeleteDateCommand deleteDateCommand \u003d new DeleteDateCommand(INDEX_FIRST_PERSON, outOfBoundIndex);","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"chesterhow"},"content":"        assertCommandFailure(deleteDateCommand, model, Messages.MESSAGE_INVALID_INDEX_ARGUMENT);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"chesterhow"},"content":"    public void execute_invalidDateIndexFilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"chesterhow"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"chesterhow"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"chesterhow"},"content":"        Person firstPersonWithDate \u003d new PersonBuilder(firstPerson).withDates(VALID_DATE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"chesterhow"},"content":"        model.setPerson(firstPerson, firstPersonWithDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(firstPersonWithDate.getDates().size() + 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"chesterhow"},"content":"        DeleteDateCommand deleteDateCommand \u003d new DeleteDateCommand(INDEX_FIRST_PERSON, outOfBoundIndex);","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"chesterhow"},"content":"        assertCommandFailure(deleteDateCommand, model, Messages.MESSAGE_INVALID_INDEX_ARGUMENT);","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chesterhow":103}},{"path":"src/test/java/seedu/address/logic/commands/DeleteGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"public class DeleteGroupCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteGroupCommand(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    public void execute_validGroupName_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        Group group \u003d new GroupBuilder().withName(\"Close Friends\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        model.addGroup(group);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(group.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(DeleteGroupCommand.MESSAGE_DELETE_GROUP_SUCCESS, group.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"        assertCommandSuccess(deleteGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    public void execute_nonExistingGroupName_throwsCommandException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        Group group \u003d new GroupBuilder().withName(\"Close Friends\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(group.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        assertCommandFailure(deleteGroupCommand, model, Messages.MESSAGE_UNKNOWN_GROUP);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Assyarul":46}},{"path":"src/test/java/seedu/address/logic/commands/DeletePictureCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"import org.opentest4j.TestAbortedException;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"@TestInstance(TestInstance.Lifecycle.PER_CLASS)","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"public class DeletePictureCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    private final Path testPicPath \u003d Path.of(\"src\", \"test\", \"data\", \"PictureTest\", \"picture.jpg\");","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        DeletePictureCommand cmd \u003d new DeletePictureCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        assertCommandFailure(cmd, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"    public void execute_emptyPicture_throwsCommandException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"        Person p \u003d model","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"                .getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased())","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"                .deletePicture();","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        DeletePictureCommand cmd \u003d new DeletePictureCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"        assertCommandFailure(cmd, model,","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"                String.format(DeletePictureCommand.MESSAGE_DELETE_PICTURE_NO_PICTURE_FOUND, p.getName()));","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"    public void execute_validIndexAndPicture_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        Path tmpFile;","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"            tmpFile \u003d Files.createTempFile(\"picture\", \".jpg\");","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"            Files.copy(testPicPath, tmpFile, REPLACE_EXISTING);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"            throw new TestAbortedException(\"Unable to create test picture for DeletePictureCommand test: \" + ioe);","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"        Picture picture \u003d new Picture(tmpFile);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"        Person personWithPicture \u003d person.withPicture(picture);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"        model.setPerson(person, personWithPicture);","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"        expectedModel.setPerson(personWithPicture, person);","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"        String expectedMessage \u003d String.format(DeletePictureCommand.MESSAGE_DELETE_PICTURE_SUCCESS, person.getName());","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"        DeletePictureCommand cmd \u003d new DeletePictureCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"        assertCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"ivantjh"},"content":"        assertFalse(Files.exists(tmpFile));","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"    public void equals() {","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"ivantjh"},"content":"        DeletePictureCommand cmd1 \u003d new DeletePictureCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"        DeletePictureCommand cmd2 \u003d new DeletePictureCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"        assertEquals(cmd1, cmd1);","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"        DeletePictureCommand cmd1Copy \u003d new DeletePictureCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"        assertEquals(cmd1Copy, cmd1);","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"        // different indexes -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"        assertNotEquals(cmd2, cmd1);","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"ivantjh":102}},{"path":"src/test/java/seedu/address/logic/commands/DetailsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"public class DetailsCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    public void execute_validInputsUnfilteredList_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"        Person personToDisplay \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(DetailsCommand.MESSAGE_DETAILS_SUCCESS, personToDisplay.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, DetailsPanelTab.PERSON_DETAILS);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        expectedModel.updateDetailedPerson(personToDisplay);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        DetailsCommand detailsCommand \u003d new DetailsCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        assertCommandSuccess(detailsCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        DetailsCommand detailsCommand \u003d new DetailsCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"        assertCommandFailure(detailsCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"chesterhow"},"content":"    public void execute_validInputsFilteredList_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"chesterhow"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"chesterhow"},"content":"        Person personToDisplay \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(DetailsCommand.MESSAGE_DETAILS_SUCCESS, personToDisplay.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"chesterhow"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, DetailsPanelTab.PERSON_DETAILS);","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"chesterhow"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"chesterhow"},"content":"        expectedModel.updateDetailedPerson(personToDisplay);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"chesterhow"},"content":"        showPersonAtIndex(expectedModel, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"chesterhow"},"content":"        DetailsCommand detailsCommand \u003d new DetailsCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"        assertCommandSuccess(detailsCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"chesterhow"},"content":"    public void execute_invalidIndexFilteredList_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"chesterhow"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"chesterhow"},"content":"        DetailsCommand detailsCommand \u003d new DetailsCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"chesterhow"},"content":"        assertCommandFailure(detailsCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chesterhow":72}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson.toUi());","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson.toUi());","lastModifiedDate":"2021-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson.toUi());","lastModifiedDate":"2021-04-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson.toUi());","lastModifiedDate":"2021-04-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Assyarul":4,"-":169}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"lue97":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"lue97":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    private Optional\u003cName\u003e defaultName \u003d Optional.empty();","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"        assertCommandSuccess(new ListCommand(defaultName), model, ListCommand.MESSAGE_SUCCESS_DEFAULT, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        assertCommandSuccess(new ListCommand(defaultName), model, ListCommand.MESSAGE_SUCCESS_DEFAULT, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Assyarul":6,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    public void execute_validInputs_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        DetailsPanelTab tabToView \u003d DetailsPanelTab.UPCOMING_EVENTS;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_DETAILS_SUCCESS, tabToView);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, tabToView);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(DetailsPanelTab.UPCOMING_EVENTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        assertCommandSuccess(viewCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"    public void execute_invalidInputs_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_TAB, DetailsCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(DetailsPanelTab.PERSON_DETAILS);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"        assertCommandFailure(viewCommand, model, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"chesterhow":40}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"                + TAG_DESC_HUSBAND + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":86,"author":{"gitId":"Assyarul"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"Assyarul"},"content":"                 + BIRTHDAY_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"Assyarul"},"content":"        // missing address prefix","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":112,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"Assyarul"},"content":"                + VALID_BIRTHDAY_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"Assyarul"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + BIRTHDAY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-04-02"},{"lineNumber":128,"author":{"gitId":"Assyarul"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"Assyarul"},"content":"        // invalid birthday","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"Assyarul"},"content":"                + INVALID_BIRTHDAY_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-04-02"},{"lineNumber":148,"author":{"gitId":"Assyarul"},"content":"                + BIRTHDAY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"Assyarul"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2021-04-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Assyarul":40,"-":115}},{"path":"src/test/java/seedu/address/logic/parser/AddDateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalEvents.DATE_ONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.AddDateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"public class AddDateCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    private final AddDateCommandParser parser \u003d new AddDateCommandParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"        assertParseSuccess(parser, \"1 d/10-10-2019 desc/Anniversary\",","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"                new AddDateCommand(Index.fromOneBased(1), DATE_ONE));","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDateCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        // missing index","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"d/10-10-2019 desc/Anniversary\", expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"        // missing date","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"1 desc/Anniversary\", expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"        // missing description","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"1 d/10-10-2019\", expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chesterhow"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"chesterhow"},"content":"        // invalid date format","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"1 d/10 Oct 2019 desc/Anniversary\", DateUtil.MESSAGE_CONSTRAINT);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"        // empty description","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"1 d/10-10-2019 desc/\", Event.DESCRIPTION_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chesterhow":47}},{"path":"src/test/java/seedu/address/logic/parser/AddGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEXES;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"public class AddGroupCommandParserTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    private AddGroupCommandParser parser \u003d new AddGroupCommandParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    public void parse_fieldsMissing_failure() {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"        //missing persons","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"        String invalidCommand \u003d \" n/ Close Friends\";","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, invalidCommand, expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        //missing name","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        invalidCommand \u003d \" p/ 1 2 3 4\";","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, invalidCommand, expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    public void parse_indexesFieldEmpty_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_INDEXES, AddGroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"        String invalidCommand \u003d \" n/ Close Friends p/ \";","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, invalidCommand, expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"        List\u003cIndex\u003e expectedIndexes \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"        expectedIndexes.add(Index.fromOneBased(1));","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"        expectedIndexes.add(Index.fromOneBased(2));","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"        expectedIndexes.add(Index.fromOneBased(3));","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        Name expectedName \u003d new Name(\"Close Friends\");","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"        String validCommand \u003d \" n/ Close Friends p/ 1 2 3\";","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"        assertParseSuccess(parser, validCommand, new AddGroupCommand(expectedIndexes, expectedName));","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":54}},{"path":"src/test/java/seedu/address/logic/parser/AddMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"public class AddMeetingCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    private final AddMeetingCommandParser parser \u003d new AddMeetingCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    private final Event meeting1 \u003d new EventBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"            .withDate(LocalDate.of(2020, 12, 24))","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"            .withTime(LocalTime.of(12, 15))","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"            .withDescription(\"sample description\")","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"        assertParseSuccess(parser, \"1 d/24-12-2020 t/1215 desc/sample description\",","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"                new AddMeetingCommand(Index.fromOneBased(1), meeting1));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"        // missing index","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"d/24-12-2020 t/1215 desc/sample description\", expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"        // missing date","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"1 t/1215 desc/sample description\", expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"        // missing time","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"1 d/24-12-2020 desc/sample description\", expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"        // missing description","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"1 d/24-12-2020 t/1215\", expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"        // wrong date format","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"1 d/24 Dec 2020 t/1215 desc/sample description\",","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"                DateUtil.MESSAGE_CONSTRAINT);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"        // wrong time format","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"1 d/24-12-2020 t/12:15pm desc/sample description\",","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"                TimeUtil.MESSAGE_CONSTRAINT);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"        // empty description","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"1 d/24-12-2020 t/1215 desc/\", Event.DESCRIPTION_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"ivantjh":64}},{"path":"src/test/java/seedu/address/logic/parser/AddPictureCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_FILE;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.FileSystem;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.AddPictureCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"public class AddPictureCommandParserTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    private final AddPictureCommandParser parser \u003d new AddPictureCommandParser();","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"    private final FileSystem fs \u003d FileSystems.getDefault();","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"    private final String root \u003d Path.of(\"\").toAbsolutePath().getRoot().toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"    private final String relativePathStr \u003d concatPaths(\"Desktop\", \"steven.jpg\");","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"    private final Path relativePath \u003d Path.of(\"Desktop\", \"steven.jpg\");","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    private final String absolutePathStr \u003d concatPathsFromRoot(\"Users\", \"bob\", \"Desktop\", \"steven.jpg\");","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"    private final Path absolutePath \u003d Path.of(root, \"Users\", \"bob\", \"Desktop\", \"steven.jpg\");","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"    private final String pathWithSpaceStr \u003d concatPaths(\"Desktop\", \"steven ng.jpg\");","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"    private final Path pathWithSpace \u003d Path.of(\"Desktop\", \"steven ng.jpg\");","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"    private String concatPaths(String... content) {","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"        return String.join(fs.getSeparator(), content);","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"    private String concatPathsFromRoot(String... content) {","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"        return root + String.join(fs.getSeparator(), content);","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"        assertParseSuccess(parser, \"1 \" + relativePathStr,","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"                new AddPictureCommand(Index.fromOneBased(1), relativePath));","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"        assertParseSuccess(parser, \"1 \" + absolutePathStr,","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"                new AddPictureCommand(Index.fromOneBased(1), absolutePath));","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"        assertParseSuccess(parser, \"1 \" + pathWithSpaceStr,","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"                new AddPictureCommand(Index.fromOneBased(1), pathWithSpace));","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPictureCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"        // missing index","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, relativePathStr, expectedMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"        // missing path","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"1\", expectedMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"        // Out of bound indexes","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPictureCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"0 somefile\", expectedMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"-1 somefile\", expectedMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"        // null byte","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"1 \\0somefile\", String.format(MESSAGE_INVALID_FILE, \"\\0somefile\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"ivantjh":71}},{"path":"src/test/java/seedu/address/logic/parser/DeleteDateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.DeleteDateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"public class DeleteDateCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private final DeleteDateCommandParser parser \u003d new DeleteDateCommandParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        assertParseSuccess(parser, \"1 i/1\", new DeleteDateCommand(Index.fromOneBased(1), Index.fromOneBased(1)));","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDateCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"        // missing person index","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"i/1\", expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"        // missing date index","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"1\", expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDateCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"chesterhow"},"content":"        // invalid person index format","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"a i/1\", expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chesterhow":39}},{"path":"src/test/java/seedu/address/logic/parser/DeletePictureCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"import seedu.address.logic.commands.DeletePictureCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"public class DeletePictureCommandParserTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"    private final DeletePictureCommandParser parser \u003d new DeletePictureCommandParser();","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"    public void parse_validArgs_returnsDeletePictureCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"        assertParseSuccess(parser, \"1\", new DeletePictureCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"        assertParseFailure(parser, \"abc\",","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePictureCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"ivantjh":26}},{"path":"src/test/java/seedu/address/logic/parser/DetailsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.DetailsCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"public class DetailsCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private DetailsCommandParser parser \u003d new DetailsCommandParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        assertParseSuccess(parser, \"1\", new DetailsCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DetailsCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"a\", expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chesterhow":26}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"Assyarul"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BIRTHDAY_DESC, Birthday.MESSAGE_CONSTRAINTS); // invalid bday","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":119,"author":{"gitId":"Assyarul"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + BIRTHDAY_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"Assyarul"},"content":"                .withBirthday(VALID_BIRTHDAY_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"Assyarul"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"Assyarul"},"content":"                .withEmail(VALID_EMAIL_AMY).withBirthday(VALID_BIRTHDAY_AMY).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"Assyarul"},"content":"        // birthday","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"Assyarul"},"content":"        userInput \u003d targetIndex.getOneBased() + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":170,"author":{"gitId":"Assyarul"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withBirthday(VALID_BIRTHDAY_AMY).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":171,"author":{"gitId":"Assyarul"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-09"},{"lineNumber":172,"author":{"gitId":"Assyarul"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"Assyarul"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND + BIRTHDAY_DESC_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"Assyarul"},"content":"                .withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"Assyarul"},"content":"                + PHONE_DESC_BOB + BIRTHDAY_DESC_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"Assyarul"},"content":"                .withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Assyarul":21,"-":203}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.NameContainsPatternPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"    public void parse_validArgsKeywordsPredicate_returnsFindCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    public void parse_validArgsPatternPredicate_returnsFindCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(new NameContainsPatternPredicate(Pattern.compile(\"abc\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"        assertParseSuccess(parser, \"abc p/\", expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"        expectedFindCommand \u003d new FindCommand(new NameContainsPatternPredicate(Pattern.compile(\".*\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"        assertParseSuccess(parser, \".* p/\", expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"lue97":6,"ivantjh":5,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/InputParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"public class InputParserTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"    private final InputParser parser \u003d new InputParser();","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ivantjh":2,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chesterhow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"chesterhow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"chesterhow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"chesterhow"},"content":"import seedu.address.commons.core.DetailsPanelTab;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"chesterhow"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"chesterhow"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"        assertParseSuccess(parser, \"upcoming events\", new ViewCommand(DetailsPanelTab.UPCOMING_EVENTS));","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"chesterhow"},"content":"        assertParseSuccess(parser, \"streaks\", new ViewCommand(DetailsPanelTab.STREAKS));","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"chesterhow"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"chesterhow"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"chesterhow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"a\", expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"chesterhow"},"content":"        assertParseFailure(parser, \"1\", expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"chesterhow"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"chesterhow"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"chesterhow":33}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.PersonEvent;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.PersonStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson((Person) null));","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"Assyarul"},"content":"        private final ObservableMap\u003cName, Group\u003e groups \u003d FXCollections.observableMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"chesterhow"},"content":"        private final ObservableList\u003cPersonEvent\u003e personEvents \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"        private final ObservableList\u003cPersonStreak\u003e personStreaks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"Assyarul"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"Assyarul"},"content":"        public ObservableMap\u003cName, Group\u003e getGroupMap() {","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"Assyarul"},"content":"            return groups;","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"Assyarul"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"chesterhow"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"chesterhow"},"content":"        public ObservableList\u003cPersonEvent\u003e getUpcomingDates() {","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"chesterhow"},"content":"            return personEvents;","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"chesterhow"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"ivantjh"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"ivantjh"},"content":"        public ObservableList\u003cPersonStreak\u003e getPersonStreaks() {","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"ivantjh"},"content":"            return personStreaks;","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"ivantjh"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Assyarul":11,"ivantjh":7,"-":101,"chesterhow":7}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, \"theme/mocha.dark.json\"));","lastModifiedDate":"2021-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(","lastModifiedDate":"2021-02-19"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"                1, 2, 3, 4, \"theme/mocha.dark.json\");","lastModifiedDate":"2021-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"lue97":3,"-":130}},{"path":"src/test/java/seedu/address/model/group/GroupHashMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"public class GroupHashMapTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    private final GroupHashMap groupMap \u003d new GroupHashMap();","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"    private final Group group \u003d new GroupBuilder().build();","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    public void contains_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e groupMap.contains(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    public void contains_groupNotInMap_returnsFalse() {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"        assertFalse(groupMap.contains(group));","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"    public void contains_groupInMap_returnsTrue() {","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        groupMap.add(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        assertTrue(groupMap.contains(group));","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    public void contains_groupWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"        groupMap.add(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        Group editedGroup \u003d new GroupBuilder().withPersons(ALICE).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"        assertTrue(groupMap.contains(editedGroup));","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"    public void add_duplicateGroup_throwsDuplicateGroupException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        groupMap.add(group);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e groupMap.add(group));","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":46}},{"path":"src/test/java/seedu/address/model/group/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"public class GroupTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    private Set\u003cName\u003e personNameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    private final Name name \u003d new Name(\"test\");","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    private final Name diffName \u003d new Name(\"Test\");","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    public void constructor_nullGroupName_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Group(null, personNameSet));","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"    public void constructor_nullPersonSet_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Group(name, null));","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    public void isSameGroup() {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"        Set\u003cName\u003e diffPersonNameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"        diffPersonNameSet.add(ALICE.getName());","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        Group group \u003d new Group(name, personNameSet);","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"        Group diffGroup \u003d new Group(diffName, personNameSet);","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        assertTrue(group.isSameGroup(group));","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        assertFalse(group.isSameGroup(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        assertFalse(group.isSameGroup(diffGroup)); //different group name","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        diffGroup \u003d new Group(name, diffPersonNameSet);","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        assertTrue(group.isSameGroup(diffGroup)); //different group person sets.","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"    public void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"        Set\u003cName\u003e diffPersonNameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        diffPersonNameSet.add(ALICE.getName());","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"        Group group \u003d new Group(name, personNameSet);","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        Group diffGroup \u003d new Group(diffName, personNameSet);","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"        assertTrue(group.equals(group));","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"        assertFalse(group.equals(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"        assertFalse(group.equals(diffGroup)); //different group name","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"        diffGroup \u003d new Group(name, diffPersonNameSet);","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"        assertFalse(group.equals(diffGroup)); //different group person sets.","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":61}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"public class BirthdayTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday((LocalDate) null));","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    public void constructor_invalidBirthday_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Birthday(invalidAddress));","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    public void isValidBirthday() {","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"        // null address","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthday.isValidBirthday(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        // invalid birthday","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        assertFalse(Birthday.isValidBirthday(\"\")); // empty string","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        assertFalse(Birthday.isValidBirthday(\" \")); // spaces only","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"        assertFalse(Birthday.isValidBirthday(\"99-99-9999\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"        // valid birthday","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"        assertTrue(Birthday.isValidBirthday(\"01-01-1998\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        assertTrue(Birthday.isValidBirthday(\"03-02-1998\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"        assertTrue(Birthday.isValidBirthday(\"02-01-2000\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Assyarul":39}},{"path":"src/test/java/seedu/address/model/person/DebtTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"public class DebtTest {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    private Debt test1 \u003d new Debt(\"5\");","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    private Debt test2 \u003d new Debt(\"4\");","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Debt((String) null));","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    public void constructor_invalidDebt_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"        String invalidDebtString \u003d \"1.001\";","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Debt(invalidDebtString));","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    public void isValidDebt_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e Debt.isValidDebt(null));","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    public void isValidDebt_invalidDebt_false() {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        assertFalse(Debt.isValidDebt(\"\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        assertFalse(Debt.isValidDebt(\" \"));","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"        assertFalse(Debt.isValidDebt(\"abc\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"    public void isValidDebt_validDebt_true() {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"        assertTrue(Debt.isValidDebt(\"-2\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        assertTrue(Debt.isValidDebt(\"0\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        assertTrue(Debt.isValidDebt(\"100.1\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        assertTrue(Debt.isValidDebt(\"0.01\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    public void add_correctDebt_true() {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"        Debt result \u003d new Debt(\"9\");","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"        assertTrue(result.equals(Debt.add(test1, test2)));","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"    public void subtract_correctDebt_true() {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        Debt result \u003d new Debt(\"1\");","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"        Debt result2 \u003d new Debt(\"-1\");","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"        assertTrue(result.equals(Debt.subtract(test1, test2)));","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        assertTrue(result2.equals(Debt.subtract(test2, test1)));","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Assyarul":58}},{"path":"src/test/java/seedu/address/model/person/NameContainsPatternPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.util.List;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"public class NameContainsPatternPredicateTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    public final Pattern subStringPattern \u003d Pattern.compile(\"et\");","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    public final Pattern matchAllPattern \u003d Pattern.compile(\".*\");","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"    public final Pattern startsWithAPattern \u003d Pattern.compile(\"^a\");","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    public final Pattern endsWithAPattern \u003d Pattern.compile(\"a$\");","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"    public final Pattern startsAndEndWithAPattern \u003d Pattern.compile(\"^a.*a$\");","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"    private String[] nameArray \u003d new String[] {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"        \"alpha beta charlie\",","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"        \"beta charlie\",","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"        \"delta charlie alpha\",","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"        \"beta beta beta\",","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"        \"alpha alpha charlie delta\",","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"        \"alpha  alpha    charlie delta\"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"    };","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"    private List\u003cString\u003e nameList \u003d Arrays.stream(nameArray).collect(Collectors.toList());","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"    public List\u003cString\u003e filterList(List\u003cString\u003e nameList, Pattern pattern) {","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"        return nameList.stream()","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"                .map(name -\u003e new PersonBuilder().withName(name).build())","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"                .filter(new NameContainsPatternPredicate(pattern))","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"                .map(person -\u003e person.getName().toString())","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"    public void test_nameContainsPattern_returnsTrue() {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"        List\u003cString\u003e correctList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"        correctList.add(\"alpha beta charlie\");","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"        correctList.add(\"beta charlie\");","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"        correctList.add(\"beta beta beta\");","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"        assertEquals(correctList, filterList(nameList, subStringPattern));","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"        correctList.clear();","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"        assertEquals(nameList, filterList(nameList, matchAllPattern));","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"        correctList.add(\"alpha beta charlie\");","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"        correctList.add(\"alpha alpha charlie delta\");","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"        correctList.add(\"alpha  alpha    charlie delta\");","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"        assertEquals(correctList, filterList(nameList, startsWithAPattern));","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"        correctList.clear();","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"        correctList.add(\"delta charlie alpha\");","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"        correctList.add(\"beta beta beta\");","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"        correctList.add(\"alpha alpha charlie delta\");","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"        correctList.add(\"alpha  alpha    charlie delta\");","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"        assertEquals(correctList, filterList(nameList, endsWithAPattern));","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"        correctList.clear();","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"        correctList.add(\"alpha alpha charlie delta\");","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"        correctList.add(\"alpha  alpha    charlie delta\");","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"        assertEquals(correctList, filterList(nameList, startsAndEndWithAPattern));","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"lue97":71}},{"path":"src/test/java/seedu/address/model/person/StreakTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import static java.time.DayOfWeek.MONDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import static java.time.DayOfWeek.SUNDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.model.person.Goal.Frequency.MONTHLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.model.person.Goal.Frequency.NONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.model.person.Goal.Frequency.WEEKLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import static seedu.address.model.person.Goal.Frequency.YEARLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"public class StreakTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"    private final List\u003cEvent\u003e sampleMeetings;","lastModifiedDate":"2021-04-03"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"    private final Streak weeklyStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"    private final Streak emptyStreak;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"    {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"        List\u003cEvent\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"        Event event1 \u003d new EventBuilder().withDate(now).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"        Event event2 \u003d new EventBuilder().withDate(now.minusWeeks(1)).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        meetings.add(event1);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"        meetings.add(event2);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"        Goal weeklyGoal \u003d new Goal(WEEKLY);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"        weeklyStreak \u003d Streak.from(weeklyGoal, meetings);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"        emptyStreak \u003d Streak.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        sampleMeetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"        sampleMeetings.addAll(meetings);","lastModifiedDate":"2021-04-03"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"    public void empty() {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"        assertEquals(0, emptyStreak.getValue());","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"    public void from_noneGoal_returnsEmptyStreak() {","lastModifiedDate":"2021-04-03"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"        Goal noneGoal \u003d new Goal(NONE);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"        assertEquals(0, Streak.from(noneGoal, sampleMeetings).getValue());","lastModifiedDate":"2021-04-03"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-04-03"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"    public void from_emptyMeetings_returnsEmptyStreak() {","lastModifiedDate":"2021-04-03"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"        Goal weeklyGoal \u003d new Goal(WEEKLY);","lastModifiedDate":"2021-04-03"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"        assertEquals(0, Streak.from(weeklyGoal, Collections.emptyList()).getValue());","lastModifiedDate":"2021-04-03"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":60,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-04-03"},{"lineNumber":61,"author":{"gitId":"ivantjh"},"content":"    public void from_lateByOneDay_returnsStreakBroken() {","lastModifiedDate":"2021-04-03"},{"lineNumber":62,"author":{"gitId":"ivantjh"},"content":"        Goal weeklyGoal \u003d new Goal(WEEKLY);","lastModifiedDate":"2021-04-03"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":64,"author":{"gitId":"ivantjh"},"content":"        List\u003cEvent\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-03"},{"lineNumber":65,"author":{"gitId":"ivantjh"},"content":"        LocalDate now \u003d LocalDate.now().with(TemporalAdjusters.previousOrSame(MONDAY));","lastModifiedDate":"2021-04-03"},{"lineNumber":66,"author":{"gitId":"ivantjh"},"content":"        Event event1 \u003d new EventBuilder().withDate(now.minusWeeks(1).minusDays(1)).build();","lastModifiedDate":"2021-04-03"},{"lineNumber":67,"author":{"gitId":"ivantjh"},"content":"        meetings.add(event1);","lastModifiedDate":"2021-04-03"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":69,"author":{"gitId":"ivantjh"},"content":"        assertEquals(0, Streak.from(weeklyGoal, meetings).getValue());","lastModifiedDate":"2021-04-03"},{"lineNumber":70,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"ivantjh"},"content":"    public void testFrom(List\u003cLocalDate\u003e dates, Goal goal, List\u003cLocalDate\u003e extra) {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"ivantjh"},"content":"        Event onePeriodBefore \u003d new EventBuilder().withDate(dates.get(0)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"ivantjh"},"content":"        Event twoPeriodsBefore \u003d new EventBuilder().withDate(dates.get(1)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"ivantjh"},"content":"        Event threePeriodsBefore \u003d new EventBuilder().withDate(dates.get(2)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"        Event fourPeriodsBefore \u003d new EventBuilder().withDate(dates.get(3)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"ivantjh"},"content":"        List\u003cEvent\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"ivantjh"},"content":"        meetings.add(onePeriodBefore);","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"        meetings.add(twoPeriodsBefore);","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"ivantjh"},"content":"        meetings.add(threePeriodsBefore);","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"ivantjh"},"content":"        meetings.add(fourPeriodsBefore);","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"ivantjh"},"content":"        // Meet once every time period","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"ivantjh"},"content":"        assertEquals(4, Streak.from(goal, meetings).getValue());","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"ivantjh"},"content":"        // Meet more on some time periods","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"ivantjh"},"content":"        Event extra1 \u003d new EventBuilder().withDate(extra.get(0)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"ivantjh"},"content":"        Event extra2 \u003d new EventBuilder().withDate(extra.get(1)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"ivantjh"},"content":"        meetings.add(extra1);","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"ivantjh"},"content":"        meetings.add(extra2);","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"ivantjh"},"content":"        assertEquals(6, Streak.from(goal, meetings).getValue());","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"        meetings.remove(extra1);","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"ivantjh"},"content":"        assertEquals(5, Streak.from(goal, meetings).getValue());","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"ivantjh"},"content":"        meetings.remove(extra2);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"        // Gaps in time periods","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"ivantjh"},"content":"        meetings.remove(onePeriodBefore);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"        assertEquals(0, Streak.from(goal, meetings).getValue());","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"ivantjh"},"content":"        meetings.add(onePeriodBefore);","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"ivantjh"},"content":"        meetings.remove(twoPeriodsBefore);","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"ivantjh"},"content":"        assertEquals(1, Streak.from(goal, meetings).getValue());","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"        meetings.add(twoPeriodsBefore);","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"ivantjh"},"content":"        meetings.remove(fourPeriodsBefore);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"        assertEquals(3, Streak.from(goal, meetings).getValue());","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"ivantjh"},"content":"    public void testFromWeekly(List\u003cLocalDate\u003e dates) {","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e extraDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"ivantjh"},"content":"        extraDates.add(dates.get(0).minusDays(2));","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"ivantjh"},"content":"        extraDates.add(dates.get(2).minusDays(3));","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"ivantjh"},"content":"        testFrom(dates, new Goal(WEEKLY), extraDates);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"ivantjh"},"content":"    public void testFromWeeklySameDayPerWeek(LocalDate now) {","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusWeeks(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusWeeks(2));","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusWeeks(3));","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusWeeks(4));","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"ivantjh"},"content":"        testFromWeekly(dates);","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"ivantjh"},"content":"    public void from_weeklyStartOnAnyDay_sameDayPerWeek() {","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"ivantjh"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"ivantjh"},"content":"        testFromWeeklySameDayPerWeek(now);","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"ivantjh"},"content":"    public void from_weeklyStartOnSunday_sameDayPerWeek() {","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"ivantjh"},"content":"        LocalDate now \u003d LocalDate.now().with(TemporalAdjusters.nextOrSame(SUNDAY));","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"ivantjh"},"content":"        testFromWeeklySameDayPerWeek(now);","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"ivantjh"},"content":"    public void from_weeklyStartOnMonday_randomDaysPerWeek() {","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"ivantjh"},"content":"        LocalDate latest \u003d LocalDate.now().with(TemporalAdjusters.previousOrSame(MONDAY));","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"ivantjh"},"content":"        dates.add(latest.minusWeeks(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"ivantjh"},"content":"        dates.add(dates.get(0).minusDays(6)); // last Tuesday","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"ivantjh"},"content":"        dates.add(dates.get(1).minusDays(6)); // last Wednesday","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"ivantjh"},"content":"        dates.add(dates.get(2).minusDays(4)); // last Saturday","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"ivantjh"},"content":"        testFromWeekly(dates);","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"ivantjh"},"content":"    public void testFromMonthly(List\u003cLocalDate\u003e dates) {","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e extraDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"ivantjh"},"content":"        extraDates.add(dates.get(0).minusDays(10));","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"ivantjh"},"content":"        extraDates.add(dates.get(2).minusDays(15));","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"ivantjh"},"content":"        testFrom(dates, new Goal(MONTHLY), extraDates);","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"ivantjh"},"content":"    public void testFromMonthlySameDayPerMonth(LocalDate now) {","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusMonths(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusMonths(2));","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusMonths(3));","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusMonths(4));","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"ivantjh"},"content":"        testFromMonthly(dates);","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"ivantjh"},"content":"    public void from_monthlyStartOnAnyDay_sameDayPerMonth() {","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"ivantjh"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"ivantjh"},"content":"        testFromMonthlySameDayPerMonth(now);","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"ivantjh"},"content":"    public void from_monthlyStartOnLastDay_sameDayPerMonth() {","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"ivantjh"},"content":"        LocalDate now \u003d LocalDate.now().with(TemporalAdjusters.lastDayOfMonth());","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"ivantjh"},"content":"        testFromMonthlySameDayPerMonth(now);","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"ivantjh"},"content":"    public void from_monthlyStartOnFirstDay_randomDaysPerMonth() {","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"ivantjh"},"content":"        LocalDate latest \u003d LocalDate.now().with(TemporalAdjusters.firstDayOfMonth());","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"ivantjh"},"content":"        dates.add(latest.minusMonths(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"ivantjh"},"content":"        dates.add(dates.get(0).minusMonths(1).plusDays(5));","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"ivantjh"},"content":"        dates.add(dates.get(1).minusMonths(1).plusDays(6));","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"ivantjh"},"content":"        dates.add(dates.get(2).minusMonths(1).plusDays(4));","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"ivantjh"},"content":"        testFromMonthly(dates);","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"ivantjh"},"content":"    public void testFromYearly(List\u003cLocalDate\u003e dates) {","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e extraDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"ivantjh"},"content":"        extraDates.add(dates.get(0).minusMonths(5).minusDays(5));","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"ivantjh"},"content":"        extraDates.add(dates.get(2).minusMonths(2).minusDays(7));","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"ivantjh"},"content":"        testFrom(dates, new Goal(YEARLY), extraDates);","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"ivantjh"},"content":"    public void testFromYearlySameDayPerYear(LocalDate now) {","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusYears(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusYears(2));","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusYears(3));","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"ivantjh"},"content":"        dates.add(now.minusYears(4));","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"ivantjh"},"content":"        testFromYearly(dates);","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"ivantjh"},"content":"    public void from_yearlyStartOnAnyDay_sameDayPerYear() {","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"ivantjh"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"ivantjh"},"content":"        testFromYearlySameDayPerYear(now);","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"ivantjh"},"content":"    public void from_yearlyStartOnLastDay_sameDayPerYear() {","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"ivantjh"},"content":"        LocalDate now \u003d LocalDate.now().with(TemporalAdjusters.lastDayOfYear());","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"ivantjh"},"content":"        testFromYearlySameDayPerYear(now);","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"ivantjh"},"content":"    public void from_yearlyStartOnFirstDay_randomDaysPerYear() {","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"ivantjh"},"content":"        LocalDate latest \u003d LocalDate.now().with(TemporalAdjusters.firstDayOfYear());","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"ivantjh"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"ivantjh"},"content":"        dates.add(latest.minusYears(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"ivantjh"},"content":"        dates.add(dates.get(0).minusYears(1).plusMonths(1).plusDays(2));","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"ivantjh"},"content":"        dates.add(dates.get(1).minusYears(1).plusMonths(3).plusDays(3));","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"ivantjh"},"content":"        dates.add(dates.get(2).minusYears(1).plusMonths(4).plusDays(12));","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"ivantjh"},"content":"        testFromYearly(dates);","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"ivantjh"},"content":"    public void toUi() {","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"ivantjh"},"content":"        assertEquals(\"0\", emptyStreak.toUi());","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"ivantjh"},"content":"        assertEquals(\"2\", weeklyStreak.toUi());","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"ivantjh"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"ivantjh"},"content":"    public void compareTo() {","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"ivantjh"},"content":"        assertEquals(1, emptyStreak.compareTo(weeklyStreak));","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"ivantjh"},"content":"        assertEquals(-1, weeklyStreak.compareTo(emptyStreak));","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"ivantjh":241}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains((Person) null));","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Assyarul":1,"-":169}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal.Frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"abc\";","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    private static final String INVALID_DEBT \u003d \"a\";","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"    private static final String INVALID_GOAL \u003d \"decade\";","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    private static final String VALID_DEBT \u003d BENSON.getDebt().toString();","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    private static final JsonAdaptedPicture VALID_PICTURE \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"chesterhow"},"content":"    private static final List\u003cJsonAdaptedEvent\u003e VALID_DATES \u003d BENSON.getDates().stream()","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"chesterhow"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"chesterhow"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"chesterhow"},"content":"    private static final List\u003cJsonAdaptedEvent\u003e VALID_MEETINGS \u003d BENSON.getMeetings().stream()","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"chesterhow"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"    private static final String VALID_GOAL \u003d Frequency.WEEKLY.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, INVALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, null, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"Assyarul"},"content":"    public void toModelType_invalidBirthday_throwsIllegalValueException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d Birthday.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"Assyarul"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"Assyarul"},"content":"    public void toModelType_nullBirthday_throwsIllegalValueException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"Assyarul"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthday.class.getSimpleName());","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"Assyarul"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"ivantjh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, invalidTags, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"lue97"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"lue97"},"content":"    public void toModelType_invalidGoal_thorwIllegalValueException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"lue97"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"Assyarul"},"content":"            INVALID_GOAL, VALID_ADDRESS, VALID_PICTURE, VALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"Assyarul"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"Assyarul"},"content":"    public void toModelType_invalidDebt_throwsIllegalValueException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"Assyarul"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_BIRTHDAY,","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"Assyarul"},"content":"                VALID_GOAL, VALID_ADDRESS, VALID_PICTURE, INVALID_DEBT, VALID_TAGS, VALID_DATES, VALID_MEETINGS);","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"Assyarul"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Assyarul":43,"lue97":6,"ivantjh":14,"-":98,"chesterhow":5}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"        userPrefs.setGuiSettings(new GuiSettings(","lastModifiedDate":"2021-02-19"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"                1000, 500, 300, 100, null));","lastModifiedDate":"2021-02-19"},{"lineNumber":77,"author":{"gitId":"chesterhow"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"frienddex.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"lue97"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, \"theme/mocha.dark.json\"));","lastModifiedDate":"2021-02-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"lue97"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, \"theme/mocha.dark.json\"));","lastModifiedDate":"2021-02-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"lue97":4,"-":119,"chesterhow":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, \"theme/mocha.dark.json\"));","lastModifiedDate":"2021-02-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lue97":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        descriptor.setBirthday(person.getBirthday());","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"        descriptor.setGoal(person.getGoal());","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"     * Sets the {@code @birthday} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"Assyarul"},"content":"    public EditPersonDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"Assyarul"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"Assyarul"},"content":"        return this;","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Assyarul":12,"lue97":1,"-":87}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"public class EventBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"    public static final LocalDate DEFAULT_DATE \u003d LocalDate.of(2020, 5, 6);","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"    public static final LocalTime DEFAULT_TIME \u003d null;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"this is a description\";","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"ivantjh"},"content":"    private LocalDate date;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"ivantjh"},"content":"    private LocalTime time;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"ivantjh"},"content":"    private String description;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"    public EventBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"ivantjh"},"content":"        date \u003d DEFAULT_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"ivantjh"},"content":"        time \u003d DEFAULT_TIME;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"ivantjh"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"ivantjh"},"content":"     * Sets the {@code date} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"ivantjh"},"content":"    public EventBuilder withDate(LocalDate date) {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"ivantjh"},"content":"        this.date \u003d LocalDate.from(date);","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"ivantjh"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"ivantjh"},"content":"     * Sets the {@code time} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"ivantjh"},"content":"    public EventBuilder withTime(LocalTime time) {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"ivantjh"},"content":"        this.time \u003d LocalTime.from(time);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"ivantjh"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"ivantjh"},"content":"     * Sets the {@code description} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"    public EventBuilder withDescription(String description) {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"ivantjh"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"ivantjh"},"content":"     * Builds an Event with the attributes from EventBuilder","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"ivantjh"},"content":"    public Event build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"ivantjh"},"content":"        return new Event(date, time, description);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"ivantjh":57}},{"path":"src/test/java/seedu/address/testutil/GroupBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import java.util.List;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"public class GroupBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"    public static final String DEFAULT_NAME \u003d \"Close Friends\";","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    public static final Set\u003cName\u003e DEFAULT_SET \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    private Name name;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    private Set\u003cName\u003e personNames;","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"     * Creates a {@code GroupBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    public GroupBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"        personNames \u003d DEFAULT_SET;","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"     * Creates a {@code GroupBuilder} with the data of {@code groupToCopy}.","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    public GroupBuilder(Group groupToCopy) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"        name \u003d groupToCopy.getName();","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"        personNames \u003d new HashSet\u003c\u003e(groupToCopy.getPersonNames());","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"     * Sets the {@code Name} of the {@code Group} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"    public GroupBuilder withName(String name) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"     * Parses the {@code persons} into a {@code Set\u003cPerson\u003e} and set it to the {@code Group} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"    public GroupBuilder withPersons(Person ... persons) {","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        List\u003cName\u003e personNames \u003d Arrays.stream(persons).map(Person::getName).collect(Collectors.toList());","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"        Name[] arrayPersonNames \u003d personNames.toArray(new Name[0]);","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"        this.personNames \u003d SampleDataUtil.getPersonSet(arrayPersonNames);","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"    public Group build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        return new Group(name, personNames);","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Assyarul":59}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"import org.opentest4j.TestAbortedException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"import seedu.address.model.person.Debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"import seedu.address.model.person.Goal.Frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Picture;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"02-03-1995\";","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"    public static final Frequency DEFAULT_GOAL \u003d Frequency.NONE;","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"    private Birthday birthday;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"    private Goal goal;","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"ivantjh"},"content":"    private Picture picture;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"    private Debt debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"ivantjh"},"content":"    private List\u003cEvent\u003e dates;","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"ivantjh"},"content":"    private List\u003cEvent\u003e meetings;","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"        goal \u003d new Goal(DEFAULT_GOAL);","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"ivantjh"},"content":"        picture \u003d null;","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"        debt \u003d new Debt(\"0\");","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"chesterhow"},"content":"        dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"ivantjh"},"content":"        meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"        goal \u003d personToCopy.getGoal();","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"ivantjh"},"content":"        picture \u003d personToCopy.getPicture().orElse(null);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"        debt \u003d personToCopy.getDebt();","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"chesterhow"},"content":"        dates \u003d new ArrayList\u003c\u003e(personToCopy.getDates());","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"ivantjh"},"content":"        meetings \u003d new ArrayList\u003c\u003e(personToCopy.getMeetings());","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"ivantjh"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"ivantjh"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"ivantjh"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"ivantjh"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"ivantjh"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"ivantjh"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"ivantjh"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"ivantjh"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"ivantjh"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"Assyarul"},"content":"     * Sets the {@code Debt} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"Assyarul"},"content":"    public PersonBuilder withDebt(String debt) {","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"Assyarul"},"content":"        this.debt \u003d new Debt(debt);","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"Assyarul"},"content":"     * Sets the {@code Debt} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"Assyarul"},"content":"     * Overloaded method for testing purposes only.","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"Assyarul"},"content":"    public PersonBuilder withDebt(Debt debt) {","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"Assyarul"},"content":"        this.debt \u003d debt;","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"ivantjh"},"content":"     * Parses the {@code path} into a {@code Picture} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-03-21"},{"lineNumber":142,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"ivantjh"},"content":"    public PersonBuilder withPicture(Path path) {","lastModifiedDate":"2021-03-21"},{"lineNumber":144,"author":{"gitId":"ivantjh"},"content":"        if (!Picture.isValidFilePath(path)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":145,"author":{"gitId":"ivantjh"},"content":"            throw new TestAbortedException(String.format(\"%s is invalid. %s\", path, Picture.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-03-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"ivantjh"},"content":"        this.picture \u003d new Picture(path);","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"ivantjh"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"ivantjh"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"ivantjh"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"ivantjh"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"ivantjh"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"ivantjh"},"content":"     * Parses the {@code meetings} into a {@code List\u003cEvent\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"ivantjh"},"content":"    public PersonBuilder withMeetings(Event... meetings) {","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"ivantjh"},"content":"        this.meetings \u003d SampleDataUtil.getMeetingList(meetings);","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"ivantjh"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"ivantjh"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"ivantjh"},"content":"     * Parses the {@code dates} into a {@code List\u003cEvent\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"ivantjh"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"ivantjh"},"content":"    public PersonBuilder withDates(Event... dates) {","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"ivantjh"},"content":"        this.dates \u003d SampleDataUtil.getDateList(dates);","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"ivantjh"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"Assyarul"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"Assyarul"},"content":"     * Builds the person with the information within the PersonBuilder.","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"Assyarul"},"content":"     * @return Person object","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"Assyarul"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"ivantjh"},"content":"    public Person build() {","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"Assyarul"},"content":"        return new Person(name, phone, email, birthday, goal, address,","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"Assyarul"},"content":"                picture, debt, tags, dates, meetings);","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"ivantjh"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Assyarul":22,"lue97":6,"ivantjh":56,"-":97,"chesterhow":3}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        sb.append(PREFIX_BIRTHDAY + person.getBirthday().toString() + \" \");","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY).append(birthday.toString())","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"                .append(\" \"));","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Assyarul":4,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivantjh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"ivantjh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"ivantjh"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"ivantjh"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"ivantjh"},"content":"public class TypicalEvents {","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"ivantjh"},"content":"    public static final Event MEETING_ONE \u003d new EventBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"ivantjh"},"content":"            .withDate(LocalDate.of(2020, 12, 12))","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"ivantjh"},"content":"            .withTime(LocalTime.of(12, 0))","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"ivantjh"},"content":"            .withDescription(\"We went to eat lunch together\")","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"ivantjh"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"chesterhow"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chesterhow"},"content":"    public static final Event DATE_ONE \u003d new EventBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chesterhow"},"content":"            .withDate(LocalDate.of(2019, 10, 10))","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chesterhow"},"content":"            .withDescription(\"Anniversary\")","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chesterhow"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"ivantjh"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"ivantjh":14,"chesterhow":5}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"            .withPhone(\"94351253\").withBirthday(\"01-01-1998\")","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withBirthday(\"01-02-1998\")","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withBirthday(\"01-01-1998\").build();","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"            .withBirthday(\"01-03-1998\").withTags(\"friends\").build();","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withBirthday(\"01-04-1998\").build();","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withBirthday(\"01-05-2000\").build();","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withBirthday(\"15-12-1960\").build();","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withBirthday(\"01-01-1980\").build();","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withBirthday(\"01-02-1981\").build();","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"            .withBirthday(VALID_BIRTHDAY_AMY).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Assyarul":17,"-":63}},{"path":"src/test/java/seedu/address/ui/ThemeFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"import seedu.address.ui.exceptions.InvalidThemeException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"public class ThemeFactoryTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"    private static final String VALID_PATH \u003d \"src/test/data/ThemeTest/valid.theme.json\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"    private static final String NOT_EXIST_PATH \u003d \"abc\";","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    private static final String INVALID_CONTENT_PATH \u003d \"src/test/data/ThemeTest/invalid.content.txt\";","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"    private static final String INVALID_THEME_PATH \u003d \"src/test/data/ThemeTest/invalid.theme.json\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    private static final String INVALID_JSON_PATH \u003d \"src/test/data/ThemeTest/malformed.theme.json\";","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"    private static final String DEFAULT_FOREGROUND \u003d \"#f8f8f2\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"    private static final String DEFAULT_BACKGROUND \u003d \"#272822\";","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"    private static final String[] DEFAULT_COLOR \u003d new String[] {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"        \"#272822\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"        \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", \"#f8f8f2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"        \"#75715e\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"        \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", \"#f9f8f5\"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"    };","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"    private static final Theme DEFAULT_THEME \u003d ThemeFactory.getDefaultTheme();","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"    private static final Theme t1 \u003d new Theme(DEFAULT_FOREGROUND, DEFAULT_BACKGROUND, DEFAULT_COLOR);","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"    public void themeFactory_defaultThemeEquals_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"        assertEquals(t1, DEFAULT_THEME);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"    public void themeFactory_loadValidTheme_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"        Theme t \u003d assertDoesNotThrow(() -\u003e ThemeFactory.load(VALID_PATH));","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"        assertEquals(ThemeFactory.getDefaultTheme(), t);","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"    void themeFactory_loadInvalidTheme_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"        assertThrows(FileNotFoundException.class, () -\u003e ThemeFactory.load(NOT_EXIST_PATH),","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"                new FileNotFoundException().toString());","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"        assertThrows(InvalidThemeException.class, () -\u003e ThemeFactory.load(INVALID_THEME_PATH),","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"                new InvalidThemeException(\"Invalid theme supplied\").toString());","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"        assertThrows(DataConversionException.class, () -\u003e ThemeFactory.load(INVALID_JSON_PATH));","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"        assertThrows(DataConversionException.class, () -\u003e ThemeFactory.load(INVALID_CONTENT_PATH));","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"lue97":58}},{"path":"src/test/java/seedu/address/ui/ThemeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"public class ThemeTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"    private static final String INVALID_COLOR \u003d \"#abcdez\";","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"    private static final String DEFAULT_FOREGROUND \u003d \"#f8f8f2\";","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"    private static final String DEFAULT_BACKGROUND \u003d \"#272822\";","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"    private static final String[] DEFAULT_COLOR \u003d new String[] {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"        \"#272822\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"        \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", \"#f8f8f2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"        \"#75715e\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"        \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", \"#f9f8f5\"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"    };","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"    private static final String[] DEFAULT_COLOR_INVALID_LENGTH \u003d new String[] {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"        \"#272822\", \"#f92672\", \"#a6e22e\", \"#f4bf75\"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"    };","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"    private static final String[] DEFAULT_COLOR_INVALID_COLOR \u003d new String[] {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"        \"#272822\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"        \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", \"#f8f8f2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"        \"#75715e\", \"#f92672\", \"#a6e22e\", \"#f4bf75\",","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"        \"#66d9ef\", \"#ae81ff\", \"#a1efe4\", INVALID_COLOR","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"    };","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"    private final Theme t1 \u003d new Theme(DEFAULT_FOREGROUND, DEFAULT_BACKGROUND, DEFAULT_COLOR);","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"    private final Theme t2 \u003d new Theme(DEFAULT_FOREGROUND, DEFAULT_BACKGROUND, DEFAULT_COLOR);","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"    private final Theme t3 \u003d new Theme(\"#FFFFFF\", DEFAULT_BACKGROUND, DEFAULT_COLOR);","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"    private final Theme invalidLength \u003d new Theme(DEFAULT_FOREGROUND, DEFAULT_BACKGROUND, DEFAULT_COLOR_INVALID_LENGTH);","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"    private final Theme invalidForeground \u003d new Theme(INVALID_COLOR, DEFAULT_BACKGROUND, DEFAULT_COLOR_INVALID_COLOR);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"    private final Theme invalidBackground \u003d new Theme(DEFAULT_FOREGROUND, INVALID_COLOR, DEFAULT_COLOR_INVALID_COLOR);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"    private final Theme emptyColor \u003d new Theme(\"\", \"\", DEFAULT_COLOR);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"    private final Theme invalidColor \u003d new Theme(DEFAULT_FOREGROUND, DEFAULT_BACKGROUND, DEFAULT_COLOR_INVALID_COLOR);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"    private final Theme nullColor \u003d new Theme(DEFAULT_FOREGROUND, DEFAULT_BACKGROUND, null);","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"    public void theme_equalTheme_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"        assertEquals(t1, t1);","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"        assertEquals(t1, t2);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"    public void theme_equalTheme_failure() {","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"        assertNotEquals(t1, t3);","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"    public void theme_validTheme_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"        assertTrue(t1.isValid());","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"    public void theme_invalidTheme_failure() {","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"        assertFalse(invalidColor.isValid());","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"        assertFalse(invalidLength.isValid());","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"        assertFalse(invalidForeground.isValid());","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"        assertFalse(invalidBackground.isValid());","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"        assertFalse(emptyColor.isValid());","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"        assertFalse(nullColor.isValid());","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"lue97":67}}]
